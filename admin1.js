// ws => wellscheme
// User List AutoComplete
/*------Json data------- */
var z_userList, z_wellManager_list, z_wellEngineer_list;

var __wiJson = {};

wellUserListUpdate();

function wellUserListUpdate() {
    $.ajax({
        url: "/api/getAllUsers",
        type: "GET",
        data: {
            clientId: clientId,
            userId: userId
        },
        success: function (result) {
            console.log(result);
            z_userList = result;
            z_wellManager_list = result.filter(function (item) {
                return item.role == "ROLE_WELL_MANAGER";
                // return item.role == "wellManager";
                autocomplete(document.getElementById("z-cp-wellManager"), z_wellManager_list);
            });
            autocomplete(document.getElementById("z-cp-wellManager"), z_wellManager_list);
            z_wellEngineer_list = result.filter(function (item) {
                return item.role == "ROLE_WELL_ENGINEER";
                // return item.role == "wellEngineer";
                autocomplete(document.getElementById("wellEngineer"), z_wellEngineer_list);
            });

            autocomplete(document.getElementById("wellEngineer"), z_wellEngineer_list);
        }
    });
}


function autocomplete(inp, arr) {
    /*
     * the autocomplete function takes two arguments, the text field element and
     * an array of possible autocompleted values:
     */
    var currentFocus;
    /* execute a function when someone writes in the text field: */
    inp.addEventListener("input", function (e) {
        var a, b, i, val = this.value;
        /* close any already open lists of autocompleted values */
        closeAllLists();
        if (!val) {
            return false;
        }
        currentFocus = -1;
        /*
         * create a DIV element that will contain the items
         * (values):
         */
        a = document.createElement("DIV");
        a.setAttribute("id", this.id + "z-m-autocomplete-list");
        a.setAttribute("class", "z-m-autocomplete-items");
        /*
         * append the DIV element as a child of the autocomplete
         * container:
         */
        this.parentNode.appendChild(a);

        for (i = 0; i < arr.length; i++) {
            /*
             * check if the item starts with the same letters as
             * the text field value:
             */
            if (((arr[i].userId.substr(0, val.length).toUpperCase()) == val.toUpperCase()) || ((arr[i].name.substr(0, val.length).toUpperCase()) == val.toUpperCase())) {

                b = document.createElement("DIV");
                b.setAttribute("class", "z-m-autocomplete-name");
                if ((arr[i].name.substr(0, val.length).toUpperCase()) == val.toUpperCase()) {
                    b.innerHTML = "<strong>" + arr[i].name.substr(0, val.length) + "</strong>";
                } else {
                    b.innerHTML = arr[i].name.substr(0, val.length);
                }
                b.innerHTML += arr[i].name.substr(val.length);
                c = document.createElement("span");
                c.setAttribute("class", "z-m-autocomplete-email");
                if ((arr[i].userId.substr(0, val.length).toUpperCase()) == val.toUpperCase()) {
                    c.innerHTML = "<strong>" + arr[i].userId.substr(0, val.length) + "</strong>";
                } else {
                    c.innerHTML = arr[i].userId.substr(0, val.length);
                }
                c.innerHTML += arr[i].userId.substr(val.length);
                b.appendChild(c);

                /*
                 * insert a input field that will hold the
                 * current array item's value:
                 */
                b.innerHTML += "<input type='hidden' value='" + arr[i].userId + "'>";
                /*
                 * execute a function when someone clicks on the
                 * item value (DIV element):
                 */
                b.addEventListener("click", function (e) {
                    /*
                     * insert the value for the
                     * autocomplete text field:
                     */
                    inp.value = this.getElementsByTagName("input")[0].value;
                    /*
                     * close the list of
                     * autocompleted values, (or
                     * any other open lists of
                     * autocompleted values:
                     */
                    closeAllLists();
                });
                a.appendChild(b);
            }
        }
    });
    /* execute a function presses a key on the keyboard: */
    inp.addEventListener("keydown", function (e) {
        var x = document.getElementById(this.id + "z-m-autocomplete-list");
        if (x)
            x = x.getElementsByTagName("div");
        if (e.keyCode == 40) {
            /*
             * If the arrow DOWN key is pressed, increase the currentFocus
             * variable:
             */
            currentFocus++;
            /* and and make the current item more visible: */
            addActive(x);
        } else if (e.keyCode == 38) { // up
            /*
             * If the arrow UP key is pressed, decrease the currentFocus
             * variable:
             */
            currentFocus--;
            /* and and make the current item more visible: */
            addActive(x);
        } else if (e.keyCode == 13) {
            /*
             * If the ENTER key is pressed, prevent the form from being
             * submitted,
             */
            e.preventDefault();
            if (currentFocus > -1) {
                /* and simulate a click on the "active" item: */
                if (x)
                    x[currentFocus].click();
            }
        }
    });

    function addActive(x) {
        /* a function to classify an item as "active": */
        if (!x)
            return false;
        /* start by removing the "active" class on all items: */
        removeActive(x);
        if (currentFocus >= x.length)
            currentFocus = 0;
        if (currentFocus < 0)
            currentFocus = (x.length - 1);
        /* add class "autocomplete-active": */
        x[currentFocus].classList.add("autocomplete-active");
    }

    function removeActive(x) {
        /* a function to remove the "active" class from all autocomplete items: */
        for (var i = 0; i < x.length; i++) {
            x[i].classList.remove("autocomplete-active");
        }
    }

    function closeAllLists(elmnt) {
        /*
         * close all autocomplete lists in the document, except the one passed
         * as an argument:
         */
        var x = document.getElementsByClassName("z-m-autocomplete-items");
        for (var i = 0; i < x.length; i++) {
            if (elmnt != x[i] && elmnt != inp) {
                x[i].parentNode.removeChild(x[i]);
            }
        }
    }
    /* execute a function when someone clicks in the document: */
    document.addEventListener("click", function (e) {
        closeAllLists(e.target);
    });
}

/* to select a mail with Tag (start) */
function react(e) {

    var Email_group = e.target.value;
    var EmailsL = Email_group.split(",");
    // var tagcount = $(".lynked-email-cnt").length;
    for (var i = 0; i < EmailsL.length; i++) {
        var Emails = EmailsL[i];
        if (Emails != '' && e.which === 9 || e.which === 13 || e.which === 32) {
            var email_valid = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
            if (Emails == "") { } else if (!email_valid.test(Emails)) {
                console.log("error");
                // Email ID";
                $(".z-m-email-error").append("<div class='error' >Please enter the valid Email ID</div>");
            }
        }
    }
}

function inputPress() {
    $(".z-m-email-error").empty();
}

// Projects Table Section
var z_projectsTable_data;
var z_projectsTable_wrap = document.getElementById('z-projectsTable-wrap');


function z_projectsTable_creation() {
    // Ajax Data
    z_projectsTable_data;
    var ajax_url = "/api/getProjects?clientId=" + clientId;
    call_ajax(ajax_url, "GET", " ", " ", "application/json", false, function (getProjects) {
        console.log(getProjects);
        if (getProjects.status == "success") {
            console.log(getProjects.data);
            z_projectsTable_data = JSON.parse(getProjects.data);
            z_projectsTable_wrap.innerHTML = "";
            // Project Data Container
            z_projectData = document.createElement('div');
            z_projectData.id = "z-projectData";
            z_projectData.classList = "container z-tableContainer z-projectData z-m-boxShadow z-configContainerBorder";

            // Project Table Title Row
            z_titleRow = document.createElement('div');
            z_titleRow.classList = "row z-headingFont z-tableRow z-l-title d-none d-lg-flex";
            z_titleRow.innerHTML = '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">' +
                '<b>Project name</b>' +
                '</div>' +
                '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">' +
                '<b>Well Manager</b>' +
                '</div>' +
                '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 text-center">' +
                '<b>No Of Wells</b>' +
                '</div>' +
                '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 text-center">' +
                '</div>' +
                '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 text-center">' +
                '</div>';
            z_projectData.appendChild(z_titleRow);

            // Project Data
            for (var i in z_projectsTable_data) {
                var project_id = JSON.stringify(z_projectsTable_data[i].id);
                var z_tableData_row = document.createElement('div');
                z_tableData_row.classList = "row z-tableRow z-tableData-row";
                z_tableData_row.innerHTML = "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-tableCell text-capitalize' data-label='WELLS NAME'>" +
                    "<div class='z-link d-inline-block' onclick='viewProject(" +
                    project_id +
                    ")'>" +
                    z_projectsTable_data[i].name +
                    "</div>" +
                    "</div>" +
                    "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-tableCell' data-label='Well Manager' >" +
                    z_projectsTable_data[i].wellManager +
                    "</div>" +
                    "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell text-lg-center text-xl-center' data-label='NO OF wells'>" +
                    z_projectsTable_data[i].noOfWells +
                    "</div>" +
                    "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell text-capitalize text-lg-center text-xl-center' data-label=''>" +
                    "<div class='z-link d-inline-block' onclick='createWell_popup(false,\"" +
                    z_projectsTable_data[i].name +
                    "\")'>Create Well</div>" +
                    "</div>" +
                    "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell text-capitalize text-lg-center text-xl-center' data-label=''>" +
                    "<div class='z-link d-inline-block' onclick='z_projectWellSection_active(\"" +
                    z_projectsTable_data[i].name +
                    "\")'>View Well</div>" + "</div>";
                z_projectData.appendChild(z_tableData_row);
            }

            z_projectsTable_wrap.appendChild(z_projectData);
        } else {
            console.log("error");
        }
    });
    // $.ajax({
    //     url: "/api/getProjects?clientId=" + clientId,
    //     type: "GET",
    //     contentType: "application/json",
    //     success: function (result) {
    //         z_projectsTable_data = result;
    //         z_projectsTable_wrap.innerHTML = "";
    // Project Data Container
    // z_projectData = document.createElement('div');
    // z_projectData.id = "z-projectData";
    // z_projectData.classList = "container z-tableContainer z-projectData z-m-boxShadow";

    // Project Table Title Row
    // z_titleRow = document.createElement('div');
    // z_titleRow.classList = "row z-headingFont z-tableRow z-titleRow d-none d-lg-flex";
    // z_titleRow.innerHTML = '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">' +
    //     '<b>Project name</b>' +
    //     '</div>' +
    //     '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">' +
    //     '<b>Well Manager</b>' +
    //     '</div>' +
    //     '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 text-center">' +
    //     '<b>No Of Wells</b>' +
    //     '</div>' +
    //     '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 text-center">' +
    //     '</div>' +
    //     '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 text-center">' +
    //     '</div>';
    // z_projectData.appendChild(z_titleRow);

    // Project Data
    //         for (var i in z_projectsTable_data) {
    //             var project_id = JSON.stringify(z_projectsTable_data[i].id);
    //             var z_tableData_row = document.createElement('div');
    //             z_tableData_row.classList = "row z-tableRow z-tableData-row";
    //             z_tableData_row.innerHTML = "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-tableCell text-capitalize' data-label='WELLS NAME'>" +
    //                 "<div class='z-link d-inline-block' onclick='viewProject(" +
    //                 project_id +
    //                 ")'>" +
    //                 z_projectsTable_data[i].name +
    //                 "</div>" +
    //                 "</div>" +
    //                 "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-tableCell' data-label='Well Manager' >" +
    //                 z_projectsTable_data[i].wellManager +
    //                 "</div>" +
    //                 "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell text-lg-center text-xl-center' data-label='NO OF wells'>" +
    //                 z_projectsTable_data[i].noOfWells +
    //                 "</div>" +
    //                 "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell text-capitalize text-lg-center text-xl-center' data-label=''>" +
    //                 "<div class='z-link d-inline-block' onclick='createWell_popup(false,\"" +
    //                 z_projectsTable_data[i].name +
    //                 "\")'>Create Well</div>" +
    //                 "</div>" +
    //                 "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell text-capitalize text-lg-center text-xl-center' data-label=''>" +
    //                 "<div class='z-link d-inline-block' onclick='z_projectWellSection_active(\"" +
    //                 z_projectsTable_data[i].name +
    //                 "\")'>View Well</div>" + "</div>";
    //             z_projectData.appendChild(z_tableData_row);
    //         }

    //         z_projectsTable_wrap.appendChild(z_projectData);
    //     }
    // });

}

function z_projectsSection_active(z_navbarToggle, clearform) {
    if (z_navbarToggle) {
        sideNavbar_toggle();
    }
    if (!$('#z-projects-wrap').hasClass('z-rightSection-active')) {

        if (clearform) {
            document.getElementById('projectForm').reset();
            $('.z-m-mail-list').empty();
            projectForm.resetForm();
            $("#z-al-projectName").remove();
        }
        // Table Creation
        z_projectsTable_creation();

        // main section
        $('.z-rightSection-active').removeClass('z-rightSection-active');
        $('#z-projects-wrap').addClass('z-rightSection-active');

        // navbar
        $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
        $('#z-sn-projects').addClass('z-sn-sectionLink-active');
    }
}
//z_projectsSection_active();

function login_start_function(){
	$('.z-rightSection-active').removeClass('z-rightSection-active');
	loginStartPopup("Do you wish to Create New Project / Well or View Existing Projects / Wells..?",function(){
		clearloginStartPopup();
	});
}
login_start_function();
function create_new_project(el){
	if(el.innerText == "View Existing Project"){
		z_projectsSection_active();
		clearloginStartPopup();
	}
	else if(el.innerText == "Create New Project"){
		z_createProject_active(false);
		clearloginStartPopup();
	}
}
function create_new_well(el){
		clearwell_creation_popup();
		z_projectsSection_active();
	
}
function z_projectSubmit_createWell() {
    if ($("#z-al-projectName").length == 0) {
        $.ajax({
            url: "/api/verifyProjectExists",
            type: "POST",
            dataType: "text",
            data: {
                clientId: clientId,
                projectName: $("#z-cp-projectName").val()
            },
            success: function (result) {
                var z_output = result.split(":")[1];
                console.log("Existence :" + z_output);
                if (z_output == "false") {
                    var projectName = $("#z-cp-projectName").val();
                    var wellManager = $("#select2-z-cp-wellManager-container").text();
                    var proAlert = $("#z-al-projectName").text();
                    var country = $("#z-cp-country").val();
                    var block = $("#z-cp-block").val();
                    var field = $("#z-cp-field").val();
                    var managerId = $("#z-cp-wellManager").val();
                    var wellManagerId = wellManager.split(" (")[1].replace(")","");
                    if (projectName && wellManager && (country != -1) && block &&
                        field && ($("#z-al-projectName").length == 0)) {
                        var data = {
                            projectName: $("#z-cp-projectName").val(),
                            clientId: clientId,
                            wellManager: $("#select2-z-cp-wellManager-container").text(),
                            country: $("#z-cp-country").val(),
                            block: $("#z-cp-block").val(),
                            field: $("#z-cp-field").val(),
                            managerId: $("#z-cp-wellManager").val(),
                            wellManagerId: wellManagerId
                        };
                        $.ajax({
                            url: "/api/addProject",
                            data: JSON.stringify(data),
                            type: "POST",
                            dataType: 'text',
                            contentType: 'application/json;charset=UTF-8',
                            success: function (result) {
                                console.log("suc");
                                console.log(result);
                                createWell_popup(false, $("#z-cp-projectName").val())
                            },
                            error: function (result) {
                                console.log(result);
                            }
                        });
                    } else {
                        popup("Please enter valid details");
                    }
                } else {
                    // if they well creation popup close and try to submit the
                    // project onces again
                    createWell_popup(false, $("#z-cp-projectName").val());
                }
            },
            error: function (result) {
                console.log(result);
            }
        });
    } else {
        popup("Please enter valid details");
    }
}

// Wells Table Section
var z_wellsTable_wrap = document.getElementById('z-wellsTable-wrap');
var z_new_WellId = [];
var z_allWell_Data;
function z_wellsTable_creation(z_projectName, viewWell) {
    // Ajax Data
    var z_wellsTable_data;
    $.ajax({
        url: "/api/getWells?clientId=" + clientId,
        type: "GET",
        contentType: "application/json",
        success: function (result) {
            console.log(result);
            z_wellsTable_data = result;
            z_allWell_Data = z_wellsTable_data;
            if (!!z_projectName) {
            	z_allWell_Data = z_wellsTable_data.filter(function (item) {
                    return item.projectName == z_projectName;
                });
                //z_allWell_Data = z_filteredWells;
            }
            
            z_wellsTable_wrap.innerHTML = "";
            // Well Data Container
            z_wellData = document.createElement('div');
            z_wellData.id = "z-wellData";
            z_wellData.classList = "container z-tableContainer z-wellData z-m-boxShadow z-configContainerBorder";

            // Well Table Title Row
            z_titleRow = document.createElement('div');
            z_titleRow.classList = "row z-headingFont z-tableRow z-l-title d-none d-lg-flex";

            if (viewWell) {
                z_titleRow.innerHTML = '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">' +
                    '<b>Well Name</b>' +
                    '</div>' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">' +
                    '<b>Project Name</b>' +
                    '</div>' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">' +
                    '<b>Well Manager</b>' +
                    '</div>' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2">' +
                    '<b>Well Engineer</b>' +
                    '</div>' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2"><b>Well Type</b></div>' +
                    '</div><div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2"><b>Date</b></div>';//padding0px

            }

            else {
                z_titleRow.innerHTML = '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">' +
                    '<b>Well Name</b>' +
                    '</div>' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">' +
                    '<b>Project Name</b>' +
                    '</div>' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">' +
                    '<b>Well Manager</b>' +
                    '</div>' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3">' +
                    '<b>Well Engineer</b>' +
                    '</div>';
            }
            z_wellData.appendChild(z_titleRow);

            var z_filteredWells;
            if (!!z_projectName) {
                z_filteredWells = z_wellsTable_data.filter(function (item) {
                    console.log(item.projectName);
                    console.log(z_projectName);
                    return item.projectName == z_projectName;
                });
                //z_allWell_Data = z_filteredWells;
            } else {
            	if (viewWell) {

                    var sorted_result = z_wellsTable_data.sort(function (a, b) {
                        return new Date(b.wellDate) - new Date(a.wellDate);
                    });
                    z_filteredWells = sorted_result;
                    //z_allWell_Data = z_filteredWells;
                }
                else {
                	//z_allWell_Data = z_filteredWells;
                	z_filteredWells = z_wellsTable_data.filter(function (item) {
                        console.log(item.oldWell);
                        console.log(wellStatus);
                        return item.oldWell == wellStatus;
                    });
                }

            }
            console.log(z_filteredWells);
            //Well Data
            z_new_WellId = [];
            var z_tableDataCnt;
            for (var i in z_filteredWells) {
                var z_tableData_row = document.createElement('div');
                z_tableData_row.classList = "row z-tableRow z-tableData-row";
                
                    if(viewWell){
                    	z_tableDataCnt = "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell text-capitalize' data-label='WELLS NAME'>" +
                        "<div class='z-link d-inline-block'  onclick='well_information(\"" + z_filteredWells[i].id + "\", \"" + z_filteredWells[i].projectName + "\", \"" + z_filteredWells[i].wellManager + "\")'>" + z_filteredWells[i].name + "</div>" +
                        "</div>" +
                        "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell text-capitalize' data-label='PROJECT NAME'>" +
                        "<div class='z-link d-inline-block'>" + z_filteredWells[i].projectName + "</div>" +
                        "</div>";
                    	z_tableDataCnt +="<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell wellTemplateAdded' data-label='WELL MANAGER'>" +
                    "<div class='z-link d-inline-block'>" + z_filteredWells[i].wellManager + "</div>" +
                    "</div>" +
                    "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell wellTemplateAdded' data-label='WELL ENGINEER'>" +
                    "<div class='z-link d-inline-block'>" + z_filteredWells[i].wellEngineer + "</div>" +
                    "</div>";
                    }
                    else{
                    	z_tableDataCnt = "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-tableCell text-capitalize' data-label='WELLS NAME'>" +
                        "<div class='z-link d-inline-block'  onclick='well_information(\"" + z_filteredWells[i].id + "\", \"" + z_filteredWells[i].projectName + "\", \"" + z_filteredWells[i].wellManager + "\")'>" + z_filteredWells[i].name + "</div>" +
                        "</div>" +
                        "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-tableCell text-capitalize' data-label='PROJECT NAME'>" +
                        "<div class='z-link d-inline-block'>" + z_filteredWells[i].projectName + "</div>" +
                        "</div>";
                    	z_tableDataCnt +="<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-tableCell wellTemplateAdded' data-label='WELL MANAGER'>" +
                        "<div class='z-link d-inline-block'>" + z_filteredWells[i].wellManager + "</div>" +
                        "</div>" +
                        "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-tableCell wellTemplateAdded' data-label='WELL ENGINEER'>" +
                        "<div class='z-link d-inline-block'>" + z_filteredWells[i].wellEngineer + "</div>" +
                        "</div>"; 
                    }
              
               
                if (viewWell) {
                	 if (z_filteredWells[i].oldWell == "true") {
                         z_tableDataCnt += "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell text-capitalize wellTemplateAdded' data-label='WELLS TYPE'>" +
                             "<div class='z-link d-inline-block'>Old Well</div>" +
                             // "<div class='z-link d-inline-block'  onclick='wellinput_active(\"" + z_filteredWells[i].id + "\", \"" + z_filteredWells[i].name + "\", \"" + z_filteredWells[i].wellType + "\", \"" + z_filteredWells[i].wellLandscape + "\",\"template\")'>Template</div>" +
                             "</div>";
                     } else {
                         z_tableDataCnt += "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell text-capitalize wellTemplateAdded' data-label='WELL TYPE'>" +
                             "<div class='z-link d-inline-block'>New Well</div>" +
                             "</div>";
                     };
                    z_tableDataCnt += "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell wellTemplateAdded text-capitalize' data-label='DATE'>" +
                        "<div class='z-link d-inline-block'>" + new Date(z_filteredWells[i].wellDate).toDateString() + "</div>" +
                        "</div>";
                    
                }
               
               


                z_tableData_row.innerHTML = z_tableDataCnt;

                z_wellData.appendChild(z_tableData_row);
                //if(z_filteredWells[i].oldWell == "false"){
              
                //}
            }
            for (var n in z_allWell_Data) {
            	if(!(z_new_WellId.includes(z_allWell_Data[n].id))){
            		$.ajax({
            	        url: "/api/getWellConfiguration",
            	        type: "GET",
            	        data: {wellId: z_allWell_Data[n].id,level: "",config: ""},
            	        async: false,
            	        dataType: 'text',
            	        //contentType: 'application/json;charset=UTF-8',
            	        success: function (result) {
                            var z_configJson_data14 = JSON.parse(result);
                            var wellObj = {};
                            if(z_configJson_data14.length == 1){
                                wellObj = z_configJson_data14[0];
                                wellObj.name = z_allWell_Data[n].name;
                                z_new_WellId.push(wellObj);
                                wellObj = {};
                            }
                            else{
                                wellObj.name = z_allWell_Data[n].name;
                                wellObj.wellId = z_allWell_Data[n].id;
                                z_new_WellId.push(wellObj);
                                wellObj = {};
                            }
            	        	
            	        }
            		});
            		
            	}
            }

            z_wellsTable_wrap.appendChild(z_wellData);
//            var z_aft_Estimate = document.getElementById('z-aft-Estimate');
//            z_aft_Estimate.style.paddingLeft = 0;
        }
    });
}

var wellStatus;

function z_wellsSection_active(z_navbarToggle, clearform, stat) {
	var z_afe_navbar = $('.z-mn-menuBtn');
	$('.d-inline-block.z-mn-menuBtn').removeClass('d-inline-block');
	$(z_afe_navbar[0]).removeClass('d-none');
	$(z_afe_navbar[1]).removeClass('d-none');
	$(z_afe_navbar[2]).removeClass('d-none');
	$(z_afe_navbar[1]).addClass('d-none');
	$(z_afe_navbar[2]).addClass('d-none');
	$(z_afe_navbar[0]).addClass('d-inline-block');
	if (z_navbarToggle) {
        sideNavbar_toggle();
    }
    if (stat) {
        if (stat == "oldwell" || $(stat).attr("wellType") == "oldWell") {
            wellStatus = "true";
            $(".z-wells-wrap.z-rightSection .z-cntTitleBar .z-cntTitle b").text("OLD WELLS");
            $('#z-m-addWell-btn').attr('wellType', 'oldwell');
        } else if (stat == "newwell" || $(stat).attr("wellType") == "newWell") {
            wellStatus = "false";
            $(".z-wells-wrap.z-rightSection .z-cntTitleBar .z-cntTitle b").text("NEW WELLS");
            $('#z-m-addWell-btn').attr('wellType', 'newwell');
        }
        else if (stat == "allWell" || $(stat).attr("wellType") == "allWell") {
            wellStatus = "allWell";
            $(".z-wells-wrap.z-rightSection .z-cntTitleBar .z-cntTitle b").text("EXISTING WELLS");
            $('#z-m-addWell-btn').attr('wellType', stat);
        }
    }
    if (clearform) {
        document.getElementById('wellForm').reset();
        wellForm.resetForm();
        $('.z-m-mail-list').empty();
        $("#z-al-WellName").remove();
        $('.z-wc-shoreField').removeClass('z-wc-shoreField-active');
        // $('.z-clr-wellLoc').hide();
        $('.z-wc-error').remove();
        $('#z-depth-parameters').removeClass('z-wellSection-active');
        $('#z-depth-parameters').addClass('z-wellSection-hide');
        $('#actual-depth').addClass('z-wellhide');
        $('#planned-depth').addClass('z-wellhide');
    }
    // Table Creation
    if (wellStatus == "allWell") {
        z_wellsTable_creation(null, true);
    }
    else {
        z_wellsTable_creation(null, false);
    }


    // main section
    $('.z-rightSection-active').removeClass('z-rightSection-active');
    $('#z-wells-wrap').addClass('z-rightSection-active');
    // setToBlack(wellId);

    $('#z-m-addWell-btn').off('click').on('click', function (e) {
        createWell_popup(false, false, e);
    });

    // navbar
    if (wellStatus == "true") {
        $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
        $('#z-sn-ol-wells').addClass('z-sn-sectionLink-active');
    } else if (wellStatus == "false") {
        $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
        $('#z-sn-nw-wells').addClass('z-sn-sectionLink-active');
    }
    else {
        $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
        $('#z-sn-ex-wells').addClass('z-sn-sectionLink-active');
    }
    
}


// re-entry wells functions
function z_reEntry_wellsSection_active(z_navbarToggle, clearform, stat) {
    if (z_navbarToggle) {
        sideNavbar_toggle();
    }
    if (stat) {
        if (stat == "oldwell" || $(stat).attr("wellType") == "oldWell") {
            wellStatus = "true";
            $(".z-wells-wrap.z-rightSection .z-cntTitleBar .z-cntTitle b").text("OLD WELLS");
            $('#z-m-addWell-btn').attr('wellType', 'oldwell');
        } else if (stat == "newwell" || $(stat).attr("wellType") == "newWell") {
            wellStatus = "false";
            $(".z-wells-wrap.z-rightSection .z-cntTitleBar .z-cntTitle b").text("RE-ENTRY WELLS");
            $('#z-m-addWell-btn').attr('wellType', 'newwell');
        }
    }
    if (clearform) {
        document.getElementById('wellForm').reset();
        wellForm.resetForm();
        $('.z-m-mail-list').empty();
        $("#z-al-WellName").remove();
        $('.z-wc-shoreField').removeClass('z-wc-shoreField-active');
        $('.z-wc-error').remove();
    }
    // Table Creation
    z_wellsTable_creation(null, false);

    $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
    $('#z-sn-reEntry-wells').addClass('z-sn-sectionLink-active');

    // main section
    $('.z-rightSection-active').removeClass('z-rightSection-active');
    $('#z-wells-wrap').addClass('z-rightSection-active');

    $('#z-m-addWell-btn').off('click').on('click', function (e) {
        createWell_popup(false, false, e);
    });
}

// project view well

function z_projectWellSection_active(projectName) {
    $(".z-wells-wrap.z-rightSection .z-cntTitleBar .z-cntTitle b").text(projectName + " : Wells");

    // Table Creation
    z_wellsTable_creation(projectName, false);

    // main section
    $('.z-rightSection-active').removeClass('z-rightSection-active');
    $('#z-wells-wrap').addClass('z-rightSection-active');

    $('#z-m-addWell-btn').off('click').on('click', function (e) {
        createWell_popup(false, projectName);
    });

    // navbar
    $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
}

//User License and Used Data
function z_userLicenseUsedData() {
    var data = {
        clientId: clientId
    }
    call_ajax("/api/getClients", "GET", data, 'json', 'application/json;charset=UTF-8', false, function (getClients_result) {
        if (getClients_result.status == "success") {
            var getClients_result_data = getClients_result.data[0];
            //Licensed
            document.getElementById('l-noOfWM-data').innerHTML = getClients_result_data.noOfWellManager;
            document.getElementById('l-noOfWE-data').innerHTML = getClients_result_data.noOfWellEngineer;
            document.getElementById('l-noOfOU-data').innerHTML = getClients_result_data.noOfOtherUser;
            //Used
            document.getElementById('u-noOfWM-data').innerHTML = getClients_result_data.noOfCurrentWellManagers;
            document.getElementById('u-noOfWE-data').innerHTML = getClients_result_data.noOfCurrentWellEngineers;
            document.getElementById('u-noOfOU-data').innerHTML = getClients_result_data.noOfCurrentOtherUsers;
        }
    });
}

// User Table Section
var z_usersTable_wrap = document.getElementById('z-usersTable-wrap');

function z_usersTable_creation() {
    // Ajax Data
    var z_usersTable_data;
    $.ajax({
        url: "/api/getAllUsers",
        type: "GET",
        data: {
            clientId: clientId,
            userId: userId
        },
        success: function (result) {
            console.log(result);
            z_usersTable_data = result;
            wellUserListUpdate();

            z_usersTable_wrap.innerHTML = "";
            // User Data Container
            z_userData = document.createElement('div');
            z_userData.id = "z-userData";
            z_userData.classList = "container z-tableContainer z-userData z-m-boxShadow z-configContainerBorder";

            // User Table Title Row
            z_titleRow = document.createElement('div');
            z_titleRow.classList = "row z-headingFont z-tableRow z-l-title d-none d-lg-flex";
            z_titleRow.innerHTML = '<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">' +
                '<b>Name</b>' +
                '</div>' +
                '<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4">' +
                '<b>Email ID</b>' +
                '</div>' +
                '<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 text-right text-lg-center ">' +
                '<b>Role</b>' +
                '</div>';

            z_userData.appendChild(z_titleRow);

            // User Data
            for (var i in z_usersTable_data) {
                var user_id = JSON.stringify(z_usersTable_data[i].userId);
                var role;
                if (z_usersTable_data[i].role == 'ROLE_WELL_ENGINEER') {
                    role = 'WELL ENGINEER';
                } else if (z_usersTable_data[i].role == 'ROLE_WELL_MANAGER') {
                    role = 'WELL MANAGER';
                } else if (z_usersTable_data[i].role == 'ROLE_OTHER_USER') {
                    role = 'OTHER USER';
                }
                var z_tableData_row = document.createElement('div');
                z_tableData_row.classList = "row z-tableRow z-tableData-row";
                z_tableData_row.innerHTML = "<div class='col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 z-tableCell text-capitalize' data-label='USER NAME'>" +
                    "<div class='z-link d-inline-block'   onclick='viewUser(" + user_id + ")'>" + z_usersTable_data[i].name + "</div>" + "</div>" +
                    "<div class='col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 z-tableCell' data-label='EMAIL ID'>" + z_usersTable_data[i].userId + "</div>" +
                    "<div class='col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 text-lg-center' data-label='ROLE'>" + role + "</div>";

                z_userData.appendChild(z_tableData_row);
            }

            z_usersTable_wrap.appendChild(z_userData);
        }
    });
}

function z_usersSection_active(z_navbarToggle, clearform) {
    if (z_navbarToggle) {
        userNavbar_toggle();
    }
    if(z_navbarToggle.innerText == "Existing Users"){
    	sideNavbar_toggle();
    	userNavbar_toggle();
    }
    if (clearform) {
        document.getElementById('z-addUser-form').reset();
        z_addUser_form.resetForm();
        $('#userExist').remove();
    }
    if (!$('#z-users-wrap').hasClass('z-rightSection-active')) {
        //User License and Used Data
        z_userLicenseUsedData();

        // Table Creation
        z_usersTable_creation();

        // main section
        $('.z-rightSection-active').removeClass('z-rightSection-active');
        $('#z-users-wrap').addClass('z-rightSection-active');

        // navbar
        $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
        $('#z-un-users').addClass('z-sn-sectionLink-active');
    }
}

// Edit Project
function z_editProject_active(projId, projCount) {
    if (z_wellManager_list.length > 0) {
        var projId = projId;
        var projCount = projCount;
        var z_edit_projName = $("#z-vp-projectName").html();
        var z_edit_manager = $('#z-vp-wellmanager').html();
        var z_edit_country = $("#z-vp-country").html();
        var z_edit_block = $("#z-vp-block").html();
        var z_edit_field = $("#z-vp-field").html();

        if (!$('#z-createProject-wrap').hasClass('z-rightSection-active')) {
            // main section
            $('.z-rightSection-active').removeClass('z-rightSection-active');
            $('#z-createProject-wrap').addClass('z-rightSection-active');

            // navbar
            $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
            $('#z-sn-createProject').addClass('z-sn-sectionLink-active');
            $("#z-cp-projectName").val(z_edit_projName);
            $("#z-cp-block").val(z_edit_block);
            $("#z-cp-country").val(z_edit_country);
            $("#z-cp-field").val(z_edit_field);
            document.getElementById("z-projectCreate-btn-collection").style.display = "none";
            document.getElementById("z-projectEdit-btn-collection").style.display = "flex";
            $("#z-projectEdit-btn-submit").attr("onclick", "z_editProject_submit('" + z_edit_projName + "','" + projId + "','" + projCount + "')");
        }

        $("#z-cp-wellManager").empty();
        $("#z-cp-wellManager").append(
            "<option selected value=" + z_edit_manager + ">" + z_edit_manager +
            "</option>");
        for (var i in z_wellManager_list) {
            if (!(z_wellManager_list[i].userId == "")) {
                var z_wellManager_Options = document.createElement('option');
                z_wellManager_Options.setAttribute('value', z_wellManager_list[i].id);
                z_wellManager_Options.innerHTML = z_wellManager_list[i].name+" "+"("+ z_wellManager_list[i].userId + ")";
                $("#z-cp-wellManager").append(z_wellManager_Options);
            }
        }
    }
    else {
        alertPopup('alert', 'Please create WellManager for existing project');
    }
}
// Create Project Form
populateCountries("z-cp-country");

function z_createProject_active(z_navbarToggle) {
    if (z_wellManager_list.length > 0) {
        if (z_navbarToggle) {
            sideNavbar_toggle();
        }
        if (!$('#z-createProject-wrap').hasClass('z-rightSection-active')) {
            // main section
            $('.z-rightSection-active').removeClass('z-rightSection-active');
            $('#z-createProject-wrap').addClass('z-rightSection-active');

            // navbar
            $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
            $('#z-sn-createProject').addClass('z-sn-sectionLink-active');
        }
        $("#z-cp-wellManager").empty();
        $("#z-cp-wellManager").append(
            "<option disabled selected>Select Manager</option>");
        for (var i in z_wellManager_list) {
            if (!(z_wellManager_list[i].userId == "")) {
                var z_wellManager_Options = document.createElement('option');
                z_wellManager_Options.setAttribute('value', z_wellManager_list[i].id);
                z_wellManager_Options.innerHTML = z_wellManager_list[i].name+ " "+ "(" + z_wellManager_list[i].userId + ")";
                $("#z-cp-wellManager").append(z_wellManager_Options);
            }
        }
    }
    else {
        alertPopup('alert', 'Please create well manager to create a new project');
    }
}

function z_createProject_submit() {
    well_creation_popup("Do you wish to Create a New Well under this Project..?",function(){
		project_submit();
		clearwell_creation_popup();
	});
	
}
function project_submit(){
	var projectName = $("#z-cp-projectName").val();
    var proAlert = $("#z-al-projectName").text();
    var wellManager = $("#select2-z-cp-wellManager-container").text();
    var country = $("#z-cp-country").val();
    var block = $("#z-cp-block").val();
    var field = $("#z-cp-field").val();
	block_name = $("#z-cp-block").val();
	field_name = $("#z-cp-field").val();
    var managerId = $("#z-cp-wellManager").val();
    var wellManagerId = wellManager.split(" (")[1].replace(")","");
    if ($('#projectForm').valid() && projectName && wellManager &&
        (country != -1) && block && field &&
        ($("#z-al-projectName").length == 0)) {
        $.ajax({
            url: "/api/verifyProjectExists",
            type: "POST",
            data: {
                clientId: clientId,
                projectName: $("#z-cp-projectName").val()
            },
            dataType: "text",
            success: function (result) {
                var z_output = result.split(":")[1];
                console.log("Existence :" + z_output);
                if (z_output == "false") {
                    var data = {
                        projectName: $("#z-cp-projectName").val(),
                        clientId: clientId,
                        wellManager: $("#select2-z-cp-wellManager-container").text(),
                        country: $("#z-cp-country").val(),
                        block: $("#z-cp-block").val(),
                        field: $("#z-cp-field").val(),
                        managerId: $("#z-cp-wellManager").val(),
                        wellManagerId: wellManagerId
                    };
                    $.ajax({
                        url: "/api/addProject",
                        data: JSON.stringify(data),
                        type: "POST",
                        dataType: 'text',
                        contentType: 'application/json;charset=UTF-8',
                        success: function (result) {
                            console.log("suc");
                            console.log(result);
                            z_projectsSection_active(false, true);
							createWell_popup();
                        },
                        error: function (result) {
                            console.log(result);
                        }
                    });
                } else {
                    z_projectsSection_active(false, true);
                }
            },
            error: function (result) {
                console.log(result);
            }
        });
    } else {
        popup("Please enter valid details");
    }
}

// Edit Project
function z_editProject_submit(projName, projId, projCount) {
    var projId = projId;
    var projCount = projCount;
    var projName = projName;
    var projectName = $("#z-cp-projectName").val();
    var proAlert = $("#z-al-projectName").text();
    var wellManager = $("#select2-z-cp-wellManager-container").text();
    var managerId = $("#z-cp-wellManager").val();
    var country = $("#z-cp-country").val();
    var block = $("#z-cp-block").val();
    var field = $("#z-cp-field").val();
    if ($("#projectForm").valid() && (country != -1) &&
        ($("#z-al-projectName").length == 0)) {

        var data = {
            id: projId,
            projectName: projectName,
            clientId: clientId,
            wellManager: wellManager,
            managerId: managerId,
            country: country,
            block: block,
            noOfWells: projCount,
            field: field
        };
        $.ajax({
            url: "/api/updateProject",
            data: JSON.stringify(data),
            type: "POST",
            dataType: 'text',
            contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                console.log(result);
                var z_output = result.split(":")[1];
                document.getElementById("z-projectCreate-btn-collection").style.display = "flex";
                document.getElementById("z-projectEdit-btn-collection").style.display = "none";
                if (z_output == "Done") {
                    alertPopup('success', "Project Updated Successfully");
                } else {
                    alertPopup('alert', "Error");
                }
                document.getElementById('projectForm').reset();
                $('.z-m-mail-list').empty();
                projectForm.resetForm();
                $("#z-al-projectName").remove();
                z_projectsSection_active(false, false);
            },
            error: function (result) {
                console.log(result);
            }
        });

    } else {
        popup("Please enter valid details");
    }
}

// Create Well Popup
var clientStart_date;
$.ajax({
    url: "/api/getLicense",
    type: "GET",
    data: {
        clientId: clientId
    },
    dataType: 'text',
    contentType: 'application/json;charset=UTF-8',
    success: function (result) {
        var result = JSON.parse(result);
        console.log(result);
        if (result != null) {
            clientStart_date = new Date(result.startDate);
            document.getElementById('z-clientCreatedDate').innerHTML = z_timeConversion(clientStart_date);
        } else {
            clientStart_date = new Date();
            document.getElementById('z-clientCreatedDate').innerHTML = z_timeConversion(clientStart_date);
            document.getElementById('z-un-licenseUpdate').style.display = "none";
        }
    },
    error: function (result) {
        console.log(result);
    }
});

function createWell_popup(z_navbarToggle, defaultProject_Selection) {
	var project_name;
    if (z_wellEngineer_list.length > 0) {
        if (z_navbarToggle) {
            sideNavbar_toggle();
        }
        $.ajax({
            url: "/api/getProjects?clientId=" + clientId,
            type: "GET",
            contentType: "application/json",
            success: function (result) {
                z_projectsTable_data = result;

                if ((z_projectsTable_data).length != 0) {
                    if (defaultProject_Selection) {
                        $('#selected-project').attr('data-projectName', defaultProject_Selection);
                    } else {
                        $('#selected-project').attr('data-projectName', "");
                    }
                    project_name = document.getElementById('selected-project');
                    $('#z-createwellSection').show();
                    z_createWell_active(project_name.getAttribute('data-projectName'));

                } else {
                    alertPopup('alert', "Please create at least one project to create well");
                }
            }
        });

    }
    else {
        alertPopup('alert', 'Please create wellEngineer to create wells');
    }
}

function wellType_message(e) {
    if ($(e.options[e.selectedIndex]).closest('optgroup').attr('data-value') == "oldWell") {
        $('#oldWell-message').show();
    } else {
        $('#oldWell-message').hide();
    }
}



// Create Well Form
var z_projectListDefault = true;
var z_cw_projectList;

function z_createWell_active(defaultProject_Selection) {
    if (z_wellEngineer_list.length > 0) {
        if (!$('#z-createWell-wrap').hasClass('z-rightSection-active')) {
                            $("#z-cw-projectList option").remove();
                            z_projectListDefault = true;
                            if (defaultProject_Selection) {
                                z_projectsList(defaultProject_Selection);
                            } else {
                                z_projectsList();
                            }
                            $('.z-cw-wellName-wrap').removeClass('z-pointerEvent-none');

                           
                            $("#z-cw-wellMd-selectedUnit").val("");
                            $("#z-cw-welltvd-selectedUnit").val("");
                            $("#z-cw-welltime-selectedUnit").val("");
                            $("#z-cw-wellcost-selectedUnit").val("");
                            $("#z-cw-wellcost-selectedUnit").val("");
                            $("#wellEngineer").empty();
							$('.automatic').text('');
							$('.manual').val('');
							$('.automatic').addClass('d-none');
							$('.manual').addClass('d-none');
							operator_name = "";
							reference_number = "";
							reference_type = "choose";
							
                            $("#wellEngineer").append("<option disabled selected>Select Engineer</option>");
                            for (var i in z_wellEngineer_list) {
                                if (!(z_wellEngineer_list[i].userId == "")) {
                                    var z_wellEngineer_Options = document.createElement('option');
                                    z_wellEngineer_Options.setAttribute('value', z_wellEngineer_list[i].id);
                                    z_wellEngineer_Options.innerHTML = z_wellEngineer_list[i].name+" "+ "(" + z_wellEngineer_list[i].userId + ")";
                                    $("#wellEngineer").append(z_wellEngineer_Options);
                                }
                            }

                            // main section
                            $('.z-rightSection-active').removeClass('z-rightSection-active');
                            $('#z-createWell-wrap').addClass('z-rightSection-active');
                            $('.z-wellTop-btnWrap-active').removeClass('z-wellTop-btnWrap-active');
                            $('.z-addWell-btnWrap').addClass('z-wellTop-btnWrap-active');

                            // navbar
                            $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
                            $('#z-sn-createWell').addClass('z-sn-sectionLink-active');
                        
              
          
        }
    }
    else {
        alertPopup('alert', 'Please create wellEngineer to create wells');
    }
}

// new well and old well correspondings


// Edit Well Form
var z_editWell_id, z_editWell_startDate,spudDate,completedDate,plannedDate;

function z_editWell_active(wellData) {
    if (z_wellEngineer_list.length > 0) {
        if($('#z-sideNavbar-afe').hasClass('z-sideNavbar-active')){
        	sideNavbar_toggle_afe();
        }
    	if (!$('#z-createWell-wrap').hasClass('z-rightSection-active')) {
            if (wellData) {
                z_editWell_id = wellData.id;
                $('#z-createwellSection').hide();
                $('#z-cw-currency').val(wellData.currency);
                $('#z-cw-dateformat').val(wellData.dateFormat);
				datePicker();
				var wellPage = document.getElementById('wellPage1');
				wellPagination(wellPage);
                var rigOnlocationDate = new Date(z_timeConversion(wellData.rigOnLocationDate));
                var rig_acceptance_date = new Date(z_timeConversion(wellData.rigAcceptanceDate));
                var rigOnWellDate = new Date(z_timeConversion(wellData.rigOnWellDate));
                var rigSpudDate = new Date(z_timeConversion(wellData.rigSpudDate));
                if(wellData.dateFormat == "dd-mmmm-yyyy"){
                if(wellData.oldWell == "true"){
                	spudDate = z_timeConversion(wellData.spudDate);
                	completedDate = z_timeConversion(wellData.completedDate);
                	$('#z-cw-oldWellSpudDate').val(spudDate);
                	$('#z-cw-oldWellCompletedDate').val(completedDate);
                	$('#z-cw-wellSelection').val("oldWell");
                	wellDate("oldWell");
                }
                else{
                	plannedDate=z_timeConversion(wellData.plannedDate);
                	$('#z-cw-newWellDate').val(plannedDate);
                	$('#z-cw-wellSelection').val("newWell");
                	wellDate("newWell");
                }
                if(rigOnlocationDate.getFullYear() > 1950){
                	$('#z-cw-rigOnLocationDate').val(z_timeConversion(rigOnlocationDate));
                }
                if(rig_acceptance_date.getFullYear() > 1950){
                	$('#z-cw-rigAcceptanceDate').val(z_timeConversion(rig_acceptance_date));
                }
                if(rigOnWellDate.getFullYear() > 1950){
                	$('#z-cw-rigOnWellDate').val(z_timeConversion(rigOnWellDate));
                }
                if(rigSpudDate.getFullYear() > 1950){
                	$('#z-cw-rigSpudDate').val(z_timeConversion(rigSpudDate));
                }
                }
                else{
                	if(wellData.oldWell == "true"){
                	spudDate = z_timeConversion(wellData.spudDate,null,"mmmm-dd-yyyy");
                	completedDate = z_timeConversion(wellData.completedDate,null,"mmmm-dd-yyyy");
                	$('#z-cw-oldWellSpudDate').val(spudDate);
                	$('#z-cw-oldWellCompletedDate').val(completedDate);
                	$('#z-cw-wellSelection').val("oldWell");
                	wellDate("oldWell");
                	}
                else{
                	plannedDate=z_timeConversion(wellData.plannedDate,null,"mmmm-dd-yyyy");
                	$('#z-cw-newWellDate').val(plannedDate);
                	$('#z-cw-wellSelection').val("newWell");
                	wellDate("newWell");
                }
                if(rigOnlocationDate.getFullYear() > 1950){
                	$('#z-cw-rigOnLocationDate').val(z_timeConversion(rigOnlocationDate,null,"mmmm-dd-yyyy"));
                }
                if(rig_acceptance_date.getFullYear() > 1950){
                	$('#z-cw-rigAcceptanceDate').val(z_timeConversion(rig_acceptance_date,null,"mmmm-dd-yyyy"));
                }
                if(rigOnWellDate.getFullYear() > 1950){
                	$('#z-cw-rigOnWellDate').val(z_timeConversion(rigOnWellDate,null,"mmmm-dd-yyyy"));
                }
                if(rigSpudDate.getFullYear() > 1950){
                	$('#z-cw-rigSpudDate').val(z_timeConversion(rigSpudDate,null,"mmmm-dd-yyyy"));
                }
                }
                $('#z-cw-unitSelection').val(wellData.wellUnits);
                if(wellData.wellUnits == "MixedApi"){
                	unitSelection("MixedApi");
                	$('#z-well-depthLength-unit').val(wellData.depthUnit);
                	 $('#z-well-diameter-unit').val(wellData.diameterUnit);
                     $('#z-well-mudweight-unit').val(wellData.mudWeightUnit);
                     $('#z-well-volume-unit').val(wellData.volumeUnit);
                     $('#z-well-drilling-unit').val(wellData.drillingUnit);
                     $('#z-well-generalweight-unit').val(wellData.generalWeightUnit);
                     $('#z-well-string-weight-unit').val(wellData.stringWeightUnit);
                     $('#z-well-torque-unit').val(wellData.torqueUnit);
                     $('#z-well-pressure-unit').val(wellData.pressureUnit);
                     $('#z-well-flow-unit').val(wellData.flowRateUnit);
                     $('#z-well-pump-unit').val(wellData.pumpOutputUnit);
                     $('#z-well-displacement-unit').val(wellData.displacementUnit);
                     $('#z-well-jetvelocity-unit').val(wellData.jetVelocityUnit);
                     $('#z-well-velocity-unit').val(wellData.velocityUnit);
                     $('#z-well-rihPoohSpeed-unit').val(wellData.rihPoohSpeedUnit);
                     $('#z-well-rihPoohTime-unit').val(wellData.rihPoohTimeUnit);
                	
                }
                else{
                	unitSelection("Si");
                }
                z_projectListDefault = true;
                z_projectsList(wellData.projectId, "id");
                $('#z-cw-wellName').val(wellData.wellName);
                $('#z-cw-wellName').attr('readonly');
//                $('.z-cw-wellName-wrap').addClass('z-pointerEvent-none');

                // well engineer list
                $("#wellEngineer").empty();
                $("#wellEngineer").append("<option disabled>Select Engineer</option>");
                for (var i in z_wellEngineer_list) {
                    if (!(z_wellEngineer_list[i].userId == "")) {
                        var z_wellEngineer_Options = document.createElement('option');
                        z_wellEngineer_Options.setAttribute('value', z_wellEngineer_list[i].id);
                        z_wellEngineer_Options.innerHTML = z_wellEngineer_list[i].name+" "+ "(" + z_wellEngineer_list[i].userId + ")";
                        if (z_wellEngineer_list[i].userId == wellData.wellEngineer) {
                            z_wellEngineer_Options.setAttribute('selected', "selected");
                        }
                        $("#wellEngineer").append(z_wellEngineer_Options);
                    }
                }
                $('#z-cw-projection').val(wellData.projections);
                // well location list
                if (wellData.wellLocationParameters != "" && wellData.wellLocationParameters != null) {
                    var wellLocationParameters = JSON.parse(wellData.wellLocationParameters);
                    // latitude
                    $('#z-cw-latitudeDegrees').val(wellLocationParameters.latitude.degrees);
                    $('#z-cw-latitudeMinutes').val(wellLocationParameters.latitude.minutes);
                    $('#z-cw-latitudeSeconds').val(wellLocationParameters.latitude.seconds);
                    // longitude
                    $('#z-cw-longitudeDegrees').val(wellLocationParameters.longitude.degrees);
                    $('#z-cw-longitudeMinutes').val(wellLocationParameters.longitude.minutes);
                    $('#z-cw-longitudeSeconds').val(wellLocationParameters.longitude.seconds);
                    $('#z-cw-utmEasting').val(wellLocationParameters.utm.utmEasting);
                    $('#z-cw-utmNorthing').val(wellLocationParameters.utm.utmNorthing);
                }
                $('#z-cw-referenceDatum').val(wellData.datum);
                if(wellData.datum == "custom"){
                	 $('#z-cw-customReference').val(wellData.customDatum);
                	 showCustomReference("custom");
                }
                $('#z-cw-shoreSelection').val(wellData.wellLandscape);
                $('#z-cw-shoreSelection').trigger("change");
                // shore Location
          

                if (wellData.wellLandscape == "Onshore") {
                	$('#z-cw-onshoreRigtype').val(wellData.rigType);
               	 $('#z-cw-onshore-rigName').val(wellData.rigName);
               	 $('#z-cw-onshore-rigContractor').val(wellData.rigContractor);
				 $('#z-cw-onshore-rigOperator').val(wellData.rigOperator);
				 
             	if(wellData.wellUnits == "MixedApi"){
             		(wellData.depthUnit == "m" ? $('#z-cw-airGap-onshore').val(wellData.airGap.replace("m","")) : $('#z-cw-airGap-onshore').val(wellData.airGap.replace("ft","")));
             		 (wellData.depthUnit == "m" ? $('#z-cw-onshoreWellhead-datum').val(wellData.wellheadToDatumLength.replace("m","")) : $('#z-cw-onshoreWellhead-datum').val(wellData.wellheadToDatumLength.replace("ft","")));
             		 (wellData.depthUnit == "m" ? $('#z-cw-platformRkb-datumLength').val(wellData.rkbToDatumLength.replace("m","")) : $('#z-cw-platformRkb-datumLength').val(wellData.rkbToDatumLength.replace("ft","")));
             		 (wellData.wellUnits == "m" ? $('#z-cw-onshoreGroundElevationToMsl').val(wellData.groundElevationToMsl.replace("m","")) : $('#z-cw-onshoreGroundElevationToMsl').val(wellData.groundElevationToMsl.replace("ft","")));

           	}
             	else{
             		(wellData.wellUnits == "Si" ? $('#z-cw-airGap-onshore').val(wellData.airGap.replace("m","")) : $('#z-cw-airGap-onshore').val(wellData.airGap.replace("ft","")));
             		 (wellData.wellUnits == "Si" ? $('#z-cw-onshoreWellhead-datum').val(wellData.wellheadToDatumLength.replace("m","")) : $('#z-cw-onshoreWellhead-datum').val(wellData.wellheadToDatumLength.replace("ft","")));
             		 (wellData.wellUnits == "Si" ? $('#z-cw-platformRkb-datumLength').val(wellData.rkbToDatumLength.replace("m","")) : $('#z-cw-platformRkb-datumLength').val(wellData.rkbToDatumLength.replace("ft","")));
             		 (wellData.wellUnits == "Si" ? $('#z-cw-onshoreGroundElevationToMsl').val(wellData.groundElevationToMsl.replace("m","")) : $('#z-cw-onshoreGroundElevationToMsl').val(wellData.groundElevationToMsl.replace("ft","")));

             	}
               	    } 
                else if (wellData.wellLandscape == "Platform") {
                	if(wellData.wellUnits == "MixedApi"){
                		 (wellData.depthUnit == "m" ? $('#z-cw-waterDepth').val(wellData.waterDepth.replace("m","")) : $('#z-cw-waterDepth').val(wellData.waterDepth.replace("ft","")));
                		 (wellData.depthUnit == "m" ? $('#z-cw-airGap').val(wellData.airGap.replace("m","")) : $('#z-cw-waterDepth').val(wellData.airGap.replace("ft","")));
                		 (wellData.depthUnit == "m" ? $('#z-cw-platformRkb-datumLength').val(wellData.wellheadToDatumLength.replace("m","")) : $('#z-cw-platformRkb-datumLength').val(wellData.wellheadToDatumLength.replace("ft","")));
                		 (wellData.depthUnit == "m" ? $('#z-cw-platformRkbfrom-datumLength').val(wellData.rkbfromDatumLength.replace("m","")) : $('#z-cw-platformRkbfrom-datumLength').val(wellData.rkbfromDatumLength.replace("ft","")));

                	}
                	else{
                		(wellData.wellUnits == "Si" ? $('#z-cw-waterDepth').val(wellData.waterDepth.replace("m","")) : $('#z-cw-waterDepth').val(wellData.waterDepth.replace("ft","")));
               		 (wellData.wellUnits == "Si" ? $('#z-cw-airGap').val(wellData.airGap.replace("m","")) : $('#z-cw-waterDepth').val(wellData.airGap.replace("ft","")));
               		 (wellData.wellUnits == "Si" ? $('#z-cw-platformRkb-datumLength').val(wellData.wellheadToDatumLength.replace("m","")) : $('#z-cw-platformRkb-datumLength').val(wellData.wellheadToDatumLength.replace("ft","")));
               		 (wellData.wellUnits == "Si" ? $('#z-cw-platformRkbfrom-datumLength').val(wellData.rkbfromDatumLength.replace("m","")) : $('#z-cw-platformRkbfrom-datumLength').val(wellData.rkbfromDatumLength.replace("ft","")));
                	}
                   


                    $('#z-cw-platformName').val(wellData.platformName);
            		$('#z-cw-platformDimension').val(wellData.platformDimensions);
            		$('#z-cw-slots-platform').val(wellData.slotNo);
            		$('#z-cw-platform-slot-location').val(wellData.platformSlotLocation);
            		$('#z-cw-platform-rigName').val(wellData.rigName);
            		$('#z-cw-platform-rigContractor').val(wellData.rigContractor);
                    $('#z-cw-platform-rigOperator').val(wellData.rigOperator);
                    
                    if (wellData.platformSlotCoordinateParameters != "" && wellData.platformSlotCoordinateParameters != null) {
                        var platformSlotCoordinateParameters = JSON.parse(wellData.platformSlotCoordinateParameters);
                        // latitude
                        $('#z-cw-slot-latitudeDegrees').val(platformSlotCoordinateParameters.latitude.degrees);
                        $('#z-cw-slot-latitudeMinutes').val(platformSlotCoordinateParameters.latitude.minutes);
                        $('#z-cw-slot-latitudeSeconds').val(platformSlotCoordinateParameters.latitude.seconds);
                        // longitude
                        $('#z-cw-slot-longitudeDegrees').val(platformSlotCoordinateParameters.longitude.degrees);
                        $('#z-cw-slot-longitudeMinutes').val(platformSlotCoordinateParameters.longitude.minutes);
                        $('#z-cw-slot-longitudeSeconds').val(platformSlotCoordinateParameters.longitude.seconds);
                        $('#z-cw-slot-utmEasting').val(platformSlotCoordinateParameters.utm.utmEasting);
                        $('#z-cw-slot-utmNorthing').val(platformSlotCoordinateParameters.utm.utmNorthing);
                    }
                } else if (wellData.wellLandscape == "Standalone") {
                   	if(wellData.wellUnits == "MixedApi"){
                  		 (wellData.depthUnit == "m" ? $('#z-cw-waterDepth').val(wellData.waterDepth.replace("m","")) : $('#z-cw-waterDepth').val(wellData.waterDepth.replace("ft","")));
                  		 (wellData.depthUnit == "m" ? $('#z-cw-airGap-standalone').val(wellData.airGap.replace("m","")) : $('#z-cw-airGap-standalone').val(wellData.airGap.replace("ft","")));
                  		 (wellData.depthUnit == "m" ? $('#z-cw-standaloneWellhead-datum').val(wellData.wellheadToDatumLength.replace("m","")) : $('#z-cw-standaloneWellhead-datum').val(wellData.wellheadToDatumLength.replace("ft","")));
                  		 (wellData.depthUnit == "m" ? $('#z-cw-standaloneRkb-datumLength').val(wellData.rkbToDatumLength.replace("m","")) : $('#z-cw-standaloneRkb-datumLength').val(wellData.rkbToDatumLength.replace("ft","")));

                  	}
                  	else{
                  		(wellData.wellUnits == "Si" ? $('#z-cw-waterDepth').val(wellData.waterDepth.replace("m","")) : $('#z-cw-waterDepth').val(wellData.waterDepth.replace("ft","")));
                 		 (wellData.wellUnits == "Si" ? $('#z-cw-airGap-standalone').val(wellData.airGap.replace("m","")) : $('#z-cw-airGap-standalone').val(wellData.airGap.replace("ft","")));
                 		 (wellData.wellUnits == "Si" ? $('#z-cw-standaloneWellhead-datum').val(wellData.wellheadToDatumLength.replace("m","")) : $('#z-cw-standaloneWellhead-datum').val(wellData.wellheadToDatumLength.replace("ft","")));
                 		 (wellData.wellUnits == "Si" ? $('#z-cw-standaloneRkb-datumLength').val(wellData.rkbToDatumLength.replace("m","")) : $('#z-cw-standaloneRkb-datumLength').val(wellData.rkbToDatumLength.replace("ft","")));
                  	}
                   	 $('#z-cw-standaloneRigtype').val(wellData.rigType);
                   	 $('#z-cw-standalone-rigName').val(wellData.rigName);
                   	 $('#z-cw-standalone-rigContractor').val(wellData.rigContractor);
					 $('#z-cw-standalone-rigOperator').val(wellData.rigOperator);
                } else if (wellData.wellLandscape == "Subsea") {
                	if(wellData.wellUnits == "MixedApi"){
               		 (wellData.depthUnit == "m" ? $('#z-cw-waterDepth').val(wellData.waterDepth.replace("m","")) : $('#z-cw-waterDepth').val(wellData.waterDepth.replace("ft","")));
               		 (wellData.depthUnit == "m" ? $('#z-cw-airGap-subsea').val(wellData.airGap.replace("m","")) : $('#z-cw-airGap-subsea').val(wellData.airGap.replace("ft","")));
               		 (wellData.depthUnit == "m" ? $('#z-cw-subseaWellhead-datum').val(wellData.wellheadToDatumLength.replace("m","")) : $('#z-cw-subseaWellhead-datum').val(wellData.wellheadToDatumLength.replace("ft","")));
               		 (wellData.depthUnit == "m" ? $('#z-cw-subseaRkb-datumLength').val(wellData.rkbToDatumLength.replace("m","")) : $('#z-cw-subseaRkb-datumLength').val(wellData.rkbToDatumLength.replace("ft","")));

               	}
               	else{
               		(wellData.wellUnits == "Si" ? $('#z-cw-waterDepth').val(wellData.waterDepth.replace("m","")) : $('#z-cw-waterDepth').val(wellData.waterDepth.replace("ft","")));
              		 (wellData.wellUnits == "Si" ? $('#z-cw-airGap-subsea').val(wellData.airGap.replace("m","")) : $('#z-cw-airGap-subsea').val(wellData.airGap.replace("ft","")));
              		 (wellData.wellUnits == "Si" ? $('#z-cw-subseaWellhead-datum').val(wellData.wellheadToDatumLength.replace("m","")) : $('#z-cw-subseaWellhead-datum').val(wellData.wellheadToDatumLength.replace("ft","")));
              		 (wellData.wellUnits == "Si" ? $('#z-cw-platformRkb-datumLength').val(wellData.rkbToDatumLength.replace("m","")) : $('#z-cw-platformRkb-datumLength').val(wellData.rkbToDatumLength.replace("ft","")));
               	}
                	 $('#z-cw-subseaRigtype').val(wellData.rigType);
                	 $('#z-cw-subsea-rigName').val(wellData.rigName);
                	 $('#z-cw-subsea-rigContractor').val(wellData.rigContractor);
                	 
                  
                }
               $('#z-cw-referenceNumber').val(wellData.referenceType);
			  
			   
				if(wellData.referenceType == "Custom"){
					$('.manual').removeClass('d-none');
					$('#z-cw-referenceNumber-Custom').val(wellData.referenceNumber);
				}
				else{
					 $('.automatic').removeClass('d-none');
					$('#z-referenceNumber-auto').val(wellData.referenceNumber);
				}

                var actualWellCost = wellData.actualWellCost.replace(wellData.currency,"");
            	var plannedWellCost = wellData.plannedWellCost.replace(wellData.currency,"");
                $('#z-cw-actualwellcost').val(actualWellCost.trim());
                $('#z-cw-actualwelltime').val(wellData.actualWellTime);
                $('#z-cw-actualtvd').val(wellData.actualTvd);
                $('#z-cw-actualMd').val(wellData.actualMd);
                $('#z-cw-wellcost').val(plannedWellCost.trim());
                $('#z-cw-welltime').val(wellData.plannedWellTime);
                $('#z-cw-welltvd').val(wellData.plannedTvd);
                $('#z-cw-wellMd').val(wellData.plannedMd);
                $('#z-cw-drillingMode').val(wellData.drillingMode);
                
if(wellData.image_url != null){
					if(wellData.image_url != ""){
						company_image_url = wellData.image_url;
						$('.image-preview-main').attr('src',wellData.image_url);
					}
				}
				
                // main section
                $('.z-rightSection-active').removeClass('z-rightSection-active');
                $('#z-createWell-wrap').addClass('z-rightSection-active');
                $('.z-wellTop-btnWrap-active').removeClass('z-wellTop-btnWrap-active');
                $('.z-editWell-btnWrap').addClass('z-wellTop-btnWrap-active');

                // navbar
                $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
                $('#z-sn-createWell').addClass('z-sn-sectionLink-active');

            }
        }
    }
    else {
        alertPoppup('alert', 'Please create WellEngineer for existing wells');
    }
}

function z_projectsList(defaultProject_Selection, projectSelectionBy) {
    $.ajax({
        url: "/api/getProjects?clientId=" + clientId,
        type: "GET",
        contentType: "application/json",
        success: function (result) {
            $("#z-cw-projectList option").remove();
            z_cw_projectList = result;
            if (projectSelectionBy == "id") {
                for (var i = 0; i < z_cw_projectList.length; i++) {
                    if (z_cw_projectList[i].id == defaultProject_Selection) {
                        projectList(z_cw_projectList[i], defaultProject_Selection);
                    } else {
                        projectList(z_cw_projectList[i]);
                    }
                }
            } else {
                for (var i = 0; i < z_cw_projectList.length; i++) {
                    if (z_cw_projectList[i].name == defaultProject_Selection) {
                        projectList(z_cw_projectList[i], defaultProject_Selection);
                    } else {
                        projectList(z_cw_projectList[i]);
                    }
                }
            }
        }
    });
}

function projectList(optEl, defaultProject_Selection) {
    var x = document.getElementById("z-cw-projectList");
    if (z_projectListDefault) {
        $("#z-cw-projectList option").remove();
        var option = document.createElement("option");
        option.text = "Select Project";
        option.value = "Select Project";
        option.setAttribute("disabled", "disabled");
        if (!defaultProject_Selection)
            option.setAttribute("selected", "true");
        x.add(option);
    }
    z_projectListDefault = false;
    var option = document.createElement("option");
    option.text = optEl.name;
    option.value = optEl.id;
    if (defaultProject_Selection == optEl.name || defaultProject_Selection == optEl.id)
        option.setAttribute("selected", "true");
    x.add(option);
}

// projection list dropdown
function z_cw_projection() {
    var z_cw_projection = document.getElementById("z-cw-projection").value;
    if (z_cw_projection == "Universal Transverse Mercator") {
        console.log("in projection");
        document.getElementById("z-cw-utmZoneNone").style.display = "block";
    } else {
        document.getElementById("z-cw-utmZoneNone").style.display = "none";
    }
}

function z_cw_shoreParam(ele) {
    $('.z-wc-shoreField').removeClass('z-wc-shoreField-active');
    if (ele.value == "standaloneShore") {
        $('.z-wc-o-standalone').addClass('z-wc-shoreField-active');
    } else if (ele.value == "platform") {
        $('.z-wc-platformField').addClass('z-wc-shoreField-active');
    } else if (ele.value == "subsea") {
        $('.z-wc-subseaField').addClass('z-wc-shoreField-active');
    } else if (ele.value == "standalone") {
        $('.z-wc-standaloneField').addClass('z-wc-shoreField-active');
    } else if (ele.value == "swamp") {
        $('.z-wc-swamp').addClass('z-wc-shoreField-active');
    } else if (ele.value == "onShore") {
        $('.z-wc-c-onShore').addClass('z-wc-shoreField-active');
    } else if (ele.value == "offShore") {
        $('.z-wc-c-offShore').addClass('z-wc-shoreField-active');
    } else if (ele.value == "padType") {
        $('.z-wc-o-padType').addClass('z-wc-shoreField-active');
    }
    // clears the entered field on changing
    $('.z-wc-platformField select').prop('selectedIndex', 0);
    // $('.slotLoc').hide();
    // clears the entered field on changing
    $('.slotLoc input').val("");
    $('.slotLoc div.z-validationError').remove();
    // clears the entered field on changing
    $('.z-wc-shoreField input').val("");
    $('.z-wc-shoreField div.z-validationError').remove();
    $('.z-wc-error').remove();
}

// Create wells Error Adding
function unbindError_well() {
    errorId = $(this).attr('id');
    $('#' + errorId).removeClass('z-wc-errorId');
    $('#' + errorId + '-zError').remove();
    $('#' + errorId).off('keydown', unbindError_well);
    $('#' + errorId).off('change', unbindError_well);
}

function addingError(errorId) {

    if ($('#' + errorId + '-zError').length == 0 && !(errorId == "z-well-depthLength-unit")) {
        $('#' + errorId).addClass('z-wc-errorId');
        var errorMsg = $('<div id="' + errorId + '-zError" class="error z-wc-error"> This Field is Required </div>');
        var parentElement = $('#' + errorId).parent('.z-m-input-field');
        $(parentElement).append(errorMsg);
        $('#' + errorId).off('keydown', unbindError_well).on('keydown', unbindError_well);
        $('#' + errorId).off('change', unbindError_well).on('change', unbindError_well);
    }
    else if($('#' + errorId + '-zError').length == 0 && (errorId == "z-well-depthLength-unit")){
    	$('#' + errorId).addClass('z-wc-errorId');
        var errorMsg = $('<div id="' + errorId + '-zError" class="error z-wc-error"> This Field is Required </div>');
        var parentElement = $('#z-depth-parameters');
        $(parentElement).append(errorMsg);
        $('#' + errorId).off('keydown', unbindError_well).on('keydown', unbindError_well);
        $('#' + errorId).off('change', unbindError_well).on('change', unbindError_well);
    }
}

// variable declaration
var CommonFields = ['z-cw-wellStartDate', 'z-cw-projectList', 'z-cw-wellName',
    'wellEngineer', 'z-cw-projection', 'z-cw-datum',
    'z-cw-shoreSelection', 'z-cw-rigName', 'z-cw-rigContractor',
    'z-cw-airGap', 'z-cw-wellHead-datum', 'z-cw-rkb-datum'
];
var InputsPerType = {
    standaloneShore: ['z-cw-rigType'],
    standalone: ['z-cw-rigType', 'z-cw-waterDepth'],
    padType: ['z-cw-rigType', 'z-cw-padName', 'z-cw-padLocation'],
    platform: ['z-cw-pdLength', 'z-cw-pdBreadth', 'z-cw-pdHeight',
        'z-cw-platformName', 'z-cw-slotNo', 'z-cw-slotLoc',
        'z-cw-waterDepth'
    ],
    subsea: ['z-cw-clusterName', 'z-cw-waterDepth'],
    swamp: ['z-cw-platformName', 'z-cw-waterDepth'],
    offShore: ['z-cw-waterDepth'],
    onShore: []
};
var wellLocation = ['z-cw-latitudeDegrees', 'z-cw-latitudeMinutes',
    'z-cw-latitudeSeconds', 'z-cw-longitudeDegrees',
    'z-cw-longitudeMinutes', 'z-cw-longitudeSeconds',
    'z-cw-utmEasting', 'z-cw-utmNorthing', 'z-cw-utmZone'
];
var PlatformWellLocation = ['z-cw-slot-latitudeDegrees',
    'z-cw-slot-latitudeMinutes', 'z-cw-slot-latitudeSeconds',
    'z-cw-slot-longitudeDegrees', 'z-cw-slot-longitudeMinutes',
    'z-cw-slot-longitudeSeconds', 'z-cw-slot-utmEasting', 'z-cw-slot-utmNorthing'
];

var data = {};



var validateSepcific = [];
var check_for_error=[];



var validateSepcific_result = function (el) {
    var validationReturn = true;
    check_for_error=[]
    try {
    	if($('#z-cw-wellSelection').val() == "newWell" ){
    		validateSepcific = ["z-cw-projectList", "z-cw-wellName", "wellEngineer", "z-cw-shoreSelection","z-cw-dateformat","z-cw-unitSelection","z-cw-wellSelection","z-cw-currency","z-well-inclination","z-well-licenseCheck","z-cw-newWellDate"];
    	}
    	else if($('#z-cw-wellSelection').val() == "oldWell" ){
    		validateSepcific = ["z-cw-projectList", "z-cw-wellName", "wellEngineer", "z-cw-shoreSelection","z-cw-dateformat","z-cw-unitSelection","z-cw-wellSelection","z-cw-currency","z-well-inclination","z-well-licenseCheck","z-cw-oldWellSpudDate","z-cw-oldWellCompletedDate","z-oldwellDateCheck"];
    	}
    	else{
    		validateSepcific = ["z-cw-projectList", "z-cw-wellName", "wellEngineer", "z-cw-shoreSelection","z-cw-dateformat","z-cw-unitSelection","z-cw-wellSelection","z-cw-currency","z-well-inclination","z-well-licenseCheck","z-cw-newWellDate"];
    	}
    	if($('#z-cw-unitSelection').val() == "MixedApi"){
    		validateSepcific.slice("z-well-depthLength-unit");
    		validateSepcific.push("z-well-depthLength-unit");
    	}
        validateSepcific.forEach(function (ob) {
            console.log(ob);
            if ($('#' + ob).val() == '' || $('#' + ob).val() == null || $('#' + ob).val() == "select") {
                validationReturn = false;
            	if(ob != "z-well-licenseCheck" && ob != "z-well-inclination" && ob != "z-oldwellDateCheck"){
					addingError(ob);
					check_for_error.push(false);
					}
						else{
							if(ob == "z-well-inclination" && ($('#z-well-inclination').attr('inclination') == '' || $('#z-well-inclination').attr('inclination') == '') && (check_for_error.indexOf(false) == -1)){
								validationReturn = true;

							}
							else if(ob == "z-well-inclination" &&($('#z-well-inclination').attr('inclination') == 'planning' || $('#z-well-inclination').attr('inclination') == 'actual')){
								validationReturn = false;
								alertPopup('alert','Please Enter PlannedWellDepth and Actual Well Depth with TVD < MD');
							}
							if(ob == "z-well-licenseCheck"){
								if(el == "edit" && (check_for_error.indexOf(false) == -1)){
									validationReturn = true;
								}
								else{
									alertPopup('alert','Please upgrade your License to create wells');
									validationReturn = false;
								}

							}
							if(ob == "z-oldwellDateCheck"){
								alertPopup('alert','Please Enter Correct Date Information for old wells');
								validationReturn = false;
							}
						}
            }
        });
        return validationReturn;
    } catch (e) {
        return false;
    }
}
var operator_name = "";
var block_name = "";
var field_name = "";
var well_location="";
  var createWell_data;
  var current_well_data;
function z_createWell_submit(submitType) {
	 if($('#z-sideNavbar-afe').hasClass('z-sideNavbar-active')){
     	sideNavbar_toggle_afe();
     }
	 
	if (((submitType == "archive") && validate() && $("#wellForm").valid()) || ((submitType != "archive") && validateSepcific_result(submitType) && $("#wellForm").valid())) {
        var z_cw_wellLocation_para, z_cw_slotCoordinate_para,z_cw_platformDimension;
        var z_cw_projection = document.getElementById("z-cw-projection").value;
        var projectionZone = z_cw_projection == "Universal Transverse Mercator" ? $("#z-cw-utmZone").val() : "";
        var well_engineer = $("#select2-wellEngineer-container").text();
        var wellEngineerId = well_engineer.split(" (")[1].replace(")","");
		var image_url = "";
        z_cw_wellLocation_para = {
            latitude: {
                degrees: $('#z-cw-latitudeDegrees').val(),
                minutes: $('#z-cw-latitudeMinutes').val(),
                seconds: $('#z-cw-latitudeSeconds').val()
            },
            longitude: {
                degrees: $('#z-cw-longitudeDegrees').val(),
                minutes: $('#z-cw-longitudeMinutes').val(),
                seconds: $('#z-cw-longitudeSeconds').val()
            },
            utm: {
                utmEasting: $('#z-cw-utmEasting').val(),
                utmNorthing: $('#z-cw-utmNorthing').val(),
                utmZone: projectionZone
            }
        };
       
        if ($('#z-cw-shoreSelection').val() == "Platform") {
            z_cw_slotCoordinate_para = {
                latitude: {
                    degrees: $('#z-cw-slot-latitudeDegrees').val(),
                    minutes: $('#z-cw-slot-latitudeMinutes').val(),
                    seconds: $('#z-cw-slot-latitudeSeconds').val()
                },
                longitude: {
                    degrees: $('#z-cw-slot-longitudeDegrees').val(),
                    minutes: $('#z-cw-slot-longitudeMinutes').val(),
                    seconds: $('#z-cw-slot-longitudeSeconds').val()
                },
                utm: {
                    utmEasting: $('#z-cw-slot-utmEasting').val(),
                    utmNorthing: $('#z-cw-slot-utmNorthing').val()
                }
            };
        }

        // -------------------------------------
        var wellLocation = $('#z-cw-shoreSelection')[0];
      
        var wellApiUrl,currencyWithSymbol;
        var well_Status;
        
        var airgap,rkbtodatumlength,rkbfromdatumlength,wellheadtodatumlength,waterdepth,rigname,rigtype,rigcontractor;
		var rigOperator;
		
        var referenceDatum,well_type;
        var well_unit,groundElevation_to_msl,wellUnitText;
        well_location = $('#z-cw-shoreSelection').val();
        var planned_date = new Date();
        var spud_date = new Date();
        var completed_date = new Date();
        currencyWithSymbol = document.getElementById('z-cw-currency');
        wellUnitText = document.getElementById('z-cw-unitSelection');
        if($('#z-cw-wellSelection').val() == "oldWell"){
        	well_Status="true";
        	spud_date = new Date($('#z-cw-oldWellSpudDate').val());
        	completed_date = new Date($('#z-cw-oldWellCompletedDate').val());
        }
        else{
        	well_Status="false";
        	planned_date = new Date($('#z-cw-newWellDate').val());
        }
        if($('#z-cw-unitSelection').val() == "MixedApi"){
    		well_unit = $('#z-well-depthLength-unit').val();
    	}
        else{
        	if($('#z-cw-unitSelection').val() == "Si"){
        		well_unit = "m";	
        	}
        	else{
        		well_unit = "ft";
        	}
        	 
        }
        //adding common fields for well location
        if(well_location == "Onshore"){
        	airgap = $('#z-cw-airGap-onshore').val()+well_unit;
        	rkbtodatumlength = $('#z-cw-onshoreRkb-datumLength').val()+well_unit;
        	rkbfromdatumlength = "";
        	wellheadtodatumlength = $('#z-cw-onshoreWellhead-datum').val()+well_unit;
        	waterdepth = "";
        	rigname = $('#z-cw-onshore-rigName').val();
        	rigtype = $('#z-cw-onshoreRigtype').val();
        	rigcontractor = $('#z-cw-onshore-rigContractor').val();
			rigOperator = $('#z-cw-onshore-rigOperator').val();
        	groundElevation_to_msl = $('#z-cw-onshoreGroundElevationToMsl').val()+well_unit;
        }
        else{
        	well_type = "Offshore";
        	groundElevation_to_msl = "";
        	waterdepth = $('#z-cw-waterDepth').val()+well_unit;
        	if(well_location == "Platform"){
            	airgap = $('#z-cw-airGap').val()+well_unit;
            	rkbfromdatumlength = $('#z-cw-platformRkbfrom-datumLength').val()+well_unit;
            	rkbtodatumlength = "";
            	wellheadtodatumlength = $('#z-cw-platformRkb-datumLength').val()+well_unit;
            	rigname = $('#z-cw-platform-rigName').val();
            	rigtype = "";
            	rigcontractor = $('#z-cw-platform-rigContractor').val();
				rigOperator = $('#z-cw-platform-rigOperator').val();
            	
            }
            else if(well_location == "Subsea"){
            	airgap = $('#z-cw-airGap-subsea').val()+well_unit;
            	rkbtodatumlength = $('#z-cw-subseaRkb-datumLength').val()+well_unit;
            	rkbfromdatumlength = "";
            	wellheadtodatumlength = $('#z-cw-subseaWellhead-datum').val()+well_unit;
            	rigname = $('#z-cw-subsea-rigName').val();
            	rigtype = $('#z-cw-subseaRigtype').val();
            	rigcontractor = $('#z-cw-subsea-rigContractor').val();
				rigOperator = $('#z-cw-subsea-rigOperator').val();
            }
            else if(well_location == "Standalone"){
            	airgap = $('#z-cw-airGap-standalone').val()+well_unit;
            	rkbtodatumlength = $('#z-cw-standaloneRkb-datumLength').val()+well_unit;
            	rkbfromdatumlength = "";
            	wellheadtodatumlength = $('#z-cw-standaloneWellhead-datum').val()+well_unit;
            	rigname = $('#z-cw-standalone-rigName').val();
            	rigtype = $('#z-cw-standaloneRigtype').val();
            	rigcontractor = $('#z-cw-standalone-rigContractor').val();
				rigOperator = $('#z-cw-standalone-rigOperator').val();
            }
        }
  
    if($('#z-cw-referenceDatum').val() == "custom"){
    	referenceDatum = $('#z-cw-customReference').val();
    }
    else{
    	referenceDatum = "";
    }
    	image_url = $('.image-preview-main').attr('src');
    
        
        if (submitType == "edit") {
            createWell_data = {
                id: z_editWell_id,
                projectId: $('#z-cw-projectList').val(),
                wellName: $('#z-cw-wellName').val(),
                currency:  $('#z-cw-currency').val(),
                wellUnits: $('#z-cw-unitSelection').val(),
                depthUnit: $('#z-well-depthLength-unit').val(),
                dateFormat: $('#z-cw-dateformat').val(),
                currency: $('#z-cw-currency').val(),
                oldWell: well_Status,
                plannedDate: planned_date,
                spudDate: spud_date,
                completedDate: completed_date,
                datum: $('#z-cw-referenceDatum').val(),
                customDatum: referenceDatum,
                projections: $('#z-cw-projection').val(),
                wellLandscape: $('#z-cw-shoreSelection').val(),
                waterDepth: waterdepth,
                platformName: $('#z-cw-platformName').val(),
                platformDimensions: $('#z-cw-platformDimension').val(),
                airGap: airgap,
                slotNo: $('#z-cw-slots-platform').val(),
                platformSlotLocation: $('#z-cw-platform-slot-location').val(),
                platformSlotCoordinate: $('#z-cw-slotLocation-coOrdinates').val(),
                platformSlotCoordinateParameters: JSON.stringify(z_cw_slotCoordinate_para),
                wellheadToDatumLength: wellheadtodatumlength,
                rkbfromDatumLength: rkbfromdatumlength,
                rkbToDatumLength: rkbtodatumlength,
                groundElevationToMsl: groundElevation_to_msl,
                rigName: rigname,
                rigContractor: rigcontractor,
				rigOperator: rigOperator,
				referenceNumber: reference_number,
				referenceType: reference_type,
                rigType: rigtype,
                wellType: well_type,
                rigOnLocationDate: ($('#z-cw-rigOnLocationDate').val() != "" ? new Date($('#z-cw-rigOnLocationDate').val()) : new Date("1-1-1950")),
                rigAcceptanceDate: ($('#z-cw-rigAcceptanceDate').val() != "" ? new Date($('#z-cw-rigAcceptanceDate').val()) : new Date("1-1-1950")),
                rigOnWellDate: ($('#z-cw-rigOnWellDate').val() != "" ? new Date($('#z-cw-rigOnWellDate').val()) : new Date("1-1-1950")),
                rigSpudDate: ($('#z-cw-rigSpudDate').val() != "" ? new Date($('#z-cw-rigSpudDate').val()) : new Date("1-1-1950")),
                drillingMode: $('#z-cw-drillingMode').val(),
                plannedMd: $('#z-cw-wellMd').val(),
                plannedTvd: $('#z-cw-welltvd').val(),
                plannedWellTime: $('#z-cw-welltime').val(),
                plannedWellCost: $('#z-cw-wellcost').val().toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")+" "+$('#z-cw-currency').val(),
                actualMd: $('#z-cw-actualMd').val(),
                actualTvd: $('#z-cw-actualtvd').val(),
                actualWellTime: $('#z-cw-actualwelltime').val(),
                actualWellCost: $('#z-cw-actualwellcost').val().toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")+" "+$('#z-cw-currency').val(),
                wellEngineer: $("#select2-wellEngineer-container").text(),
                engineerId: $('#wellEngineer').val(),
                wellLocationParameters: JSON.stringify(z_cw_wellLocation_para),
                diameterUnit: $('#z-well-diameter-unit').val(),
                mudWeightUnit: $('#z-well-mudweight-unit').val(),
                volumeUnit: $('#z-well-volume-unit').val(),
                drillingUnit: $('#z-well-drilling-unit').val(),
                generalWeightUnit: $('#z-well-generalweight-unit').val(),
                stringWeightUnit: $('#z-well-string-weight-unit').val(),
                torqueUnit: $('#z-well-torque-unit').val(),
                pressureUnit: $('#z-well-pressure-unit').val(),
                flowRateUnit: $('#z-well-flow-unit').val(),
                pumpOutputUnit: $('#z-well-pump-unit').val(),
                displacementUnit: $('#z-well-displacement-unit').val(),
                jetVelocityUnit: $('#z-well-jetvelocity-unit').val(),
                velocityUnit: $('#z-well-velocity-unit').val(),
                rihPoohSpeedUnit: $('#z-well-rihPoohSpeed-unit').val(),
                rihPoohTimeUnit: $('#z-well-rihPoohTime-unit').val(),
                currencyWithSymbol: currencyWithSymbol.selectedOptions[0].text,
                wellUnitText: wellUnitText.selectedOptions[0].text,
                wellEngineerId: wellEngineerId,
				image_url: image_url
            };
            wellApiUrl = "/api/updateWell";
        } else {
            createWell_data = {
                clientId: clientId,
                projectId: $('#z-cw-projectList').val(),
                wellName: $('#z-cw-wellName').val(),
                currency:  $('#z-cw-currency').val(),
                wellUnits: $('#z-cw-unitSelection').val(),
                depthUnit: $('#z-well-depthLength-unit').val(),
                dateFormat: $('#z-cw-dateformat').val(),
                currency: $('#z-cw-currency').val(),
                oldWell: well_Status,
                plannedDate: planned_date,
                spudDate: spud_date,
                completedDate: completed_date,
                datum: $('#z-cw-referenceDatum').val(),
                customDatum: referenceDatum,
                projections: $('#z-cw-projection').val(),
                wellLandscape: $('#z-cw-shoreSelection').val(),
                waterDepth: waterdepth,
                platformName: $('#z-cw-platformName').val(),
                platformDimensions: $('#z-cw-platformDimension').val(),
                airGap: airgap,
                slotNo: $('#z-cw-slots-platform').val(),
                platformSlotLocation: $('#z-cw-platform-slot-location').val(),
                platformSlotCoordinate: $('#z-cw-slotLocation-coOrdinates').val(),
                platformSlotCoordinateParameters: JSON.stringify(z_cw_slotCoordinate_para),
                wellheadToDatumLength: wellheadtodatumlength,
                rkbfromDatumLength: rkbfromdatumlength,
                rkbToDatumLength: rkbtodatumlength,
                groundElevationToMsl: groundElevation_to_msl,
                rigName: rigname,
                rigContractor: rigcontractor,
				rigOperator: rigOperator,
				referenceNumber: reference_number,
				referenceType: reference_type,
                rigType: rigtype,
                wellType: well_type,
                rigOnLocationDate: ($('#z-cw-rigOnLocationDate').val() != "" ? new Date($('#z-cw-rigOnLocationDate').val()) : new Date("1-1-1950")),
                rigAcceptanceDate: ($('#z-cw-rigAcceptanceDate').val() != "" ? new Date($('#z-cw-rigAcceptanceDate').val()) : new Date("1-1-1950")),
                rigOnWellDate: ($('#z-cw-rigOnWellDate').val() != "" ? new Date($('#z-cw-rigOnWellDate').val()) : new Date("1-1-1950")),
                rigSpudDate: ($('#z-cw-rigSpudDate').val() != "" ? new Date($('#z-cw-rigSpudDate').val()) : new Date("1-1-1950")),
                drillingMode: $('#z-cw-drillingMode').val(),
                plannedMd: $('#z-cw-wellMd').val(),
                plannedTvd: $('#z-cw-welltvd').val(),
                plannedWellTime: $('#z-cw-welltime').val(),
                plannedWellCost: $('#z-cw-wellcost').val()+" "+$('#z-cw-currency').val(),
                actualMd: $('#z-cw-actualMd').val(),
                actualTvd: $('#z-cw-actualtvd').val(),
                actualWellTime: $('#z-cw-actualwelltime').val(),
                actualWellCost: $('#z-cw-actualwellcost').val()+" "+$('#z-cw-currency').val(),
                wellEngineer: $("#select2-wellEngineer-container").text(),
                engineerId: $('#wellEngineer').val(),
                wellLocationParameters: JSON.stringify(z_cw_wellLocation_para),
                diameterUnit: $('#z-well-diameter-unit').val(),
                mudWeightUnit: $('#z-well-mudweight-unit').val(),
                volumeUnit: $('#z-well-volume-unit').val(),
                drillingUnit: $('#z-well-drilling-unit').val(),
                generalWeightUnit: $('#z-well-generalweight-unit').val(),
                stringWeightUnit: $('#z-well-string-weight-unit').val(),
                torqueUnit: $('#z-well-torque-unit').val(),
                pressureUnit: $('#z-well-pressure-unit').val(),
                flowRateUnit: $('#z-well-flow-unit').val(),
                pumpOutputUnit: $('#z-well-pump-unit').val(),
                displacementUnit: $('#z-well-displacement-unit').val(),
                jetVelocityUnit: $('#z-well-jetvelocity-unit').val(),
                velocityUnit: $('#z-well-velocity-unit').val(),
                rihPoohSpeedUnit: $('#z-well-rihPoohSpeed-unit').val(),
                rihPoohTimeUnit: $('#z-well-rihPoohTime-unit').val(),
                currencyWithSymbol: currencyWithSymbol.selectedOptions[0].text,
                wellUnitText: wellUnitText.selectedOptions[0].text,
                wellEngineerId: wellEngineerId,
				image_url: image_url
                //wellType: $(wellLocation.options[wellLocation.selectedIndex]).closest('optgroup').prop('label'), // offShore on shore
                
            };
            wellApiUrl = "/api/addWell";
        }

        $.ajax({
            url: wellApiUrl,
            data: JSON.stringify(createWell_data),
            type: "POST",
            dataType: 'text',
            contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                console.log("suc");
                console.log(result);
                var z_afe_navbar = $('.z-mn-menuBtn');
				current_well_data = JSON.parse(result);
				console.log("data val"+current_well_data);
        		$('.d-inline-block.z-mn-menuBtn').removeClass('d-inline-block');
        		$(z_afe_navbar[0]).removeClass('d-none');
        		$(z_afe_navbar[1]).removeClass('d-none');
        		$(z_afe_navbar[1]).addClass('d-none');
        		$(z_afe_navbar[0]).addClass('d-inline-block');
                if(wellApiUrl == "/api/addWell"){
                	if ($('#z-cw-wellSelection').val() == "oldWell") {
                         z_wellsSection_active(false, true, "oldwell");
                     } else {
                         z_wellsSection_active(false, true, "newwell");
                     }
					$('#z-wellid-estimate').attr('wellId',current_well_data.id);
					afeEstimation_after_wellCreation_Popup('Do you wish to create a fresh AFE Estimate for this Well..?',function(){
						$('.z-rightSection-active').removeClass('z-rightSection-active');
						$('#z-afe-Configsection').addClass('z-rightSection-active');
						$('#z-panel-well').addClass('z-rightSection-active');
						$('.z-estimate-panel').removeClass('z-estimate-panel');
						$('#z-afe-estimateLevel-panel').addClass('z-estimate-panel');
						$('#z-well-budget').val("choose");
						$('#z-req-wellLevel').val("choose");
						$('#z-wellConfig').val("choose");
						$('#z-well-average').val("choose");
                        $('#z-wellid-estimate').attr('wellId',current_well_data.id);
						x_wellId = $('#z-wellid-estimate').attr('wellId'); 
						afeLevelSelection_Popup('Choose the AFE Level, Configuration and Data Entry Type for Estimate Creation.',function(){
						 clear_afeLevelSelection_Popup();
						});
						clearafeEstimation_after_wellCreation_Popup();
					});
                }
                else{
                	if(wellStatus == "allWell"){
                		 z_wellsSection_active(false, true, "allWell");
                	}
                	else{
                		if ($('#z-cw-wellSelection').val() == "oldWell") {
                            z_wellsSection_active(false, true, "oldwell");
                        } 
                    	else if($('#z-cw-wellSelection').val() == "newWell"){
                            z_wellsSection_active(false, true, "newwell");
                    	}	
                	}
                }
                
            },
            error: function (result) {
                console.log(result);
            }
        });
    }
}
function create_new_Estimation(el){
		var project_id;
		if($('#z-cw-projectList').val() == "" || $('#z-cw-projectList').val() == null){
			project_id = current_well_data.projectId;
		}
		else{
			project_id = $('#z-cw-projectList').val();
		}
		$.ajax({
        url: "/api/getProject?clientId=" + clientId+"&projectId="+project_id,
        type: "GET",
		async: false,
        contentType: "application/json",
        success: function (result) {
			block_name = result.block;
			field_name = result.field;
            viewWell(current_well_data.id, result.projectName, result.wellManager);
			$('#z-wellid-estimate').attr('wellId',current_well_data.id);
                }
                });
		clearafeEstimation_after_wellCreation_Popup();
	
}

// Add User
function z_addUser_active(z_navbarToggle) {
    if (z_navbarToggle) {
        userNavbar_toggle();
    }
    if(z_navbarToggle != null){
    if(z_navbarToggle.innerText == "Add Users"){
    	sideNavbar_toggle();
    	userNavbar_toggle();
    }
    }
    if (!$('#z-addUser-wrap').hasClass('z-rightSection-active')) {
        // $('.passwordHint').show();
        $('.z-c-passwordInput').on('change', z_changePassword);
        // main section
        $('.z-rightSection-active').removeClass('z-rightSection-active');
        $('#z-addUser-wrap').addClass('z-rightSection-active');

        // navbar
        $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
        $('#z-sn-addUsers').addClass('z-sn-sectionLink-active');
    }
}

function z_addUser_submit() {
    var firstName = $('#z-au-userFirstName').val();
    var lastName = $('#z-au-userLastName').val();
    var userId = $('#z-au-userId').val();
    var password = $("#z-au-userPassword").val();
    var role = $('#z-au-userRole').val();
    var userMail = document.getElementById('z-au-userId');
    userid_existCheck(userMail);
    if ($("#z-addUser-form").valid() && ($('#userExist').length == 0)) {
        var addUser_data = {
            userId: userId,
            clientId: clientId,
            reportId: userEmail,
            firstName: $('#z-au-userFirstName').val(),
            lastName: $('#z-au-userLastName').val(),
            userId: $('#z-au-userId').val(),
            password: $("#z-au-userPassword").val(),
            role: $('#z-au-userRole').val()
        };

        $.ajax({
            url: "/api/addUser",
            type: "POST",
            data: JSON.stringify(addUser_data),
            dataType: 'text',
            contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                console.log(result);
                if (result.split(":")[0] == "Error") {
                    alertPopup('alert', result.split(":")[1]);
                } else if (result.split(":")[0] == "Success") {
                    alertPopup('success', "User added Successfully");
                }
                setTimeout(function () {
                    z_usersSection_active(false, true);
                }, 2000);
            }
        });
    } else {
        popup("Please enter valid details");
    }
}

// View Project
function viewProject(projectId, fromSection_id) {
    var data = {
        clientId: clientId,
        projectId: projectId
    }
    $.ajax({
        url: "/api/getProject",
        type: "GET",
        data: data,
        dataType: 'json',
        contentType: 'application/json;charset=UTF-8',
        success: function (result) {
            console.log(result);
            $('#z-vp-projectName').val(result.projectName);
            $('#z-vp-wellmanager').val(result.wellManager);
            $('#z-vp-country').val(result.country);
            $('#z-vp-block').val(result.block);
            $('#z-vp-field').val(result.field);
			block_name = result.block;
			field_name = result.field;
            // main section
            $('.z-rightSection-active').removeClass('z-rightSection-active');
            $('#z-viewProject-wrap').addClass('z-rightSection-active');
            // Delete Button
            $("#z-m-projectsDelete").attr("onclick", "z_projectsDelete('" + projectId + "','" + result.noOfWells + "')");
            $("#z-m-projectsEdit").attr("onclick", "z_editProject_active('" + projectId + "','" + result.noOfWells + "')");
            $('#z-viewProjectTable-wrap').html("");
            var viewProject_cont = document.createElement('div');
            viewProject_cont.classList = "container z-m-boxShadow z-vw-cont";
            $(viewProject_cont).append('<div class="row"><div class="col-6">PROJECT NAME</div><div id="z-vp-projectName" class="col-6">' + result.projectName + '</div></div>');
            $(viewProject_cont).append('<div class="row"><div class="col-6">WELL MANAGER</div><div id="z-vp-wellmanager" class="col-6">' + result.wellManager + '</div></div>');
            $(viewProject_cont).append('<div class="row"><div class="col-6">COUNTRY</div><div id="z-vp-country" class="col-6">' + result.country + '</div></div>');
            $(viewProject_cont).append('<div class="row"><div class="col-6">BLOCK</div><div id="z-vp-block" class="col-6">' + result.block + '</div></div>');
            $(viewProject_cont).append('<div class="row"><div class="col-6">FIELD</div><div id="z-vp-field" class="col-6">' + result.field + '</div></div>');
            $('#z-viewProjectTable-wrap').html(viewProject_cont);
        }
    });
}

// View Well
var wellUnitSelect="";
var z_wellName_val;
var z_projectName_val;
function viewWell(wellId, projectName, wellManager) {
    company_image_url = "";
	$('[incline-data = "md-ft"]').val('');
	$('[incline-data = "tvd-ft"]').val('');
	$('[incline-data = "wd-ft"]').val('');
	$('[incline-data = "rkb-msl-ft"]').val('');
	var data = {
        wellId: wellId,
        clientId: clientId
    }
    var projectId;
    $.ajax({
        url: "/api/getWell",
        type: "GET",
        data: data,
        dataType: 'json',
        contentType: 'application/json;charset=UTF-8',
        success: function (result) {

            console.log(result);

            if (result.oldWell == "true") {
                $('#z-m-backWell-btn').attr('wellType', 'oldWell');
            } else {
                $('#z-m-backWell-btn').attr('wellType', 'newwell');
            }

            $('#z-vw-editBtn').off('click').on('click', function () {
                z_editWell_active(result);
            });

            projectId = result.projectId;
            $('#z-viewWellTable-wrap').html("");
            var well_content_title = document.createElement('div');
            $(well_content_title).append('<div class="well-title"><div class="col-12 z-wellname-afe font-weight-bold">'+result.wellName+'</div><div class="col-12 font-weight-bold">Well Summary</div></div>');
			z_wellName_val = result.wellName;
			z_projectName_val = projectName;
            var viewWell_cont = document.createElement('div');
            viewWell_cont.classList = "container z-m-boxShadow z-vw-cont";

            if (projectName != "" && projectName != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Project Name</div><div class="col-6">' + projectName + '</div></div>');
            }
            if (result.wellName != "" && result.wellName != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Well Name</div><div class="col-6">' + result.wellName + '</div></div>');
                $('#z-wellName-afe').text(result.wellName);
            }
            if (wellManager != "" && wellManager != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Well Manager</div><div class="col-6">' + wellManager + '</div></div>');
            }
            if (result.wellEngineer != "" && result.wellEngineer != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Well Engineer</div><div class="col-6">' + result.wellEngineer + '</div></div>');
            }
            if (result.currency != "" && result.currency != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Currency</div><div class="col-6">' + result.currencyWithSymbol + '</div></div>');
            }
            if (result.wellUnits != "" && result.wellUnits != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Well Unit</div><div class="col-6">' + result.wellUnitText + '</div></div>');
              
            }
            if(result.wellUnits =="Si"){
            	wellUnitSelect = "m";
            }
            else if(result.wellUnits =="Api"){
            	wellUnitSelect = "ft";
            }
            else if(result.wellUnits =="MixedApi"){
            	wellUnitSelect = result.depthUnit;
            }
            var days = " days";
            if (result.oldWell == "true") {
            	var spudDate = new Date(result.spudDate);
            	var completedDate = new Date(result.completedDate);
                $(viewWell_cont).append('<div class="row"><div class="col-6">Well Type</div><div class="col-6">Old Well</div></div>');
                $(viewWell_cont).append('<div class="row"><div class="col-6">Spud Date</div><div class="col-6">' + spudDate + '</div></div>');
                $(viewWell_cont).append('<div class="row"><div class="col-6">Completed Date</div><div class="col-6">' + completedDate + '</div></div>');
                
            } else if (result.oldWell == "false") {
            	var plannedDate = new Date(result.plannedDate);
                $(viewWell_cont).append('<div class="row"><div class="col-6">Well Type</div><div class="col-6">New Well</div></div>');
                $(viewWell_cont).append('<div class="row"><div class="col-6">Planned Date</div><div class="col-6">' + plannedDate + '</div></div>');
            }
            if (result.wellLocationParameters != "" && result.wellLocationParameters != null && result.wellLocationParameters != '{"latitude":{"degrees":"","minutes":"","seconds":""},"longitude":{"degrees":"","minutes":"","seconds":""},"utm":{"utmEasting":"","utmNorthing":"","utmZone":""}}') {
                var wellLocationParameters = JSON.parse(result.wellLocationParameters);
                $(viewWell_cont).append(
                    "<div class='row'><div class='col-6'>Well Location</div><div class='col-6'> Latitude: " +
                    (wellLocationParameters.latitude.degrees != '' ? wellLocationParameters.latitude.degrees : "-") +
                    "°" +
                    (wellLocationParameters.latitude.minutes != '' ? wellLocationParameters.latitude.minutes : "-") +
                    "'" +
                    (wellLocationParameters.latitude.seconds != '' ? wellLocationParameters.latitude.seconds : "-") +
                    "'' , Longitude: " +
                    (wellLocationParameters.longitude.degrees != '' ? wellLocationParameters.longitude.degrees : "-") +
                    "°" +
                    (wellLocationParameters.longitude.minutes != '' ? wellLocationParameters.longitude.minutes : "-") +
                    "'" +
                    (wellLocationParameters.longitude.seconds != '' ? wellLocationParameters.longitude.seconds : "-") +
                    "'<br> Easting: " +
                    (wellLocationParameters.utm.utmEasting != '' ? wellLocationParameters.utm.utmEasting : "-") +
                    " , Northing: " +
                    (wellLocationParameters.utm.utmNorthing != '' ? wellLocationParameters.utm.utmNorthing : "-") +
                    " </div></div>");
            }
            if (result.datum != "" && result.datum != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Reference Datum</div><div class="col-6">' + result.datum + '</div></div>');
            }
            if (result.projections != "" && result.projections != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Projection System</div><div class="col-6">' + result.projections + '</div></div>');
            }
            if (result.wellType != "" && result.wellType != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Shore Location</div><div class="col-6">' + result.wellType + '</div></div>');
            }
            if (result.wellLandscape != "" && result.wellLandscape != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Well Landscape</div><div class="col-6">' + result.wellLandscape + '</div></div>');
            }
            if (result.platformName != "" && result.platformName != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Platform Name</div><div class="col-6">' + result.platformName + '</div></div>');
            }
            if (result.platformDimensions != "" && result.platformDimensions != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Platform Dimensions</div><div class="col-6">' + result.platformDimensions + '</div></div>');
            }
            if (result.waterDepth != "" && result.waterDepth != null && result.waterDepth != "m" && result.waterDepth != "ft") {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Water Depth</div><div class="col-6">' + result.waterDepth + '</div></div>');
            }
            if (result.airGap != "" && result.airGap != null && result.airGap != "m" && result.airGap != "ft") {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Air Gap</div><div class="col-6">' + result.airGap + '</div></div>');
            }
           
            if (result.wellheadToDatumLength != "" && result.wellheadToDatumLength != null && result.wellheadToDatumLength != "m" && result.wellheadToDatumLength != "ft") {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Wellhead to Datum Length</div><div class="col-6">' + result.wellheadToDatumLength + '</div></div>');
             $('[incline-data = "wd-ft"]').val(result.wellheadToDatumLength);
			}
            if (result.rkbToDatumLength != "" && result.rkbToDatumLength != null && result.rkbToDatumLength != "m" && result.rkbToDatumLength != "ft") {
                $(viewWell_cont).append('<div class="row"><div class="col-6">RKB to Datum Length</div><div class="col-6">' + result.rkbToDatumLength + '</div></div>');
            $('[incline-data = "rkb-msl-ft"]').val(result.rkbToDatumLength);
			}
            if (result.rkbfromDatumLength != "" && result.rkbfromDatumLength != null && result.rkbfromDatumLength != "m" && result.rkbfromDatumLength != "ft") {
                $(viewWell_cont).append('<div class="row"><div class="col-6">RKB from Datum Length</div><div class="col-6">' + result.rkbfromDatumLength + '</div></div>');
            }
       
            if (result.slotNo != "" && result.slotNo != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Slot No</div><div class="col-6">' + result.slotNo + '</div></div>');
            }
            if (result.platformSlotLocation != "" && result.platformSlotLocation != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Slot Location</div><div class="col-6">' + result.platformSlotLocation + '</div></div>');
            }
            if (result.platformSlotCoordinate != "" && result.platformSlotCoordinate != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Slot Location Co-ordinates</div><div class="col-6">' + result.platformSlotCoordinate + '</div></div>');
            }
            if (result.platformSlotCoordinateParameters != "" && result.platformSlotCoordinateParameters != null && result.platformSlotCoordinateParameters != '{"latitude":{"degrees":"","minutes":"","seconds":""},"longitude":{"degrees":"","minutes":"","seconds":""},"utm":{"utmEasting":"","utmNorthing":""}}') {
                var platformSlotCoordinateParameters = JSON.parse(result.platformSlotCoordinateParameters);
                $(viewWell_cont).append(
                    "<div class='row'><div class='col-6'>Slot Coordinate</div><div class='col-6'> Latitude: " +
                    (platformSlotCoordinateParameters.latitude.degrees != '' ? platformSlotCoordinateParameters.latitude.degrees : "-") +
                    "°" +
                    (platformSlotCoordinateParameters.latitude.minutes != '' ? platformSlotCoordinateParameters.latitude.minutes : "-") +
                    "'" +
                    (platformSlotCoordinateParameters.latitude.seconds != '' ? platformSlotCoordinateParameters.latitude.seconds : "-") +
                    "'' , Longitude: " +
                    (platformSlotCoordinateParameters.longitude.degrees != '' ? platformSlotCoordinateParameters.longitude.degrees : "-") +
                    "°" +
                    (platformSlotCoordinateParameters.longitude.minutes != '' ? platformSlotCoordinateParameters.longitude.minutes : "-") +
                    "'" +
                    (platformSlotCoordinateParameters.longitude.seconds != '' ? platformSlotCoordinateParameters.longitude.seconds : "-") +
                    "'<br> Easting: " +
                    (platformSlotCoordinateParameters.utm.utmEasting != '' ? platformSlotCoordinateParameters.utm.utmEasting : "-") +
                    " , Northing: " +
                    (platformSlotCoordinateParameters.utm.utmNorthing != '' ? platformSlotCoordinateParameters.utm.utmNorthing : "-") +
                    " </div></div>");
            }
            if (result.rigType != "" && result.rigType != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Rig Type</div><div class="col-6">' + result.rigType + '</div></div>');
            }
            if (result.rigName != "" && result.rigName != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Rig Name</div><div class="col-6">' + result.rigName + '</div></div>');
            }
            if (result.rigContractor != "" && result.rigContractor != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Rig Contractor</div><div class="col-6">' + result.rigContractor + '</div></div>');
            }
			 if (result.rigOperator != "" && result.rigOperator != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Rig Operator</div><div class="col-6">' + result.rigOperator + '</div></div>');
            }
			reference_type = result.referenceType;
			 if (result.referenceNumber != "" && result.referenceNumber != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Reference Number</div><div class="col-6">' + result.referenceNumber + '</div></div>');
            }
			reference_number = result.referenceNumber;
			operator_name = result.rigOperator;
            if (result.rigOnLocationDate != "" && result.rigOnLocationDate != null) {
            	var rigOnLocationDate = new Date(result.rigOnLocationDate);
            	if(rigOnLocationDate.getFullYear() != 1950){
                $(viewWell_cont).append('<div class="row"><div class="col-6">Rig on Location Date</div><div class="col-6">' + rigOnLocationDate + '</div></div>');
            }
            }
            if (result.rigAcceptanceDate != "" && result.rigAcceptanceDate != null) {
            	var rigAcceptanceDate = new Date(result.rigAcceptanceDate);
            	if(rigAcceptanceDate.getFullYear() != 1950){
            	$(viewWell_cont).append('<div class="row"><div class="col-6">Rig Acceptance Date</div><div class="col-6">' + rigAcceptanceDate + '</div></div>');
            }
            }
            if (result.rigOnWellDate != "" && result.rigOnWellDate != null) {
            	var rigOnWellDate = new Date(result.rigOnWellDate);
            	if(rigOnWellDate.getFullYear() != 1950){
                $(viewWell_cont).append('<div class="row"><div class="col-6">Rig on Well Date</div><div class="col-6">' + rigOnWellDate + '</div></div>');
            }
            }
            if (result.rigSpudDate != "" && result.rigSpudDate != null) {
            	var rigSpudDate = new Date(result.rigSpudDate);
            	if(rigSpudDate.getFullYear() != 1950){
                $(viewWell_cont).append('<div class="row"><div class="col-6">Rig Spud Date</div><div class="col-6">' + rigSpudDate + '</div></div>');
            }
            }
            if (result.drillingMode != "" && result.drillingMode != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Drilling Mode</div><div class="col-6">' + result.drillingMode + '</div></div>');
            }
            if (result.plannedMd != "" && result.plannedMd != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Planned MD</div><div class="col-6">' + result.plannedMd + wellUnitSelect + '</div></div>');
               $('[incline-data = "md-ft"]').val(result.plannedMd);
			}
           
            if (result.plannedTvd != "" && result.plannedTvd != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Planned TVD</div><div class="col-6">' + result.plannedTvd + wellUnitSelect + '</div></div>');
            $('[incline-data = "tvd-ft"]').val(result.plannedTvd);
			}
            if (result.plannedWellTime != "" && result.plannedWellTime != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Planned Well Time</div><div class="col-6">' + result.plannedWellTime + days + '</div></div>');
            }
            if (result.plannedWellCost != "" && result.plannedWellCost != null && result.plannedWellCost.trim() != result.currency) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Planned Well Cost</div><div class="col-6">' + result.plannedWellCost + '</div></div>');
            }
            if (result.actualMd != "" && result.actualMd != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Actual MD</div><div class="col-6">' + result.actualMd + wellUnitSelect +'</div></div>');
            }
            if (result.actualTvd != "" && result.actualTvd != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Actual TVD</div><div class="col-6">' + result.actualTvd + wellUnitSelect +'</div></div>');
            }
            if (result.actualWellTime != "" && result.actualWellTime != null) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Actual Well Time</div><div class="col-6">' + result.actualWellTime + days +'</div></div>');
            }
            if (result.actualWellCost != "" && result.actualWellCost != null && result.actualWellCost.trim() != result.currency) {
                $(viewWell_cont).append('<div class="row"><div class="col-6">Actual Well Cost</div><div class="col-6">' + result.actualWellCost + '</div></div>');
            }
          if(result.image_url != null){
			  if(result.image_url != ""){
				  company_image_url = result.image_url;
			  }
			  
		  }
            
            $('#z-viewWellTable-wrap').append(well_content_title.innerHTML);
            $('#z-viewWellTable-wrap').append(viewWell_cont.outerHTML);
            $('#z-viewWellTable-wrap').css('margin-left','20%');

            // main section
            $('.z-rightSection-active').removeClass('z-rightSection-active');
            $('#z-viewWell-wrap').addClass('z-rightSection-active');
            $('#z-vw-wellsDelete').attr('onclick', 'z_wellsDelete("' + wellId + '","' + projectId + '")');
        }
    });
}

// View User
function viewUser(email, fromSection_id) {
    var data = {
        clientId: clientId,
        userId: email
    }
    $.ajax({
        url: "/api/getUser",
        type: "GET",
        data: data,
        dataType: 'json',
        contentType: 'application/json;charset=UTF-8',
        success: function (result) {
            console.log(result);
            // main section
            $('.z-rightSection-active').removeClass('z-rightSection-active');
            $('#z-viewUser-wrap').addClass('z-rightSection-active');
            // Delete User
            $("#z-m-usersDelete").attr("onclick", "z_usersDelete('" + email + "')");
            $("#editUnamePopup-submitBtn").attr("onclick", "z_usersEdit('" + result.userId + "')");
            $("#resetPassPopup-submitBtn").attr("onclick", "z_usersPassword('" + result.userId + "')");

            var role;
            if (result.role == 'ROLE_WELL_ENGINEER') {
                role = 'Well Engineer';
            } else if (result.role == 'ROLE_WELL_MANAGER') {
                role = 'Well Manager';
            } else if (result.role == 'ROLE_OTHER_USER') {
                role = 'Other User';
            }
            $('#z-viewUserTable-wrap').html("");
            var viewUser_cont = document.createElement('div');
            viewUser_cont.classList = "container z-m-boxShadow z-vw-cont";
            $(viewUser_cont).append('<div class="row"><div class="col-6">First Name</div><div id="z-vu-name" class="col-6">' + result.firstName + '</div></div>');
            $(viewUser_cont).append('<div class="row"><div class="col-6">Last Name</div><div id="z-vu-lastname" class="col-6">' + result.lastName + '</div></div>');
            $(viewUser_cont).append('<div class="row"><div class="col-6">Mail ID</div><div id="z-vu-userId" class="col-6">' + result.userId + '</div></div>');
            $(viewUser_cont).append('<div class="row"><div class="col-6">Role</div><div class="col-6">' + role + '</div></div>');
            $('#z-viewUserTable-wrap').html(viewUser_cont);
        }
    });

}

// Password Hint
$('.z-modalOpenBtn').on('click', function () {
    $('.z-c-passwordInput').on('change', z_changePassword);
    $('#mu-oldEmail').val($('#z-vu-userId').html())
});

// Migrate User
$("#migrateUserPopup-submitBtn").click(function () {
    var oldUserId = $("#mu-oldEmail").val();
    var newUserId = $("#mu-newEmail").val();
    var password = $("#mu-pwd").val();
    var firstName = $("#mu-fname").val();
    var lastName = $("#mu-lname").val();
    var role = $("#z-vu-role").val();
    var data = {
        oldUserId: oldUserId,
        newUserId: newUserId,
        password: password,
        firstName: firstName,
        lastName: lastName,
        role: role
    }
    if ($("#migrateUsernameForm").valid() && !$("#mu-newEmail").siblings().is("#userExist")) {
        $.ajax({
            url: "/api/migrateUser",
            type: "GET",
            data: data,
            dataType: 'text',
            contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                var z_output = result.split(":")[0];
                if (z_output == "Success") {
                    $("#z-migrateUser-wrap").modal("hide");
                    $("#z-vu-name").html(firstName);
                    $("#z-vu-lastname").html(lastName);
                    $("#z-vu-userId").html(newUserId);
                    $('#migrateUsernameForm').trigger("reset");
                    alertPopup('success', "User Migrated Successfully");
                } else if (result.split(":")[1] == "Not found") {
                    alertPopup('alert', "User Not Found");
                } else {
                    alertPopup('alert', "User Migration Failed");
                }
            },
            error: function (result) {
                alertPopup('alert', "User Migration Failed");
            }
        });
    } else {
        popup("Please enter valid details");
    }
});

$('#z-migrateUser-wrap').on('hidden.bs.modal', function () {
    document.getElementById('migrateUsernameForm').reset();
    z_migrateUser_form.resetForm();

});

// To Notify user's License Status
$(document).ready(function () {
    var data = {
        clientId: clientId
    }
    $.ajax({
        url: "/api/getClients",
        type: "GET",
        data: data,
        dataType: 'json',
        contentType: 'application/json;charset=UTF-8',
        success: function (result) {
            console.log(result)
            var z_filteredClient = result.filter(function (item) {
                console.log(item.id);
                console.log(clientId);
                return item.id == clientId;
            });
            console.log(z_filteredClient);
            if (z_filteredClient[0].hasLicense == false) {
                console.log(z_filteredClient[0].hasLicense);
                alertPopup("alert", "Your License is not set");
            }
        }
    });
});

$(".z-clientLicense-Notify").click(function () {
    $(".z-clientLicense-Notify").hide();
});

// well input
function wiEditor(wellId, wellName, wellJson_data) {
    $("#z-wellInputback").attr("onclick", "z_wellInputClose('" + wellId + "')");
    $('.z-rightSection-active').removeClass('z-rightSection-active');
    $('#z-wi-Wrap').addClass('z-rightSection-active');
    $('#z-wi-wellInputSubmit').attr('data-wellId', wellId);
    $.ajax({
        url: "api/retrieveUnits",
        data: {
            wellId: wellId
        },
        type: "GET",
        dataType: 'text',
        success: function (unit_result) {
            $('#z-wellInputUnits').off('click').on('click', function () {
                z_wiUnitSection_active(wellId, wellName, unit_result);
            });
            $('#z-wellscheme-btn').off('click').on('click', function () {
                wellScheme_wellUpdate(wellId);
            });
            $('#z-wellScheme-timeEstimation').off('click').on('click', function () {
                wellScheme_timeEstimation(wellId);
            });
        },
        error: function (result) {
            console.log(result);
        }
    });

    $.ajax({
        url: "api/getTemplate",
        data: {
            wellId: wellId,
            id: ""
        },
        type: "GET",
        dataType: 'json',
        contentType: 'application/json;charset=UTF-8',
        success: function (template_result) {
            console.log(template_result);
            var template_Level = template_result[0].templateLevel;
            var default_colwidth = [40, 200, 40, 40, 70, 100, 110, 70, 60, 80, 80, 70];
            if (template_Level > 1) {
                for (i = 1; i < template_Level; i++)
                    default_colwidth.splice(2, 0, 200);
            }



            $('#z-wi-wellInputSubmit').attr('data-wellInputLevel', template_Level);
            wi_addLevel(wellJson_data, template_Level);
        },
        error: function (result) {
            console.log(result);
        }
    });
}

function wellinput_active(wellId, wellName, wellType, wellLandscape, templatePage) {
    // 
    if (wellType != "undefined" && wellLandscape != "undefined") {
        $.ajax({
            url: "/api/canAccessWell",
            type: "POST",
            data: {
                wellId: wellId,
                userId: userId
            },
            dataType: 'text',
            success: function (canAccessWell_result) {
                console.log(canAccessWell_result);
                if (canAccessWell_result == "true") {
                    $.ajax({
                        url: "/api/getWellInput",
                        type: "GET",
                        data: {
                            wellId: wellId
                        },
                        dataType: 'json',
                        contentType: 'application/json;charset=UTF-8',
                        success: function (getWellInput_result) {
                            templatePage ? document.getElementById('z-levelTemplate-save').classList.add('d-none') : document.getElementById('z-levelTemplate-save').classList.remove('d-none');
                            console.log(getWellInput_result);
                            $.ajax({
                                url: "/api/lockWellInput",
                                type: "POST",
                                data: {
                                    wellId: wellId,
                                    userId: userId
                                },
                                dataType: 'text',
                                success: function (lockWellInput_result) {
                                    if (lockWellInput_result.split(":")[1] == "Error") {
                                        alertPopup('alert', "Well input not found");
                                        z_wellInputClose(wellId);
                                    }
                                    /*--- Ping Well Input ---*/
                                    ping(wellId);

                                },
                                error: function (lockWellInput_result) {
                                    alertPopup('alert', "Error in accessing the well input");
                                    z_wellInputClose(wellId);
                                    console.log(lockWellInput_result);
                                }
                            });
                            if (getWellInput_result != "" && !templatePage) {
                                wiEditor(wellId, wellName, getWellInput_result);
                            } else {
                                $.ajax({
                                    url: "api/retrieveUnits",
                                    data: {
                                        wellId: wellId
                                    },
                                    type: "GET",
                                    dataType: 'text',
                                    success: function (unit_result) {
                                        if (unit_result == "false") {
                                            z_wiUnitSection_active(wellId, wellName, unit_result, wellType, wellLandscape);
                                        } else {
                                            $.ajax({
                                                url: "api/getTemplate",
                                                data: {
                                                    wellId: wellId,
                                                    id: ""
                                                },
                                                type: "GET",
                                                dataType: 'json',
                                                contentType: 'application/json;charset=UTF-8',
                                                success: function (template_result) {
                                                    if (template_result.length != 0) {
                                                        z_templeteJson_data = JSON.parse(template_result[0].template);
                                                        subphases_data(template_result[0].wellCategory);
                                                        if (template_result[0].isArchieved == true && !templatePage) {
                                                            wiEditor(wellId, wellName, getWellInput_result);
                                                        } else {
                                                            var levelValue = template_result[0].templateLevel;
                                                            var baseTemplateId = template_result[0].baseTemplateId;
                                                            var baseTemplateName = template_result[0].baseTemplateName;
                                                            var selected_wellCategory = template_result[0].wellCategory;
                                                            z_wi_levelTemplateEditor(wellId, wellName, unit_result, levelValue, baseTemplateId, baseTemplateName, z_templeteJson_data, wellType, wellLandscape);
                                                        }
                                                    } else {
                                                        z_wiSelectLevelSection_active(wellId, wellName, unit_result, wellType, wellLandscape);
                                                    }
                                                },
                                                error: function (template_result) {
                                                    console.log(template_result);
                                                }
                                            });
                                        }
                                    },
                                    error: function (unit_result) {
                                        console.log(unit_result);
                                    }
                                });
                            }
                        },
                        error: function (getWellInput_result) {
                            console.log(getWellInput_result);
                        }
                    });
                } else if (canAccessWell_result == "false") {
                    alertPopup('alert', "Already Someone Accessing the well now");
                } else if (canAccessWell_result.split(":")[1] == "Not found") {
                    alertPopup('alert', "Well Not found");
                } else {
                    alertPopup('alert', "Error in Accessing the well");
                }
            },
            error: function (canAccessWell_result) {
                console.log(canAccessWell_result);
            }
        });
    } else {
        alertPopup('alert', "Well Type Missing");
    }

}

// PingWellInput
function ping(wellId) {
    $.ajax({
        url: "/api/pingWellInput",
        type: "POST",
        data: {
            wellId: wellId,
            userId: userId
        },
        dataType: 'text',
        success: function (result) {
            setTimeout("setToBlack('" + wellId + "')", 160000);
            console.log(result);
        },
        error: function (result) {
            console.log(result);
        }
    });
}

function setToBlack(wellId) {
    if ($("#z-wi-Wrap").hasClass('z-rightSection-active')) {
        ping(wellId);
    } else {
        console.log("no ping");
        z_wellInputClose("'" + wellId + "'");
    }
}

// WellInput Back Button
function z_wellInputClose(wellId) {
    $.ajax({
        url: "/api/unlockWellInput",
        type: "POST",
        data: {
            wellId: wellId,
            userId: userId
        },
        dataType: 'text',
        success: function (result) {
            if (result.split(":")[0] == "Success") {
                $('#z-wi-uploadInput').val("");
                $('.z-unittable-contActive').removeClass('z-unittable-contActive');
                if (wellStatus == "true") {
                    z_wellsSection_active(false, false, "oldwell");
                } else {
                    z_wellsSection_active(false, false, "newwell");
                }
                setTimeout("setToBlack('" + wellId + "')", 2000);
            } else if (result.split(":")[0] == "Error") {
                console.log("Not found");
            }
        },
        error: function (result) {
            console.log(result);
        }
    });
}

function wellinput_upload() {

    var formData = new FormData($('#z-wi-uploadInputForm')[0]);
    $.ajax({
        url: '/api/readWellInputCSVFile',
        data: formData,
        async: false,
        contentType: false,
        processData: false,
        cache: false,
        type: 'POST',
        success: function (result) {
            console.log(result);
            $('#z-wi-uploadInput').val("");
            $('#z-wellInputTable').html("");
            $('#z-wellInputTable').jexcel({
                // Full CSV URL
                data: result,
                // Use the first row of your CSV as the headers
                // csvHeaders:true,
                // Headers
                colWidths: [40, 120, 120, 200, 40, 40, 70, 100, 110, 70, 60, 80, 80, 70],
            });
        },
        error: function (result) {
            console.log(result);
            alertPopup('alert', "The File should be in specfied format");
        }
    });

}

function wellInput_submit() {
    for (var i = 0; i < finalLevel_data.length; i++) {
        var level_md = document.getElementsByClassName("level-md")[i].value;
        var level_tvd = document.getElementsByClassName("level-tvd")[i].value;
        var level_Hours = document.getElementsByClassName("level-Hours")[i].value;
        if (level_md || level_tvd || level_Hours) {
            console.log("in");
            finalLevel_data[i].md = level_md;
            finalLevel_data[i].tvd = level_tvd;
            finalLevel_data[i].hours_taken_for_operation = level_Hours;
        } else {
            console.log("out");
        }
    }
    var wellInputJson = JSON.stringify(z_wiJson_data);
    var wellId = $('#z-wi-wellInputSubmit').attr('data-wellId');
    var wellInputLevel = $('#z-wi-wellInputSubmit').attr('data-wellInputLevel');
    var data = {
        wellInputJson: wellInputJson,
        wellId: wellId,
        wellInputLevel: wellInputLevel
    };
    $.ajax({
        url: "/api/addWellInput",
        type: "POST",
        data: JSON.stringify(data),
        dataType: 'text',
        contentType: 'application/json;charset=UTF-8',
        success: function (result) {
            console.log(result);
            if (result.split(":")[0] == "Success") {
                $.ajax({
                    url: "/api/unlockWellInput",
                    type: "POST",
                    data: {
                        wellId: wellId,
                        userId: userId
                    },
                    dataType: 'text',
                    success: function (result) {
                        $('#z-wi-uploadInput').val("");
                        $('#z-wellInputTable').val("");
                        $('.z-unittable-contActive').removeClass('z-unittable-contActive');
                        if (wellStatus == "true") {
                            z_wellsSection_active(false, false, "oldwell");
                        } else {
                            z_wellsSection_active(false, false, "newwell");
                        }
                        setTimeout("setToBlack('" + wellId + "')", 2000);
                    },
                    error: function (result) {
                        console.log(result);
                    }
                });
            } else {
                alertPopup('alert', "Well Input Not Found");
            }
        },
        error: function (result) {
            console.log(result);
            if (wellStatus == "true") {
                z_wellsSection_active(false, false, "oldwell");
            } else {
                z_wellsSection_active(false, false, "newwell");
            }
        }
    });
}

function z_downloadWellInputs() {
    if ($('#z-wellInputTable .jexcel').length != 0) {
        $('#z-wellInputTable').jexcel('download');
    } else {
        alertPopup('alert', "Nothing to download");
    }
}

// view profile
function z_profileSection_active(z_navbarToggle, clearform) {
    if (z_navbarToggle) {
        userNavbar_toggle();
    }

    if (!$('#z-profile-wrap').hasClass('z-rightSection-active')) {

        var data = {
            clientId: clientId
        }
        $.ajax({
            url: "/api/getClients",
            type: "GET",
            data: data,
            dataType: 'json',
            contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                console.log(result)
                var z_filteredClient = result.filter(function (item) {
                    console.log(item.id);
                    console.log(clientId);
                    return item.id == clientId;
                });
                console.log(z_filteredClient);
                if (z_filteredClient[0]) {
                    $('#z-pfl-email').val(z_filteredClient[0].emailId);
                    $('#z-pfl-company').val(z_filteredClient[0].name);
                    $('#z-pfl-country2').val(z_filteredClient[0].country);
                    $('#z-pfl-noOfUsers').val(z_filteredClient[0].noOfUsers);
                    $('#z-pfl-noOfWells').val(z_filteredClient[0].noOfWells);
                    $('#z-pfl-noOfProjects').val(z_filteredClient[0].noOfProjects);
                    $('#z-pfl-req-noOfUsers').val(z_filteredClient[0].requestedUsers);
                    $('#z-pfl-req-noOfWells').val(z_filteredClient[0].requestedWells);
                    $('#z-pfl-noOfCurrentWells').val(z_filteredClient[0].noOfCurrentWells);
                    $('#z-pfl-noOfCurrentWellManagers').val(z_filteredClient[0].noOfCurrentWellManagers);
                    $('#z-pfl-noOfCurrentWellEngineers').val(z_filteredClient[0].noOfCurrentWellEngineers);
                    $('#z-pfl-noOfCurrentOtherUsers').val(z_filteredClient[0].noOfCurrentOtherUsers);
                }

                // main section
                $('.z-rightSection-active').removeClass('z-rightSection-active');
                $('#z-profile-wrap').addClass('z-rightSection-active');

                // navbar
                $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
                $('#z-un-profile').addClass('z-sn-sectionLink-active');
            }
        });
    }
}

// Well Manager selection
$(document).ready(function () {
    // Initialize select2
    $("#z-cp-wellManager").select2();
    $("#wellEngineer").select2();
});

// user password reset
var resetPassForm;
$(document).ready(function () {
    resetPassForm = $("#resetPassForm").validate({
        rules: {
            newPassword: {
                required: true,
                only: true,
                minlength: 8
            },
            confirmPassword: {
                required: true,
                only: true,
                minlength: 8,
                equalTo: "#newPassword"
            },
            messages: {
                newPassword: {
                    required: "This field is required",
                    only: "Password should contain A-Z, a-z, 0-9, and a special character"
                },
                confirmPassword: {
                    required: "This field is required",
                    only: "Password Mismatch"
                }
            }
        },
        errorClass: "error",
        errorElement: 'label',
        errorPlacement: function (error, element) {
            var placement = $(element).data('error');
            if (placement) {
                $(placement).append(error)
            } else {
                error.appendTo(element.parent(".col"));
            }
        },
    });
});

$('#z-resetPass-popup').on('hidden.bs.modal', function () {
    var form = document.getElementById("resetPassForm");
    form.reset();
    $("#resetPassForm label").remove();
});

// Delete Project
function z_projectsDelete(projectId, noOfWells) {
    var projectId = projectId;
    var data = {
        clientId: clientId,
        projectId: projectId
    }
    if (noOfWells == 0) {
        confirmation_Popup("Are you sure want to Delete this Project", function () {
            $.ajax({
                url: "/api/deleteProject",
                type: "GET",
                data: data,
                dataType: 'text',
                success: function (result) {
                    console.log("Project Deleted :" + result);
                    clearConfirmationPopup();
                    var z_output = result.split(":")[1];
                    if (z_output == "Done") {
                        alertPopup('success', "Project Deleted Successfully");
                    } else {
                        alertPopup('alert', "Access Denied");
                    }
                    setTimeout(function () {
                        z_projectsSection_active(false, false);
                    }, 2000);
                },
                error: function (result) {
                    console.log("Error");
                    clearConfirmationPopup();
                }
            });
        });
    } else {
        alertPopup("alert", "Please Delete the Well before Deleting the project");
    }
}

// Delete Wells
function z_wellsDelete(wellId, projectId) {
    confirmation_Popup("Deleting well details will remove all well data. Do you still want to delete?", function () {
        var data = {
            clientId: clientId,
            projectId: projectId,
            wellId: wellId
        }
        $.ajax({
            url: "/api/deleteWell",
            type: "GET",
            data: data,
            dataType: 'text',
            success: function (result) {
                clearConfirmationPopup();
                if($('#z-sideNavbar-afe').hasClass('z-sideNavbar-active')){
                	sideNavbar_toggle_afe();
                }
                console.log("Well Deleted :" + result);
                if (result.split(":")[0] == "Error") {
                    alertPopup('alert', result.split(":")[1]);
                } else if (result.split(":")[0] == "Success") {
                    alertPopup('success', "Well Deleted Successfully");
                }
                setTimeout(function () {
                    if (wellStatus == "true") {
                        z_wellsSection_active(false, false, "oldwell");
                    } else {
                        z_wellsSection_active(false, false, "newwell");
                    }
                }, 2000);
            },
            error: function (result) {
                console.log(result);
                clearConfirmationPopup();
                if (result.split(":")[0] == "Error") {
                    alertPopup('alert', result.split(":")[1]);
                }
                setTimeout(function () {
                    z_wellsSection_active(false, false);
                }, 2000)
            }
        });
    });
}

// User Delete
function z_usersDelete(email) {
    confirmation_Popup("Are you sure want to Delete this User", function () {
        var data = {
            clientId: clientId,
            userId: email
        }
        $.ajax({
            url: "/api/deleteUser",
            type: "GET",
            data: data,
            dataType: 'text',
            success: function (result) {
                console.log("User Deleted :" + result);
                clearConfirmationPopup();
                if (result.split(":")[0] == "Error") {
                    alertPopup('alert', result.split(":")[1]);
                } else if (result.split(":")[0] == "Success") {
                    alertPopup('success', "User Deleted Successfully");
                }
                setTimeout(function () {
                    z_usersSection_active(false, false);
                }, 2000);
            },
            error: function (result) {
                console.log(result);
                clearConfirmationPopup();
            }
        });
    });
}

// Edit user name
var editUsernameForm;
$(document).ready(function () {
    editUsernameForm = $("#editUsernameForm").validate({
        rules: {
            new_u_name: {
                required: true,
                lettersonly: true
            },
            new_u_lastname: {
                required: true,
                lettersonly: true
            }
        },
        errorClass: "error",
        errorElement: 'label',
        errorPlacement: function (error, element) {
            var placement = $(element).data('error');
            if (placement) {
                $(placement).append(error)
            } else {
                error.appendTo(element.parent(".col"));
            }
        }
    });
});

function getusername() {
    document.getElementById("new-u-name").value = document.getElementById("z-vu-name").innerHTML;
    document.getElementById("new-u-lastname").value = document.getElementById("z-vu-lastname").innerHTML;
}

$('#z-editUserName-popup').on('hidden.bs.modal', function () {
    $("#editUsernameForm label").remove();
    $('#new-u-name').removeClass('error');
    $('#new-u-lastname').removeClass('error');
});

/*--- Edit User Submit (Start)----*/
function z_usersEdit(id) {
    var usrId = id;
    var firstName = $("#new-u-name").val();
    var lastName = $("#new-u-lastname").val();
    var data = {
        userId: usrId,
        firstName: firstName,
        lastName: lastName
    };
    if ($("#editUsernameForm").valid()) {
        $.ajax({
            url: "/api/updateUser",
            type: "POST",
            data: JSON.stringify(data),
            dataType: 'text',
            contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                console.log(result);
                $("#z-vu-name").val(firstName);
                $("#z-vu-lastname").val(lastName);
                if (result.split(":")[1] == "Done") {
                    alertPopup('success', "User Updated Successfully");
                } else {
                    alertPopup('alert', "Not found");
                }
                $('#z-editUserName-popup').modal("hide");
            },
            error: function (result) {
                console.log(result);
            }
        });
    }
}
/*--- Edit User Submit (End)----*/

/*---- Reset PassWord(Start)----*/
function z_usersPassword(id) {
    var usrId = id;
    var pass = $("#newPassword").val();
    var cnfmPass = $("#confirmPassword").val();
    if ($("#resetPassForm").valid()) {
        var data = {
            userId: usrId,
            password: pass
        };
        $.ajax({
            url: "/api/updateUserCredential",
            type: "POST",
            data: data,
            dataType: 'text',
            success: function (result) {
                console.log(result);
                var form = document.getElementById("resetPassForm");
                if (result.split(":")[1] == "Done") {
                    alertPopup('success', "Password Updated Successfully");
                } else {
                    alertPopup('alert', "User Not found");
                }
                $('#z-resetPass-popup').modal("hide");
            },
            error: function (result) {
                console.log(result);
            }
        });
    }
}

/*---- Reset PassWord(End)----*/

/* Request well modal popup show */

function z_requestWell_active(z_navbarToggle) {
    if (z_navbarToggle) {
        sideNavbar_toggle();
    }
    $("#numOfWells").val(0);
    $('#wellRequestPopup').modal('show');
}

/* Request well submit */
function requestwell_submit() {
    var noOfWells = $("#numOfWells").val();
    var req_wellType = $('#req-wellType').val();
    if (noOfWells >= 1 && req_wellType) {
        $('#wellRequestPopup').modal('hide');
        var data = {
            clientId: clientId,
            userId: userEmail,
            noOfWells: noOfWells
        };
        var ajax_url = req_wellType == "newWell" ? "/api/requestedWell" : "/api/requestedOldWell";
        call_ajax(ajax_url, "POST", data, 'text', '', true, function (requested_result) {
            if (requested_result.data.split(":")[0] == "Success") {
                console.log(requested_result.data);
                alertPopup('success', "well request added Successfully");
            } else {
                console.log(requested_result.data);
                alertPopup('alert', "well request Failed");
            }
        });
    } else {
        popup("Please enter valid input");
    }
}

// well request TYPE
function wr_wellType() {
    var wr_wellType = document.getElementById("req-wellType").value;
    if (wr_wellType == "oldWell") {
        document.getElementById("numOfWells").value = 25;
    } else {
        document.getElementById("numOfWells").value = 0;
    }
}

/* License Update selection */
function z_licenseUpdate(z_navbarToggle) {
    if (z_navbarToggle) {
        userNavbar_toggle();
    }

    if (!$('#updateLicense').hasClass('z-rightSection-active')) {
        var data = {
            clientId: clientId
        }
        call_ajax("/api/getClients", "GET", data, 'json', 'application/json;charset=UTF-8', false, function (getClients_result) {
            if (getClients_result.status == "success") {
                var getClients_result_data = getClients_result.data[0];
                document.getElementById('ul-typeOfLicense').value = -1;
                //Purchased
                document.getElementById('p-numOfActiveUser').value = getClients_result_data.noOfUsers;
                document.getElementById('p-numOfWellManager').value = getClients_result_data.noOfWellManager;
                document.getElementById('p-numOfWellEngineer').value = getClients_result_data.noOfWellEngineer;
                document.getElementById('p-numOfOtherUsers').value = getClients_result_data.noOfOtherUser;
                //Used
                document.getElementById('u-numOfActiveUser').value = getClients_result_data.noOfUsers;
                document.getElementById('u-numOfWellManager').value = getClients_result_data.noOfCurrentWellManagers;
                document.getElementById('u-numOfWellEngineer').value = getClients_result_data.noOfCurrentWellEngineers;
                document.getElementById('u-numOfOtherUsers').value = getClients_result_data.noOfCurrentOtherUsers;
                //Licensed
                document.getElementById('numOfActiveUserMultiple').value = -1;
                document.getElementById('numOfActiveUser').value = 0;
                document.getElementById('numOfWellManager').value = 0;
                document.getElementById('numOfWellEngineer').value = 0;
                document.getElementById('numOfOtherUsers').value = 0;
                $('#updateLicense').modal('show');
                $('#updateLicensePopup-submitBtn').off('click').on('click', function () {
                    updateLicense_submit(getClients_result_data.noOfUsers, getClients_result_data.noOfWellManager, getClients_result_data.noOfWellEngineer, getClients_result_data.noOfOtherUser);
                });
            }
        });

    }
}

function updateLicense_submit(old_noOfUsers, old_noOfWellManager, old_noOfWellEngineer, old_noOfOtherUser) {
    numOfActiveUserMultiple
    var typeOfLicense = $("#ul-typeOfLicense").val();
    var numOfActiveUser = typeOfLicense == "multiple" ? parseInt($('#numOfActiveUserMultiple').val()) : parseInt($('#numOfActiveUser').val());
    var numOfWellManager = parseInt($('#numOfWellManager').val());
    var numOfWellEngineer = parseInt($('#numOfWellEngineer').val());
    var numOfOtherUsers = parseInt($('#numOfOtherUsers').val());
    if ($('#licenseUpdateForm').valid() && typeOfLicense && numOfActiveUser && numOfWellManager && numOfWellEngineer && numOfOtherUsers) {
        if (old_noOfUsers != numOfActiveUser || old_noOfWellManager != numOfWellManager && old_noOfWellEngineer != numOfWellEngineer && old_noOfOtherUser != numOfOtherUsers) {
            var updatedLicenseData = {
                userId: userEmail,
                clientId: clientId,
                typeOfLicense: typeOfLicense,
                noOfUsers: numOfActiveUser,
                noOfWellManager: numOfWellManager,
                noOfWellEngineer: numOfWellEngineer,
                noOfOtherUser: numOfOtherUsers
            }
            $('#updateLicense').modal('hide');
            call_ajax("/api/RequestLicenseUpdate", "POST", updatedLicenseData, 'text', '', true, function (requestLicenseUpdate_result) {
                if (requestLicenseUpdate_result.status == "success") {
                    $('#updateLicense').modal('hide');
                    console.log(getClients_result.result);
                    alertPopup('success', "License request has been sent successfully");
                    document.getElementById('licenseUpdateForm').reset();
                    updateLicense.resetForm();
                } else {
                    alertPopup('alert', "License request failed");
                    console.log(requestLicenseUpdate_result.result);
                }
            });
        } else {
            popup("There is no change in the License");
        }
    } else {
        console.log("error");
    }
}

function updateLicense_cancel() {
    $('#updateLicense').modal('hide');
    document.getElementById('licenseUpdateForm').reset();
    updateLicense.resetForm();
}

/* change the dropdown content unit list */

function unitsListChange() {
    $('.z-unittable-contActive').removeClass('z-unittable-contActive');
    if ($("#z-unitsList").val() == "si") {
        $('#siList').addClass('z-unittable-contActive');
        $('#z-wiUnits-submit').removeClass('z-unittable-cont');
    } else if ($("#z-unitsList").val() == "api") {
        $('#apiList').addClass('z-unittable-contActive');
        $('#z-wiUnits-submit').removeClass('z-unittable-cont');
    } else if ($("#z-unitsList").val() == "mixedapi") {
        $('.z-hint-text').addClass('z-unittable-contActive');
        $('#z-wiUnits-submit').addClass('z-unittable-cont');
        var masterApi = "mixedApiUnit";
        data = {
            masterApi: masterApi
        }

        $.ajax({
            url: "api/retrieveWellUnits",
            data: data,
            type: "GET",
            dataType: 'text',
            success: function (result) {
                console.log(result);
                var array = JSON.parse(result);
                if (!array.length == 0) {
                    $('#z-ru-depthLenght').val(array[0].depth);
                    $('#z-ru-Diameter').val(array[0].diameter);
                    $('#z-ru-MudWeight').val(array[0].mudWeight);
                    $('#z-ru-Volume').val(array[0].volume);
                    $('#z-ru-DrillingRate').val(array[0].drillingRate);
                    $('#z-ru-GeneralWeights').val(array[0].generalWeights);
                    $('#z-ru-StringWeight').val(array[0].stringWeight);
                    $('#z-ru-Torque').val(array[0].torque);
                    $('#z-ru-Pressure').val(array[0].pressure);
                    $('#z-ru-FlowRate').val(array[0].flowRate);
                    $('#z-ru-PumpOutput').val(array[0].pumpOutput);
                    $('#z-ru-Displacement').val(array[0].displacement);
                    $('#z-ru-JetVelocity').val(array[0].jetVelocity);
                    $('#z-ru-depthVelocity').val(array[0].velocity);
                    $('#z-ru-RIHPOOHSpeed').val(array[0].rihAndPoohSpeed);
                    $('#z-ru-RIHPOOHTime').val(array[0].rihAndPoohTime);
                    $('#mixedApiList').addClass('z-unittable-contActive');
                    $('#z-wiUnits-submit').removeClass('z-unittable-cont');
                } else {
                    $('#mixedApiList').removeClass('z-unittable-contActive');
                }
            },
            error: function (result) {
                console.log(result);
            }
        });
    }
}

/* settings unit list selection */
function z_SettingsSection_active(z_navbarToggle) {
    if (z_navbarToggle) {
        userNavbar_toggle();
    }
    if (!$('#z-settings-Change').hasClass('z-rightSection-active')) {
        // main section
        $('.z-rightSection-active').removeClass('z-rightSection-active');
        $('#z-settings-Change').addClass('z-rightSection-active');

        // navbar
        $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
        $('#z-un-settings').addClass('z-sn-sectionLink-active');
    }
}

function z_wiUnitSection_active(wellId, wellName, result, wellType, wellLandscape) {
    // if (!$('#z-wiUnits-Wrap').hasClass('z-rightSection-active')) {
    $('.z-unittable-contActive').removeClass('z-unittable-contActive');
    $('#mixedApiList').attr('mixed-wellId', wellId);
    $('#userapi').attr('mixed-userId', userId);
    $('#unitList-submitBtnMixedApi').attr('unit-submit', wellId);
    $('#unitList-submitBtnMixedApi').attr('unitsubmit-wellId', wellId);
    // $('#z-wiUnits-back').off('click').on('click', function () {
    //     z_wellInputClose(wellId);
    // });
    if (result == "false") {
        $('#z-wiUnits-submit').attr('data-wellId', wellId);
        $('#z-wiUnits-submit').attr('data-wellName', wellName);
        $('#z-wiUnits-submit').attr('data-wellType', wellType);
        $('#z-wiUnits-submit').attr('data-wellLandscape', wellLandscape);
        $('#z-wiUintsOptions').empty();
        $('#z-wiUintsOptions').append('<div class="z-units-wrap z-margin-topProperty">' +
            '<div class="z-main-dropDown">' +
            '<div class="z-m-input-field">' +
            '<select class="z-m-input" id="z-unitsList" onChange="unitsListChange()" name="selectUnits">' +
            '<option disabled="disabled" selected="selected">Select Units</option>' +
            '<option value="si">SI Units</option>' +
            '<option value="api">API Units</option>' +
            '<option value="mixedapi">Mixed API Units</option>' +
            '</select>' +
            '<div class="z-m-input-after"></div>' +
            '</div>' +
            '</div>' +
            '</div>');
        $('.z-unittable-cont').addClass('z-unittable-contActive');
        $('#z-wiUnits-submit').show();
        unitsListChange();
    } else {
        $('#z-wiUintsOptions').empty();
        $('#z-wiUintsOptions').append('<div class="z-units-wrap z-margin-topProperty">' +
            '<div class="z-main-dropDown">' +
            '<div class="z-m-input-field">' +
            '<select class="z-m-input" id="z-unitsList" onChange="unitsListChange()" name="selectUnits">' +
            '<option disabled="disabled" selected="selected">Select Units</option>' +
            '<option value="si">SI Units</option>' +
            '<option value="api">API Units</option>' +
            '<option value="mixedapi">Mixed API Units</option>' +
            '</select>' +
            '<div class="z-m-input-after"></div>' +
            '</div>' +
            '</div>' +
            '</div>');
        $('#z-unitsList').val(result);
        $("#z-unitsList").attr("disabled", "disabled");
        $('.z-unittable-cont').addClass('z-unittable-contActive');
        $('#z-wiUnits-submit').hide();
        unitsListChange();
    }
    // main section
    // $('.z-rightSection-active').removeClass('z-rightSection-active');
    // $('#z-wiUnits-Wrap').addClass('z-rightSection-active');
    $('#z-wiUnits-submit').addClass('z-unittable-cont');
    // }
}

function wiUnits_submit() {
    var selected_wiUnit = $('#z-unitsList').val();
    var wellId = $('#z-wiUnits-submit').attr('data-wellId');
    var wellName = $('#z-wiUnits-submit').attr('data-wellName');
    var wellType = $('#z-wiUnits-submit').attr('data-wellType');
    var wellLandscape = $('#z-wiUnits-submit').attr('data-wellLandscape');
    var data;
    if (selected_wiUnit == "si") {
        /* view submit Si */
        var unitSelect = "si";
        var depth = $('#z-si-DepthLength').val();
        var diameter = $('#z-si-Diameter').val();
        var mudWeight = $('#z-si-MudWeight').val();
        var volume = $('#z-si-metercube').val();
        var drillingRate = $('#z-si-DrillingRate').val();
        var generalWeights = $('#z-si-GeneralWeights').val();
        var stringWeight = $('#z-si-StringWeight').val();
        var torque = $('#z-si-Torque').val();
        var pressure = $('#z-si-Pressure').val();
        var flowRate = $('#z-si-FlowRate').val();
        var pumpOutput = $('#z-si-PumpOutput').val();
        var displacement = $('#z-si-Displacement').val();
        var jetVelocity = $('#z-si-JetVelocity').val();
        var velocity = $('#z-si-Velocity').val();
        var rihAndPoohSpeed = $('#z-si-RIHPOOHHour').val();
        var rihAndPoohTime = $('#z-si-RIHPOOHTime').val();

        data = {
            unitSelect: unitSelect,
            depth: depth,
            wellId: wellId,
            diameter: diameter,
            mudWeight: mudWeight,
            volume: volume,
            drillingRate: drillingRate,
            generalWeights: generalWeights,
            stringWeight: stringWeight,
            torque: torque,
            pressure: pressure,
            flowRate: flowRate,
            pumpOutput: pumpOutput,
            displacement: displacement,
            jetVelocity: jetVelocity,
            velocity: velocity,
            rihAndPoohSpeed: rihAndPoohSpeed,
            rihAndPoohTime: rihAndPoohTime
        }
    } else if (selected_wiUnit == "api") {
        /* view submit Api */
        var unitSelect = "api";
        var depth = $('#z-api-DepthLength').val();
        var diameter = $('#z-api-Diameter').val();
        var mudWeight = $('#z-api-MudWeight').val();
        var volume = $('#z-api-Volume').val();
        var drillingRate = $('#z-api-DrillingRate').val();
        var generalWeights = $('#z-api-GeneralWeights').val();
        var stringWeight = $('#z-api-StringWeight').val();
        var torque = $('#z-api-Torque').val();
        var pressure = $('#z-api-Pressure').val();
        var flowRate = $('#z-api-FlowRate').val();
        var pumpOutput = $('#z-api-PumpOutput').val();
        var displacement = $('#z-api-Displacement').val();
        var jetVelocity = $('#z-api-JetVelocity').val();
        var velocity = $('#z-api-Velocity').val();
        var rihAndPoohSpeed = $('#z-api-RIHPOOHSpeed').val();
        var rihAndPoohTime = $('#z-api-RIHPOOHTime').val();

        data = {
            unitSelect: unitSelect,
            depth: depth,
            wellId: wellId,
            diameter: diameter,
            mudWeight: mudWeight,
            volume: volume,
            drillingRate: drillingRate,
            generalWeights: generalWeights,
            stringWeight: stringWeight,
            torque: torque,
            pressure: pressure,
            flowRate: flowRate,
            pumpOutput: pumpOutput,
            displacement: displacement,
            jetVelocity: jetVelocity,
            velocity: velocity,
            rihAndPoohSpeed: rihAndPoohSpeed,
            rihAndPoohTime: rihAndPoohTime
        }
    } else if (selected_wiUnit == "mixedapi") {
        /* view submit Mixed api  */
        var unitSelect = "mixedapi";
        var depth = $('#z-ru-depthLenght').val();
        var diameter = $('#z-ru-Diameter').val();
        var mudWeight = $('#z-ru-MudWeight').val();
        var volume = $('#z-ru-Volume').val();
        var drillingRate = $('#z-ru-DrillingRate').val();
        var generalWeights = $('#z-ru-GeneralWeights').val();
        var stringWeight = $('#z-ru-StringWeight').val();
        var torque = $('#z-ru-Torque').val();
        var pressure = $('#z-ru-Pressure').val();
        var flowRate = $('#z-ru-FlowRate').val();
        var pumpOutput = $('#z-ru-PumpOutput').val();
        var displacement = $('#z-ru-Displacement').val();
        var jetVelocity = $('#z-ru-JetVelocity').val();
        var velocity = $('#z-ru-depthVelocity').val();
        var rihAndPoohSpeed = $('#z-ru-RIHPOOHSpeed').val();
        var rihAndPoohTime = $('#z-ru-RIHPOOHTime').val();

        data = {
            unitSelect: unitSelect,
            depth: depth,
            wellId: wellId,
            diameter: diameter,
            mudWeight: mudWeight,
            volume: volume,
            drillingRate: drillingRate,
            generalWeights: generalWeights,
            stringWeight: stringWeight,
            torque: torque,
            pressure: pressure,
            flowRate: flowRate,
            pumpOutput: pumpOutput,
            displacement: displacement,
            jetVelocity: jetVelocity,
            velocity: velocity,
            rihAndPoohSpeed: rihAndPoohSpeed,
            rihAndPoohTime: rihAndPoohTime
        }
    } else {
        console.log("select");
    }
    if (data) {
        $.ajax({
            url: "api/submitWellUnits",
            data: data,
            type: "POST",
            dataType: 'text',
            success: function (result) {
                console.log(result);
                alertPopup('success', "Submitted");
                $("#z-unitsList").attr("disabled", "disabled");
                // $('#z-wi-unit').val(retrieveUnits_result_data);
                // z_wiSelectLevelSection_active(wellId, wellName, selected_wiUnit, wellType, wellLandscape);
            },
            error: function (result) {
                console.log(result);
            }
        });
    }
}

/* settings unit-Mixed API units selection */

function z_edit_mixedApiUnits(retrieveUnits) {

    if (!$('#z-allUnits-wrap').hasClass('z-rightSection-active')) {
        // main section
        $('.z-rightSection-active').removeClass('z-rightSection-active');
        $('#z-allUnits-wrap').addClass('z-rightSection-active');
        // navbar
        $('.z-sn-sectionLink-active').removeClass('z-sn-sectionLink-active');
        $('#z-un-settings').addClass('z-sn-sectionLink-active');
    }
    if (retrieveUnits) {
        var masterApi = "mixedApiUnit";

        data = {
            masterApi: masterApi
        }
        $.ajax({
            url: "api/retrieveWellUnits",
            data: data,
            type: "GET",
            dataType: 'text',
            success: function (result) {
                console.log(result);
                var array = JSON.parse(result);
                $('#z-depthLenght').val(array[0].depth);
                $('#z-Diameter').val(array[0].diameter);
                $('#z-MudWeight').val(array[0].mudWeight);
                $('#z-Volume').val(array[0].volume);
                $('#z-DrillingRate').val(array[0].drillingRate);
                $('#z-GeneralWeights').val(array[0].generalWeights);
                $('#z-StringWeight').val(array[0].stringWeight);
                $('#z-Torque').val(array[0].torque);
                $('#z-Pressure').val(array[0].pressure);
                $('#z-FlowRate').val(array[0].flowRate);
                $('#z-PumpOutput').val(array[0].pumpOutput);
                $('#z-Displacement').val(array[0].displacement);
                $('#z-JetVelocity').val(array[0].jetVelocity);
                $('#z-depthVelocity').val(array[0].velocity);
                $('#z-RIHPOOHSpeed').val(array[0].rihAndPoohSpeed);
                $('#z-RIHPOOHTime').val(array[0].rihAndPoohTime);
            },
            error: function (result) {
                console.log(result);
            }
        });
    }
}

/* Edit Mixed Api Back Button */
function z_EditMixedApi_back() {
    if (!$('#z-settings-Change').hasClass('z-rightSection-active')) {

        // main section
        $('.z-rightSection-active').removeClass('z-rightSection-active');
        $('#z-settings-Change').addClass('z-rightSection-active');
    }
}

/* SETTINGS submit Mixed api units */

function unitList_submit() {
    var unitSelect = "mixedapi";
    var masterApi = "mixedApiUnit";
    var depth = $('#z-depthLenght').val();
    var diameter = $('#z-Diameter').val();
    var mudWeight = $('#z-MudWeight').val();
    var volume = $('#z-Volume').val();
    var drillingRate = $('#z-DrillingRate').val();
    var generalWeights = $('#z-GeneralWeights').val();
    var stringWeight = $('#z-StringWeight').val();
    var torque = $('#z-Torque').val();
    var pressure = $('#z-Pressure').val();
    var flowRate = $('#z-FlowRate').val();
    var pumpOutput = $('#z-PumpOutput').val();
    var displacement = $('#z-Displacement').val();
    var jetVelocity = $('#z-JetVelocity').val();
    var velocity = $('#z-depthVelocity').val();
    var rihAndPoohSpeed = $('#z-RIHPOOHSpeed').val();
    var rihAndPoohTime = $('#z-RIHPOOHTime').val();

    data = {
        masterApi: masterApi,
        unitSelect: unitSelect,
        depth: depth,
        diameter: diameter,
        mudWeight: mudWeight,
        volume: volume,
        drillingRate: drillingRate,
        generalWeights: generalWeights,
        stringWeight: stringWeight,
        torque: torque,
        pressure: pressure,
        flowRate: flowRate,
        pumpOutput: pumpOutput,
        displacement: displacement,
        jetVelocity: jetVelocity,
        velocity: velocity,
        rihAndPoohSpeed: rihAndPoohSpeed,
        rihAndPoohTime: rihAndPoohTime
    }
    if ($("#z-depthLenght").val() != null && $("#z-Diameter").val() != null &&
        $("#z-MudWeight").val() != null && $("#z-Volume").val() != null &&
        $("#z-DrillingRate").val() != null &&
        $("#z-GeneralWeights").val() != null &&
        $("#z-GeneralWeights").val() != null &&
        $("#z-StringWeight").val() != null &&
        $("#z-Torque").val() != null && $("#z-Pressure").val() != null &&
        $("#z-FlowRate").val() != null &&
        $("#z-PumpOutput").val() != null &&
        $("#z-Displacement").val() != null &&
        $("#z-JetVelocity").val() != null &&
        $("#z-depthVelocity").val() != null &&
        $("#z-RIHPOOHSpeed").val() != null &&
        $("#z-RIHPOOHTime").val() != null) {
        $.ajax({
            url: "api/submitmixedWellUnits",
            data: data,
            type: "POST",
            dataType: 'text',
            // contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                console.log(result);
                alertPopup('success', "Submitted");
            },
            error: function (result) {
                console.log(result);
            }
        });
    } else {
        popup("Make an selection in every fields to get submitted")
    }
}

function z_wiSelectLevelSection_active(seletedWellId, seletedWellName, selected_wiUnit, wellType, wellLandscape, callback) {
    if (!$('#z-selectLevel').hasClass('z-rightSection-active')) {
        var data = {
            clientId: clientId,
            wellId: seletedWellId
        }
        $.ajax({
            url: "api/getAllTemplate",
            data: data,
            type: "GET",
            contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                var templateList = result;
                if (templateList != {}) {
                    $('#selectedWellId').val(seletedWellId);
                    $('#selectedWellName').val(seletedWellName);
                    $('#selectedWellUnit').val(selected_wiUnit);
                    $('#selectedWellType').val(wellType);
                    $('#selectedWellLandscape').val(wellLandscape);
                    $('#z-wellUnit').off('click').on('click', function () {
                        z_wiUnitSection_active(seletedWellId, seletedWellName, selected_wiUnit, wellType, wellLandscape);
                    });
                    // $('#z-levels-Back').off('click').on('click', function () {
                    //     levelsBack(seletedWellId);
                    // });
                    $('#z-chooseLevel').prop('selectedIndex', 0);
                    $('#templateList').html("");
                    $('#templateList').append('<option disabled="disabled" selected="selected" value="-1">Templates</option>');
                    for (var i in templateList) {
                        if (templateList[i].isBasicTemplate == true || templateList[i].isArchieved == true) {
                            $('#templateList').append('<option value="' + templateList[i].id + '" templatename="' + templateList[i].templateName + '" >' + templateList[i].templateName + '</option>');
                        }
                    }
                    if (callback) {
                        callback();
                    }
                }
            },
            error: function (result) {
                console.log(result);
            }
        });

        // main section
        // $('.z-rightSection-active').removeClass('z-rightSection-active');
        // $('#z-selectLevel-wrap').addClass('z-rightSection-active');
    }
}

/* levels Back btn */
function levelsBack(wellId) {
    if (!$('#z-wells-wrap').hasClass('z-rightSection-active')) {
        // main section
        $('#z-chooseLevel').prop('selectedIndex', 0);
        $('#templateList').html("");
        z_wellInputClose(wellId);
    }
}

/* levels save button */
var z_templeteJson_data;

function levelsSave() {
    var levelValue = $('#z-chooseLevel').val();
    var selected_template_id = $('#templateList').val();
    var selected_template_name = $('#templateList option:selected').attr('templatename');
    var selected_template_wellId = $('#selectedWellId').val();
    var selected_template_wellName = $('#selectedWellName').val();
    var selected_template_wellUnit = $('#selectedWellUnit').val();
    var selected_template_wellType = $('#selectedWellType').val();
    var selected_template_wellLandscape = $('#selectedWellLandscape').val();

    if ($("#selectLevelForm").valid()) {
        $.ajax({
            url: "api/getTemplate",
            data: {
                wellId: "",
                id: selected_template_id
            },
            type: "GET",
            dataType: 'json',
            contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                if (result != null) {
                    var templetelevelCount = result[0].templateLevel;
                    z_templeteJson_data = JSON.parse(result[0].template);
                    subphases = {};
                    for (var i = 1; i <= levelValue; i++) {
                        subphases['level' + i] = [];
                    }
                    if (result[0].isBasicTemplate == true) {
                        subphases_data(result[0].wellCategory);
                        wi_saveTemplate();
                    } else {
                        var baseTemplate_id = result[0].baseTemplateId;
                        $.ajax({
                            url: "api/getTemplate",
                            data: {
                                wellId: "",
                                id: baseTemplate_id
                            },
                            type: "GET",
                            dataType: 'json',
                            contentType: 'application/json;charset=UTF-8',
                            success: function (baseTemplate_result) {
                                subphases = {};
                                subphases_data(result[0].wellCategory);
                                // alertPopup('success', "Submitted");
                                wi_saveTemplate()
                            },
                            error: function (baseTemplate_result) {
                                console.log(baseTemplate_result);
                            }
                        });
                    }

                    function wi_saveTemplate() {
                        var data = {
                            clientId: clientId,
                            wellId: selected_template_wellId,
                            basicTemplate: false,
                            template: JSON.stringify(z_templeteJson_data),
                            templateLevel: levelValue,
                            templateName: selected_template_wellName,
                            baseTemplateId: selected_template_id,
                            baseTemplateName: selected_template_name,
                            wellType: selected_template_wellType,
                            wellLandscape: selected_template_wellLandscape,
                            archieved: false
                        };

                        $.ajax({
                            url: "api/addTemplate",
                            data: JSON.stringify(data),
                            type: "POST",
                            dataType: 'text',
                            contentType: 'application/json;charset=UTF-8',
                            success: function (result) {
                                console.log(result);
                                var z_output = result.split(":")[1];
                                if (z_output == "Done") {
                                    var wi_data = {
                                        wellInputJson: JSON.stringify(z_templeteJson_data),
                                        wellId: selected_template_wellId,
                                        wellInputLevel: levelValue
                                    };
                                    alertPopup('success', "Submitted");
                                } else {
                                    alertPopup('alert', "Error");
                                    // z_wellInputClose(selected_template_wellId);
                                }
                            },
                            error: function (result) {
                                console.log(result);
                            }
                        });
                    }

                    // z_wi_levelTemplateEditor(selected_template_wellId, selected_template_wellName, selected_template_wellUnit, levelValue, selected_template_id, selected_template_name, z_templeteJson_data, selected_template_wellType, selected_template_wellLandscape);
                }
            },
            error: function (result) {
                console.log(result);
            }
        });
    }
}

function z_wi_levelTemplateEditor(selected_template_wellId, selected_template_wellName, selected_template_wellUnit, levelValue, selected_template_id, selected_template_name, z_templeteJson_data, selected_template_wellType, selected_template_wellLandscape) {

    // selectLevelTemplate();
    $('#selectedTemplate-WellId').val(selected_template_wellId);
    $('#selectedTemplate-WellName').val(selected_template_wellName);
    $('#selectedTemplate-WellUnit').val(selected_template_wellUnit);
    $('#selectedTemplate-id').val(selected_template_id);
    $('#selectedTemplate-name').val(selected_template_name);
    $('#selectedTemplate-wellType').val(selected_template_wellType);
    $('#selectedTemplate-wellLandscape').val(selected_template_wellLandscape);
    $('#selectedTemplate-levelCount').val(levelValue);
    $('#z-levelTemplate-wellUnit').off('click').on('click', function () {
        z_wiUnitSection_active(selected_template_wellId, selected_template_wellName, selected_template_wellUnit);
    });
    addLevel(z_templeteJson_data, levelValue, selected_template_wellType, selected_template_wellLandscape);
}

// function selectLevelTemplate() {
// if (!$('#z-levelTemplate-wrap').hasClass('z-rightSection-active')) {
// main section
// $('.z-rightSection-active').removeClass('z-rightSection-active');
// $('#z-levelTemplate-wrap').addClass('z-rightSection-active');
// }
// }

// filter data by level value
async function filterData_Level(data, currentlevel, templateLevel) {
    var nextlevel = currentlevel + 1;
    data.map(function (obj, index) {
        var nextLevelData = obj['subLevels'];
        if (nextLevelData) {
            if (nextlevel > templateLevel) {
                delete obj['subLevels'];
            } else {
                filterData_Level(nextLevelData, nextlevel, templateLevel);
            }
        }
    });
}

function levelTemplate_save(archive) {
    var selected_template_wellId = $('#selectedTemplate-WellId').val();
    var templateLevel = $('#selectedTemplate-levelCount').val();
    filterData_Level(__wiJson, 1, templateLevel);
    var z_templeteJson = JSON.stringify(z_templeteJson_data);

    var templateName = $('#selectedTemplate-WellName').val();
    var baseTemplateId = $('#selectedTemplate-id').val();
    var baseTemplateName = $('#selectedTemplate-name').val();
    var wellType = $('#selectedTemplate-wellType').val();
    var wellLandscape = $('#selectedTemplate-wellLandscape').val();
    archive ? templateArchive = true : templateArchive = false;

    var data = {
        wellInputJson: JSON.stringify(z_templeteJson_data),
        wellId: selected_template_wellId,
        wellInputLevel: templateLevel
    };
    data = JSON.stringify(data);

    //     __wiJson = z_templeteJson_data;
    alertPopup('success', "Well Scheme added Successfully");

    // call_ajax("/api/addWellInput", "POST", data, 'text', 'application/json;charset=UTF-8', false, function (addWellInput_result) {
    //     if (addWellInput_result.status == "success") {
    //         var addWellInput_result_data = addWellInput_result.data;
    //         if (addWellInput_result_data == "Success:Done") {
    //             alertPopup('success', "Well Scheme added Successfully");
    //             // z_wellsSection_active(false, false);
    //         } else
    //             alertPopup('alert', "Well Scheme failed to update");
    //     }
    // });

    // var wi_data = {
    //     wellInputJson: z_templeteJson,
    //     wellId: selected_template_wellId,
    //     wellInputLevel: templateLevel
    // };

    // $.ajax({
    //     url: "/api/addWellInput",
    //     type: "POST",
    //     data: JSON.stringify(wi_data),
    //     dataType: 'text',
    //     contentType: 'application/json;charset=UTF-8',
    //     success: function (addWellInput_result) {
    //         var z_addWellInput_result_output = addWellInput_result.split(":")[1];
    //         if (z_output == "Done") {
    //             alertPopup('success', "Well Template Saved Successfully");
    //             // z_wellInputClose(selected_template_wellId);
    //         } else {
    //             alertPopup('alert', z_addWellInput_result_output);
    //             // z_wellInputClose(selected_template_wellId);
    //         }
    //     },
    //     error: function (addWellInput_result) {
    //         console.log(addWellInput_result);
    //         // z_wellInputClose(selected_template_wellId);
    //     }
    // });

    // var data = {
    //     clientId: clientId,
    //     wellId: selected_template_wellId,
    //     basicTemplate: false,
    //     template: z_templeteJson,
    //     templateLevel: templateLevel,
    //     templateName: templateName,
    //     baseTemplateId: baseTemplateId,
    //     baseTemplateName: baseTemplateName,
    //     wellType: wellType,
    //     wellLandscape: wellLandscape,
    //     archieved: templateArchive
    // };

    // $.ajax({
    //     url: "api/addTemplate",
    //     data: JSON.stringify(data),
    //     type: "POST",
    //     dataType: 'text',
    //     contentType: 'application/json;charset=UTF-8',
    //     success: function (result) {
    //         console.log(result);
    //         var z_output = result.split(":")[1];
    //         if (z_output == "Done") {
    //             var wi_data = {
    //                 wellInputJson: z_templeteJson,
    //                 wellId: selected_template_wellId,
    //                 wellInputLevel: templateLevel
    //             };
    //             if (templateArchive == true) {

    //             } else {
    //                 alertPopup('success', "Well Template Saved Successfully")
    //                 // z_wellInputClose(selected_template_wellId);
    //             }
    //         } else {
    //             alertPopup('alert', "Error");
    //             // z_wellInputClose(selected_template_wellId);
    //         }
    //     },
    //     error: function (result) {
    //         console.log(result);
    //     }
    // });
}

var subphases = {};

function subphases_data(wellCategory) {
    var wellCategory_data;
    switch (wellCategory) {
        case "newWell":
            wellCategory_data = "new well template";
            break;
        case "oldWell":
            wellCategory_data = "old well template";
            break;
        case "reEntry":
            wellCategory_data = "reEntry well template";
            break;
    }
    subphases = {};
    call_ajax("/api/getTemplate", "GET", wellCategory_data, 'json', 'application/json;charset=UTF-8', false, function (template_result) {
        if (template_result.status == "success") {
            var template_result_data = template_result.data[0];
            var surphases_generator = function (data, currentlevel) {
                var nextlevel = currentlevel + 1;
                // console.log(data)
                data.forEach(function (obj) {
                    (('level' + currentlevel) in subphases) ? subphases['level' + currentlevel].push(obj['phaseName']) : subphases['level' + currentlevel] = [obj['phaseName']];
                    (obj['subLevels']) ? surphases_generator(obj['subLevels'], nextlevel) : '';
                });
            }
            surphases_generator(JSON.parse(template_result_data.template), 1);
        }
    });
}

// function levelTemplate_back() {
//     var selected_template_wellId = $('#selectedTemplate-WellId').val();
//     var selected_template_WellName = $('#selectedTemplate-WellName').val();
//     var selected_template_wellUnit = $('#selectedTemplate-WellUnit').val();
//     var selected_template_id = $('#selectedTemplate-id').val();
//     var selected_template_wellType = $('#selectedTemplate-wellType').val();
//     var selected_template_wellLandscape = $('#selectedTemplate-wellLandscape').val();
//     z_wiSelectLevelSection_active(selected_template_wellId, selected_template_WellName, selected_template_wellUnit, selected_template_wellType, selected_template_wellLandscape, function () {
//         $('#z-chooseLevel').val($('#selectedTemplate-levelCount').val());
//         $('#templateList option[value="' + selected_template_id + '"]').attr("selected", "selected");
//     });
// }

// Template Section Phase Data
function phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, parentActivePhase, currentActivePhase) {
    // var currentLevel = level == 0 ? 1 : level;
    var z_l_phasewrap = document.getElementById('z-l' + currentLevel + '-phasewrap');
    z_l_phasewrap.innerHTML = "";
    var dataLength = data.length;
    var selected_phases = [];
    data.length == 0 ? noData(currentLevel, parentActivePhase, data) : '';
    data.forEach(function (obj, i) {
        var displayFor = typeof (obj.displayFor) === 'undefined' ? [] : obj.displayFor;
        var hideFor = typeof (obj.hideFor) === 'undefined' ? [] : obj.hideFor;
        if (!hideFor.includes(wellType) && !hideFor.includes(wellLandscape)) {
            // console.log("hide clear")
            if (((displayFor.length != 0) && (displayFor.includes(wellType) || displayFor.includes(wellLandscape))) || (displayFor.length == 0)) {
                // console.log("show")
                var z_l_phase_box = document.createElement('div');
                var z_l_phase = document.createElement('div');
                var z_l_closeBtn = document.createElement('div');
                z_l_closeBtn.classList = "z-l-closeBtn";
                z_l_closeBtn.innerHTML = "x";
                var nextLevel = currentLevel + 1;
                selected_phases.push(obj['phaseName']);

                if (currentActivePhase) {
                    if (currentActivePhase == obj['phaseName']) {
                        z_l_phase_box.classList = "z-l-phase-box z-l" + currentLevel + "phaseBox activePhase" + currentLevel;
                    } else {
                        z_l_phase_box.classList = "z-l-phase-box z-l" + currentLevel + "phaseBox";
                    }
                } else {
                    z_l_phase_box.classList = "z-l-phase-box z-l" + currentLevel + "phaseBox";
                }

                z_l_phase.classList = "z-l-phase z-l" + currentLevel + "-phase";
                z_l_phase.innerHTML = obj['phaseName'];
                z_l_phase_box.setAttribute("data-index", i);
                z_l_phase_box.setAttribute("data-codeValue", typeof (obj['code']) === 'undefined' ? "" : obj['code']);
                z_l_phase_box.appendChild(z_l_phase);
                z_l_phase_box.appendChild(z_l_closeBtn);
                z_l_phasewrap.appendChild(z_l_phase_box);

                if (i == dataLength - 1) {
                    var z_l_phaseAddBtn = document.createElement('div');
                    z_l_phaseAddBtn.classList = "btn z-m-btn3 z-l-phaseAddBtn z-l" + currentLevel + "-phaseAddBtn";
                    z_l_phaseAddBtn.innerHTML = "Add Phase";
                    z_l_phasewrap.appendChild(z_l_phaseAddBtn);

                    z_l_phaseAddBtn.addEventListener('click', function () {
                        var whole_subPhase = subphases['level' + currentLevel];
                        var notSelected_subPhase = whole_subPhase.filter(function (object) {
                            if (selected_phases.indexOf(object) == -1) {
                                return object;
                            }
                        });
                        addPhase(notSelected_subPhase, currentLevel, wellType, wellLandscape, function (newPhaseData) {
                            var currentLevel_activePhase = document.getElementsByClassName('activePhase' + currentLevel)[0];
                            // var dataInsert_pos;
                            // var data_codeValue;
                            var selectedCode;
                            if (currentLevel_activePhase) {
                                // dataInsert_pos = parseInt(currentLevel_activePhase.getAttribute('data-index'));
                                // dataInsert_pos += 1;
                                selectedCode = currentLevel_activePhase.getAttribute('data-codeValue');
                            } else {
                                // dataInsert_pos = dataLength;
                                var lastphase = document.getElementsByClassName('z-l' + currentLevel + 'phaseBox');
                                selectedCode = lastphase[lastphase.length - 1].getAttribute('data-codeValue');
                            }
                            newPhaseData.forEach(function (obj_newPhaseData) {

                                // // old insert code
                                // dataInsert_pos += idx;
                                // data.splice(dataInsert_pos, 0, obj_newPhaseData);

                                //new insert code with code value
                                var insertion_data = {
                                    'levelValue': currentLevel,
                                    'phaseName': obj_newPhaseData.phaseName
                                }
                                var slicedData = data.find(function (_val) {
                                    return _val.code == selectedCode
                                });
                                var slicedData_idx = data.findIndex(function (_val) {
                                    return _val.code == selectedCode
                                });
                                // selectedCode = insertPhase(slicedData, data, selectedCode, i, insertion_data).then(function(data_selectedCode){
                                //     console.log("temp_selectedCode");
                                //     console.log(data_selectedCode);
                                //      console.log("in ouput")
                                //      return data_selectedCode;
                                // }).catch(function(err){
                                //     console.log(err);
                                // });
                                selectedCode = insertPhase(slicedData, data, selectedCode, slicedData_idx, insertion_data);
                            });
                            $('#addPhase-modal').modal('hide');
                            document.getElementById('addPhase-modal').remove();
                            var activePhase = document.getElementsByClassName('activePhase' + currentLevel)[0];
                            if (activePhase) {
                                var activePhaseValue = activePhase.getElementsByClassName('z-l-phase')[0].innerText;
                                currentLevel == 1 ? phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, "level1", activePhaseValue) : phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, parentActivePhase, activePhaseValue);
                            } else {
                                currentLevel == 1 ? phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, "level1") : phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, parentActivePhase);
                            }
                        });
                    });
                }

                z_l_closeBtn.addEventListener('click', function (e) {
                    // var selectedCode = $(e).parent('.z-l-phase-box').attr('data-codevalue');

                    confirmation_Popup("Are you sure want to Delete this Phase", function () {
                        // data.splice(i, 1);
                        // currentLevel == 1 ? phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, "level1") : phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, parentActivePhase);
                        deletephase(obj, data, obj.code, i);
                        var activePhase = document.getElementsByClassName('activePhase' + currentLevel)[0];

                        if (activePhase && !($(e.target).parent('.z-l-phase-box')[0] == activePhase)) {
                            var activePhaseValue = activePhase.getElementsByClassName('z-l-phase')[0].innerText;
                            currentLevel == 1 ? phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, "level1", activePhaseValue) : phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, parentActivePhase, activePhaseValue);
                        } else {
                            currentLevel == 1 ? phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, "level1") : phaseData(data, wellType, wellLandscape, currentLevel, maxLevel, parentActivePhase);
                        }
                        clearConfirmationPopup();
                    });
                });

                z_l_phase.addEventListener('click', function () {
                    if (!this.parentNode.classList.contains("activePhase" + currentLevel)) {
                        var preActivePhase = document.getElementsByClassName("activePhase" + currentLevel)[0];
                        preActivePhase ? preActivePhase.classList.remove("activePhase" + currentLevel) : '';
                        this.parentNode.classList.add("activePhase" + currentLevel);
                        if (nextLevel <= maxLevel) {
                            for (var j = nextLevel; j <= maxLevel; j++) {
                                document.getElementById('z-l' + j + '-phasewrap').innerHTML = "";
                            }
                            var nextLevelData = obj['subLevels'];
                            if (nextLevelData && JSON.stringify(nextLevelData) != "[]") {
                                phaseData(nextLevelData, wellType, wellLandscape, nextLevel, maxLevel, this.innerHTML);
                            } else {
                                parentPhase = this.innerHTML;
                                noData(nextLevel, parentPhase, obj);
                            }
                        }
                    }
                });
            }
        }
    });

    function noData(nextLevel, parentPhase, object_data) {
        var z_l_phaseAddBtn = document.createElement('div');
        z_l_phaseAddBtn.classList = "btn z-m-btn3 z-l-phaseAddBtn z-l" + nextLevel + "-phaseAddBtn";
        z_l_phaseAddBtn.innerHTML = "Add Phase";
        document.getElementById('z-l' + nextLevel + '-phasewrap').appendChild(z_l_phaseAddBtn);
        z_l_phaseAddBtn.addEventListener('click', function () {
            var whole_subPhase = subphases['level' + nextLevel];
            addPhase(whole_subPhase, nextLevel, wellType, wellLandscape, function (newPhaseData) {
                // var z_t_nxtlevel = nextLevel;
                var parentCode = document.getElementsByClassName('z-l' + currentLevel + 'phaseBox activePhase' + currentLevel)[0].getAttribute('data-codeValue');
                var temp_sublevel = {};
                var selectedCode;
                object_data['subLevels'] = [];
                switch (nextLevel) {
                    case 2:
                        selectedCode = parentCode + "A";
                        break;
                    case 3:
                        selectedCode = parentCode + "0A";
                        break;
                    case 4:
                        selectedCode = parentCode + "01";
                        break;
                    case 5:
                        selectedCode = parentCode + "01";
                        break;
                }
                temp_sublevel.code = selectedCode;
                temp_sublevel.phaseName = newPhaseData[0].phaseName;
                temp_sublevel.levelValue = nextLevel;
                object_data['subLevels'].push(temp_sublevel);
                newPhaseData.shift();
                newPhaseData.forEach(function (obj_newPhaseData) {
                    var insertion_data = {
                        'levelValue': nextLevel,
                        'phaseName': obj_newPhaseData.phaseName
                    }
                    var slicedData = data.find(function (_val) {
                        return _val.code == selectedCode
                    });
                    var slicedData_idx = data.findIndex(function (_val) {
                        return _val.code == selectedCode
                    });
                    selectedCode = insertPhase(slicedData, object_data['subLevels'], selectedCode, slicedData_idx, insertion_data);
                });
                $('#addPhase-modal').modal('hide');
                document.getElementById('addPhase-modal').remove();
                phaseData(object_data['subLevels'], wellType, wellLandscape, nextLevel, maxLevel, object_data['phaseName']);
            });
        });
    }
}

//insert phase with code
function insertPhase(obj, parent, value, i, insertion_data) {
    if (obj.code === value) {
        var Code = '';
        //parent.splice(i,1);
        var InsertionIndex = i + 1;

        console.log(obj);
        var SelctedLevel = obj.levelValue;

        if (SelctedLevel == 5) {

            var Level5SuffixCode = obj.code.slice(8);
            var Level5PrefixCode = String(obj.code.slice(0, 8));
            var ImplementSuffixCode = Level5SuffixCode;
            Code = Level5PrefixCode + parseInt(ImplementSuffixCode + 1);
            if (parent[i + 1]) {
                ImplementSuffixCode = parseInt(Level5SuffixCode) + 2;
                for (var k = InsertionIndex; k < parseInt(parent.length - i - 1); k++) {
                    var LevelSuffixCode = parent[k].code.code.slice(8);
                    //for(l=0; l<parseInt(parent.length - i - 1); l++){
                    parent[k].code = Level5PrefixCode + parseInt(parseInt(LevelSuffixCode) + 1);
                    //}
                }
            }

        } else if (SelctedLevel == 4) {

            var Level4SuffixCode = obj.code.slice(6);
            var Level4PrefixCode = obj.code.slice(0, 6);
            var ImplementSuffixCode = Level4SuffixCode;
            Code = Level4PrefixCode + parseInt(ImplementSuffixCode + 1);

            if (parent[i + 1]) {
                ImplementSuffixCode = parseInt(Level4SuffixCode) + 2;
                for (var k = InsertionIndex; k < parseInt(parent.length - i - 1); k++) {
                    var LevelSuffixCode = parent[k].code.slice(6);
                    //for(l=0; l<parseInt(parent.length - i - 1); l++){
                    parent[k].code = Level4PrefixCode + parseInt(parseInt(LevelSuffixCode) + 1);
                    if (parent[k].subLevels) {
                        for (m = 0; m < parent[k].subLevels.length; m++) {
                            var Level5SuffixCode = parent[k].subLevels[m].code.slice(8);
                            var Level5PrefixCode = parent[k].code;
                            parent[k].subLevels[m].code = Level5PrefixCode + Level5SuffixCode;
                        }
                    }
                    //}
                }
            }

        } else if (SelctedLevel == 3) {

            var Level3SuffixCode = obj.code.slice(4);
            var Level3Suffix1 = obj.code.slice(4, 5);
            var Level3Suffix2 = obj.code.slice(5);
            var Level3PrefixCode = String(obj.code.slice(0, 4));
            var ImplementSuffix1 = Level3Suffix1;
            var ImplementSuffix2 = Level3SuffixCode.charCodeAt(1);
            if (Level3Suffix2 == 'Z') {
                if (Level3Suffix1 == 9) {
                    console.log("Level 3 Out of bound");
                } else {
                    Code = Level3PrefixCode + parseInt(Level3Suffix1 + 1) + Level3Suffix2;
                }
            } else {
                var StrtoCode = Level3Suffix2.charCodeAt(0);
                var IncrementCode = StrtoCode + 1;
                var CodetoStr = String.fromCharCode(IncrementCode);
                Code = Level3PrefixCode + Level3Suffix1 + CodetoStr;
            }

            if (parent[i + 1]) {

                for (var k = InsertionIndex; k < parent.length; k++) {
                    var InnerCode = parent[k].code;
                    var Level3InnerSuffix1 = InnerCode.slice(4, 5);
                    if (k % 26) {
                        //var SlotLimit = parseInt((parseInt(k/26 + 1) *26) - k);


                        var Level3InnerSuffix2 = InnerCode.slice(5);
                        var ImplementInnerSuffix2 = Level3InnerSuffix2.charCodeAt(0);
                        var CurrentSuffix2 = (parseInt(ImplementInnerSuffix2) + 1);
                        parent[k].code = Level3PrefixCode + Level3InnerSuffix1 + String.fromCharCode(CurrentSuffix2);
                        if (parent[k].subLevels) {
                            for (m = 0; m < parent[k].subLevels.length; m++) {
                                var Level4SuffixCode = parent[k].subLevels[m].code.slice(6);
                                var Level4PrefixCode = parent[k].code;
                                parent[k].subLevels[m].code = Level4PrefixCode + Level4SuffixCode;
                                if (parent[k].subLevels[m].subLevels) {
                                    for (n = 0; n < parent[k].subLevels[m].subLevels.length; n++) {
                                        var Level5SuffixCode = parent[k].subLevels[m].subLevels[n].code.slice(6);
                                        var Level5PrefixCode = parent[k].code;
                                        parent[k].subLevels[m].subLevels[n].code = Level5PrefixCode + Level5SuffixCode;
                                    }
                                }
                            }
                        }

                    } else {
                        Level3InnerSuffix1 = parseInt(k / 26 + 1);
                        var InnerCode = parent[k].code;

                        var Level3InnerSuffix2 = InnerCode.slice(5);
                        var ImplementInnerSuffix2 = Level3InnerSuffix2.charCodeAt(0);
                        var CurrentSuffix2 = (parseInt(ImplementInnerSuffix2) + 1);
                        parent[k].code = Level3PrefixCode + Level3InnerSuffix1 + String.fromCharCode(CurrentSuffix2);
                        if (parent[k].subLevels) {
                            for (m = 0; m < parent[k].subLevels.length; m++) {
                                var Level4SuffixCode = parent[k].subLevels[m].code.slice(6);
                                var Level4PrefixCode = parent[k].code;
                                parent[k].subLevels[m].code = Level4PrefixCode + Level4SuffixCode;
                                if (parent[k].subLevels[m].subLevels) {
                                    for (n = 0; n < parent[k].subLevels[m].subLevels.length; n++) {
                                        var Level5SuffixCode = parent[k].subLevels[m].subLevels[n].code.slice(6);
                                        var Level5PrefixCode = parent[k].code;
                                        parent[k].subLevels[m].subLevels[n].code = Level5PrefixCode + Level5SuffixCode;
                                    }
                                }
                            }
                        }

                    }
                }

            }

        } else if (SelctedLevel == 2) {
            var Level2SuffixCode = obj.code.slice(3);
            var Level2PrefixCode = String(obj.code.slice(0, 3));
            var ImplementSuffix = Level2SuffixCode.charCodeAt(1);
            if (Level2SuffixCode == 'Z') {
                console.log("Level 2 Out of Bound");
            } else {
                var StrtoCode = Level2SuffixCode.charCodeAt(0);
                var IncrementCode = StrtoCode + 1;
                var CodetoStr = String.fromCharCode(IncrementCode);
                Code = Level2PrefixCode + CodetoStr;
            }

            if (parent[i + 1]) {

                for (var k = InsertionIndex; k < parent.length; k++) {
                    var CurrentLevelCode = parent[k].code;
                    var CurrentLevelCodeSuffix = CurrentLevelCode.slice(3);
                    var ImplementInnerSuffix = CurrentLevelCodeSuffix.charCodeAt(0);
                    var CurrentSuffix = (parseInt(ImplementInnerSuffix) + 1);
                    parent[k].code = Level2PrefixCode + String.fromCharCode(CurrentSuffix);
                    if (parent[k].subLevels) {
                        for (var m = 0; m < parent[k].subLevels.length; m++) {
                            var Level3SuffixCode = parent[k].subLevels[m].code.slice(4);
                            var Level3PrefixCode = parent[k].code;
                            parent[k].subLevels[m].code = String(Level3PrefixCode) + Level3SuffixCode;
                            if (parent[k].subLevels[m].subLevels) {
                                for (var n = 0; n < parent[k].subLevels[m].subLevels.length; n++) {
                                    var Level4SuffixCode = parent[k].subLevels[m].subLevels[n].code.slice(4);
                                    var Level4PrefixCode = parent[k].code;
                                    parent[k].subLevels[m].subLevels[n].code = String(Level4PrefixCode) + Level4SuffixCode;
                                    if (parent[k].subLevels[m].subLevels[n].subLevels) {
                                        for (var o = 0; o < parent[k].subLevels[m].subLevels[n].subLevels.length; o++) {
                                            var Level5SuffixCode = parent[k].subLevels[m].subLevels[n].subLevels[o].code.slice(4);
                                            var Level5PrefixCode = parent[k].code;
                                            parent[k].subLevels[m].subLevels[n].subLevels[o].code = String(Level5PrefixCode) + Level5SuffixCode;

                                        }
                                    }
                                }
                            }
                        }
                    }
                }

            }

        } else {
            var Level1Code = obj.code;
            var UpdateCode = parseInt(parent[i].code) + 1;
            Code = ("00" + UpdateCode).slice(-3);
            if (parent[i + 1]) {
                var CurrentCode = parseInt(parseInt(parent[i].code) / 21) + 1;
                var Limit = (CurrentCode * 20) + 1;
                var FinderLimit = ("00" + Limit).slice(-3);
                var NextLimitEnd = parent.map(function (child) {
                    return child.code;
                }).indexOf(FinderLimit);

                if (parseInt(parseInt(parent[i + 1].code) - 1) % 20 == 0) {

                    if (parseInt(parseInt(parent[i + 1].code) - 1) >= parseInt(parent[i].code)) {
                        UpdateCode = parseInt(parent[i].code) + 1;
                        Code = ("00" + UpdateCode).slice(-3);
                        var ImplementCode = i + 1;
                        var TotalChild = parent.length;
                        for (var a = ImplementCode; a < NextLimitEnd; a++) {
                            var assign = parseInt(parent[a].code) + 1;
                            parent[a].code = String(("00" + assign).slice(-3));
                            if (parent[a].subLevels) {
                                for (var k = 0; k < parent[a].subLevels.length; k++) {
                                    var Level2SuffixCode = parent[a].subLevels[k].code.slice(3);
                                    var Level2PrefixCode = parent[a].code;
                                    parent[a].subLevels[k].code = Level2PrefixCode + String.fromCharCode(CurrentSuffix);
                                    if (parent[a].subLevels[k].subLevels) {
                                        for (var m = 0; m < parent[a].subLevels[k].subLevels.length; m++) {
                                            var Level3SuffixCode = parent[a].subLevels[k].subLevels[m].code.slice(3);
                                            var Level3PrefixCode = parent[a].code;
                                            parent[a].subLevels[k].subLevels[m].code = String(Level3PrefixCode) + Level3SuffixCode;
                                            if (parent[a].subLevels[k].subLevels[m].subLevels) {
                                                for (var n = 0; n < parent[a].subLevels[k].subLevels[m].subLevels.length; n++) {
                                                    var Level4SuffixCode = parent[a].subLevels[k].subLevels[m].subLevels[n].code.slice(3);
                                                    var Level4PrefixCode = parent[a].subLevels[k].code;
                                                    parent[a].subLevels[k].subLevels[m].subLevels[n].code = String(Level4PrefixCode) + Level4SuffixCode;
                                                    if (parent[a].subLevels[k].subLevels[m].subLevels[n].subLevels) {
                                                        for (var o = 0; o < parent[a].subLevels[k].subLevels[m].subLevels[n].subLevels.length; o++) {
                                                            var Level5SuffixCode = parent[a].subLevels[k].subLevels[m].subLevels[n].subLevels[0].code.slice(4);
                                                            var Level5PrefixCode = parent[a].code;
                                                            parent[a].subLevels[k].subLevels[m].subLevels[n].subLevels[o].code = String(Level5PrefixCode) + Level5SuffixCode;

                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        console.log("Limit out of bound");
                    }

                } else if (parseInt(parent[i + 1].code) % 20 == 0) {
                    console.log("Your Exists out of Slot Limit");
                } else {
                    var ImplementCode = i + 1;
                    var TotalChild = parent.length;
                    for (var a = ImplementCode; a < NextLimitEnd; a++) {
                        var assign = parseInt(parent[a].code) + 1;
                        parent[a].code = String(("00" + assign).slice(-3));
                        if (parent[a].subLevels) {
                            for (var k = 0; k < parent[a].subLevels.length; k++) {
                                var Level2SuffixCode = parent[a].subLevels[k].code.slice(3);
                                var Level2PrefixCode = parent[a].code;
                                parent[a].subLevels[k].code = Level2PrefixCode + String.fromCharCode(CurrentSuffix);
                                if (parent[a].subLevels[k].subLevels) {
                                    for (var m = 0; m < parent[a].subLevels[k].subLevels.length; m++) {
                                        var Level3SuffixCode = parent[a].subLevels[k].subLevels[m].code.slice(3);
                                        var Level3PrefixCode = parent[a].code;
                                        parent[a].subLevels[k].subLevels[m].code = String(Level3PrefixCode) + Level3SuffixCode;
                                        if (parent[a].subLevels[k].subLevels[m].subLevels) {
                                            for (var n = 0; n < parent[a].subLevels[k].subLevels[m].subLevels.length; n++) {
                                                var Level4SuffixCode = parent[a].subLevels[k].subLevels[m].subLevels[n].code.slice(3);
                                                var Level4PrefixCode = parent[a].subLevels[k].code;
                                                parent[a].subLevels[k].subLevels[m].subLevels[n].code = String(Level4PrefixCode) + Level4SuffixCode;
                                                if (parent[a].subLevels[k].subLevels[m].subLevels[n].subLevels) {
                                                    for (var o = 0; o < parent[a].subLevels[k].subLevels[m].subLevels[n].subLevels.length; o++) {
                                                        var Level5SuffixCode = parent[a].subLevels[k].subLevels[m].subLevels[n].subLevels[0].code.slice(4);
                                                        var Level5PrefixCode = parent[a].code;
                                                        parent[a].subLevels[k].subLevels[m].subLevels[n].subLevels[o].code = String(Level5PrefixCode) + Level5SuffixCode;

                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } else {
                var NextLimit = parseInt(parseInt(parent[i].code) / 20) + 1;
                var UpdateCode = (NextLimit * 20) + 1;
                Code = ("00" + UpdateCode).slice(-3);
            }
        }
        parent.splice((i + 1), 0, {
            "levelValue": insertion_data.levelValue,
            "code": Code,
            "phaseName": insertion_data.phaseName
        });
        return Code;
    }

    if (obj && obj.subLevels && obj.subLevels.length > 0 && !(i == obj.length && obj.phaseName == insertion_data.phaseName)) {
        for (let j = 0; j < obj.subLevels.length; j++) {
            insertPhase(obj.subLevels[j], obj.subLevels, value, j, insertion_data);
        }
    }
}

//Delete phase with code

function move(arr, old_index, new_index) {
    while (old_index < 0) {
        old_index += arr.length;
    }
    while (new_index < 0) {
        new_index += arr.length;
    }
    if (new_index >= arr.length) {
        var k = new_index - arr.length;
        while ((k--) + 1) {
            arr.push(undefined);
        }
    }
    arr.splice(new_index, 0, arr.splice(old_index, 1)[0]);
    return arr;
}



function deletephase(obj, parent, value, i) {
    if (obj.code === value) {

        Object.prototype.clone = function () {
            var newObj = (this instanceof Array) ? [] : {};
            for (var a in this) {
                if (a == 'clone')
                    continue;
                if (this[a] && typeof this[a] == "object") {
                    newObj[a] = this[a].clone();
                } else
                    newObj[a] = this[a]
            }
            return newObj;
        };

        //parent.splice(i,1);
        var InsertionIndex = i + 1;

        console.log(obj);
        var SelctedLevel = obj.levelValue;

        if (SelctedLevel == 5) {

            var Level5SuffixCode = obj.code.slice(8);
            var Level5PrefixCode = String(obj.code.slice(0, 8));
            var ImplementSuffixCode = Level5SuffixCode;
            Code = Level5PrefixCode + parseInt(ImplementSuffixCode + 1);

            var tempArr = [];
            tempArr = parent.clone();
            // move(tempArr, -1, -(tempArr.length));
            parent.splice(i, 1);
            if (parent[i]) {
                ImplementSuffixCode = parseInt(Level5SuffixCode) + 2;



                for (var k = i; k < parseInt(parent.length - i - 1); k++) {
                    parent[k].code = tempArr[k].code;

                }
            }


        } else if (SelctedLevel == 4) {
            var Level4SuffixCode = obj.code.slice(6);
            var Level4PrefixCode = obj.code.slice(0, 6);
            var ImplementSuffixCode = Level4SuffixCode;

            var tempArr = [];
            tempArr = parent.clone();
            // move(tempArr, -1, -(tempArr.length));
            parent.splice(i, 1);
            if (parent[i]) {
                ImplementSuffixCode = parseInt(Level4SuffixCode) + 2;


                for (var k = i; k < parseInt(parent.length - i - 1); k++) {


                    parent[k].code = tempArr[k].code;
                    if (parent[k].subLevels) {
                        var temp1Arr = [];
                        temp1Arr = parent[k].subLevels.clone();
                        move(temp1Arr, -1, -(temp1Arr.length));
                        for (m = 0; m < parent[k].subLevels.length; m++) {

                            parent[k].subLevels[m].code = parent[k].code + String((temp1Arr[m].code).slice(8));
                        }
                    }

                }
            }

        } else if (SelctedLevel == 3) {
            var Level3SuffixCode = obj.code.slice(4);
            var Level3Suffix1 = obj.code.slice(4, 5);
            var Level3Suffix2 = obj.code.slice(5);
            var Level3PrefixCode = String(obj.code.slice(0, 4));
            var ImplementSuffix1 = Level3Suffix1;
            var ImplementSuffix2 = Level3SuffixCode.charCodeAt(1);

            var tempArr = [];
            tempArr = parent.clone();
            // move(tempArr, -1, -(tempArr.length));
            parent.splice(i, 1);
            if (parent[i]) {

                for (var k = i; k < parent.length; k++) {
                    parent[k].code = tempArr[k].code;
                    if (parent[k].subLevels) {

                        var temp1Arr = [];
                        temp1Arr = parent[k].subLevels.clone();
                        move(temp1Arr, -1, -(temp1Arr.length));
                        for (var l = 0; l < parent[k].subLevels.length; l++) {
                            parent[k].subLevels[l].code = parent[k].code + String((temp1Arr[l].code).slice(6));
                            if (parent[k].subLevels[l].subLevels) {

                                var temp1Arr = [];
                                temp2Arr = parent[k].subLevels[l].subLevels.clone();
                                move(temp2Arr, -1, -(temp2Arr.length));
                                for (var m = 0; m < parent[k].subLevels.length; m++) {
                                    parent[k].subLevels[l].subLevels[m].code = parent[k].code + String((temp1Arr[m].code).slice(6));
                                }
                            }
                        }
                    }

                }

            }


        } else if (SelctedLevel == 2) {
            var Level2SuffixCode = obj.code.slice(3);
            var Level2PrefixCode = String(obj.code.slice(0, 3));
            var ImplementSuffix = Level2SuffixCode.charCodeAt(1);

            var tempArr = [];
            tempArr = parent.clone();
            // move(tempArr, -1, -(tempArr.length));
            parent.splice(i, 1);
            if (parent[i]) {


                for (var k = i; k < parent.length; k++) {
                    parent[k].code = tempArr[k].code;

                    if (parent[k].subLevels) {
                        var temp1Arr = [];
                        temp1Arr = parent[k].subLevels.clone();
                        move(temp1Arr, -1, -(temp1Arr.length));
                        for (var m = 0; m < parent[k].subLevels.length; m++) {
                            parent[k].subLevels[m].code = parent[k].code + String((temp1Arr[m].code).slice(4));

                            if (parent[k].subLevels[m].subLevels) {

                                var temp2Arr = [];
                                temp2Arr = parent[k].subLevels[m].subLevels.clone();
                                move(temp2Arr, -1, -(temp2Arr.length));
                                for (var n = 0; n < parent[k].subLevels[m].subLevels.length; n++) {
                                    parent[k].subLevels[m].subLevels[n].code = parent[k].code + String((temp2Arr[n].code).slice(4));

                                    if (parent[k].subLevels[m].subLevels[n].subLevels) {
                                        var temp3Arr = [];
                                        temp3Arr = parent[k].subLevels[m].subLevels[n].subLevels.clone();
                                        move(temp3Arr, -1, -(temp3Arr.length));
                                        for (var o = 0; o < parent[k].subLevels[m].subLevels[n].subLevels.length; o++) {
                                            parent[k].subLevels[m].subLevels[n].subLevels[o].code = parent[k].code + String((temp3Arr[o].code).slice(4));


                                        }
                                    }
                                }
                            }
                        }
                    }
                }

            }


        } else {
            var Level1Code = obj.code;
            var UpdateCode = parseInt(parent[i].code) + 1;

            var CurrentCode = (parseInt(parent[i].code) / 21) + 1;
            var Limit = CurrentCode * 21;
            var FinderLimit = ("00" + Limit).slice(-3);
            var NextLimitEnd = parent.map(function (child) {
                return child.code;
            }).indexOf(FinderLimit);

            if (parent[i + 1]) {

                var tempArr = [];
                tempArr = parent.clone();
                move(tempArr, -1, -(tempArr.length));
                for (var k = InsertionIndex; k < NextLimitEnd; k++) {
                    parent[k].code = tempArr[k].code;

                    if (parent[k].subLevels) {
                        var temp1Arr = [];
                        temp1Arr = parent[k].subLevels.clone();
                        move(temp1Arr, -1, -(temp1Arr.length));
                        for (var l = 0; l < parent[k].subLevels.length; l++) {
                            parent[k].subLevels[l].code = parent[k].code + String((temp1Arr[l].code).slice(3));

                            if (parent[k].subLevels[l].subLevels) {
                                var temp2Arr = [];
                                temp2Arr = parent[k].subLevels[l].subLevels.clone();
                                move(temp2Arr, -1, -(temp2Arr.length));
                                for (var m = 0; m < parent[k].subLevels[l].subLevels.length; m++) {
                                    parent[k].subLevels[l].subLevels[m].code = parent[k].code + String((temp2Arr[m].code).slice(3));

                                    if (parent[k].subLevels[l].subLevels[m].subLevels) {
                                        var temp3Arr = [];
                                        temp3Arr = parent[k].subLevels[l].subLevels[m].subLevels.clone();
                                        move(temp3Arr, -1, -(temp3Arr.length));
                                        for (var n = 0; n < parent[k].subLevels[l].subLevels[m].subLevels.length; n++) {
                                            parent[k].subLevels[l].subLevels[m].subLevels[n].code = parent[k].code + String((temp3Arr[n].code).slice(3));

                                            if (parent[k].subLevels[l].subLevels[m].subLevels[n].subLevels) {
                                                var temp4Arr = [];
                                                temp4Arr = parent[k].subLevels[l].subLevels[m].subLevels[n].subLevels.clone();
                                                move(temp4Arr, -1, -(temp4Arr.length));
                                                for (var o = 0; o < parent[k].subLevels[l].subLevels[m].subLevels[n].subLevels.length; o++) {
                                                    parent[k].subLevels[l].subLevels[m].subLevels[n].subLevels[o].code = parent[k].code + String((temp4Arr[0].code).slice(3));
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            } else {

            }
            parent.splice(i, 1);



        }


    } else if (obj && obj.subLevels && obj.subLevels.length > 0) {
        for (let j = 0; j < obj.subLevels.length; j++) {
            this.deletephase(obj.subLevels[j], obj.subLevels, value, j);
        }
    }
}

//addPhase popup
function addPhase(notSelected_subPhase, currentLevel, wellType, wellLandscape, callback) {
    $('#addPhase-modal').remove();
    $('body').append('<div id="addPhase-modal" class="modal" tabindex="-1" role="dialog">' +
        '<div class="modal-dialog" role="document">' +
        '<div class="modal-content">' +
        '<div class="modal-header">' +
        '<h5 class="modal-title">Add Phase</h5>' +
        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
        '<span aria-hidden="true">&times;</span>' +
        '</button>' +
        '</div>' +
        '<div class="modal-body">' +
        '<div id="notSelectedPhase_list"></div>' +
        '<div id="customPhase-insertWrap">' +
        '<input id="customPhase-input" class="z-m-inputS1" placeholder="phase Name">' +
        '<button id="customPhase-addBtn" type="button" class="btn btn-primary">Add</button>' +
        '</div>' +
        '<p class="d-none">Select a phase to Add</p>' +
        '</div>' +
        '<div class="modal-footer">' +
        '<button id="addPhase-btn" type="button" class="btn btn-primary">Submit</button>' +
        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
        '</div>' +
        '</div>' +
        '</div>' +
        '</div>');
    if (notSelected_subPhase.length != 0)
        notSelected_subPhase.forEach(function (ary) {
            $('#notSelectedPhase_list').append('<div><input type="checkbox" name="notSelectedPhase" value="' + ary + '" class="z-m-checkbox z-checkbox-top notSelected-subPhase">' +
                '<label class="z-checkbox-text">' + ary + '</label></div>');
        });
    $('#addPhase-modal').modal('show');
    $('#addPhase-btn').on('click', function () {
        var newPhaseData = [];

        var checked_subPhases = document.querySelectorAll('.notSelected-subPhase:checked');
        // phaseKeyValue = currentLevel == 1 ? "phaseName" : 'level_' + currentLevel;
        if (checked_subPhases.length != 0) {
            checked_subPhases.forEach(function (subPhaseObj) {
                var newPhase = {};
                newPhase["phaseName"] = subPhaseObj.value;
                newPhaseData.push(newPhase);
            });
            callback(newPhaseData);
        } else {
            console.log("subPhase not selected");
        }

    });
    $('#customPhase-addBtn').on('click', function () {
        var customPhase_input = $('#customPhase-input').val();
        if (customPhase_input.trim().length > 0) {
            $('#notSelectedPhase_list').append('<div><input type="checkbox" name="notSelectedPhase" value="' + customPhase_input + '" class="z-m-checkbox z-checkbox-top notSelected-subPhase" checked>' +
                '<label class="z-checkbox-text">' + customPhase_input + '</label></div>');

            $('#customPhase-input').val("");
        }
    });
}



// well input data adding section
var z_wiJson_data;
var finalLevel_data = [];
var finalLevel_phaseData = [];

function wi_addLevel(wi_data, noOfLevel) {
    finalLevel_data = [];
    finalLevel_phaseData = [];
    z_wiJson_data = wi_data;
    document.getElementById('dynamicdata').innerHTML = "";
    noOfLevel = Number(noOfLevel);
    z_maxlevel = noOfLevel;
    $('#dynamicdataTitle').html("");
    $('#dynamicdataTitle').append('<div id="wi-phaseToggle-btn" class="btn z-m-btn3" data-displayStatus="hidden" onclick="phaseLevel_icon(this)"><i id="plus" class="fa fa-plus" aria-hidden="true"></i><i id="minus" class="fa fa-minus" aria-hidden="true"></i></div>' +
        ((1 <= z_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-units-Title z-borderRight wi-level"><div class="row justify-content-center"><b class="phase-title">Level1</b></div></div>' : "") +
        ((2 <= z_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-units-Title z-borderRight wi-level"><div class="row justify-content-center"><b class="phase-title">Level2</b></div></div>' : "") +
        ((3 <= z_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-units-Title z-borderRight wi-level"><div class="row justify-content-center"><b class="phase-title">Level3</b></div></div>' : "") +
        ((4 <= z_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-units-Title z-borderRight wi-level"><div class="row justify-content-center"><b class="phase-title">Level4</b></div></div>' : "") +
        ((5 <= z_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-units-Title z-borderRight wi-level"><div class="row justify-content-center"><b class="phase-title">Level5</b></div></div>' : "") +
        '<div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6 z-units-Title z-borderRight finalLevel-value"><div class="row justify-content-center"><b class="phase-title">Phase</b></div></div>' +
        '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="phase-title">MD</b></div></div>' +
        '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="phase-title">TVD</b></div></div>' +
        '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="phase-title">HOURS</b></div></div>');
    level_elaborate(wi_data, 1, '');
}
var z_maxlevel = 0;
var level1 = [];
var level1_phase = "";
var level1_phase_old = "";
var level2 = [];
var level2_phase = "";
var level2_phase_old = "";
var level3 = [];
var level3_phase = "";
var level3_phase_old = "";
var level4 = [];
var level4_phase = "";
var level4_phase_old = "";
var level5 = [];
var level5_phase = "";
var level5_phase_old = "";

async function level_elaborate(data, currentlevel) {
    var nextlevel = currentlevel + 1;
    data.map(function (obj, index) {
        var phaseValue = obj['phaseName'];
        var nextLevelData = obj['subLevels'];
        if (currentlevel == 1) {
            level1_phase = phaseValue;
            if (!nextLevelData) {
                level1_phase_old = phaseValue;
                level1.push(phaseValue);
                wi_levelDataNew(phaseValue, "", "", "", "", phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
            }
        } else if (currentlevel == 2) {
            level2_phase = phaseValue;
            if (!nextLevelData) {
                level1.push(level1_phase);
                level2.push(phaseValue);
                if (level1_phase == level1_phase_old) {
                    level2_phase_old = level2_phase;
                    wi_levelDataNew("", phaseValue, "", "", "", phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                } else {
                    level1_phase_old = level1_phase;
                    level2_phase_old = level2_phase;
                    wi_levelDataNew(level1_phase, phaseValue, "", "", "", phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                }
            }
        } else if (currentlevel == 3) {
            level3_phase = phaseValue;
            if (!nextLevelData) {
                level1.push(level1_phase);
                level2.push(level2_phase);
                level3.push(phaseValue);
                if (level1_phase == level1_phase_old && level2_phase == level2_phase_old) {
                    wi_levelDataNew("", "", phaseValue, "", "", phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                } else if (level1_phase == level1_phase_old) {
                    level2_phase_old = level2_phase;
                    wi_levelDataNew("", level2_phase, phaseValue, "", "", phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                } else {
                    level1_phase_old = level1_phase;
                    level2_phase_old = level2_phase;
                    level3_phase_old = phaseValue;
                    wi_levelDataNew(level1_phase, level2_phase, phaseValue, "", "", phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                }
            }
        } else if (currentlevel == 4) {
            level3_phase = phaseValue;
            if (!nextLevelData) {
                level1.push(level1_phase);
                level2.push(level2_phase);
                level2.push(level3_phase);
                level3.push(phaseValue);
                if (level1_phase == level1_phase_old && level2_phase == level2_phase_old && phaseValue == level3_phase_old) {
                    wi_levelDataNew("", "", "", phaseValue, "", phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                } else if (level1_phase == level1_phase_old && level2_phase == level2_phase_old) {
                    level3_phase_old = level3_phase;
                    level4_phase_old = phaseValue;
                    wi_levelDataNew("", "", level3_phase, phaseValue, "", phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                } else if (level1_phase == level1_phase_old) {
                    level2_phase_old = level2_phase;
                    level3_phase_old = level3_phase;
                    level4_phase_old = phaseValue;
                    wi_levelDataNew("", level2_phase, level3_phase, phaseValue, "", phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                } else {
                    level1_phase_old = level1_phase;
                    level2_phase_old = level2_phase;
                    level3_phase_old = level3_phase;
                    level4_phase_old = phaseValue;
                    wi_levelDataNew(level1_phase, level2_phase, level3_phase, phaseValue, "", phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                }
            }
        } else if (currentlevel == 5) {
            level3_phase = phaseValue;
            if (!nextLevelData) {
                level1.push(level1_phase);
                level2.push(level2_phase);
                level2.push(level3_phase);
                level2.push(level4_phase);
                level3.push(phaseValue);
                if (level1_phase == level1_phase_old && level2_phase == level2_phase_old && level3_phase == level3_phase_old && level4_phase == level4_phase_old) {
                    wi_levelDataNew("", "", "", "", phaseValue, phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                } else if (level1_phase == level1_phase_old && level2_phase == level2_phase_old && level3_phase == level3_phase_old) {
                    level4_phase_old = level4_phase;
                    level5_phase_old = phaseValue;
                    wi_levelDataNew("", "", "", level4_phase, phaseValue, phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                } else if (level1_phase == level1_phase_old && phaseValue == level2_phase_old) {
                    level3_phase_old = level3_phase;
                    level4_phase_old = level4_phase;
                    level5_phase_old = phaseValue;
                    wi_levelDataNew("", "", level3_phase, level4_phase, phaseValue, phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                } else if (level1_phase == level1_phase_old) {
                    level2_phase_old = level2_phase;
                    level3_phase_old = level3_phase;
                    level4_phase_old = level4_phase;
                    level5_phase_old = phaseValue;
                    wi_levelDataNew("", level2_phase, level3_phase, level4_phase, phaseValue, phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                } else {
                    level1_phase_old = level1_phase;
                    level2_phase_old = level2_phase;
                    level3_phase_old = level3_phase;
                    level4_phase_old = level4_phase;
                    level5_phase_old = phaseValue;
                    wi_levelDataNew(level1_phase, level2_phase, level3_phase, level4_phase, phaseValue, phaseValue, obj["md"], obj["tvd"], obj["hours_taken_for_operation"]);
                }
            }
        }
        if (nextLevelData) {
            level_elaborate(nextLevelData, nextlevel);
        } else {
            finalLevel_data.push(obj);
        }
    });
}

async function wi_levelDataNew(p1, p2, p3, p4, p5, finalLevel, md = "", tvd = "", hours_taken_for_operation = "") {
    $("#dynamicdata").append("<div class='row z-borderBottom wi-row flex-nowrap'>" +
        (1 <= z_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-respAlign z-borderRight wi-level' data-label='Phase'><div class='level-phase'>" + p1 + "</div></div>" : "") +
        (2 <= z_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-respAlign z-borderRight wi-level' data-label='Phase'><div class='level-phase'>" + p2 + "</div></div>" : "") +
        (3 <= z_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-respAlign z-borderRight wi-level' data-label='Phase'><div class='level-phase'>" + p3 + "</div></div>" : "") +
        (4 <= z_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-respAlign z-borderRight wi-level' data-label='Phase'><div class='level-phase'>" + p4 + "</div></div>" : "") +
        (5 <= z_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-respAlign z-borderRight wi-level' data-label='Phase'><div class='level-phase'>" + p5 + "</div></div>" : "") +
        "<div class='col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6 z-respAlign z-borderRight finalLevel-value' data-label='Phase'><div class='level-phase'>" + finalLevel + "</div></div>" +
        "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-respAlign z-borderRight' data-label='MD'>" +
        "<div class='z-m-val-field z-md z-dataAlign'>" +
        "<input type='text' name='levelMd' class='level-md' value=" + ((typeof (md)) === 'undefined' ? "" : md) + ">" +
        "</div>" +
        "</div>" +
        "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-respAlign z-borderRight' data-label='TVD'>" +
        "<div class='z-m-val-field z-tvd z-dataAlign'>" +
        "<input type='text' name='levelTvd' class='level-tvd' value=" + ((typeof (tvd)) === 'undefined' ? "" : tvd) + ">" +
        "</div>" +
        "</div>" +
        "<div class='col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-respAlign' data-label='HOURS'>" +
        "<input type='number' name='levelHours' class='level-Hours z-borderboxProp' value=" + ((typeof (hours_taken_for_operation)) === 'undefined' ? "" : hours_taken_for_operation) + ">" +
        "</div>" +
        "</div>" +
        "</div>");
}

// wi toogle phase
function phaseLevel_icon(e) {
    var displayStatus = $(e).attr('data-displayStatus');
    if (displayStatus == "hidden") {
        document.getElementById("minus").style.display = "block";
        document.getElementById("plus").style.display = "none";
        $('.wi-level').show();
        $('.finalLevel-value').hide();
        $(e).attr('data-displayStatus', "showen");
    } else {
        document.getElementById("minus").style.display = "none";
        document.getElementById("plus").style.display = "block";
        $('.wi-level').hide();
        $('.finalLevel-value').show();
        $(e).attr('data-displayStatus', "hidden");
    }
}

/* update license */
function updateLicenseUser() {
    var ul_typeOfLicense = $("#ul-typeOfLicense").val();
    if (ul_typeOfLicense == "multiple") {
        $('#numOfWellManager').attr("readonly", true);
        $('#numOfWellEngineer').attr("readonly", true);
        $('#numOfOtherUsers').attr("readonly", true);
        document.getElementById("numOfActiveUser-MultipleActive").style.display = "block";
        document.getElementById("numOfActiveUser").style.display = "none";

    } else {
        console.log("in");
        document.getElementById("numOfActiveUser-MultipleActive").style.display = "none";
        document.getElementById("numOfActiveUser").style.display = "block";
        $('#numOfActiveUser').attr("readonly", false);
        $('#numOfWellManager').attr("readonly", false);
        $('#numOfWellEngineer').attr("readonly", false);
        $('#numOfOtherUsers').attr("readonly", false);
    }
}



var LoadWellList;
var selected_phase_list;
// well scheme list and form upload
function wellupload(LoadWellList, wellType, wellLandscape) {
    selected_phase_list = [];
    $("#list-wellScheme").html("");
    LoadWellList.forEach(function (item, indx) {
        console.log(item);
        var phasename = item.phaseName;
        if (typeof (LoadWellList[0].wellscheme) === 'undefined') {
            LoadWellList[0].wellscheme = {};
        }
        var wellscheme = LoadWellList[0].wellscheme;
        // upload the LIST
        selected_phase_list.push(phasename);
        $("#list-wellScheme").append('<li class="z-tableData-row z-l-phase-box" wellType="' + wellType + '" wellLandscape="' + wellLandscape + '" wellschemeIndex="' + indx + '"code="' + item.code + '" onClick="wellschemeListClick(this)"><div class="z-ws-activity-code">' + item.code + '</div> <div class="z-l-phase z-l1-phase z-ws-phase">' + phasename + '</div><div class="z-l-closeBtn" index="' + indx + '">x</div></li>');
        $('.wellschemeActive').removeClass('wellschemeActive');
        $('#list-wellScheme li:first').addClass('wellschemeActive');
        var firstActive = $('#list-wellScheme li:first')[0]["children"][1].innerHTML;
        if (phasename == firstActive) {
            if (wellscheme) {
                for (var wellNo in wellscheme) {
                    $("#" + wellNo + "").val(wellscheme[wellNo]);
                }
            } else { }
            if (wellType == "onShore") {
                console.log("Onshore");
                $('#groundElevation-value').addClass('valueWellsection-enable');
                $('#waterDepth-value').addClass('valueWellsection-disable');

            } else {
                console.log("IfOffshore");
                $('#waterDepth-value').addClass('valueWellsection-enable');
                $('#groundElevation-value').addClass('valueWellsection-disable');
            }
            var listItem = $('#list-wellScheme li:first');
            wellschemeListClick(listItem[0]);
        }
    });
    $("#list-wellScheme").append('<div class="btn z-m-btn3" id="ws-lev1-addphase">Add Phase</div>');
    wsDeletebtn();
}

// WellScheme List Click

// // array collection
// var allWellSections = ['Mobilization - Start of Well Time', 'Rig Acceptance/ Pre-Spud  Survey', 'Preparations to Commence  Drilling'];
// var secWellSections = ['Conductor  Section', 'Surface Casing Section  1', 'Surface Casing Section  2', 'Intermediate Casing Section  1', 'Intermediate Casing Section  2', 'Intermediate Casing Section  3', 'Intermediate Casing Section  4', 'Production Section 1A (Casing to  Surface)', 'Production Section 1B (Casing to  Surface)', 'Production Section 2A  (Casing Run as  Liner)', 'Production Section 2B (Casing Run as  Liner)'];
// var thirdWellSections = ['Lower Completions 1 (Open Hole  Screens)', 'Lower Completions 2 (Gravel  Pack)', 'Upper  Completions 1','Upper  Completions 2', 'Upper Completions 2'];
// var fourWellSections = ['Well Testing','Rig Suspension','Rig Release From  Well', 'Rid De-Mobilization after  Project'];
// var fifthWellSections = ['Plug and Abandonment'];

// click function
function wellschemeListClick(listItem) {
    $("#z-wellSel-wrap").fadeOut("fast");
    $("#z-wellSel-wrap").fadeIn("slow");
    // $(".z-wellSel").toggle("slide");
    // $(".z-wellSel").toggle("slide");
    var selectedlist_scheme = listItem;

    // Higlighting the selected
    if ($("#list-wellScheme li").hasClass("wellschemeActive")) {
        console.log("in");
        $("#list-wellScheme li").removeClass("wellschemeActive");
        selectedlist_scheme.classList.add("wellschemeActive");
    }

    var finalselectedwellScheme = listItem["children"][1].innerHTML;
    var selectedwellCode = parseInt(listItem["children"][0].innerHTML);
    console.log(finalselectedwellScheme);
    var wellclick = listItem.getAttribute("wellType");
    var schemeIndex = listItem.getAttribute("wellschemeIndex");
    if (typeof (LoadWellList[schemeIndex].wellscheme) === 'undefined') {
        LoadWellList[schemeIndex].wellscheme = {};
    }
    var wellscheme = LoadWellList[schemeIndex].wellscheme;
    $('.z-ws-fieldValue').val('');
    if (wellscheme) {
        for (var wellNo in wellscheme) {
            $("#" + wellNo + "").val(wellscheme[wellNo]);
        }
    }

    if (selectedwellCode) {
        if (selectedwellCode > 0 && selectedwellCode < 61) {
            console.log("1");
            // hide
            $('.z-ws-field').removeClass('valueWellsection-enable');
            if (wellclick == "OnShore") {
                $('#groundElevation-value').addClass('valueWellsection-enable');
            } else {
                $('#waterDepth-value').addClass('valueWellsection-enable');
            }
        } else if (selectedwellCode > 60 && selectedwellCode < 281) {
            console.log("2");
            // show
            $('.z-ws-field').removeClass('valueWellsection-enable');

            $('#depthFrom-value').addClass('valueWellsection-enable');
            $('#depthTo-value').addClass('valueWellsection-enable');
            $('#tvdFrom-value').addClass('valueWellsection-enable');
            $('#tvdTo-value').addClass('valueWellsection-enable');
            $('#holeSize-value').addClass('valueWellsection-enable');
            $('#casingSize-value').addClass('valueWellsection-enable');

        } else if (selectedwellCode > 280 && selectedwellCode < 361) {
            console.log("3");
            // show
            $('.z-ws-field').removeClass('valueWellsection-enable');

            $('#depthFrom-value').addClass('valueWellsection-enable');
            $('#depthTo-value').addClass('valueWellsection-enable');
            $('#tvdFrom-value').addClass('valueWellsection-enable');
            $('#tvdTo-value').addClass('valueWellsection-enable');
            $('#packerDepth-value').addClass('valueWellsection-enable');
            $('#casingSize-value').addClass('valueWellsection-enable');
            if (selectedwellCode > 320 && selectedwellCode < 361) {
                $('#tubingSize-value').addClass('valueWellsection-enable');
            }
        } else if (selectedwellCode > 360 && selectedwellCode < 381) {
            $('.z-ws-field').removeClass('valueWellsection-enable');
            if (wellclick == "OnShore") {
                $('#groundElevation-value').addClass('valueWellsection-enable');
                $("#groundElevation").val(ws_rawJson.groundElevation);
            } else {
                $('#waterDepth-value').addClass('valueWellsection-enable');
                $('#waterDepth-value').val(ws_rawJson.waterDepth);
            }
        } else if (selectedwellCode > 400) {
            console.log("4");
            // show
            $('.z-ws-field').removeClass('valueWellsection-enable');
            if (wellclick == "OnShore") {
                $('#groundElevation-value').addClass('valueWellsection-enable');

            } else {
                $('#waterDepth-value').addClass('valueWellsection-enable');

            }

        } else if (selectedwellCode > 380 && selectedwellCode < 401) {
            console.log("5");
            // show
            $('.z-ws-field').removeClass('valueWellsection-enable');
            $('.z-numberOfPlugZones').addClass('valueWellsection-enable');
            $('.z-cementPlugHeight').addClass('valueWellsection-enable');
        } else {
            console.log("all");
            // show
            $('.z-ws-field').removeClass('valueWellsection-enable');
            $('.z-ws-field').addClass('valueWellsection-enable');
        }
    } else {
        console.log("make click");
    }

}

// To Show a Level-1 data of Well
var globalWellInputs = [];
var ws_jsonData;
var ws_rawJson;

function wellScheme_wellUpdate(well_id_parameter) {
    // $('.z-rightSection-active').removeClass('z-rightSection-active');
    // $('#z-wellSchemeDetails-wrap').addClass('z-rightSection-active');
    $('.z-ws-field').removeClass('valueWellsection-enable');
    var data = {
        wellId: well_id_parameter,
        clientId: clientId
    }
    var projectId;
    $.ajax({
        url: "/api/getWell",
        type: "GET",
        data: data,
        dataType: 'json',
        contentType: 'application/json;charset=UTF-8',
        success: function (result) {
            console.log(result.wellInputs);
            document.getElementById('z-wellScheme-save').setAttribute('data-ws-wellId', result.id);
            var resultWellInputs = JSON.parse(result.wellInputs);
            ws_rawJson = result;
            var wellType = result.wellType;
            var wellLandscape = result.wellLandscape;
            subphases_data("newWell");
            if (resultWellInputs.length == 0) {
                temp_data2 = { wellId: well_id_parameter };
                call_ajax("/api/getTemplate", "GET", temp_data2, 'json', 'application/json;charset=UTF-8', false, function (template_result) {
                    if (template_result.status == "success") {
                        var template_result_data = template_result.data[0];
                        if (template_result.data.length != 0) {
                            $('#z-wi-baseTemplate-id').val(template_result_data.baseTemplateId);
                            $('#z-wi-baseTemplate-name').val(template_result_data.baseTemplateName);
                            resultWellInputs = JSON.parse(template_result_data.template);
                            ws_jsonData = resultWellInputs;
                            globalWellInputs = resultWellInputs;
                            LoadWellList = resultWellInputs;
                            document.getElementById('z-wellScheme-save').setAttribute('data-ws-wellInputLevel', result.templateLevel);
                            wellupload(resultWellInputs, wellType, wellLandscape);
                        }
                    } else {
                        console.log("Ajax Error");
                        console.log(template_result);
                    }
                });
            } else {
                document.getElementById('z-wellScheme-save').setAttribute('data-ws-wellInputLevel', result.wellInputLevel);
                ws_jsonData = resultWellInputs;
                globalWellInputs = resultWellInputs;
                LoadWellList = resultWellInputs;
                wellupload(resultWellInputs, wellType, wellLandscape);
            }

        }
    });
}

// To save a WellScheme objects
function wellScheme_save() {
    var wellschemeActive = document.getElementsByClassName('wellschemeActive')[0];
    var wellschemeActive_indx = parseInt($(".wellschemeActive").index()); //parseInt(wellschemeActive.getAttribute('wellschemeindex'));
    var valueWellsection_enable = $('.valueWellsection-enable');
    typeof (ws_jsonData[wellschemeActive_indx].wellscheme) === 'undefined' ? ws_jsonData[wellschemeActive_indx].wellscheme = {} : '';
    Array.from(valueWellsection_enable).forEach((el, indx) => {
        var data_ws_name = el.getAttribute('data-ws-name');
        var ws_value = document.getElementById(data_ws_name).value;
        ws_jsonData[wellschemeActive_indx].wellscheme[data_ws_name] = ws_value;
    });
}

function wellScheme_finalSave(e) {
    var data_ws_wellId = e.getAttribute('data-ws-wellId');
    var data_ws_wellInputLevel = e.getAttribute('data-ws-wellInputLevel');
    var data = {
        wellInputJson: JSON.stringify(ws_jsonData),
        wellId: data_ws_wellId,
        wellInputLevel: data_ws_wellInputLevel
    };
    data = JSON.stringify(data);

    __wiJson = ws_jsonData;
    alertPopup('success', "Well Scheme added Successfully");
    // call_ajax("/api/addWellInput", "POST", data, 'text', 'application/json;charset=UTF-8', false, function (addWellInput_result) {
    //     if (addWellInput_result.status == "success") {
    //         var addWellInput_result_data = addWellInput_result.data;
    //         if (addWellInput_result_data == "Success:Done") {
    //             alertPopup('success', "Well Scheme added Successfully");
    //             // z_wellsSection_active(false, false);
    //         } else
    //             alertPopup('alert', "Well Scheme failed to update");
    //     }else{
    //         console.log(addWellInput_result);
    //     }
    // });
}

function wellScheme_back() {
    z_wellsSection_active(false, false);
}




// activity open
function z_open_activityCode() {
    if (!$('#z-activityCode-wrap').hasClass('z-rightSection-active')) {

        // main section
        $('.z-rightSection-active').removeClass('z-rightSection-active');
        $('#z-activityCode-wrap').addClass('z-rightSection-active');
        z_activityCode();
    }
}

/* new activity */

// phasename and code Title update
function z_activityCode(template, level) {
    noOfLevel = Number(level);
    P_maxlevel = noOfLevel;
    $('#activityTitle').html("");
    $("#activityTitle").append(
        ((1 <= P_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="phase-title">Level1</b></div></div>' : "") +
        ((1 <= P_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="code">Code</b></div></div>' : "") +
        ((2 <= P_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="phase-title">Level2</b></div></div>' : "") +
        ((2 <= P_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="code">Code</b></div></div>' : "") +
        ((3 <= P_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="phase-title">Level3</b></div></div>' : "") +
        ((3 <= P_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="code">Code</b></div></div>' : "") +
        ((4 <= P_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="phase-title">Level4</b></div></div>' : "") +
        ((4 <= P_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="code">Code</b></div></div>' : "") +
        ((5 <= P_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-units-Title z-borderRight"><div class="row justify-content-center"><b class="phase-title">Level5</b></div></div>' : "") +
        ((5 <= P_maxlevel) ? '<div class="col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1 z-units-Title"><div class="row justify-content-center"><b class="code">Code</b></div></div>' : "")
    );
    wellCategoryTemplateDataAssign(template, 1, '');
}

// phasename and code update
var P_maxlevel = 0;
var lvl1 = [];
var lvl1_phase = "";
var lvl1_phase_old = "";
var lvl2 = [];
var lvl2_phase = "";
var lvl2_phase_old = "";
var lvl3 = [];
var lvl3_phase = "";
var lvl3_phase_old = "";
var lvl4 = [];
var lvl4_phase = "";
var lvl4_phase_old = "";
var lvl5 = [];
var lvl5_phase = "";
var lvl5_phase_old = "";
var finallvl_data = [];

var lvl1_code = "";
var lvl1_code_old = "";
var codelvl1 = [];
var lvl2_code = "";
var lvl2_code_old = "";
var codelvl2 = [];
var lvl3_code = "";
var lvl3_code_old = "";
var codelvl3 = [];

function wellCategoryTemplateDataAssign(data, currentlvl) {
    if (!$('#z-well-category-template').hasClass('z-rightSection-active')) {
        // main section
        $('.z-rightSection-active').removeClass('z-rightSection-active');
        $('#z-well-category-template').addClass('z-rightSection-active');
    }

    var nextLvl = currentlvl + 1;
    data.map(function (obj, index) {
        var phaseVal = obj['phaseName'];
        var code = obj['code'];
        var nextLvlData = obj['subLevels'];
        console.log(nextLvlData);
        if (currentlvl == 1) {
            lvl1_phase = phaseVal;
            lvl1_code = code;
            if (!nextLvlData) {
                console.log(nextLvlData);
                lvl1_phase_old = phaseVal;
                lvl1_code_old = code;
                lvl1.push(phaseVal);
                codelvl1.push(code);
                wi_lvlDataNew(phaseVal, code, "", "", "", "", "", "", "", "");
            }
        } else if (currentlvl == 2) {
            lvl2_phase = phaseVal;
            lvl2_code = code;
            if (!nextLvlData) {
                console.log(nextLvlData);
                lvl1.push(lvl1_phase);
                lvl2.push(phaseVal);
                codelvl1.push(lvl1_code);
                codelvl2.push(code);
                if (lvl1_phase == lvl1_phase_old && lvl1_code == lvl1_code_old) {
                    lvl2_phase_old = lvl2_phase;
                    lvl2_code_old = lvl2_code
                    wi_lvlDataNew("", "", phaseVal, code, "", "", "", "", "", "");
                } else {
                    lvl1_phase_old = lvl1_phase;
                    lvl2_phase_old = lvl2_phase;
                    lvl1_code_old = lvl1_code;
                    lvl2_code_old = lvl2_code;
                    wi_lvlDataNew(lvl1_phase, lvl1_code, phaseVal, code, "", "", "", "");
                }
            }
        } else if (currentlvl == 3) {
            lvl3_phase = phaseVal;
            lvl3_code = code;
            if (!nextLvlData) {
                console.log(nextLvlData);
                lvl1.push(lvl1_phase);
                lvl2.push(lvl2_phase);
                lvl3.push(phaseVal);
                codelvl1.push(lvl1_code);
                codelvl2.push(lvl2_code);
                codelvl3.push(code);
                if (lvl1_phase == lvl1_phase_old && lvl2_phase == lvl2_phase_old && lvl1_code == lvl1_code_old && lvl2_code == lvl2_code_old) {
                    wi_lvlDataNew("", "", "", "", phaseVal, code, "", "", "", "");
                } else if (lvl1_phase == lvl1_phase_old && lvl1_code == lvl1_code_old) {
                    lvl2_phase_old = lvl2_phase;
                    lvl2_code_old = lvl2_code;
                    wi_lvlDataNew("", "", lvl2_phase, lvl2_code, phaseVal, code, "", "", "", "");
                } else {
                    lvl1_phase_old = lvl1_phase;
                    lvl2_phase_old = lvl2_phase;
                    lvl3_phase_old = phaseVal;
                    lvl1_code_old = lvl1_code;
                    lvl2_code_old = lvl2_code;
                    lvl3_code_old = code;
                    wi_lvlDataNew(lvl1_phase, lvl1_code, lvl2_phase, lvl2_code, phaseVal, code, "", "", "", "");
                }
            }
        } else if (currentlvl == 4) {
            lvl3_phase = phaseVal;
            lvl3_code = code;
            if (!nextLvlData) {
                console.log(nextLvlData);
                lvl1.push(lvl1_phase);
                lvl2.push(lvl2_phase);
                lvl3.push(phaseVal);
                codelvl1.push(lvl1_code);
                codelvl2.push(lvl2_code);
                codelvl3.push(code);
                if (lvl1_phase == lvl1_phase_old && lvl2_phase == lvl2_phase_old && phaseVal == lvl3_phase_old && lvl1_code == lvl1_code_old && lvl2_code == lvl2_code_old && code == lvl3_code_old) {
                    wi_lvlDataNew("", "", "", "", "", "", phaseVal, code, "", "");
                } else if (lvl1_phase == lvl1_phase_old && lvl2_phase == lvl2_phase_old && lvl1_code == lvl1_code_old && lvl2_code == lvl2_code_old) {
                    lvl3_phase_old = lvl3_phase;
                    lvl4_phase_old = phaseVal;
                    lvl3_code_old = lvl3_code;
                    lvl4_code_old = code;
                    wi_lvlDataNew("", "", "", "", lvl3_phase, lvl3_code, phaseVal, code, "", "");
                } else if (lvl1_phase == lvl1_phase_old && lvl1_code == lvl1_code_old) {
                    lvl2_phase_old = lvl2_phase;
                    lvl3_phase_old = lvl3_phase;
                    lvl4_phase_old = phaseVal;
                    lvl2_code_old = lvl2_code;
                    lvl3_code_old = lvl3_code;
                    lvl4_code_old = code;
                    wi_lvlDataNew("", "", lvl2_phase, lvl2_code, lvl3_phase, lvl3_code, phaseVal, code, "", "");
                } else {
                    lvl1_phase_old = lvl1_phase;
                    lvl2_phase_old = lvl2_phase;
                    lvl3_phase_old = lvl3_phase;
                    lvl4_phase_old = phaseVal;
                    lvl1_code_old = lvl1_code;
                    lvl2_code_old = lvl2_code;
                    lvl3_code_old = lvl3_code;
                    lvl4_code_old = code;
                    wi_levelDataNew(lvl1_phase, lvl1_code, lvl2_phase, lvl2_code, lvl3_phase, lvl3_code, phaseVal, code, "", "");
                }
            }
        } else if (currentlvl == 5) {
            level3_phase = phaseVal;
            level3_code = code;
            if (!nextLvlData) {
                console.log(nextLvlData);
                lvl1.push(lvl1_phase);
                lvl2.push(lvl2_phase);
                lvl2.push(lvl3_phase);
                lvl2.push(lvl4_phase);
                lvl3.push(phaseVal);
                codelvl1.push(lvl1_code);
                codelvl2.push(lvl2_code);
                codelvl2.push(lvl3_code);
                codelvl2.push(lvl4_code);
                codelvl3.push(code);
                if (lvl1_phase == lvl1_phase_old && lvl2_phase == lvl2_phase_old && lvl3_phase == lvl3_phase_old && lvl4_phase == lvl4_phase_old && lvl1_code == lvl1_code_old && lvl2_code == lvl2_code_old && lvl3_code == lvl3_code_old && lvl4_code == lvl4_code_old) {
                    wi_lvlDataNew("", "", "", "", "", "", "", "", phaseVal, code);
                } else if (lvl1_phase == lvl1_phase_old && lvl2_phase == lvl2_phase_old && lvl3_phase == lvl3_phase_old && lvl1_code == lvl1_code_old && lvl2_code == lvl2_code_old && lvl3_code == lvl3_code_old) {
                    lvl4_phase_old = lvl4_phase;
                    lvl5_phase_old = phaseVal;
                    lvl4_code_old = lvl4_code;
                    lvl5_code_old = code;
                    wi_lvlDataNew("", "", "", "", "", "", lvl4_phase, lvl4_code, phaseVal, code);
                } else if (lvl1_phase == lvl1_phase_old && phaseVal == lvl2_phase_old && lvl1_code == lvl1_code_old && code == lvl2_code_old) {
                    lvl3_phase_old = lvl3_phase;
                    lvl4_phase_old = lvl4_phase;
                    lvl5_phase_old = phaseVal;
                    lvl3_code_old = lvl3_code;
                    lvl4_code_old = lvl4_code;
                    lvl5_code_old = code;
                    wi_lvlDataNew("", "", "", "", lvl3_phase, lvl3_code, lvl4_phase, lvl4_code, phaseVal, code);
                } else if (lvl1_phase == lvl1_phase_old) {
                    lvl2_phase_old = lvl2_phase;
                    lvl3_phase_old = lvl3_phase;
                    lvl4_phase_old = lvl4_phase;
                    lvl5_phase_old = phaseVal;
                    lvl2_code_old = lvl2_code;
                    lvl3_code_old = lvl3_code;
                    lvl4_code_old = lvl4_code;
                    lvl5_code_old = code;
                    wi_lvlDataNew("", "", lvl2_phase, lvl2_code, lvl3_phase, lvl3_code, lvl4_phase, lvl4_code, phaseVal, code);
                } else {
                    lvl1_phase_old = lvl1_phase;
                    lvl2_phase_old = lvl2_phase;
                    lvl3_phase_old = lvl3_phase;
                    lvl4_phase_old = lvl4_phase;
                    lvl5_phase_old = phaseVal;
                    lvl1_code_old = lvl1_code;
                    lvl2_code_old = lvl2_code;
                    lvl3_code_old = lvl3_code;
                    lvl4_code_old = lvl4_code;
                    lvl5_code_old = code;
                    wi_lvlDataNew(lvl1_phase, lvl1_code, lvl2_phase, lvl2_code, lvl3_phase, lvl3_code, lvl4_phase, lvl4_code, phaseVal, code);
                }
            }
        }
        if (nextLvlData) {
            wellCategoryTemplateDataAssign(nextLvlData, nextLvl);
        } else {
            finallvl_data.push(obj);
        }
    });
}

// Display phasename and code
function wi_lvlDataNew(p1, c1, p2, c2, p3, c3, p4, c4, p5, c5) {
    console.log(p1, p2, p3, p4, p5);
    $("#z-well-category-template-content").append("<div class='row z-borderBottom wi-row flex-nowrap'>" +
        (1 <= P_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-respAlign z-borderRight' data-label='Phase'><div class='level1'>" + p1 + "</div></div>" : "") +
        (1 <= P_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1 z-respAlign z-borderRight' data-label='Phase'><div class='code'>" + c1 + "</div></div>" : "") +
        (2 <= P_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-respAlign z-borderRight' data-label='Phase'><div class='level2'>" + p2 + "</div></div>" : "") +
        (2 <= P_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1 z-respAlign z-borderRight' data-label='Phase'><div class='code'>" + c2 + "</div></div>" : "") +
        (3 <= P_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-respAlign z-borderRight' data-label='Phase'><div class='level3'>" + p3 + "</div></div>" : "") +
        (3 <= P_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1 z-respAlign z-borderRight' data-label='Phase'><div class='code'>" + c3 + "</div></div>" : "") +
        (4 <= P_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-respAlign z-borderRight' data-label='Phase'><div class='level4'>" + p4 + "</div></div>" : "") +
        (4 <= P_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1 z-respAlign z-borderRight' data-label='Phase'><div class='code'>" + c4 + "</div></div>" : "") +
        (5 <= P_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-respAlign z-borderRight' data-label='Phase'><div class='level5'>" + p5 + "</div></div>" : "") +
        (5 <= P_maxlevel ? "<div class='col-12 col-sm-12 col-md-12 col-lg-1 col-xl-1 z-respAlign' data-label='Phase'><div class='code'>" + c5 + "</div></div>" : "") +
        "</div>");
}


// Settings Page New Well Template
function z_open_wellTemplateCode(identity) {
    var templateName = identity.getAttribute("templateName");
    var data = {
        "templateName": templateName
    };
    $.ajax({
        url: "api/getTemplate",
        data: data,
        type: "GET",
        dataType: 'json',
        contentType: 'application/json;charset=UTF-8',
        success: function (template_result) {
            var temp = JSON.parse(template_result[0].template);
            var tempLevel = parseInt(template_result[0].templateLevel);
            wellCategoryTemplateData(temp, tempLevel);
            // $("#z-well-category-Title").html(wellCategory).css('textTransform', 'capitalize');
        }
    });
}

// wellCategoryTemplate
function wellCategoryTemplateData(template, level) {

    if (!$('#z-well-category-template').hasClass('z-rightSection-active')) {
        // main section
        $('.z-rightSection-active').removeClass('z-rightSection-active');
        $('#z-well-category-template').addClass('z-rightSection-active');
        z_activityCode(template, level);
    }
}

// wellCategoryTemplate Back
function z_wellCategory_template_back() {
    if (!$('#z-settings-Change').hasClass('z-rightSection-active')) {
        // main section
        $('.z-rightSection-active').removeClass('z-rightSection-active');
        $('#z-settings-Change').addClass('z-rightSection-active');
    }
}

/* --- WellScheme Delete btn --- Start */
function wsDeletebtn() {
    $(".z-l-closeBtn").click(function () {
        var wsparent = $(this).parent();
        var wsindex = $(this).parent().index();
        // console.log($(this).parent().index());
        confirmation_Popup("Are you sure want to Delete this Phase", function () {
            console.log(wsparent[0]);
            var temp_deleteIndx = selected_phase_list.indexOf(wsparent[0].getElementsByClassName('z-l-phase')[0].innerHTML);
            selected_phase_list.splice(temp_deleteIndx, 1);
            deletephase(ws_jsonData[wsindex], ws_jsonData, ws_jsonData[wsindex].code, parseInt(wsindex));


            if ($(".wellschemeActive").index() == parseInt(wsindex)) {
                $("#list-wellScheme li").removeClass("wellschemeActive");
                if (typeof ($("#list-wellScheme li")[parseInt(23) + 1]) == "undefined") {
                    $("#list-wellScheme li")[0].classList.add("wellschemeActive");
                } else {
                    $("#list-wellScheme li")[parseInt(wsindex) + 1].classList.add("wellschemeActive");
                }

                $("#list-wellScheme li")[parseInt(wsindex)].remove();
            } else {
                $("#list-wellScheme li")[parseInt(wsindex)].remove();
            }
            clearConfirmationPopup();
        });


    });
    /* --- WellScheme Add Phase btn --- Start */
    $("#ws-lev1-addphase").click(function () {


        var ws_type = $("#list-wellScheme li.wellschemeActive").attr("welltype");
        var ws_landscape = $("#list-wellScheme li.wellschemeActive").attr("welllandscape");
        var ws_currentlevel = 1;
        //         var selected_phase_list =[];
        //         for(var i = 0; i< $("#list-wellScheme .z-tableData-row.z-l-phase-box .z-l-phase.z-l1-phase").length; i++){
        //             selected_phase_list.push($("#list-wellScheme .z-tableData-row.z-l-phase-box .z-l-phase.z-l1-phase")[i].innerHTML );
        //         }
        var notSelected_rawPhase = subphases.level1.filter(function (object) {
            if (selected_phase_list.indexOf(object) == -1) {
                return object;
            }
        });
        notSelected_subPhase = notSelected_rawPhase;
        // for(var i = 0; i< notSelected_rawPhase.length; i++){
        //     notSelected_subPhase.push(notSelected_rawPhase[i].phaseName );
        // }
        // addPhase(notSelected_subPhase, ws_currentlevel, ws_type, ws_landscape, test );
        addPhase(notSelected_subPhase, ws_currentlevel, ws_type, ws_landscape, function (newPhaseData) {
            var currentLevel_activePhase = document.getElementsByClassName('wellschemeActive')[0];

            var selectedCode;
            if (currentLevel_activePhase) {
                selectedCode = currentLevel_activePhase.getAttribute('code');
            } else {
                var lastphase = document.getElementsByClassName('z-l-phase-box');
                selectedCode = lastphase[lastphase.length - 1].getAttribute('code');
            }
            newPhaseData.forEach(function (obj_newPhaseData) {

                // // old insert code
                // dataInsert_pos += idx;
                // data.splice(dataInsert_pos, 0, obj_newPhaseData);

                //new insert code with code value
                var insertion_data = {
                    'levelValue': ws_currentlevel,
                    'phaseName': obj_newPhaseData.phaseName
                }
                var slicedData = ws_jsonData.find(function (_val) {
                    return _val.code == selectedCode
                });
                var slicedData_idx = ws_jsonData.findIndex(function (_val) {
                    return _val.code == selectedCode
                });

                if (subphases.level1.includes(obj_newPhaseData.phaseName)) {
                    var temp_subphase_index = jQuery.inArray(obj_newPhaseData.phaseName, subphases.level1);
                    var temp_subphase_limit = subphases.level1[temp_subphase_index + 1];
                    var temp_parent_limit = 0;
                    ws_jsonData.find(function (item, i) {
                        if (item.phaseName === temp_subphase_limit) {
                            temp_parent_limit = i;
                        }
                    });

                    //jQuery.inArray(temp_subphase_limit, ws_jsonData);
                    var temp_code_half = parseInt((temp_subphase_index * 20) + 1);
                    var temp_code = ("00" + temp_code_half).slice(-3);
                    ws_jsonData.splice((temp_parent_limit), 0, {
                        "levelValue": ws_currentlevel,
                        "code": temp_code,
                        "phaseName": obj_newPhaseData.phaseName
                    });
                } else {
                    selectedCode = insertPhase(slicedData, ws_jsonData, selectedCode, slicedData_idx, insertion_data);
                }
            });
            $('#addPhase-modal').modal('hide');
            document.getElementById('addPhase-modal').remove();
            var activePhase = document.getElementsByClassName('wellschemeActive')[0];
            if (activePhase) {
                var activePhaseValue = activePhase.getElementsByClassName('z-l-phase')[0].innerText;
                ws_phaseData(ws_jsonData, ws_type, ws_landscape, ws_currentlevel, '3', "level1", activePhaseValue);
            } else {
                ws_phaseData(ws_jsonData, ws_type, ws_landscape, ws_currentlevel, '3', "level1");
            }
        });
    });
    /* --- WellScheme Add Phase btn --- End */
}

function ws_phaseData(LoadWellList, wellType, wellLandscape, ws_currentlevel, maxLevel, parentPhase, activePhaseValue) {
    $("#list-wellScheme").html("");
    selected_phase_list = [];
    LoadWellList.forEach(function (item, indx) {
        console.log(item);
        var phasename = item.phaseName;
        if (typeof (LoadWellList[0].wellscheme) === 'undefined') {
            LoadWellList[0].wellscheme = {};
        }
        selected_phase_list.push(phasename);
        var wellscheme = LoadWellList[0].wellscheme;
        // upload the LIST
        $("#list-wellScheme").append('<li class="z-tableData-row z-l-phase-box" wellType="' + wellType + '" wellLandscape="' + wellLandscape + '" wellschemeIndex="' + indx + '"code="' + item.code + '" onClick="wellschemeListClick(this)"><div class="z-ws-activity-code">' + item.code + '</div> <div class="z-l-phase z-l1-phase z-ws-phase">' + phasename + '</div><div class="z-l-closeBtn" index="' + indx + '">x</div></li>');
        $('.wellschemeActive').removeClass('wellschemeActive');
        $('#list-wellScheme li:first').addClass('wellschemeActive');
        var firstActive = $('#list-wellScheme li:first')[0]["children"][1].innerHTML;
        if (phasename == firstActive) {
            if (wellscheme) {
                for (var wellNo in wellscheme) {
                    $("#" + wellNo + "").val(wellscheme[wellNo]);
                }
            } else { }
            if (wellType == "onShore") {
                console.log("Onshore");
                $('#groundElevation-value').addClass('valueWellsection-enable');
                $('#waterDepth-value').addClass('valueWellsection-disable');

            } else {
                console.log("IfOffshore");
                $('#waterDepth-value').addClass('valueWellsection-enable');
                $('#groundElevation-value').addClass('valueWellsection-disable');
            }

        }
    });
    var listItem = $('#list-wellScheme li:first');
    wellschemeListClick(listItem[0]);
    $("#list-wellScheme").append('<div class="btn z-m-btn3" id="ws-lev1-addphase">Add Phase</div>');
    wsDeletebtn();
}
/* --- WellScheme Delete btn --- End */

/* --- Time Estimation Level-1 ---Start */
var estimateTime;
var activities = ['pre_drilling_activities',
    'drilling_activities',
    'completion_activities',
    'post_completion_activities'
];
var pre_drilling_activities = [0, 61];
var drilling_activities = [60, 281];
var casing_activities = [];
var cementing_activities = [];
var completion_activities = [280, 361];
var post_completion_activities = [360];
var wellhead_activities = [];
var plug_and_abondonment = [];
var ws_well_template;

function wellScheme_timeEstimation(well_id_parameter) {
    // $('.z-rightSection-active').removeClass('z-rightSection-active');
    // $('#z-wellSchemeTimeEstimation-wrap').addClass('z-rightSection-active');
    // $('.z-ws-field').removeClass('valueWellsection-enable');
    // if (!$('#z-timeEstimation-wrap').hasClass('z-rightSection-active')) {
    //     // main section
    //     $('.z-rightSection-active').removeClass('z-rightSection-active');
    //     $('#z-timeEstimation-wrap').addClass('z-rightSection-active');
    // }
    var data = {
        wellId: well_id_parameter,
        clientId: clientId
    }
    var projectId;
    $.ajax({
        url: "/api/getWell",
        type: "GET",
        data: data,
        dataType: 'json',
        contentType: 'application/json;charset=UTF-8',
        success: function (result) {
            ws_well_template = __wiJson;
            estimateTime = result;
            var wellType = result.wellType;
            var wellLandscape = result.wellLandscape;
            $('#z-chooseTimeEstimation-list-wrap').html('');
            activities.forEach(function (item, indx) {
                var name = item.replace(/_/g, " ");
                $("#z-chooseTimeEstimation-list-wrap").append('<div class="TitleVertical-box" groupName="' + item + '" onClick=z_append_timeEstimation(this)>' + name + '</div>');
            });
            $('.TitleVertical-box:first').addClass('wellschemeActive');
            document.getElementById('z-timeEstimation-save').setAttribute('data-ws-wellId', result.id);
            document.getElementById('z-timeEstimation-save').setAttribute('data-ws-wellInputLevel', result.wellInputLevel);
            // document.getElementById('z-timeEstimation-mainPage').setAttribute('data-ws-wellId', result.id);
            // document.getElementById('z-timeEstimation-mainPage').setAttribute('data-ws-wellInputLevel', result.wellInputLevel);
            z_append_timeEstimation($('.TitleVertical-box:first')[0]);
        }
    });
}

function z_append_timeEstimation(e) {
    $('.TitleVertical-box').removeClass('wellschemeActive');
    e.classList.add("wellschemeActive");

    $("#z-timeEstimation-list-value").empty();
    ws_well_template.forEach(function (item, indx) {
        var phasename = item.phaseName;
        var code = item.code;
        var activity_array = eval(e.getAttribute("groupName"));
        if (activity_array.length) {
            if (activity_array.length > 1) {
                if (code > activity_array[0] && code < activity_array[1]) {
                    if (e.getAttribute("groupName") == "drilling_activities") {
                        $("#z-timeEstimation-list-title").empty();
                        $("#z-timeEstimation-list-title").append('<div class="col-12 col-sm-12 col-md-4 col-lg-2 col-xl-2 z-input-Title">' +
                            '<b class="table-title">Code</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                            '<b class="table-title">Activity</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-1 col-xl-1 z-input-Title">' +
                            '<b class="table-title">DepthFrom</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-1 col-xl-1 z-input-Title">' +
                            '<b class="table-title">DepthTo</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-1 col-xl-1 z-input-Title">' +
                            '<b class="table-title">TVDFrom</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-1 col-xl-1 z-input-Title">' +
                            '<b class="table-title">TVDTo</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-2 col-xl-2 z-input-Title">' +
                            '<b class="table-title z-unitMeasure-title">' +
                            ($("#unitMeasure").val() == null ? "" : $("#unitMeasure").val()) +
                            '</b>' +
                            '</div>');
                        $("#z-timeEstimation-list-value").append('<div class="row wi-row">' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-2 col-xl-2 z-input-Title">' +
                            '<div class="table-data">' + item.code + '</div>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-4 col-xl-4 z-input-Title">' +
                            '<div class="table-data">' + phasename + '</div>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-1 col-xl-1 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-df-input" min="0" index="' + indx + '" value="' + (typeof (ws_well_template[indx].wellscheme) == "undefined" ? "" : (typeof (ws_well_template[indx].wellscheme.depthFrom) == "undefined" ? "" : ws_well_template[indx].wellscheme.depthFrom)) + '">' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-1 col-xl-1 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-dt-input" min="0" index="' + indx + '" value="' + (typeof (ws_well_template[indx].wellscheme) == "undefined" ? "" : (typeof (ws_well_template[indx].wellscheme.depthTo) == "undefined" ? "" : ws_well_template[indx].wellscheme.depthTo)) + '">' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-1 col-xl-1 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-tf-input" min="0" index="' + indx + '" value="' + (typeof (ws_well_template[indx].wellscheme) == "undefined" ? "" : (typeof (ws_well_template[indx].wellscheme.tvdFrom) == "undefined" ? "" : ws_well_template[indx].wellscheme.tvdFrom)) + '">' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-1 col-xl-1 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-tt-input" min="0" index="' + indx + '" value="' + (typeof (ws_well_template[indx].wellscheme) == "undefined" ? "" : (typeof (ws_well_template[indx].wellscheme.tvdTo) == "undefined" ? "" : ws_well_template[indx].wellscheme.tvdTo)) + '">' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-2 col-xl-2 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-d-input" ' +
                            ($("#unitMeasure").val() == null ? "disabled" : "") +
                            'min="0" index="' + indx + '" value="' + (typeof (ws_well_template[indx].wellscheme) == "undefined" ? "" : (typeof (ws_well_template[indx].wellscheme.day) == "undefined" ? "" : ws_well_template[indx].wellscheme.day)) + '">' +
                            '</div>' +
                            '</div>');
                    } else if (e.getAttribute("groupName") == "completion_activities") {
                        var te_df = 0;
                        var te_dt = 0;
                        var te_tf = 0;
                        var te_tt = 0;
                        ws_well_template.forEach(function (data, key) {
                            if (data.code == '261') {
                                if (typeof (data.timeEstimation) == "undefined") { } else {
                                    te_df = data.wellscheme.depthFrom;
                                    te_dt = data.wellscheme.depthTo;
                                    te_tf = data.wellscheme.tvdFrom;
                                    te_tt = data.wellscheme.tvdTo;
                                }
                            }
                        });
                        $("#z-timeEstimation-list-title").empty();
                        $("#z-timeEstimation-list-title").append('<div class="col-12 col-sm-12 col-md-4 col-lg-2 col-xl-2 z-input-Title">' +
                            '<b class="table-title">Code</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                            '<b class="table-title">Activity</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-1 col-xl-1 z-input-Title">' +
                            '<b class="table-title">DepthFrom</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-1 col-xl-1 z-input-Title">' +
                            '<b class="table-title">DepthTo</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-1 col-xl-1 z-input-Title">' +
                            '<b class="table-title">TVDFrom</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-1 col-xl-1 z-input-Title">' +
                            '<b class="table-title">TVDTo</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-2 col-xl-2 z-input-Title">' +
                            '<b class="table-title z-unitMeasure-title">' +
                            ($("#unitMeasure").val() == null ? "" : $("#unitMeasure").val()) +
                            '</b>' +
                            '</div>');
                        $("#z-timeEstimation-list-value").append('<div class="row wi-row">' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-2 col-xl-2 z-input-Title">' +
                            '<div class="table-data">' + item.code + '</div>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-4 col-xl-4 z-input-Title">' +
                            '<div class="table-data">' + phasename + '</div>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-1 col-xl-1 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-df-input" min="0" index="' + indx + '" value="' + te_df + '">' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-1 col-xl-1 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-dt-input" min="0" index="' + indx + '" value="' + te_dt + '">' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-1 col-xl-1 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-tf-input" min="0" index="' + indx + '" value="' + te_tf + '">' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-1 col-xl-1 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-tt-input" min="0" index="' + indx + '" value="' + te_tt + '">' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-2 col-xl-2 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-d-input"' +
                            ($("#unitMeasure").val() == null ? "disabled" : "") +
                            'min="0" index="' + indx + '" value="' + (typeof (ws_well_template[indx].wellscheme) == "undefined" ? "" : (typeof (ws_well_template[indx].wellscheme.day) == "undefined" ? "" : ws_well_template[indx].wellscheme.day)) + '">' +
                            '</div>' +
                            '</div>');

                    } else {
                        $("#z-timeEstimation-list-title").empty();
                        $("#z-timeEstimation-list-title").append('<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                            '<b class="table-title">Code</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                            '<b class="table-title">Activity</b>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                            '<b class="table-title z-unitMeasure-title">' +
                            ($("#unitMeasure").val() == null ? "" : $("#unitMeasure").val()) +
                            '</b>' +
                            '</div>');
                        $("#z-timeEstimation-list-value").append('<div class="row wi-row">' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title ">' +
                            '<div class="table-data">' + item.code + '</div>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                            '<div class="table-data">' + phasename + '</div>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-d-input" ' +
                            ($("#unitMeasure").val() == null ? "disabled" : "") +
                            ' min="0" index="' + indx + '" value="' + (typeof (ws_well_template[indx].wellscheme) == "undefined" ? "" : (typeof (ws_well_template[indx].wellscheme.day) == "undefined" ? "" : ws_well_template[indx].wellscheme.day)) + '">' +
                            '</div>' +
                            '</div>');
                    }
                }
            } else {
                if (code > activity_array[0]) {
                    $("#z-timeEstimation-list-title").empty();
                    $("#z-timeEstimation-list-title").append('<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                        '<b class="table-title">Code</b>' +
                        '</div>' +
                        '<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                        '<b class="table-title">Activity</b>' +
                        '</div>' +
                        '<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                        '<b class="table-title z-unitMeasure-title">' +
                        ($("#unitMeasure").val() == null ? "" : $("#unitMeasure").val()) +
                        '</b>' +
                        '</div>');
                    $("#z-timeEstimation-list-value").append('<div class="row wi-row">' +
                        '<div class="col-12 col-sm-12 col-md-4 col-lg-4 col-xl-4 z-input-Title">' +
                        '<div class="table-data">' + item.code + '</div>' +
                        '</div>' +
                        '<div class="col-12 col-sm-12 col-md-3 col-lg-4 col-xl-4 z-input-Title">' +
                        '<div class="table-data">' + phasename + '</div>' +
                        '</div>' +
                        '<div class="col-12 col-sm-12 col-md-3 col-lg-2 col-xl-2 z-input-Title">' +
                        '<input type="number" class="z-textBorderBox z-d-input" ' +
                        ($("#unitMeasure").val() == null ? "disabled" : "") +
                        'min="0" index="' + indx + '" value="' + (typeof (ws_well_template[indx].wellscheme) == "undefined" ? "" : (typeof (ws_well_template[indx].wellscheme.day) == "undefined" ? "" : ws_well_template[indx].wellscheme.day)) + '">' +
                        '</div>' +
                        '</div>');
                }
            }
        }
    });
    te_input_restriction();
}


// //Hours to Days Covertion
// $("#z-ws-et-input").focusout(function() {
//     if($("#z-ws-et-type").val() == 'Hours'){
//         var whours = $("#z-ws-et-input").val();
//         var wdays = whours/24;
//         $("#z-ws-et-day").val(wdays);
//         var pre_total = parseInt($("#z-ws-et-Cumulative").val() == "" ? 0 : $("#z-ws-et-Cumulative").val());
//         $("#z-ws-et-Cumulative").val(pre_total + wdays);
//     }else{
//         $("#z-ws-et-day").val(parseInt($("#z-ws-et-input").val()));
//         var pre_total = parseInt($("#z-ws-et-Cumulative").val() == "" ? 0 : $("#z-ws-et-Cumulative").val());
//         $("#z-ws-et-Cumulative").val(pre_total + parseInt($("#z-ws-et-input").val()));
//     }
// });

// // Temp Storage of Cumulative Estimated Time
// function wellScheme_et_save(){
//     var index = $("#list-wellSchemeTimeEstimation-list-wrap li.wellschemeActive").attr("wellschemeindex");
//     var estimatedDay = $("#z-ws-et-day").val();
//     if(typeof(estimateTime[index].day) == "undefined"){
//         estimateTime[index].day = estimatedDay;
//         }else{
//         estimateTime[index].day = estimatedDay;
//     }

// }


/* --- Time Estimation Level-1 ---End */

/* ---- Time Estimation ---- Start */
/* --- Restrict More than two Places after Decimal point in Input --- */
function te_input_restriction() {
    $('.z-textBorderBox.z-d-input').keypress(function (event) {

        if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
            //alert('hello');
            if ((event.which != 46 || $(this).val().indexOf('.') != -1)) {
                alert('Multiple Decimals are not allowed');
            }
            event.preventDefault();
        }
        if (this.value.indexOf(".") > -1 && (this.value.split('.')[1].length > 1)) {
            alert('Two numbers only allowed after decimal point');
            event.preventDefault();
        }
    });
}

//Hours or Days Dropdown Event
$("#unitMeasure").change(function () {
    if ($("#unitMeasure").val() == 'Hours') {
        $(".z-unitMeasure-title").text($("#unitMeasure").val());
        for (var i = 0; i < $(".z-textBorderBox.z-d-input").length; i++) {
            $(".z-textBorderBox.z-d-input")[i].removeAttribute("disabled");
        }
    } else if ($("#unitMeasure").val() == 'Days') {
        $(".z-unitMeasure-title").text($("#unitMeasure").val());
        for (var i = 0; i < $(".z-textBorderBox.z-d-input").length; i++) {
            $(".z-textBorderBox.z-d-input")[i].removeAttribute("disabled");
        }
    } else {
        $(".z-unitMeasure-title").text($("#unitMeasure").val());
    }
});


/* --- Induvidual Save --- */
function timeEstimation_Save() {
    var title = $(".wellschemeActive").attr("groupName");
    var unitMeasure = $("#unitMeasure").val();
    var selectedList = $(".wellschemeActive").html();
    if (selectedList) {
        var finalValCheck = $(".z-d-input").filter(function () {
            return $.trim($(this).val()).length == 0
        }).length == 0;

        if (finalValCheck == true && unitMeasure != null) {
            if (title == "pre_drilling_activities" || title == "post_completion_activities") {
                var te_raw_inputs = $(".z-textBorderBox.z-d-input");

                if ($("#unitMeasure").val() == 'Hours') {
                    for (var i = 0; i < te_raw_inputs.length; i++) {
                        var te_raw_hour = parseInt(te_raw_inputs[i].value);
                        var te_temp_day = te_raw_hour / 24;
                        var te_raw_index = parseInt(te_raw_inputs[i].getAttribute("index"));
                        if (typeof (ws_well_template[te_raw_index].timeEstimation) == "undefined") {
                            ws_well_template[te_raw_index].timeEstimation = {};
                            ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
                            ws_well_template[te_raw_index].timeEstimation.hour = te_raw_hour;
                            ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
                        } else {
                            ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
                            ws_well_template[te_raw_index].timeEstimation.hour = te_raw_hour;
                            ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
                        }
                    }
                } else {
                    for (var i = 0; i < te_raw_inputs.length; i++) {
                        var te_temp_day = parseInt(te_raw_inputs[i].value);
                        var te_raw_index = parseInt(te_raw_inputs[i].getAttribute("index"));
                        if (typeof (ws_well_template[te_raw_index].timeEstimation) == "undefined") {
                            ws_well_template[te_raw_index].timeEstimation = {};
                            ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
                            ws_well_template[te_raw_index].timeEstimation.hour = te_temp_day * 24;
                            ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
                        } else {
                            ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
                            ws_well_template[te_raw_index].timeEstimation.hour = te_temp_day * 24;
                            ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
                        }
                    }
                }

            } else if (title == "drilling_activities" || title == "completion_activities") {
                var te_raw_inputs = $(".z-textBorderBox.z-d-input");
                var te_raw_df = $(".z-textBorderBox.z-df-input");
                var te_raw_dt = $(".z-textBorderBox.z-dt-input");
                var te_raw_tf = $(".z-textBorderBox.z-tf-input");
                var te_raw_tt = $(".z-textBorderBox.z-tt-input");
                if ($("#unitMeasure").val() == 'Hours') {
                    for (var i = 0; i < te_raw_inputs.length; i++) {
                        var te_raw_hour = parseInt(te_raw_inputs[i].value);
                        var te_df = parseInt(te_raw_df[i].value);
                        var te_dt = parseInt(te_raw_dt[i].value);
                        var te_tf = parseInt(te_raw_tf[i].value);
                        var te_tt = parseInt(te_raw_tt[i].value);
                        var te_temp_day = te_raw_hour / 24;
                        var te_raw_index = parseInt(te_raw_inputs[i].getAttribute("index"));
                        if (typeof (ws_well_template[te_raw_index].timeEstimation) == "undefined") {
                            ws_well_template[te_raw_index].timeEstimation = {};
                            ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
                            ws_well_template[te_raw_index].timeEstimation.hour = te_raw_hour;
                            ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
                            ws_well_template[te_raw_index].timeEstimation.depthFrom = te_dt;
                            ws_well_template[te_raw_index].timeEstimation.depthTo = te_dt;
                            ws_well_template[te_raw_index].timeEstimation.tvdFrom = te_tf;
                            ws_well_template[te_raw_index].timeEstimation.tvdTo = te_tt;
                        } else {
                            ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
                            ws_well_template[te_raw_index].timeEstimation.hour = te_raw_hour;
                            ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
                            ws_well_template[te_raw_index].timeEstimation.depthFrom = te_dt;
                            ws_well_template[te_raw_index].timeEstimation.depthTo = te_dt;
                            ws_well_template[te_raw_index].timeEstimation.tvdFrom = te_tf;
                            ws_well_template[te_raw_index].timeEstimation.tvdTo = te_tt;
                        }
                    }
                } else {
                    for (var i = 0; i < te_raw_inputs.length; i++) {
                        var te_temp_day = parseInt(te_raw_inputs[i].value);
                        var te_raw_index = parseInt(te_raw_inputs[i].getAttribute("index"));
                        var te_df = parseInt(te_raw_df[i].value);
                        var te_dt = parseInt(te_raw_dt[i].value);
                        var te_tf = parseInt(te_raw_tf[i].value);
                        var te_tt = parseInt(te_raw_tt[i].value);
                        if (typeof (ws_well_template[te_raw_index].timeEstimation) == "undefined") {
                            ws_well_template[te_raw_index].timeEstimation = {};
                            ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
                            ws_well_template[te_raw_index].timeEstimation.hour = te_temp_day * 24;
                            ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
                            ws_well_template[te_raw_index].timeEstimation.depthFrom = te_dt;
                            ws_well_template[te_raw_index].timeEstimation.depthTo = te_dt;
                            ws_well_template[te_raw_index].timeEstimation.tvdFrom = te_tf;
                            ws_well_template[te_raw_index].timeEstimation.tvdTo = te_tt;
                        } else {
                            ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
                            ws_well_template[te_raw_index].timeEstimation.hour = te_temp_day * 24;
                            ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
                            ws_well_template[te_raw_index].timeEstimation.depthFrom = te_dt;
                            ws_well_template[te_raw_index].timeEstimation.depthTo = te_dt;
                            ws_well_template[te_raw_index].timeEstimation.tvdFrom = te_tf;
                            ws_well_template[te_raw_index].timeEstimation.tvdTo = te_tt;
                        }
                    }
                }
            } else {

            }
        } else {
            popup("Fields are Mandatory")
        }
    }

}
//     else if (title == "drilling_activities" || title == "completion_activities") {
//         var te_raw_inputs = $(".z-textBorderBox.z-d-input");
//         var te_raw_df = $(".z-textBorderBox.z-df-input");
//         var te_raw_dt = $(".z-textBorderBox.z-dt-input");
//         var te_raw_tf = $(".z-textBorderBox.z-tf-input");
//         var te_raw_tt = $(".z-textBorderBox.z-tt-input");
//         if ($("#unitMeasure").val() == 'Hours') {
//             for (var i = 0; i < te_raw_inputs.length; i++) {
//                 var te_raw_hour = parseInt(te_raw_inputs[i].value);
//                 var te_df = parseInt(te_raw_df[i].value);
//                 var te_dt = parseInt(te_raw_dt[i].value);
//                 var te_tf = parseInt(te_raw_tf[i].value);
//                 var te_tt = parseInt(te_raw_tt[i].value);
//                 var te_temp_day = te_raw_hour / 24;
//                 var te_raw_index = parseInt(te_raw_inputs[i].getAttribute("index"));
//                 if (typeof (ws_well_template[te_raw_index].timeEstimation) == "undefined") {
//                     ws_well_template[te_raw_index].timeEstimation = {};
//                     ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
//                     ws_well_template[te_raw_index].timeEstimation.hour = te_raw_hour;
//                     ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
//                     ws_well_template[te_raw_index].timeEstimation.depthFrom = te_dt;
//                     ws_well_template[te_raw_index].timeEstimation.depthTo = te_dt;
//                     ws_well_template[te_raw_index].timeEstimation.tvdFrom = te_tf;
//                     ws_well_template[te_raw_index].timeEstimation.tvdTo = te_tt;
//                 } else {
//                     ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
//                     ws_well_template[te_raw_index].timeEstimation.hour = te_raw_hour;
//                     ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
//                     ws_well_template[te_raw_index].timeEstimation.depthFrom = te_dt;
//                     ws_well_template[te_raw_index].timeEstimation.depthTo = te_dt;
//                     ws_well_template[te_raw_index].timeEstimation.tvdFrom = te_tf;
//                     ws_well_template[te_raw_index].timeEstimation.tvdTo = te_tt;
//                 }
//             }
//         } else {
//             for (var i = 0; i < te_raw_inputs.length; i++) {
//                 var te_temp_day = parseInt(te_raw_inputs[i].value);
//                 var te_raw_index = parseInt(te_raw_inputs[i].getAttribute("index"));
//                 var te_df = parseInt(te_raw_df[i].value);
//                 var te_dt = parseInt(te_raw_dt[i].value);
//                 var te_tf = parseInt(te_raw_tf[i].value);
//                 var te_tt = parseInt(te_raw_tt[i].value);
//                 if (typeof (ws_well_template[te_raw_index].timeEstimation) == "undefined") {
//                     ws_well_template[te_raw_index].timeEstimation = {};
//                     ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
//                     ws_well_template[te_raw_index].timeEstimation.hour = te_temp_day * 24;
//                     ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
//                     ws_well_template[te_raw_index].timeEstimation.depthFrom = te_dt;
//                     ws_well_template[te_raw_index].timeEstimation.depthTo = te_dt;
//                     ws_well_template[te_raw_index].timeEstimation.tvdFrom = te_tf;
//                     ws_well_template[te_raw_index].timeEstimation.tvdTo = te_tt;
//                 } else {
//                     ws_well_template[te_raw_index].timeEstimation.day = te_temp_day;
//                     ws_well_template[te_raw_index].timeEstimation.hour = te_temp_day * 24;
//                     ws_well_template[te_raw_index].timeEstimation.unit = $("#unitMeasure").val();
//                     ws_well_template[te_raw_index].timeEstimation.depthFrom = te_dt;
//                     ws_well_template[te_raw_index].timeEstimation.depthTo = te_dt;
//                     ws_well_template[te_raw_index].timeEstimation.tvdFrom = te_tf;
//                     ws_well_template[te_raw_index].timeEstimation.tvdTo = te_tt;
//                 }
//             }
//         }
//     } else {

//     }
// }


/* --- Final Save --- Start */
function timeEstimation_finalSave(event) {
    var wellId = event.getAttribute("data-ws-wellid");
    var wellLevel = event.getAttribute("data-ws-wellinputlevel");
    var wellInputJson = JSON.stringify(ws_well_template);
    var data = {
        wellInputJson: wellInputJson,
        wellId: wellId,
        wellInputLevel: wellLevel
    };
    __wiJson = ws_well_template;
    // $.ajax({
    //     url: "/api/addWellInput",
    //     type: "POST",
    //     data: JSON.stringify(data),
    //     dataType: 'text',
    //     contentType: 'application/json;charset=UTF-8',
    //     success: function (result) {
    //         console.log(result);
    //         if (result.split(":")[0] == "Success") {
    //             alertPopup('success', "Well Updated Successfully");
    //         } else {
    //             alertPopup('alert', "Well Input Not Found");
    //         }
    //     }
    // });
}
/* --- Final Save --- End */

/* --- View Btn ---- */
function timeEstimation_view() {
    $("#te-view-modal").modal("show");
    $("#te-view-modal-body").empty();
    var te_temp_title = $(".TitleVertical-box.wellschemeActive").text();
    var te_temp_tile_list = eval(te_temp_title);
    var te_temp_cumulative = 0;
    ws_well_template.forEach(function (item, index) {
        var te_phase_name = item.phaseName;
        te_temp_tile_list.forEach(function (obj, i) {
            if (obj == te_phase_name) {
                if (ws_well_template[index].timeEstimation) {
                    if (ws_well_template[index].timeEstimation.day) {
                        te_temp_cumulative += ws_well_template[index].timeEstimation.day;

                        $("#te-view-modal-header").text(te_temp_title);

                        $("#te-view-modal-body").append('<div class="row wi-row">' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-6 col-xl-6 z-input-Title z-borderRight">' +
                            '<div class="row justify-content-center mx-auto">' +
                            '<div class="table-data">' + te_phase_name + '</div>' +
                            '</div>' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 z-input-Title z-borderRight">' +
                            '<input type="number" class="z-textBorderBox z-d-input text-center" disabled min="0" value="' + ws_well_template[index].timeEstimation.day + '">' +
                            '</div>' +
                            '<div class="col-12 col-sm-12 col-md-3 col-lg-3 col-xl-3 z-input-Title">' +
                            '<input type="number" class="z-textBorderBox z-d-input text-center" disabled min="0" value="' + te_temp_cumulative + '">' +
                            '</div>' +
                            '</div>');

                    }
                }
            }
        });
    });

}
/* ---- Time Estimation ---- End */

/* ---- Time Estimation Main Page ---- Start */
function timeEstimation_mainPage(wellId) {
    // if (!$('#z-timeEstimation-main').hasClass('z-rightSection-active')) {
    //     // main section
    //     $('.z-rightSection-active').removeClass('z-rightSection-active');
    //     $('#z-timeEstimation-main').addClass('z-rightSection-active');
    // }

    $("#z-te-table-two").empty();
    $("#z-te-table-three").empty();
    // 1st Table
    var te_well_tvd;
    var te_well_md;
    var wi_timeEstimate;
    var data = {
        wellId: wellId,
        clientId: clientId
    };

    call_ajax("/api/getWell", "GET", data, 'json', 'application/json;charset=UTF-8', false, function (getWell_result) {
        if (getWell_result.status == "success") {
            var getWell_result_data = getWell_result.data;
            wi_timeEstimate = __wiJson;
            wi_timeEstimate.forEach(function (ob, i) {
                if (ob.code == "281") {
                    te_well_tvd = ob.timeEstimation.depthFrom;
                    te_well_md = ob.timeEstimation.depthTo;
                }
            });
            $('#te-well-name').text(getWell_result_data.wellName);
            $('#te-well-field').text(getWell_result_data.wellLandscape);
            $('#te-well-type').text(getWell_result_data.wellType + getWell_result_data.wellLandscape);
            $("#te-well-tvd").text(te_well_tvd);
            $("#te-well-md").text(te_well_md);
            $('#te-well-rkb').text(getWell_result_data.rkbToDatumLength);
            if (getWell_result_data.wellType == "OnShore") {
                $('#te-type-title').text("Ground Elevation");
            } else {
                $('#te-type-title').text("Water Depth");
            }


            //2nd Table
            activities.forEach(function (it, i) {
                var title = it;
                var temp_title = title.replace(/_/g, " ");
                var te_temp_total = 0;
                if (eval(title).length) {
                    var te_temp_index_end = wi_timeEstimate.length;
                    var te_temp_index_start = 0;
                    if (eval(title).length > 1) {
                        wi_timeEstimate.forEach(function (obj, id) {
                            if (parseInt(obj.code) == eval(title)[0] + 1) {
                                te_temp_index_start = id;
                            }
                            if (parseInt(obj.code) == eval(title)[1]) {
                                te_temp_index_end = id;
                            }
                        });
                    } else {
                        wi_timeEstimate.forEach(function (obj, id) {
                            if (parseInt(obj.code) == eval(title)[0] + 1) {
                                te_temp_index_start = id;
                                te_temp_index_end = wi_timeEstimate.length;
                            }
                        });
                    }
                    for (var i = te_temp_index_start; i < te_temp_index_end; i++) {
                        te_temp_total += wi_timeEstimate[i].timeEstimation.day;
                    }
                } else {
                    te_temp_total = 0;
                }
                $("#z-te-table-two").append('<div class="row z-tableRow z-tableData-row">' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6 z-tableCell" data-label="Phase">' +
                    temp_title +
                    '</div>' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6 z-tableCell" data-label="Days">' +
                    te_temp_total +
                    '</div>' +
                    '</div>');
            });

            //3rd Table
            wi_timeEstimate.forEach(function (kobj, k) {

                console.log(wi_timeEstimate[k]);
                $("#z-te-table-three").append('<div class="row z-tableRow z-tableData-row">' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-tableCell" data-label="Code">' +
                    kobj.code +
                    '</div>' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6 z-tableCell" data-label="Level 1">' +
                    kobj.phaseName +
                    '</div>' +
                    '<div class="col-12 col-sm-12 col-md-12 col-lg-3 col-xl-3 z-tableCell" data-label="Time Estimate">' +
                    (typeof (kobj.timeEstimation) == "undefined" ? "" : (typeof (kobj.timeEstimation.day) == "undefined" ? "" : kobj.timeEstimation.day)) +
                    '</div>' +
                    '</div>');

            });
        } else {
            console.log("Ajax Error");
            console.log(getWell_result);
        }
    });

}

//Back Btn
// function timeEstimation_tem_back() {
//     if (!$('#z-timeEstimation-wrap').hasClass('z-rightSection-active')) {
//         // main section
//         $('.z-rightSection-active').removeClass('z-rightSection-active');
//         $('#z-timeEstimation-wrap').addClass('z-rightSection-active');
//     }
// }

//View btn
var days = [];
var depth = [];
var chart_data = [];

function timeEstimation_tem_view() {
    days = [];
    depth = [];
    chart_data = [];
    $("#te-view-table-content").empty();
    var te_cumulative_temp_day = 0;
    var identity_index;

    ws_well_template.forEach(function (obj, i) {
        var dp = (parseInt(obj.code) > 360 ? ws_well_template[identity_index].timeEstimation.depthTo : (typeof (obj.timeEstimation) == "undefined" ? "0" : (typeof (obj.timeEstimation.depthTo) == "undefined" ? "0" : obj.timeEstimation.depthTo)));
        depth.push(dp);
        if (obj.code == "281") {
            identity_index = i;
        }
    });
    ws_well_template.forEach(function (item, index) {
        te_cumulative_temp_day += item.timeEstimation.day;
        days.push(te_cumulative_temp_day);
        $("#te-view-table-content").append('<div class="row z-tableRow z-tableData-row">' +
            '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell" data-label="Code">' +
            item.code +
            '</div>' +
            '<div class="col-12 col-sm-12 col-md-12 col-lg-4 col-xl-4 z-tableCell" data-label="Level 1">' +
            item.phaseName +
            '</div>' +
            '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell" data-label="Time Estimate">' +
            (parseInt(item.code) > 360 ? ws_well_template[identity_index].timeEstimation.depthTo : (typeof (item.timeEstimation) == "undefined" ? "0" : (typeof (item.timeEstimation.depthTo) == "undefined" ? "0" : item.timeEstimation.depthTo))) +
            '</div>' +
            '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell" data-label="Time Estimate">' +
            (typeof (item.timeEstimation) == "undefined" ? "0" : (typeof (item.timeEstimation.day) == "undefined" ? "0" : item.timeEstimation.day)) +
            '</div>' +
            '<div class="col-12 col-sm-12 col-md-12 col-lg-2 col-xl-2 z-tableCell" data-label="Time Estimate">' +
            te_cumulative_temp_day +
            '</div>' +
            '</div>');
    });

    // Chart Data generation
    for (var i = 0; i < days.length; i++) {
        var temp_day = parseInt(days[i]);
        var temp_depth = parseInt(depth[i]);
        chart_data.push({
            x: temp_day,
            y: temp_depth
        });
    }
    $("#te-view").modal("show");
    $(".z-te-view").removeClass("z-rightSection-active");
    if ($(".te-view-tabs.wellschemeActive").text() == "Chart") {
        $("#te-view-chart").addClass("z-rightSection-active");
    } else {
        $("#te-view-table").addClass("z-rightSection-active");
    }

}

function te_viewTab_click(e) {
    $(".te-view-tabs").removeClass('wellschemeActive');
    e.classList.add('wellschemeActive');
    var z_te_value = e.innerHTML;
    if (z_te_value == "Chart") {
        $(".z-te-view").removeClass('z-rightSection-active');
        $("#te-view-chart").addClass('z-rightSection-active');
        var chart = new CanvasJS.Chart("chartContainer", {
            axisX: {
                title: "Time"
            },
            axisY: {
                title: "Depth"
            },
            data: [{
                type: "spline",
                name: "Time",
                dataPoints: chart_data
            }]
        });

        chart.render();
    } else {
        $(".z-te-view").removeClass('z-rightSection-active');
        $("#te-view-table").addClass('z-rightSection-active');
    }
}
/* ---- Time Estimation Main Page ---- Start */



// well input container
function wi_open(wellId) {
    $('#z-wi-wellId').val(wellId);

    var temp_data1 = {
        wellId: wellId,
        clientId: clientId
    };

    // main section
    $('.z-rightSection-active').removeClass('z-rightSection-active');
    $('#z-wi-section').addClass('z-rightSection-active');

    call_ajax("/api/getWell", "GET", temp_data1, 'json', 'application/json;charset=UTF-8', false, function (getWell_result) {
        if (getWell_result.status == "success") {
            var getWell_result_data = getWell_result.data;
            $('#z-wi-wellName').val(getWell_result_data.wellName);
            $('#z-wi-wellType').val(getWell_result_data.wellType);
            $('#z-wi-wellLandscape').val(getWell_result_data.wellLandscape);
            typeof (getWell_result_data.wellInputLevel) === 'undefined' ? $('#z-wi-levelCount').val("") : $('#z-wi-levelCount').val(getWell_result_data.wellInputLevel);

            var temp_data2 = {
                wellId: wellId
            };

            call_ajax("api/retrieveUnits", "GET", temp_data2, 'text', '', false, function (retrieveUnits_result) {
                if (retrieveUnits_result.status == "success") {
                    var retrieveUnits_result_data = retrieveUnits_result.data;
                    $('#z-wi-unit').val(retrieveUnits_result_data);
                    $('#z-wiUnits-tab').click();
                } else {
                    console.log("Ajax Error");
                    console.log(template_result);
                }
            });

            call_ajax("/api/getTemplate", "GET", temp_data2, 'json', 'application/json;charset=UTF-8', false, function (template_result) {
                if (template_result.status == "success") {
                    var template_result_data = template_result.data[0];
                    if (template_result.data.length != 0) {
                        $('#z-wi-baseTemplate-id').val(template_result_data.baseTemplateId);
                        $('#z-wi-baseTemplate-name').val(template_result_data.baseTemplateName);
                    }
                } else {
                    console.log("Ajax Error");
                    console.log(template_result);
                }
            });


        } else {
            console.log("Ajax Error");
            console.log(getWell_result);
        }
    });

}

// Well input tab function
$('#z-wiUnits-tab').on('click', function () {
    $('.z-wiInnerSection.z-wiInnerSection-active').removeClass('z-wiInnerSection-active');
    $('#z-wiUnits-Wrap').addClass('z-wiInnerSection-active');
    $('.z-wi-titleTab.z-wi-titleTab-active').removeClass('z-wi-titleTab-active');
    $('#z-wiUnits-tab').addClass('z-wi-titleTab-active');

    var wellId = $('#z-wi-wellId').val();
    var wellName = $('#z-wi-wellName').val();
    var wellType = $('#z-wi-wellType').val();
    var wellLandscape = $('#z-wi-wellLandscape').val();
    var wiUnit = $('#z-wi-unit').val();

    z_wiUnitSection_active(wellId, wellName, wiUnit, wellType, wellLandscape);
    $('#z-wiUnits-back').off('click').on('click', function () {
        z_wellsSection_active(false, false, "newwell");
    });
});
$('#z-selectLevel-tab').on('click', function () {
    $('.z-wiInnerSection.z-wiInnerSection-active').removeClass('z-wiInnerSection-active');
    $('#z-selectLevel-wrap').addClass('z-wiInnerSection-active');
    $('.z-wi-titleTab.z-wi-titleTab-active').removeClass('z-wi-titleTab-active');
    $('#z-selectLevel-tab').addClass('z-wi-titleTab-active');

    var wellId = $('#z-wi-wellId').val();
    var wellName = $('#z-wi-wellName').val();
    var wellType = $('#z-wi-wellType').val();
    var wellLandscape = $('#z-wi-wellLandscape').val();
    var wiUnit = $('#z-wi-unit').val();
    var levelCount = $('#z-wi-levelCount').val();
    var baseTemplate_id = $('#z-wi-baseTemplate-id').val();

    z_wiSelectLevelSection_active(wellId, wellName, wiUnit, wellType, wellLandscape, function () {
        if (levelCount != "" && baseTemplate_id != "") {
            $('#z-chooseLevel').val(levelCount);
            $('#templateList option[value="' + baseTemplate_id + '"]').attr("selected", "selected");
        }
    });

    $('#z-levels-Back').off('click').on('click', function () {
        z_wellInputClose(wellId);
    });
});
$('#z-wellSchemeDetails-tab').on('click', function () {
    $('.z-wiInnerSection.z-wiInnerSection-active').removeClass('z-wiInnerSection-active');
    $('#z-wellSchemeDetails-wrap').addClass('z-wiInnerSection-active');
    $('.z-wi-titleTab.z-wi-titleTab-active').removeClass('z-wi-titleTab-active');
    $('#z-wellSchemeDetails-tab').addClass('z-wi-titleTab-active');

    var wellId = $('#z-wi-wellId').val();

    wellScheme_wellUpdate(wellId);
    $('#z-wellScheme-Back').off('click').on('click', function () {
        z_wellInputClose(wellId);
    });
});
$('#z-levelTemplate-tab').on('click', function () {
    $('.z-wiInnerSection.z-wiInnerSection-active').removeClass('z-wiInnerSection-active');
    $('#z-levelTemplate-wrap').addClass('z-wiInnerSection-active');
    $('.z-wi-titleTab.z-wi-titleTab-active').removeClass('z-wi-titleTab-active');
    $('#z-levelTemplate-tab').addClass('z-wi-titleTab-active');

    var wellId = $('#z-wi-wellId').val();
    var wellName = $('#z-wi-wellName').val();
    var wellType = $('#z-wi-wellType').val();
    var wellLandscape = $('#z-wi-wellLandscape').val();
    var wiUnit = $('#z-wi-unit').val();
    var levelCount = 3;
    var baseTemplate_id = $('#z-wi-baseTemplate-id').val();
    var baseTemplate_name = $('#z-wi-baseTemplate-name').val();

    var data = {
        wellId: wellId,
        clientId: clientId
    };
    z_wi_levelTemplateEditor(wellId, wellName, wiUnit, levelCount, baseTemplate_id, baseTemplate_name, __wiJson, wellType, wellLandscape);
    // call_ajax("/api/getWell", "GET", data, 'json', 'application/json;charset=UTF-8', false, function (getWell_result) {
    //     if (getWell_result.status == "success") {
    //         var getWell_result_data = getWell_result.data;
    //         z_templeteJson_data = JSON.parse(getWell_result_data.wellInputs);
    //         z_wi_levelTemplateEditor(wellId, wellName, wiUnit, levelCount, baseTemplate_id, baseTemplate_name, z_templeteJson_data, wellType, wellLandscape);
    //         $('#z-levelTemplate-Back').off('click').on('click', function () {
    //             z_wellInputClose(wellId);
    //         });
    //     } else {
    //         console.log("Ajax Error");
    //         console.log(template_result);
    //     }
    // });
});
$('#z-timeEstimation-tab').on('click', function () {
    $('.z-wiInnerSection.z-wiInnerSection-active').removeClass('z-wiInnerSection-active');
    $('#z-timeEstimation-wrap').addClass('z-wiInnerSection-active');
    $('.z-wi-titleTab.z-wi-titleTab-active').removeClass('z-wi-titleTab-active');
    $('#z-timeEstimation-tab').addClass('z-wi-titleTab-active');

    var wellId = $('#z-wi-wellId').val();
    wellScheme_timeEstimation(wellId);
    $('#z-timeEstimation-Back').off('click').on('click', function () {
        z_wellInputClose(wellId);
    });
});
$('#z-timeEstimation-main-tab').on('click', function () {
    $('.z-wiInnerSection.z-wiInnerSection-active').removeClass('z-wiInnerSection-active');
    $('#z-timeEstimation-main').addClass('z-wiInnerSection-active');
    $('.z-wi-titleTab.z-wi-titleTab-active').removeClass('z-wi-titleTab-active');
    $('#z-timeEstimation-main-tab').addClass('z-wi-titleTab-active');

    var wellId = $('#z-wi-wellId').val();
    timeEstimation_mainPage(wellId);
    $('#z-timeEstimation-mainPage-Back').off('click').on('click', function () {
        z_wellInputClose(wellId);
    });
});


function checkforDateFormat(el){
	var date_field = el.getAttribute('name');
	var date_selection=$('#z-cw-dateformat').val();
	if(date_selection == "select"){
		alertPopup('alert','Please select date format');
	}
	if(date_field == "spudDate" || date_field == "completedDate"){
		$('#z-cw-oldWellSpudDate').on('change', function() {
			checkStartDate("spudDate")
			});
		$('#z-cw-oldWellCompletedDate').on('change', function() {
			checkStartDate("completedDate")
			});
	}
	
	
}
function checkStartDate(date){
	var spudDate = new Date($('#z-cw-oldWellSpudDate').val());
	var completedDate = new Date($('#z-cw-oldWellCompletedDate').val());
	if(date == "spudDate"){
		if(spudDate > clientStart_date){
			alertPopup("alert","Old well can't be after start date");
			$('#z-oldwellDateCheck').val('');
		}
		else{
			$('#z-oldwellDateCheck').val('can create new well');
		}
	}
	else{
		if(completedDate < spudDate){
			alertPopup("alert","completed Date should be greater than spud date");
			$('#z-oldwellDateCheck').val('');
		}
		else{
			if(spudDate > clientStart_date){
				$('#z-oldwellDateCheck').val('');
			}
			else{
				$('#z-oldwellDateCheck').val('can create new well');
			}
			
		}
	}
}
var z_configJson_data;
function well_estimatePopup(navbar,oldwell,z_wellId){
	var component_lock,timeline_lock;
	if(navbar){
		$('.z-rightSection-active').removeClass('z-rightSection-active');
		$('#z-afe-Configsection').addClass('z-rightSection-active');
		$('#z-panel-well').addClass('z-rightSection-active');
		$('#z-wiConfig-back').attr('welltype',oldwell);
		$('#z-wellid-estimate').attr('wellId',z_wellId);
        z_getConfiglevel_data();
		var z_configJson_data_length;
		z_configJson_data_length = z_configJson_data.length;
        if(z_configJson_data_length > 1){
        	$('#z-component-lock').val("false");
        	$('#z-timeline-lock').val("false");
        }
        else{
        	timeline_lock = z_configJson_data[0].iswellTimelineLocked;
        	component_lock = z_configJson_data[0].isAfeComponentsLocked;
        	$('#z-component-lock').val(component_lock);
        	$('#z-timeline-lock').val(timeline_lock);
        }
        removed_array = [];
        z_array_day = [];
        z_Selected_testArray = [];
        prevArray = [];
        z_Aray_val = [];
        z_selected_days_data = [];
        //z_selected_days_data = z_sel_config;
        z_Selected_DayArray = [];
        //z_sel_config = [];
        //wellDays_data = [];
        z_selected_leveldata = z_sel_config;
        option_array = [];
        z_grant_totalKey = [];
        z_grant_total = [];
        //$('.z-incline-data-level2').val("");
        $('.z-wellDay').val("");
        $('#z-totalDays').val("");
        var x= $('#z-level1-days')[0];
		var x_options_length = x.options.length;
        for(var y=0;y<x_options_length;y++){
        	if(z_customdayArray.includes(x.options[y].value)){
        		x.options.remove(y);
        	}
        }
        z_customdayArray = [];
        $('.z-estimate-panel').removeClass('z-estimate-panel');
		z_configJson_data_length = z_configJson_data.length;
        if(z_configJson_data_length == 1){
        	if(z_configJson_data[0].selectedComponents != null){

    			/* var z_incline_level2 = $('.z-incline-data-level2');
    		z_m_inclinedays = JSON.parse(z_configJson_data[0].wellInclineDays);
            var z_incline_level2_length = z_incline_level2.length;
			for(var c=0;c<z_incline_level2_length;c++){
				z_incline_level2[c].value = z_m_inclinedays[c];
			} */
//        		if(z_configJson_data[0].selectedComponents == "AFE Estimation"){
//        			$('#z-afe-estimateComponent-panel').click();
//        			$('#z-afe-timeline-panel').click();
//        			z_wellPanel($('#z-estimation-panel')[0]);
//        			$('#z-estimation-panel').addClass('z-estimate-panel');
//        		}
//        		else if(z_configJson_data[0].selectedComponents == "Well Timeline"){
//        			$('#z-afe-estimateComponent-panel').click();
//        			$('#z-afe-timeline-panel').click();
//        			$('#z-afe-timeline-panel').addClass('z-estimate-panel');
//        		}
//        		else if(z_configJson_data[0].selectedComponents == "AFE Components"){
//        			$('#z-afe-estimateComponent-panel').click();
//        			$('#z-afe-estimateComponent-panel').addClass('z-estimate-panel');
//        		}
        	}
        	else{
        		$('#z-afe-estimateComponent-panel').click();	
        	}
        	
        }
        else{
        	$('#z-afe-estimateComponent-panel').addClass('z-estimate-panel');
        }
        var projectName_index = z_allWell_Data.findIndex(function(val,index){
        	return val.id == z_wellId;
        });
        var projectName = z_allWell_Data[projectName_index].projectName;
        z_allWell_Data = z_allWell_Data.filter(function (item) {
            return item.projectName == projectName;
        });
	}
}
function change_levels(el){
	var req_level = document.getElementById('z-req-wellLevel');
	req_level.options.remove(5);
	req_level.options.remove(4);
	req_level.options.remove(3);
	req_level.options.remove(2);
	req_level.options.remove(1);
	if(el.value == "AFE"){
		var req_level4 = document.createElement("option");
		req_level4.text = "Level 4: Estimates Accuracy Level +20% or -10%";
		req_level4.value = "Level4";
		var req_level5 = document.createElement("option");
		req_level5.text = "Level 5: Estimates Accuracy Level +10% or -5%";
		req_level5.value = "Level5";
		req_level.options.add(req_level4);
        req_level.options.add(req_level5);
        
		z_configTable($('#z-req-wellLevel')[0]);
		$('#z-afe-timeline-panel').removeClass('z-estimate-panel');
		$('#z-estimation-panel').removeClass('z-estimate-panel');
		$('#z-afe-estimateComponent-panel').removeClass('z-estimate-panel');
		$('#z-afe-estimateLevel-panel').removeClass('z-estimate-panel');
		$('#z-afe-estimateLevel-panel').addClass('z-estimate-panel');
        //req_level .options.selectedIndex = 0;
	}
	else{
		var req_level1 = document.createElement("option");
		req_level1.text = "Level 1: Estimates Accuracy Level +50% or -40%";
		req_level1.value = "Level1";
		var req_level2 = document.createElement("option");
		req_level2.text = "Level 2: Estimates Accuracy Level +40% or -30%";
		req_level2.value = "Level2";
		var req_level3 = document.createElement("option");
		req_level3.text = "Level 3: Estimates Accuracy Level +30% or -20%";
		req_level3.value = "Level3";
		req_level.options.add(req_level1);
		req_level.options.add(req_level2);
        req_level.options.add(req_level3);
        
		z_configTable($('#z-req-wellLevel')[0]);
		$('#z-afe-timeline-panel').removeClass('z-estimate-panel');
		$('#z-estimation-panel').removeClass('z-estimate-panel');
		$('#z-afe-estimateComponent-panel').removeClass('z-estimate-panel');
		$('#z-afe-estimateLevel-panel').removeClass('z-estimate-panel');
		$('#z-afe-estimateLevel-panel').addClass('z-estimate-panel');
        //req_level .options.selectedIndex = 0;
	}
	days_enter = [];
	$('#z-total-costs').text("");
	$('#z-total-days').text("");
	$('#z-totalDays').val("");
	$('#z-allDays1').text("");
	z_grant_totalKey = [];
    z_selected_days_data = [];
    z_array_day = [];
	$('.z-wellDayLevel2').val('');
}
function z_configBack(el){
    $('#freshEstimate').attr('checkForFreshLevel',"false");
    var welltype=el.getAttribute('welltype');
		z_wellsSection_active(false, false, welltype);
		var z_afe_navbar = $('.z-mn-menuBtn');
		$('.d-inline-block.z-mn-menuBtn').removeClass('d-inline-block');
		$(z_afe_navbar[0]).removeClass('d-none');
		$(z_afe_navbar[1]).removeClass('d-none');
		$(z_afe_navbar[1]).addClass('d-none');
		$(z_afe_navbar[0]).addClass('d-inline-block');
}
var z_sel_config;
function z_getConfiglevel_data(){
    var z_n_level,z_n_config;
    var selected_wellIndex;
	$.ajax({
        url: "/api/getWellConfiguration",
        type: "GET",
        data: {wellId: $('#z-wellid-estimate').attr('wellId'),level:"",config: ""},
        async: false,
        dataType: 'text',
        //contentType: 'application/json;charset=UTF-8',
        success: function (result) {
        	z_configJson_data = JSON.parse(result);
        	$('#z-levelsConfig').empty();
        	if(z_configJson_data.length > 1){
                if(z_configJson_data[0].isFreshLevel == true){
                    $("select#z-well-budget")[0].selectedIndex = 0;
                    $("select#z-wellConfig")[0].selectedIndex = 0;
                    $("select#z-req-wellLevel")[0].selectedIndex = 0;
                }
                else{
                    selected_wellIndex = z_configJson_data.findIndex(function(wellObj){
                        return wellObj.levelValue == z_level.split("Level")[1];
                    });
                    // z_configJson_data.sort(function(a,b){
                    //     return b.lastModifiedDate - a.lastModifiedDate;
                    // });
                    z_n_level = JSON.parse(z_configJson_data[selected_wellIndex].levelValue);
        		z_n_config = JSON.parse(z_configJson_data[selected_wellIndex].configNumber);
        		//var average = JSON.parse(z_configJson_data);
        		if(z_configJson_data[0].averageComponents != null){
        			average_select = z_configJson_data[selected_wellIndex].averageComponents;
            		$('#z-well-average').val(average_select);
        		}
        		
        		$("select#z-wellConfig")[0].selectedIndex = z_n_config;
        		$("select#z-req-wellLevel")[0].selectedIndex = z_n_level;
        		if(z_n_level > 3){
        			$('#z-well-budget').val("AFE");
        		}
        		else{
        			$('#z-well-budget').val("Budget");
        		}
        		$('#z-configlevelTable').addClass('d-none');
        		
        		getBasewellConfig();
        		z_sel_config = JSON.parse(z_configJson_data[selected_wellIndex].wellConfig);
        		var z_level_config = z_sel_config;
        		if(z_n_level == "2"){
        			
        		}
        		else if(z_n_level == "1"){
                    selected_wellIndex = well_config.findIndex(function(val_ob){
                        return val_ob.levelValue == "1";
                    });  
                    var data_config = JSON.parse(well_config[selected_wellIndex].wellConfig);
        				var level1_data;
        				data_config.forEach(function(val1,index1){
        					var base_index = z_sel_config.findIndex(function(obj1){
                				return obj1.phaseName == val1.phaseName;
                			});
        					var obj_level = {};
        					if(base_index == -1){
        						obj_level['levelValue'] = val1.levelValue;
        						obj_level['phaseName'] = val1.phaseName;
        						obj_level['lineItems'] = val1.lineItems;
        						obj_level['isSelected'] = true;
        						val1 = obj_level;
        						z_sel_config.push(val1);
        						obj_level = {};
        					}
        					else{
        						obj_level['levelValue'] = val1.levelValue;
        						obj_level['phaseName'] = val1.phaseName;
        						obj_level['lineItems'] = z_sel_config[base_index].lineItems;
        						obj_level['isSelected'] = z_sel_config[base_index].isSelected;
        						val1 = obj_level;
        						z_sel_config[base_index] = val1;
        						obj_level = {};
        					}
        				});
        				
        			
        		}
            	addLevel(z_sel_config,JSON.parse(z_configJson_data[selected_wellIndex].levelValue));
                }
               
        	}
        	else{
        		z_n_level = JSON.parse(z_configJson_data[selected_wellIndex].levelValue);
        		z_n_config = JSON.parse(z_configJson_data[selected_wellIndex].configNumber);
        		//var average = JSON.parse(z_configJson_data);
        		if(z_configJson_data[selected_wellIndex].averageComponents != null){
        			average_select = z_configJson_data[selected_wellIndex].averageComponents;
            		$('#z-well-average').val(average_select);
        		}
        		
        		$("select#z-wellConfig")[0].selectedIndex = z_n_config;
        		$("select#z-req-wellLevel")[0].selectedIndex = z_n_level;
        		if(z_n_level > 3){
        			$('#z-well-budget').val("AFE");
        		}
        		else{
        			$('#z-well-budget').val("Budget");
        		}
        		$('#z-configlevelTable').addClass('d-none');
        		
        		getBasewellConfig();
        		z_sel_config = JSON.parse(z_configJson_data[selected_wellIndex].wellConfig);
        		var z_level_config = z_sel_config;
        		if(z_n_level == "2"){
        			
        		}
        		else if(z_n_level == "1"){
                    selected_wellIndex = well_config.findIndex(function(wellObj){
                        return wellObj.levelValue == z_n_level;
                    });    
                    var data_config = JSON.parse(well_config[selected_wellIndex].wellConfig);
        				var level1_data;
        				data_config.forEach(function(val1,index1){
        					var base_index = z_sel_config.findIndex(function(obj1){
                				return obj1.phaseName == val1.phaseName;
                			});
        					var obj_level = {};
        					if(base_index == -1){
        						obj_level['levelValue'] = val1.levelValue;
        						obj_level['phaseName'] = val1.phaseName;
        						obj_level['lineItems'] = val1.lineItems;
        						obj_level['isSelected'] = true;
        						val1 = obj_level;
        						z_sel_config.push(val1);
        						obj_level = {};
        					}
        					else{
        						obj_level['levelValue'] = val1.levelValue;
        						obj_level['phaseName'] = val1.phaseName;
        						obj_level['lineItems'] = z_sel_config[base_index].lineItems;
        						obj_level['isSelected'] = z_sel_config[base_index].isSelected;
        						val1 = obj_level;
        						z_sel_config[base_index] = val1;
        						obj_level = {};
        					}
        				});
        				
        			
        		}
            	addLevel(z_sel_config,JSON.parse(z_configJson_data[selected_wellIndex].levelValue));
        	}
		//console.log(result);
		}
		});
}
var z_level;
var z_noLevel;
var z_config; 
function z_configTable(el){
//	  z_configData = document.createElement('div');
//      z_configData.id = "z-configData";
//      z_configData.classList = "container";
//
//      // Project Table Title Row;
//      z_configRow = document.createElement('div');
//      z_configRow.classList = "row z-headingFont z-tableRow z-titleRow";
//      z_configRow.innerHTML = '<div class="col-12 col-sm-12 col-md-1 col-lg-1 col-xl-2"><b>Sr.no.</b></div>' +
//          '<div class="col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6"><b>ML1[MAJOR ELEMENTS]<br>Level-1</b></div>' +
//          '<div class="col-12 col-sm-12 col-md-5 col-lg-5 col-xl-5 text-center"><b>MSEL[MAJOR SUB-ELEMENTS]<br>Level-2</b></div></div>';
//      z_configData.appendChild(z_configRow);
//      
// 
//      
//      $('#z-Afe-wellTable').append(z_configData)
var levels_select_val;
var z_configJson_data_length;
if(el.getAttribute('selected-parameter') == 'level'){
    levels_select_val = el.value;
    levels_select_val = levels_select_val.split("Level")[1];
}
else if(el.getAttribute('selected-parameter') == 'configuration'){
    levels_select_val = $('#z-req-wellLevel').val();
    levels_select_val = levels_select_val.split('Level')[1];
    z_config = $('#z-wellConfig').val();
}

	z_Selected_Array=[];
	$('#z-total-days').text("");
    $('#z-total-costs').text("");
    $('.z-level1-day-input').val('');
    z_selected_leveldata = [];
    var z_well_id;
    if($('#z-wellid-estimate').attr('wellId') != null){
        z_well_id = $('#z-wellid-estimate').attr('wellId');
    }
    else{
        z_well_id = x_wellId;
    }
	$.ajax({
        url: "/api/getWellConfiguration",
        type: "GET",
        data: {wellId: z_well_id,level: levels_select_val,config: z_config.substr(z_config.length-1)},
        async: false,
        dataType: 'text',
        //contentType: 'application/json;charset=UTF-8',
        success: function (result) {
        	z_configJson_data = JSON.parse(result);
		//console.log(result);
		}
        });
        //Analusing the wells
        var level_Status;

	z_level = $('#z-req-wellLevel').val();
	z_noLevel = z_level.substr(z_level.length-1);
	z_config = $('#z-wellConfig').val();
    $('#z-levelsConfig').empty();
    level_Status = z_configJson_data.findIndex(function(object_check,check_index){
          return (object_check.levelValue == z_noLevel && object_check.configNumber == z_config.substr(z_config.length-1) && object_check.isFreshLevel == false);  
        
    });
	if(z_level && z_config && $('#z-well-budget').val()){
    if(level_Status != -1){
        if(z_level == "Level1"){
			z_sel_config = JSON.parse(z_configJson_data[level_Status].wellConfig);
			 z_sel_config.forEach(function(obj,i){
				 var testobj={}
                    testobj['levelValue'] = obj.levelValue;
                    testobj['phaseName'] = obj.phaseName;
					 testobj['lineItems'] = obj.lineItems;
					 if(obj.isSelected != null){
						 testobj['isSelected'] = obj.isSelected;
					 }
					 else{
						 testobj['isSelected'] = false;
					 }
                    
					if(obj.totalCost != null){
						testobj['totalCost'] = obj.totalCost;
					}
					else{
						testobj['totalCost'] = [];
					}
					if(obj.perdayCost != null){
						testobj['perdayCost'] = obj.perdayCost;
					}
					else{
						testobj['perdayCost'] = "";
					}
						if(obj.lumpsumCost != null){
						testobj['lumpsumCost'] = obj.lumpsumCost;
					}
					else{
						testobj['lumpsumCost'] = "";
					}
					if(obj.remark != null){
						testobj['remark'] = obj.remark;
					}
					else{
						testobj['remark'] = "";
					}
                    z_sel_config[i] = testobj;
                    testobj = {};
			 });
			    addLevel(z_sel_config,z_noLevel);  
					
		}
		else if(z_level == "Level2"){
            //getBasewellConfig();
            z_sel_config = JSON.parse(z_configJson_data[level_Status].wellConfig);
            z_sel_config.forEach(function(obj,i){
        
                    var testobj={}
                    testobj['levelValue'] = obj.levelValue;
                    testobj['phaseName'] = obj.phaseName;
                    
                    obj.subLevels.forEach(function(obj3,k){
                        var testSubobj={};
                        testSubobj['levelValue'] = obj3.levelValue;
                        testSubobj['phaseName'] = obj3.phaseName;
                        testSubobj['totalCostItem'] = obj3.totalCostItem;
                        testSubobj['totalCostItemTitle'] = obj3.totalCostItemTitle;
						if(obj3.totalCost != null){
							testSubobj['totalCost'] = obj3.totalCost;
						}
						else{
							testSubobj['totalCost'] = [];
						}
                        
                        if(obj3.remark != null){
                            testSubobj['remark'] = obj3.remark;
                        }
                        else{
                            testSubobj['remark'] = "";
                        }
                        testSubobj['isSelected'] = obj3.isSelected;
                        obj.subLevels[k] = testSubobj;
                        testSubobj = {};
                    });
                    testobj['subLevels'] = obj.subLevels;
                    testobj['isSelected'] = obj.isSelected;
                    z_sel_config[i] = testobj;
                    testobj = {};
                
            });
            addLevel(z_sel_config,z_noLevel);
        }
        else if(z_level == "Level3"){

            //getBasewellConfig();
            z_sel_config = JSON.parse(z_configJson_data[level_Status].wellConfig);
            z_sel_config.forEach(function(obj,i){
        
                    var testobj={}
                    testobj['levelValue'] = obj.levelValue;
                    testobj['phaseName'] = obj.phaseName;
                    
                    obj.subLevels.forEach(function(obj3,k){
                        var testSubobj={};
                        testSubobj['levelValue'] = obj3.levelValue;
                        testSubobj['phaseName'] = obj3.phaseName;
                        testSubobj['totalCostItem'] = obj3.totalCostItem;
                        testSubobj['totalCost'] = obj3.totalCost;
                        testSubobj['totalCostItemTitle'] = obj3.totalCostItemTitle;
                        testSubobj['subLevels'] = obj3.subLevels;
                        if(obj3.remark != null){
                            testSubobj['remark'] = obj3.remark;
                        }
                        else{
                            testSubobj['remark'] = "";
                        }
                        testSubobj['isSelected'] = obj3.isSelected;
                        obj.subLevels[k] = testSubobj;
                        testSubobj = {};
                        var level3Obj = {};
                        if(obj3.subLevels != null){
                            obj3.subLevels.forEach(function(val,index){
                                level3Obj['levelValue'] = val.levelValue;
                                level3Obj['phaseName'] = val.phaseName;
                                level3Obj['remark'] = val.remark;
                                level3Obj['totalCost'] = val.totalCost;
                                level3Obj['isSelected'] = val.isSelected;
                                if(val.subLevels != null){
                                    level3Obj['subLevels'] = val.subLevels;
                                }
                                obj3.subLevels[index] = level3Obj;
                                level3Obj = {};
                            });
                        }
                        
                    });
                    testobj['subLevels'] = obj.subLevels;
                    testobj['isSelected'] = obj.isSelected;
                    z_sel_config[i] = testobj;
                    testobj = {};
                
            });
            addLevel(z_sel_config,z_noLevel);
        
        }
        else{
            z_sel_config = JSON.parse(z_configJson_data[level_Status].wellConfig);
            var l4_obj1 = {};
            var l4_obj2 = {};
            var l4_obj3 = {};
            var l4_obj4 = {};
            z_sel_config.forEach(function(level1,index1){
                if(level1.subLevels != null){
                    if(level1.subLevels.length > 0){
                        level1.subLevels.forEach(function(level2,index2){
                            if(level2.subLevels != null){
                                if(level2.subLevels.length > 0){
                                    level2.subLevels.forEach(function(level3,index3){
                                        if(level3.subLevels != null){
                                            if(level3.subLevels.length > 0){
                                                level3.subLevels.forEach(function(level4,index4){
                                                    l4_obj4 = level4;
                                                    l4_obj4['totalCost'] = [];
                                                    level4 = l4_obj4;
                                                });
                                            }
                                        }
                                        l4_obj3 = level3;
                                        l4_obj3['totalCost'] = [];
                                        level3 = l4_obj3;
                                    });
                                }
                            }
                            l4_obj2 = level2;
                            l4_obj2['totalCost'] = [];
                            level2 = l4_obj2;
                        });
                    }
                }
            });
            addLevel(JSON.parse(z_configJson_data[level_Status].wellConfig),z_noLevel);
        }
    }
    else{
		z_configJson_data_length = z_configJson_data.length;
        for(var i=0;i<z_configJson_data_length;i++){
            if(z_configJson_data[i].levelValue == z_noLevel && z_configJson_data[i].configNumber == z_config.substr(z_config.length-1)){
                if(z_level == "Level2"){
                    //getBasewellConfig();
                    z_sel_config = JSON.parse(z_configJson_data[i].wellConfig);
                    z_sel_config.forEach(function(obj,i){
                
                            var testobj={}
                            testobj['levelValue'] = obj.levelValue;
                            testobj['phaseName'] = obj.phaseName;
                            
                            obj.subLevels.forEach(function(obj3,k){
                                var testSubobj={};
                                testSubobj['levelValue'] = obj3.levelValue;
                                testSubobj['phaseName'] = obj3.phaseName;
                                testSubobj['totalCostItem'] = obj3.totalCostItem;
                                testSubobj['totalCostItemTitle'] = obj3.totalCostItemTitle;
								if(obj3.totalCost != null){
									testSubobj['totalCost'] = obj3.totalCost;
								}
								else{
									testSubobj['totalCost'] = [];
								}
                                
                                if(obj3.remark != null){
                                    testSubobj['remark'] = obj3.remark;
                                }
                                else{
                                    testSubobj['remark'] = "";
                                }
                                testSubobj['isSelected'] = obj3.isSelected;
                                obj.subLevels[k] = testSubobj;
                                testSubobj = {};
                            });
                            testobj['subLevels'] = obj.subLevels;
                            testobj['isSelected'] = obj.isSelected;
                            z_sel_config[i] = testobj;
                            testobj = {};
                        
                    });
                    addLevel(z_sel_config,z_noLevel);
                }
                else if(z_level == "Level3"){
    
                    //getBasewellConfig();
                    z_sel_config = JSON.parse(z_configJson_data[i].wellConfig);
                    z_sel_config.forEach(function(obj,i){
                
                            var testobj={}
                            testobj['levelValue'] = obj.levelValue;
                            testobj['phaseName'] = obj.phaseName;
                            
                            obj.subLevels.forEach(function(obj3,k){
                                var testSubobj={};
                                testSubobj['levelValue'] = obj3.levelValue;
                                testSubobj['phaseName'] = obj3.phaseName;
                                testSubobj['totalCostItem'] = obj3.totalCostItem;
                                testSubobj['totalCost'] = obj3.totalCost;
                                testSubobj['totalCostItemTitle'] = obj3.totalCostItemTitle;
                                testSubobj['subLevels'] = obj3.subLevels;
                                if(obj3.remark != null){
                                    testSubobj['remark'] = obj3.remark;
                                }
                                else{
                                    testSubobj['remark'] = "";
                                }
                                testSubobj['isSelected'] = obj3.isSelected;
                                obj.subLevels[k] = testSubobj;
                                testSubobj = {};
                                var level3Obj = {};
                                if(obj3.subLevels != null){
                                    obj3.subLevels.forEach(function(val,index){
                                        level3Obj['levelValue'] = val.levelValue;
                                        level3Obj['phaseName'] = val.phaseName;
                                        level3Obj['remark'] = val.remark;
                                        level3Obj['totalCost'] = val.totalCost;
                                        level3Obj['isSelected'] = val.isSelected;
                                        if(val.subLevels != null){
                                            level3Obj['subLevels'] = val.subLevels;
                                        }
                                        obj3.subLevels[index] = level3Obj;
                                        level3Obj = {};
                                    });
                                }
                                
                            });
                            testobj['subLevels'] = obj.subLevels;
                            testobj['isSelected'] = obj.isSelected;
                            z_sel_config[i] = testobj;
                            testobj = {};
                        
                    });
                    addLevel(z_sel_config,z_noLevel);
                
                }
                else{
                    z_sel_config = JSON.parse(z_configJson_data[i].wellConfig);
                    var l4_obj1 = {};
                    var l4_obj2 = {};
                    var l4_obj3 = {};
                    var l4_obj4 = {};
                    z_sel_config.forEach(function(level1,index1){
                        if(level1.subLevels != null){
                            if(level1.subLevels.length > 0){
                                level1.subLevels.forEach(function(level2,index2){
                                    if(level2.subLevels != null){
                                        if(level2.subLevels.length > 0){
                                            level2.subLevels.forEach(function(level3,index3){
                                                if(level3.subLevels != null){
                                                    if(level3.subLevels.length > 0){
                                                        level3.subLevels.forEach(function(level4,index4){
                                                            l4_obj4 = level4;
                                                            l4_obj4['totalCost'] = [];
                                                            level4 = l4_obj4;
                                                        });
                                                    }
                                                }
                                                l4_obj3 = level3;
                                                l4_obj3['totalCost'] = [];
                                                level3 = l4_obj3;
                                            });
                                        }
                                    }
                                    l4_obj2 = level2;
                                    l4_obj2['totalCost'] = [];
                                    level2 = l4_obj2;
                                });
                            }
                        }
                    });
                    addLevel(JSON.parse(z_configJson_data[i].wellConfig),z_noLevel);
                }
                
            }
        }
    }
        
	}
	days_enter = [];
	$('#z-total-costs').text("");
	$('#z-total-days').text("");
	$('#z-totalDays').val("");
	$('#z-allDays1').text("");
	z_grant_totalKey = [];
	z_selected_days_data = [];
	$('.z-wellDayLevel2').val('');
	$('#z-afe-timeline-panel').removeClass('z-estimate-panel');
	$('#z-estimation-panel').removeClass('z-estimate-panel');
	$('#z-afe-estimateComponent-panel').removeClass('z-estimate-panel');
	//$('#z-afe-estimateComponent-panel').addClass('z-estimate-panel');
	$('.z-days-active').addClass('d-none');
    $('.z-days-active').removeClass('z-days-active');
    z_Selected_testArray = [];
    z_array_day = [];
    z_Aray_val = [];
    z_Aray_val2 = [];
    taxValue = "";
    contigencyVal = "";
    contigencyPercent = "";
    taxPercent = "";
    $('.z-incline-data-level1').val('');
}

function addLevel(z_configJson_data, noOfLevel,show) {
    
    noOfLevel = Number(noOfLevel);
    $('#z-levelsConfig').empty();
    if(noOfLevel == "1"){
 
//    for (var i = 1; i <= noOfLevel; i++) {
//        $('#z-levelsConfig').append('<div class="col-' + colValue + '">' +
//            '<div class="row flex-column z-l-phaserow">' +
//            '<div class="z-l-title"> Level ' + i + '</div>' +
//            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
//            '</div>' +
//            '</div>');
//    }
    
  for (var i = 1; i <= noOfLevel; i++) {
  $('#z-levelsConfig').append('<div class="z-l-config"><div class="col-2 col-sm-2 col-md-2 col-lg-2 col-xl-2"><div class="z-l-title">Sr.no</div>'+
		  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap">'+
		  '</div></div></div>'+
		  '<div class="col-10 col-sm-10 col-md-10 col-lg-10 col-xl-10 z-rowconfig"><div class="z-l-title z-titleConfig-btn">ML1[MAJOR ELEMENTS]  Level1</div>'+
		  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div>'+
		  '</div>');
}
    
    phaseData(z_configJson_data,noOfLevel);
}
    else if(noOfLevel == "2"){
    		
			  $('#z-levelsConfig').append('<div id="z-level2-configrow" class="row z-l-config z-level2-configrow"><div class="col-2 col-sm-2 col-md-2 col-lg-2 col-xl-2 z-configHeight"><div class="z-l-title">Code</div>'+
    				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap">'+
    				  '</div></div>'+
    				  '<div class="col-5 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">ML1[MAJOR ELEMENTS] Level-1</div>'+
    				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
    				  '<div class="col-5 z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels-hide">MSEL 2[MAJOR SUB-ELEMENTS] Level-2</div>'+
    				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div>'+
    				  '</div></div>');
					  
					    $('#z-levelsConfig').append('<div id="z-level2-configrow-comment" class="row z-l-config z-level2-configrow"><div class="col-2 col-sm-2 col-md-2 col-lg-2 col-xl-2 z-configHeight"><div class="z-l-title"></div>'+
    				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap">'+
    				  '</div></div>'+
    				  '<div class="col-5 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">Select Level 1 AFE Components</div>'+
    				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
    				  '<div class="col-5 z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels-hide">Select Level 2 AFE Components</div>'+
    				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div>'+
    				  '</div></div>');
    		  phaseData(z_configJson_data,noOfLevel,show);
    }
    // else if(noOfLevel == "3"){
    // 	$('#z-levelsConfig').append('<div id="z-level2-configrow" class="row z-l-config"><div class="col-2 col-sm-2 col-md-2 col-lg-2 col-xl-2 z-configHeight"><div class="z-l-title">Code</div>'+
	// 			  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap">'+
	// 			  '</div></div>'+
	// 			  '<div class="col-4 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">Level-1</div>'+
	// 			  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
	// 			  '<div class="col-3 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">Level-2</div>'+
	// 			  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
	// 			  '<div class="col-3 z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels3-hide">Level-3</div>'+
	// 			  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
	// 			  '</div>');
	// 	  phaseData(z_configJson_data,noOfLevel,show);

    // }
    else if(noOfLevel == "3"){
    	
		$('#z-levelsConfig').append('<div id="z-level2-configrow" class="row z-l-config z-level2-configrow"><div class="z-codeWidth-level4 z-configHeight"><div class="z-l-title">Code</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap">'+
				  '</div></div>'+
				  '<div class="z-descWidth-level4 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">Level-1</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels-hide">Level-2</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels3-hide">Level-3</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels4-hide">Level-4</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '</div>');
				  
				  $('#z-levelsConfig').append('<div id="z-level2-configrow-comment" class="row z-l-config z-level2-configrow"><div class="z-codeWidth-level4 z-configHeight"><div class="z-l-title"></div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap">'+
				  '</div></div>'+
				  '<div class="z-descWidth-level4 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">Select Level 1 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels-hide">Select Level 2 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels3-hide">Select Level 3 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels4-hide">Select Level 4 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '</div>');
		  phaseData(z_configJson_data,noOfLevel,show);
    }
    else if(noOfLevel == "4"){
    	$('#z-levelsConfig').append('<div id="z-level2-configrow" class="row z-l-config z-level2-configrow"><div class="z-codeWidth-level4 z-configHeight"><div class="z-l-title">Code</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap">'+
				  '</div></div>'+
				  '<div class="z-descWidth-level4 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">Level-1</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels-hide">Level-2</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels3-hide">Level-3</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels4-hide">Level-4</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '</div>');
				  
				  $('#z-levelsConfig').append('<div id="z-level2-configrow-comment" class="row z-l-config z-level2-configrow"><div class="z-codeWidth-level4 z-configHeight"><div class="z-l-title"></div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap">'+
				  '</div></div>'+
				  '<div class="z-descWidth-level4 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">Select Level 1 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels-hide">Select Level 2 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels3-hide">Select Level 3 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-level4-width z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels4-hide">Select Level 4 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '</div>');
		  phaseData(z_configJson_data,noOfLevel,show);
    }
    else if(noOfLevel == "5"){
    	$('#z-levelsConfig').append('<div id="z-level2-configrow" class="row z-l-config z-level2-configrow"><div class="z-codeWidth-level5 z-configHeight"><div class="z-l-title">Code</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap">'+
				  '</div></div>'+
				  '<div class="z-width-level5-col1 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">Level-1</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-width-level5-col2 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">Level-2</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-width-level5-col3 z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels-hide">Level-3</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-width-level5-col4 z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels3-hide">Level-4</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-width-level5-col5 z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels4-hide">Level-5</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '</div>');
				  
		 $('#z-levelsConfig').append('<div id="z-level2-configrow-comment" class="row z-l-config z-level2-configrow"><div class="z-codeWidth-level5 z-configHeight"><div class="z-l-title"></div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap">'+
				  '</div></div>'+
				  '<div class="z-width-level5-col1 z-l-config"><div class="z-l-title z-configHeight z-x-config-title">Select Level 1 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-width-level5-col2 z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels-hide">Select Level 2 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-width-level5-col3 z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels3-hide">Select Level 3 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-width-level5-col4 z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels3-hide">Select Level 4 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '<div class="z-width-level5-col5 z-l-config"><div class="z-l-title z-configHeight z-x-config-title z-sublevels4-hide">Select Level 5 AFE Components</div>'+
				  '<div id="z-l1-phasewrap" class="z-l-phase-config z-l1-phasewrap"></div></div>'+
				  '</div>');
		  phaseData(z_configJson_data,noOfLevel,show);
    }
}
var configData=[];
var subLevels,subLevels_3;
function phaseData(data,level,show){
	if(level == "1"){
		
		data.forEach(function (obj, i) {
			if(obj.isSelected == true){
				 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="col-2  col-sm-2 col-md-2 col-lg-2 col-xl-2 z-l-configbottom z-l-grey-color z-well-content">' + obj['levelValue'] + '</div>' +
				            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
				            '<div class="col-3 z-l-configbottom z-well-content z-tableData-row z-level-selection d-flex" level="' + level + '" onclick="z_configActive_new(this)" onmouseover="z_levels_hover_new(this)"><div class="z-select-phase-checkmark d-none"><div class="fa fa-check z-select-phase-checkmark  d-block"></div></div><div class="z-well-content">' + obj.phaseName +
						   '</div>'+
						   '	<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div>'+
	                       '<div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div></div></div></div>');		
			
			}
			else{
				 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="col-2  col-sm-2 col-md-2 col-lg-2 col-xl-2 z-l-configbottom z-l-grey-color z-well-content">' + obj['levelValue'] + '</div>' +
				            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
				            '<div class="col-3 z-l-configbottom z-tableData-row z-l-grey-color z-well-content d-flex" level="' + level + '" onclick="z_configActive_new(this)" onmouseover="z_levels_hover_new(this)"><div class="z-select-phase-checkmark d-none"><div class="fa fa-check z-select-phase-checkmark "></div></div><div class="z-well-content">'+ 
	                       obj.phaseName +'</div>'+
						   '<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div>'+
	                       '<div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div></div></div></div>');		
			}
		});
		
		$('#z-levelsConfig').append("<div id='ws-level1-addphase' class='btn z-m-addPhasebtn z-m-addPhase1' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div>");
		configData = data;	
	}
	else if(level == "2"){
		/* code gen*/
		var phase_sno = "001";
		var subLevel_sno = 0;
		var result_sno;
		var sublevel_result_sno = 0;
		var sub_sn_result,level2_index;
		data.forEach(function (obj, i) {
			subLevels = obj['subLevels'];
			$('#z-sublevels').empty();
			/* code gen*/
		
			subLevels.forEach(function (val, j) {
				/* code gen level2*/
				result_sno = (subLevel_sno + 1).toString();
				subLevel_sno = subLevel_sno + 1;
				//subLevel_sno = (Number(subLevel_sno)+1).toString();
				if(Number(result_sno) < 10){
					result_sno = "0"+result_sno;
				}
				if(sublevel_result_sno == 0){
					sub_sn_result = "001"+"-"+result_sno;
				}
				else{
					sub_sn_result = phase_sno+"-"+result_sno;
				}
				/*end*/
				if(z_Aray_val2.length > 0){
					level2_index = z_Aray_val2.findIndex(function(level2_ob){
						return level2_ob.level2Phase == val.phaseName;
					});
					if(level2_index != -1){
						$('#z-sublevels').append(
				            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels-hide">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
					            '<div class="col-2 z-l-configbottom z-l-grey-color z-well-content">' + sub_sn_result + '</div>' +
					            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
					            '<div class="col-5 z-l-configbottom">' + 
					            '<div></div></div>' +
					            '<div class="col-5 z-tableData-row z-level-selection z-l-configbottom d-flex" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
								'<div class="z-well-content">'+
					            val['phaseName'] + '</div>'+
								'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark">✓</div></div>'+
								'<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div>'+
								'</div>'+
					            '</div><div>');
					}
					else{
						$('#z-sublevels').append(
				            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels-hide">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
					            '<div class="col-2 z-l-configbottom z-l-grey-color z-well-content">' + sub_sn_result + '</div>' +
					            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
					            '<div class="col-5 z-l-configbottom">' + 
					            '<div></div></div>' +
					            '<div class="col-5 z-l-configbottom z-tableData-row d-flex" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
								'<div class="z-well-content">'+
					            val['phaseName'] + '</div>'+
								'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark">✓</div></div>'+
								'<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div>'+
								'</div>'+
					            '</div><div>');
					}
					
				}
				else{
					if(val.isSelected){
						$('#z-sublevels').append(
				            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels-hide">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
					            '<div class="col-2 z-l-configbottom z-l-grey-color z-well-content">' + sub_sn_result + '</div>' +
					            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
					            '<div class="col-5 z-l-configbottom">' + 
					            '<div></div></div>' +
					            '<div class="col-5 z-l-configbottom z-tableData-row d-flex z-level-selection" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
								'<div class="z-well-content">'+
					            val['phaseName'] + '</div>'+
							    '<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark">✓</div></div>'+
								'<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div>'+
								'</div>'+
					            '</div><div>');
					}
					else{
						$('#z-sublevels').append(
				            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels-hide">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
					            '<div class="col-2 z-l-configbottom z-l-grey-color z-well-content">' + sub_sn_result + '</div>' +
					            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
					            '<div class="col-5 z-l-configbottom">' + 
					            '<div></div></div>' +
					            '<div class="col-5 z-l-configbottom z-tableData-row d-flex" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
								'<div class="z-well-content">'+
					            val['phaseName'] + '</div>'+
								'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark">✓</div></div>'+
								'<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div>'+
								'</div>'+
					            '</div><div>');
					}
					
				}
				
	            });
			if(show == true && z_Selected_testArray.includes(obj['phaseName'].trim())){
				 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="col-2  col-sm-2 col-md-2 col-lg-2 col-xl-2 z-l-configbottom z-well-content">' + phase_sno + '</div>' +
				            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
				            '<div class="col-5 col-sm-5 col-md-5 col-lg-5 col-xl-5 z-l-configbottom z-tableData-row d-flex z-level-selection" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel = "1" onmouseover="z_levels_hover_new(this)">' + 
							'<div class="z-well-content">'+
				            obj['phaseName'] + '</div>'+
							'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark">✓</div></div>'+
							'<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
				            '</div>' +
				            $('#z-sublevels')[0].innerHTML+
				            '</div></div>');
			}
			else{
				if(obj.isSelected){
					 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
					            '<div class="col-2  col-sm-2 col-md-2 col-lg-2 col-xl-2 z-l-configbottom z-well-content">' + phase_sno + '</div>' +
					            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
					            '<div class="col-5 col-sm-5 col-md-5 col-lg-5 col-xl-5 z-l-configbottom z-tableData-row z-level-selection d-flex" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel = "1" onmouseover="z_levels_hover_new(this)">' + 
								'<div class="z-well-content">'+
					            obj['phaseName'] + '</div>'+
								'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark">✓</div></div>'+
								'<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
					            '</div>' +
					            $('#z-sublevels')[0].innerHTML+
					            '</div></div>');
				}
				else{
					 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
					            '<div class="col-2  col-sm-2 col-md-2 col-lg-2 col-xl-2 z-l-configbottom z-l-grey-color z-well-content">' + phase_sno + '</div>' +
					            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
					            '<div class="col-5 col-sm-5 col-md-5 col-lg-5 col-xl-5 z-l-configbottom z-l-grey-color z-tableData-row d-flex" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel="1" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
								'<div class="z-well-content">'+
					            obj['phaseName'] + '</div>'+
								'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark">✓</div></div>'+
								'<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
					            '</div>' +
					            $('#z-sublevels')[0].innerHTML+
					            '</div></div>');
				}
			
			}
			
				subLevel_sno = 0;
				if(sublevel_result_sno == 0){
						phase_sno = "0"+(Number(phase_sno) + 1).toString()+"1";	//2
					}
					else{
						if(Number(phase_sno) == 81){
						phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1"; 
						}
						else if(Number(phase_sno) >= 101){
							phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";	
						}
						else if(Number(phase_sno) <= 61){
						    phase_sno = "0"+(Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";
						}
					
					}
					sublevel_result_sno = sublevel_result_sno +1;
			 $('#z-sublevels').empty();
		});
		//$('#z-levelsConfig').append("<div id='ws-level21-addphase' class='btn z-m-btn3 z-m-addPhase' levels='21' onclick='z_addPhase(\""+this+"\", \""+data+"\")'>Add Phase</div>");
		$('#z-levelsConfig').append("<div id='ws-level21-addphase' class='btn z-m-addPhasebtn z-m-addPhase1' level='" + (Number(level)-1) + "' onclick='z_addPhase(this)'>Add Phase</div>");
		$('#z-levelsConfig').append("<div id='ws-level2-proceed' class='btn z-m-addPhasebtn' level='" + level + "' onclick='z_showNextLevel(this)'>Proceed to Level2</div>");
		$('#z-levelsConfig').append("<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-level1-del-btn' level='1' onclick='z_deleteLevels(this)'>Delete Phase</div>");

		$('#z-levelsConfig').append("<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-sublevels-hide z-m-addPhase' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div>");
		$('#z-levelsConfig').append("<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-level2-del-btn d-none' level='2' onclick='z_deleteLevels(this)'>Delete Phase</div>");
				$('#z-levelsConfig').append("<div id='z-level21-prevphase' class='btn z-m-addPhasebtn z-sublevels-hide' level='1' onclick='z_prevPhase(this)'>Back to Level 1</div>");
								$('#z-levelsConfig').append("<div id='go-to-wellTimeline' class='btn btn-link z-sublevels-hide' onclick='goTowellTimeline(this)'>Save and Proceed to Well Timeline</div>");


		configData = data;
	}
	else if(level == "3"){
		/* code gen*/
		var phase_sno = "001";
		var subLevel_sno = 0;
		var result_sno;
		var sublevel_result_sno = 0;
		var sub_sn_result;
		data.forEach(function (obj, i) {
			subLevels = obj['subLevels'];
			$('#z-sublevels').empty();
			/* code gen*/
		
			subLevels.forEach(function (val, j) {
				/* code gen level2*/
				result_sno = (subLevel_sno + 1).toString();
				subLevel_sno = subLevel_sno + 1;
				//subLevel_sno = (Number(subLevel_sno)+1).toString();
				if(Number(result_sno) < 10){
					result_sno = "0"+result_sno;
				}
				if(sublevel_result_sno == 0){
					sub_sn_result = "001"+"-"+result_sno;
				}
				else{
					sub_sn_result = phase_sno+"-"+result_sno;
				}
				/*end*/
				/*for level3*/
				var z_level3_sno_start = 1;
                var z_level3_sno = sub_sn_result+"-0"+z_level3_sno_start;
                var z_subLevels4,z_level4_resultSno;
				subLevels_3 = val['subLevels'];
				if(subLevels_3 != null){
                    var level4_serialNumber1 = 0;
							var level4_serialNumber2 = 65;
                    subLevels_3.forEach(function (val1, j1) {
                        z_subLevels4 = val1['subLevels'];
                        if(z_subLevels4 != null){
                            z_subLevels4.forEach(function(val_ob1,index_ob1){
								z_level4_resultSno = z_level3_sno + "-" + level4_serialNumber1 + "&#" +level4_serialNumber2;
								if(val_ob1.isSelected){
									$('#z-sublevels4').append(
							            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels4-hide">' +
								            '<div class="row z-l-phaserow z-borderBottom level4">' +
								            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + z_level4_resultSno + '</div>' +
								            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
								            '<div class="z-descWidth-level4 d-flex z-l-configbottom">' + 
								            '<div></div></div>' +
								            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content">'+
								            '</div></div>'+
								            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content">'+
								            '</div></div>'+
								            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + level + '" onclick="z_configActive(this)" selectlevel = "4" onmouseover="z_levels_hover(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'" baseLevel3="'+val1.phaseName +'">' + 
											'<div class="z-well-content z-wellComponentWidth" contentEditable="true" index="'+index_ob1+'" level3-element="'+val1.phaseName+'" onclick="saveLevel(this)" onfocusout="saveLevel(this)">'+
								            val_ob1['phaseName'] + '</div>'+
																						'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
											'<div class="z-l-closeBtn-level4 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4 d-none" data-toggle="tooltip" '+ 'onclick="z_addNextPhase(this)" title="Add Phase" index="'+index_ob1+'" levels="4" level="4">+</div>'+
											'</div>'+
									        '</div><div>');
								}
								else{
									$('#z-sublevels4').append(
							            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels4-hide">' +
								            '<div class="row z-l-phaserow z-borderBottom level4">' +
								            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + z_level4_resultSno + '</div>' +
								            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
								            '<div class="z-descWidth-level4 d-flex z-l-configbottom">' + 
								            '<div></div></div>' +
								            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content">'+
								            '</div></div>'+
								            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content">'+
								            '</div></div>'+
								            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "4" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'" baselevel3="'+val1.phaseName+'">' + 
											'<div class="z-well-content z-wellComponentWidth" contentEditable="true" index="'+index_ob1+'" level3-element="'+val1.phaseName+'" onclick="saveLevel(this)" onfocusout="saveLevel(this)">'+
								            val_ob1['phaseName'] + '</div>'+
											'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
											'<div class="z-l-closeBtn-level4 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4 d-none" data-toggle="tooltip" '+ 'onclick="z_addNextPhase(this)" title="Add Phase" index="'+index_ob1+'" levels="4" level="4">+</div>'+
											'</div>'+
									        '</div><div>');
								}
								level4_serialNumber1 = level4_serialNumber1 + 1;
								if(level4_serialNumber1 >= 10){
									level4_serialNumber1 = 0;
									level4_serialNumber2 = level4_serialNumber2 + 1;
								}

                            });
                        }
                        if(val1.isSelected){
							$('#z-sublevels3').append(
					            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels3-hide">' +
						            '<div class="row z-l-phaserow z-borderBottom level3">' +
						            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + z_level3_sno + '</div>' +
						            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
						            '<div class="z-descWidth-level4 z-l-configbottom">' + 
						            '<div></div></div>' +
						            '<div class="z-level4-width z-l-configbottom z-config-content" level="' + level + '">' + 
						            '<div class="z-well-content">'+
						            '</div></div>'+
						            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "3" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'">' + 
									'<div class="z-well-content">'+
						            val1['phaseName'] + '</div>'+
									'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
									'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="3" level="3">+</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addNextLevel(this)" title="Add Next Level" levels="3" level="3">+</div>'+
									'</div>'+
                                    $('#z-sublevels4')[0].innerHTML+
                                    '</div><div>');
						}
						else{
							$('#z-sublevels3').append(
					            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels3-hide">' +
						            '<div class="row z-l-phaserow z-borderBottom level3">' +
						            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + z_level3_sno + '</div>' +
						            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
						            '<div class="z-descWidth-level4 z-l-configbottom">' + 
						            '<div></div></div>' +
						            '<div class="z-level4-width z-l-configbottom" level="' + level + '">' + 
						            '<div class="z-well-content">'+
						            '</div></div>'+
						            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "3" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'">' + 
									'<div class="z-well-content">'+
						            val1['phaseName'] + '</div>'+
									'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
									'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="3" level="3">+</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addNextLevel(this)" title="Add Next Level" levels="3" level="3">+</div>'+
									'</div>'+
                                    $('#z-sublevels4')[0].innerHTML+
                                    '</div><div>');
						}
						$('#z-sublevels4').empty();
						z_level3_sno_start = z_level3_sno_start + 1;
						if(z_level3_sno_start > 9){
							z_level3_sno = sub_sn_result+"-"+z_level3_sno_start;
						}
						else{
							z_level3_sno = sub_sn_result+"-0"+z_level3_sno_start;
						}
					});
				}
				if(val.isSelected){
					$('#z-sublevels').append('<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels-hide">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + sub_sn_result + '</div>' +
				            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
				            '<div class="z-descWidth-level4 z-l-configbottom">' + 
				            '<div></div></div>' +
				            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
							'<div class="z-well-content">'+
				            val['phaseName'] + '</div>'+
							'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
							'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div>'+
							'</div>'+
				            '<div class="z-level4-width z-l-configbottom z-config-content" level="' + level + '">' + 
							'<div class="z-well-content">'+
				            '</div></div>'+
				            $('#z-sublevels3')[0].innerHTML+
				            '</div><div>');
				}
				else{
					$('#z-sublevels').append('<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels-hide">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + sub_sn_result + '</div>' +
				            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
				            '<div class="z-descWidth-level4 z-l-configbottom">' + 
				            '<div></div></div>' +
				            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
							'<div class="z-well-content">'+
				            val['phaseName'] + '</div>'+
														'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
							'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
				            '<div class="z-level4-width z-l-configbottom z-config-content" level="' + level + '">' + 
							'<div class="z-well-content">'+
				            '</div><div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div>'+
							'</div>'+
				            $('#z-sublevels3')[0].innerHTML+
				            '</div><div>');
				}
				
				$('#z-sublevels3').empty();
	            });
			if(show == true && z_Selected_testArray.includes(obj['phaseName'].trim())){
				 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="z-codeWidth-level4 z-l-configbottom z-well-content">' + phase_sno + '</div>' +
				            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
				            '<div class="z-descWidth-level4 d-flex z-l-configbottom z-level-selection z-tableData-row" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel = "1" onmouseover="z_levels_hover_new(this)">' + 
							'<div class="z-well-content">'+
				            obj['phaseName'] + '</div>'+
																					'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
							'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
				            '</div>' +
				            $('#z-sublevels')[0].innerHTML+
				            '</div></div>');
			}
			else{
				if(obj.isSelected){
					 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
					            '<div class="z-codeWidth-level4 d-flex z-l-configbottom z-well-content">' + phase_sno + '</div>' +
					            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
					            '<div class="z-descWidth-level4 d-flex z-l-configbottom z-level-selection z-tableData-row" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel = "1" onmouseover="z_levels_hover_new(this)">' + 
								'<div class="z-well-content">'+
					            obj['phaseName'] + '</div>'+
								'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark d-none d-block">✓</div></div>'+
								'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
					            '</div>' +
					            $('#z-sublevels')[0].innerHTML+
					            '</div></div>');
				}
				else{
					 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
					            '<div class="z-codeWidth-level4 d-flex z-l-configbottom z-l-grey-color z-well-content">' + phase_sno + '</div>' +
					            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
					            '<div class="z-descWidth-level4 d-flex z-l-configbottom z-tableData-row z-l-grey-color" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel="1" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
								'<div class="z-well-content">'+
					            obj['phaseName'] + '</div>'+
								'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
					            '</div>' +
					            $('#z-sublevels')[0].innerHTML+
					            '</div></div>');
				}
			
			}
			
				subLevel_sno = 0;
				if(sublevel_result_sno == 0){
						phase_sno = "0"+(Number(phase_sno) + 1).toString()+"1";	//2
					}
					else{
						if(Number(phase_sno) == 81){
						phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1"; 
						}
						else if(Number(phase_sno) >= 101){
							phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";	
						}
						else if(Number(phase_sno) <= 61){
						    phase_sno = "0"+(Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";
						}
					
					}
					sublevel_result_sno = sublevel_result_sno +1;
			 $('#z-sublevels').empty();
			 $('#z-sublevels3').empty();
		});
		//$('#z-levelsConfig').append("<div id='ws-level21-addphase' class='btn z-m-btn3 z-m-addPhase' levels='21' onclick='z_addPhase(\""+this+"\", \""+data+"\")'>Add Phase</div>");
		$('#z-levelsConfig').append("<div class='col-12'><div class='row'><div class='z-codeWidth-level4 z-l-configbottom z-l-grey-color'></div><div class='z-descWidth-level4 z-l-configbottom'><div id='ws-level21-addphase' class='btn z-m-addPhasebtn' level='1' onclick='z_addPhase(this)'>Add Phase</div>"+
				"<div id='ws-level2-proceed' class='btn z-m-addPhasebtn' level='" + (Number(level)-1) + "' onclick='z_showNextLevel(this)'>Proceed to Level2</div>"+
				"<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-level1-del-btn' level='1' onclick='z_deleteLevels(this)'>Delete Phase</div></div>"+
				"<div class='z-level4-width z-l-configbottom'><div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-sublevels-hide' level='2' onclick='z_addPhase(this)'>Add Phase</div>"+
				"<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-level2-del-btn d-none' level='2' onclick='z_deleteLevels(this)'>Delete Phase</div>"+
				"<div id='z-level-prevphase2' class='btn z-m-addPhasebtn z-sublevels-hide' level='2' onclick='z_prevPhase(this)'>Back to Level1</div>"+
				"<div id='ws-level3-proceed' class='btn z-m-addPhasebtn z-sublevels-hide' level='" + level + "' onclick='z_showNextLevel(this)'>Proceed to Level3</div></div>"+
				"<div class='z-level4-width z-l-configbottom'><div id='ws-level31-addphase' class='btn z-m-addPhasebtn z-sublevels3-hide' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div><div id='ws-nextLevel32-addphase' class='btn z-m-addPhasebtn z-level4-next-btn d-none' level='4' onclick='z_expandLevel(this)'>Proceed to Level4</div>"+
        "<div id='ws-level32-addphase' class='btn z-m-addPhasebtn z-level2-del-btn z-sublevels3-hide' level='3' onclick='z_deleteLevels(this)'>Delete Phase</div>"+
		"<div id='z-backto-level2' class='btn z-m-addPhasebtn z-sublevels3-hide' level='2' onclick='z_back_to_level2(this)'>Back to Level2</div>"+
										"<div id='z-back-toLevel1' class='btn z-m-addPhasebtn z-sublevels3-hide' level='2' onclick='z_prevPhase(this)'>Back to Level1</div>"+
														"<div id='go-to-wellTimeline' class='btn btn-link z-sublevels3-hide' onclick='goTowellTimeline(this)'>Save and Proceed to Well Timeline</div>"+
		"</div>"+
        "<div class='z-level4-width z-l-configbottom'><div id='ws-level31-addphase' class='btn z-m-addPhasebtn z-sublevels4-hide' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div><div id='ws-level32-addphase' class='btn z-m-addPhasebtn z-level2-del-btn z-sublevels4-hide' level='3' onclick='z_deleteLevels(this)'>Delete Phase</div><div id='ws-nextLevel32-addphase' class='btn z-m-addPhasebtn z-level2-del-btn z-sublevels4-hide' level='4' onclick='z_expandLevel(this)'>Previous</div>"+
        "</div></div>"+
        "</div></div></div>");
		
//		$('#z-levelsConfig').append("<div id='ws-level21-addphase' class='btn z-m-addPhasebtn z-m-addPhase1' level='" + (Number(level)-1) + "' onclick='z_addPhase(this)'>Add Phase</div>");
//		$('#z-levelsConfig').append("<div id='z-level21-prevphase' class='btn z-m-addPhasebtn d-none' level='1' onclick='z_prevPhase(this)'>prev</div>");
//		$('#z-levelsConfig').append("<div id='ws-level2-proceed' class='btn z-m-addPhasebtn' level='" + level + "' onclick='z_showNextLevel()'>Proceed to Level2</div>");
//		$('#z-levelsConfig').append("<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-level1-del-btn' level='1' onclick='z_deleteLevels(this)'>Delete Phase</div>");
//
//		$('#z-levelsConfig').append("<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-sublevels-hide' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div>");
//		$('#z-levelsConfig').append("<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-level2-del-btn d-none' level='2' onclick='z_deleteLevels(this)'>Delete Phase</div>");
//		$('#z-levelsConfig').append("<div id='z-level-prevphase2' class='btn z-m-addPhasebtn' level='2' onclick='z_prevPhase(this)'>prev</div>");
//		$('#z-levelsConfig').append("<div id='ws-level3-proceed' class='btn z-m-addPhasebtn' level='" + level + "' onclick='z_showNextLevel()'>Proceed to Level3</div>");
//		
//		$('#z-levelsConfig').append("<div id='ws-level31-addphase' class='btn z-m-addPhasebtn z-sublevels-hide' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div>");
//		$('#z-levelsConfig').append("<div id='ws-level32-addphase' class='btn z-m-addPhasebtn z-level2-del-btn d-none' level='3' onclick='z_deleteLevels(this)'>Delete Phase</div>");
//		configData = data;
	
	}
	else if(level == "4"){

		/* code gen*/
		var phase_sno = "001";
		var subLevel_sno = 0;
		var result_sno;
		var sublevel_result_sno = 0;
		var sub_sn_result;
		data.forEach(function (obj, i) {
			subLevels = obj['subLevels'];
			$('#z-sublevels').empty();
			/* code gen*/
		
			subLevels.forEach(function (val, j) {
				/* code gen level2*/
				result_sno = (subLevel_sno + 1).toString();
				subLevel_sno = subLevel_sno + 1;
				//subLevel_sno = (Number(subLevel_sno)+1).toString();
				if(Number(result_sno) < 10){
					result_sno = "0"+result_sno;
				}
				if(sublevel_result_sno == 0){
					sub_sn_result = "001"+"-"+result_sno;
				}
				else{
					sub_sn_result = phase_sno+"-"+result_sno;
				}
				/*end*/
				/*for level3*/
				var z_level3_sno_start = 1;
				var z_level3_sno = sub_sn_result+"-0"+z_level3_sno_start;
				var z_level4_resultSno;
				subLevels_3 = val['subLevels'];
				if(subLevels_3 != null){
					subLevels_3.forEach(function (val1, j1) {
						var subLevels_4 = val1['subLevels'];
						if(subLevels_4 != null){
							var level4_serialNumber1 = 0;
							var level4_serialNumber2 = 65;
							subLevels_4.forEach(function(level4,j4){
								z_level4_resultSno = z_level3_sno + "-" + level4_serialNumber1 + "&#" +level4_serialNumber2;
								if(level4.isSelected){
									$('#z-sublevels4').append(
							            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels4-hide">' +
								            '<div class="row z-l-phaserow z-borderBottom">' +
								            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + z_level4_resultSno + '</div>' +
								            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
								            '<div class="z-descWidth-level4 d-flex z-l-configbottom">' + 
								            '<div></div></div>' +
								            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content">'+
								            '</div></div>'+
								            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content">'+
								            '</div></div>'+
								            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "4" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'" baseLevel3="'+val1.phaseName +'">' + 
											'<div class="z-well-content">'+
								            level4['phaseName'] + '</div>'+
											'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
                                            '<div class="z-l-closeBtn-level4 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="4" level="4">+</div>'+
											'</div>'+
									        '</div><div>');
								}
								else{
									$('#z-sublevels4').append(
							            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels4-hide">' +
								            '<div class="row z-l-phaserow z-borderBottom">' +
								            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + z_level4_resultSno + '</div>' +
								            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
								            '<div class="z-descWidth-level4 d-flex z-l-configbottom">' + 
								            '<div></div></div>' +
								            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content">'+
								            '</div></div>'+
								            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content">'+
								            '</div></div>'+
								            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "4" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'" baselevel3="'+val1.phaseName+'">' + 
											'<div class="z-well-content">'+
								            level4['phaseName'] + '</div>'+
											'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
                                            '<div class="z-l-closeBtn-level4 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="4" level="4">+</div>'+
											'</div>'+
									        '</div><div>');
								}
								level4_serialNumber1 = level4_serialNumber1 + 1;
								if(level4_serialNumber1 >= 10){
									level4_serialNumber1 = 0;
									level4_serialNumber2 = level4_serialNumber2 + 1;
								}
							});
						}
						if(val1.isSelected){
							$('#z-sublevels3').append(
					            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels3-hide">' +
						            '<div class="row z-l-phaserow z-borderBottom">' +
						            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + z_level3_sno + '</div>' +
						            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
						            '<div class="z-descWidth-level4 d-flex z-l-configbottom">' + 
						            '<div></div></div>' +
						            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
						            '<div class="z-well-content">'+
						            '</div></div>'+
						            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "3" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'">' + 
									'<div class="z-well-content">'+
						            val1['phaseName'] + '</div>'+								
									'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
                                    '<div class="z-l-closeBtn-level3 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="3" level="3">+</div>'+
									'</div>'+
						            '<div class="z-level4-width d-flex z-l-configbottom z-config-content" level="' + level + '">' + 
						            '<div class="z-well-content">'+
						            '</div></div>'+
						            $('#z-sublevels4')[0].innerHTML+
							'</div><div>');
						}
						else{
							$('#z-sublevels3').append(
					            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels3-hide">' +
						            '<div class="row z-l-phaserow z-borderBottom">' +
						            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + z_level3_sno + '</div>' +
						            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
						            '<div class="z-descWidth-level4 d-flex z-l-configbottom">' + 
						            '<div></div></div>' +
						            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
						            '<div class="z-well-content">'+
						            '</div></div>'+
						            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "3" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'">' + 
									'<div class="z-well-content">'+
						            val1['phaseName'] + '</div>'+								
									'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
                                     '<div class="z-l-closeBtn-level3 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="3" level="3">+</div>'+
									'</div>'+
						            '<div class="z-level4-width d-flex z-l-configbottom z-config-content" level="' + level + '">' + 
						            '<div class="z-well-content">'+
						            '</div></div>'+
						            $('#z-sublevels4')[0].innerHTML+
							'</div><div>');
						}
						$('#z-sublevels4').empty();
						z_level3_sno_start = z_level3_sno_start + 1;
						if(z_level3_sno_start > 9){
							z_level3_sno = sub_sn_result+"-"+z_level3_sno_start;
						}
						else{
							z_level3_sno = sub_sn_result+"-0"+z_level3_sno_start;
						}
					});
				}
				if(val.isSelected){
					$('#z-sublevels').append('<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels-hide">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + sub_sn_result + '</div>' +
				            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
				            '<div class="z-descWidth-level4 d-flex z-l-configbottom">' + 
				            '<div></div></div>' +
				            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
							'<div class="z-well-content">'+
				            val['phaseName'] + '</div>'+								
							'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
                             '<div class="z-l-closeBtn-level2 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level2 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div>'+
							'</div>'+
				            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
				            '<div class="z-well-content">'+
				            '</div></div>'+
				            '<div class="z-level4-width d-flex z-l-configbottom" level="' + level + '">' + 
				            '<div class="z-well-content">'+
				            '</div></div>'+
				            $('#z-sublevels3')[0].innerHTML+
				            '</div><div>');
				}
				else{
					$('#z-sublevels').append('<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels-hide">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + sub_sn_result + '</div>' +
				            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
				            '<div class="z-descWidth-level4 d-flex z-l-configbottom">' + 
				            '<div></div></div>' +
				            '<div class="z-level4-width d-flex z-l-configbottom z-tableData-row" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
							'<div class="z-well-content">'+
				            val['phaseName'] + '</div>'+								
							'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level2 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level2 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div>'+
							'</div>'+
				            '<div class="z-level4-width d-flex z-l-configbottom z-config-content" level="' + level + '">' + 
				            '<div class="z-well-content">'+
				            '</div></div>'+
				            '<div class="z-level4-width d-flex z-l-configbottom z-config-content" level="' + level + '">' + 
				            '<div class="z-well-content">'+
				            '</div></div>'+
				            $('#z-sublevels3')[0].innerHTML+
				            '</div><div>');
				}
				
				$('#z-sublevels3').empty();
	            });
			if(show == true && z_Selected_testArray.includes(obj['phaseName'].trim())){
				 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="z-codeWidth-level4 z-l-configbottom z-well-content">' + phase_sno + '</div>' +
				            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
				            '<div class="z-descWidth-level4 d-flex z-l-configbottom z-level-selection z-tableData-row" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel = "1" onmouseover="z_levels_hover_new(this)">' + 
							'<div class="z-well-content">'+
				            obj['phaseName'] + '</div>'+								
							'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
                             '<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
				            '</div>' +
				            $('#z-sublevels')[0].innerHTML+
				            '</div></div>');
			}
			else{
				if(obj.isSelected){
					 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
					            '<div class="z-codeWidth-level4 z-l-configbottom z-well-content">' + phase_sno + '</div>' +
					            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
					            '<div class="z-descWidth-level4 d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel = "1" onmouseover="z_levels_hover_new(this)">' + 
								'<div class="z-well-content">'+
					            obj['phaseName'] + '</div>'+								
								'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
					            '</div>' +
					            $('#z-sublevels')[0].innerHTML+
					            '</div></div>');
				}
				else{
					 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
					            '<div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">' + phase_sno + '</div>' +
					            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
					            '<div class="z-descWidth-level4 d-flex z-l-configbottom z-tableData-row z-l-grey-color" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel="1" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
								'<div class="z-well-content">'+
					            obj['phaseName'] + '</div>'+								'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
					            '</div>' +
					            $('#z-sublevels')[0].innerHTML+
					            '</div></div>');
				}
			
			}
			
				subLevel_sno = 0;
				if(sublevel_result_sno == 0){
						phase_sno = "0"+(Number(phase_sno) + 1).toString()+"1";	//2
					}
					else{
						if(Number(phase_sno) == 81){
						phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1"; 
						}
						else if(Number(phase_sno) >= 101){
							phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";	
						}
						else if(Number(phase_sno) <= 61){
						    phase_sno = "0"+(Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";
						}
					
					}
					sublevel_result_sno = sublevel_result_sno +1;
			 $('#z-sublevels').empty();
			 $('#z-sublevels3').empty();
		});
		//$('#z-levelsConfig').append("<div id='ws-level21-addphase' class='btn z-m-btn3 z-m-addPhase' levels='21' onclick='z_addPhase(\""+this+"\", \""+data+"\")'>Add Phase</div>");
		$('#z-levelsConfig').append("<div class='col-12'><div class='row'><div class='z-codeWidth-level4'></div><div class='z-descWidth-level4'><div id='ws-level21-addphase' class='btn z-m-addPhasebtn' level='1' onclick='z_addPhase(this)'>Add Phase</div>"+
				"<div id='ws-level2-proceed' class='btn z-m-addPhasebtn' level='" + (Number(level)-2) + "' onclick='z_showNextLevel(this)'>Proceed to Level2</div>"+
				"<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-level1-del-btn' level='1' onclick='z_deleteLevels(this)'>Delete Phase</div></div>"+
				"<div class='z-level4-width'><div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-sublevels-hide' level='2' onclick='z_addPhase(this)'>Add Phase</div>"+
				"<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-level2-del-btn d-none' level='2' onclick='z_deleteLevels(this)'>Delete Phase</div>"+
				"<div id='z-level-prevphase2' class='btn z-m-addPhasebtn z-sublevels-hide' level='2' onclick='z_prevPhase(this)'>Back to Level 1</div>"+
				"<div id='ws-level3-proceed' class='btn z-m-addPhasebtn z-sublevels-hide' level='3' onclick='z_showNextLevel(this)'>Proceed to Level3</div></div>"+
				"<div class='z-level4-width'><div id='ws-level31-addphase' class='btn z-m-addPhasebtn z-sublevels3-hide' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div>"+
				"<div id='ws-level4-proceed' class='btn z-m-addPhasebtn z-sublevels3-hide' level='" + level + "' onclick='z_showNextLevel(this)'>Proceed to Level4</div>"+
				"<div id='ws-level4-back' class='btn z-m-addPhasebtn z-sublevels3-hide' level='" + level + "' onclick='z_back_to_level2(this)'>Back to Level 2</div>"+
								"<div id='z-level3-prevphase2' class='btn z-m-addPhasebtn z-sublevels3-hide' level='2' onclick='z_prevPhase(this)'>Back to Level 1</div>"+
		"<div id='ws-level32-addphase' class='btn z-m-addPhasebtn z-level2-del-btn z-sublevels3-hide' level='3' onclick='z_deleteLevels(this)'>Delete Phase</div></div>" +
		"<div class='z-level4-width'><div id='ws-level41-addphase' class='btn z-m-addPhasebtn z-sublevels4-hide' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div>"+
		"<div id='ws-level41-deletephase' class='btn z-m-addPhasebtn z-sublevels4-hide' level='" + level + "' onclick='z_deleteLevels(this)'>Delete Phase</div>"+
				"<div id='ws-level5-proceed' class='btn z-m-addPhasebtn z-sublevels4-hide' level='" + level + "' onclick='z_back_to_level3(this)'>Back to Level 3</div>"+
						"<div id='ws-level4-proceed2' class='btn z-m-addPhasebtn z-sublevels4-hide' level='" + level + "' onclick='z_back_to_level2(this)'>Back to Level 2</div>"+
				"<div id='z-level4-prevphase1' class='btn z-m-addPhasebtn z-sublevels4-hide' level='2' onclick='z_prevPhase(this)'>Back to Level 1</div>"+
				"<div id='go-to-wellTimeline' class='btn btn-link z-sublevels4-hide' onclick='goTowellTimeline(this)'>Save and Proceed to Well Timeline</div>"+
		"</div>"+
		"</div></div></div>");
	
	}
	else if(level == "5"){
		/* code gen*/
		var phase_sno = "001";
		var subLevel_sno = 0;
		var result_sno;
		var sublevel_result_sno = 0;
		var sub_sn_result;
		data.forEach(function (obj, i) {
			subLevels = obj['subLevels'];
			$('#z-sublevels').empty();
			/* code gen*/
			subLevels.forEach(function (val, j) {
				/* code gen level2*/
				result_sno = (subLevel_sno + 1).toString();
				subLevel_sno = subLevel_sno + 1;
				//subLevel_sno = (Number(subLevel_sno)+1).toString();
				if(Number(result_sno) < 10){
					result_sno = "0"+result_sno;
				}
				if(sublevel_result_sno == 0){
					sub_sn_result = "001"+"-"+result_sno;
				}
				else{
					sub_sn_result = phase_sno+"-"+result_sno;
				}
				/*end*/
				/*for level3*/
				var z_level3_sno_start = 1;
				var z_level3_sno = sub_sn_result+"-0"+z_level3_sno_start;
				var z_level4_resultSno;
				subLevels_3 = val['subLevels'];
				if(subLevels_3 != null){
					subLevels_3.forEach(function (val1, j1) {
						var subLevels_4 = val1['subLevels'];
						if(subLevels_4 != null){
							var level4_serialNumber1 = 0;
							var level4_serialNumber2 = 65;
							subLevels_4.forEach(function(level4,j4){
								var subLevels_5 = level4['subLevels'];
								if(subLevels_5 != null){
									subLevels_5.forEach(function(level5,j5){
										if(level5.isSelected){
											$('#z-sublevels5').append(
									            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels5-hide">' +
										            '<div class="row z-l-phaserow z-borderBottom">' +
										            '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + z_level4_resultSno + '</div>' +
										            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
										            '<div class="z-width-level5-col1 d-flex z-l-configbottom">' + 
										            '<div></div></div>' +
										            '<div class="z-width-level5-col2 d-flex z-l-configbottom" level="' + level + '">' + 
										            '<div class="z-well-content-level5">'+
										            '</div></div>'+
										            '<div class="z-width-level5-col3 d-flex z-l-configbottom" level="' + level + '">' + 
										            '<div class="z-well-content-level5">'+
										            '</div></div>'+
										            '<div class="z-width-level5-col4 d-flex z-l-configbottom" level="' + level + '">' + 
										            '<div class="z-well-content-level5">'+
										            '</div></div>'+
										            '<div class="z-width-level5-col5 d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "5" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'" baseLevel3="'+val1.phaseName +'" baseLevel4="'+level4.phaseName+'">' + 
										            '<div class="z-well-content-level5">'+
										            level5['phaseName'] + '</div>'+								
													'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
                                                    '<div class="z-l-closeBtn-level4 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="4" level="4">+</div></div>'+
											        '</div><div>');
										}
										else{
											$('#z-sublevels5').append(
									            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels5-hide">' +
										            '<div class="row z-l-phaserow z-borderBottom">' +
										            '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + z_level4_resultSno + '</div>' +
										            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
										            '<div class="z-width-level5-col1 d-flex z-l-configbottom">' + 
										            '<div></div></div>' +
										            '<div class="z-width-level5-col2 d-flex z-l-configbottom" level="' + level + '">' + 
										            '<div class="z-well-content-level5">'+
										            '</div></div>'+
										            '<div class="z-width-level5-col3 d-flex z-l-configbottom" level="' + level + '">' + 
										            '<div class="z-well-content-level5">'+
										            '</div></div>'+
													
										            '<div class="z-width-level5-col4 d-flex z-l-configbottom" level="' + level + '">' + 
										            '<div class="z-well-content-level5">'+
										            '</div></div>'+
										            '<div class="z-width-level5-col5 d-flex z-l-configbottom z-tableData-row" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "5" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'" baselevel3="'+val1.phaseName+'" baselevel4="'+level4.phaseName+'">' + 
										            '<div class="z-well-content-level5">'+
										            level5['phaseName'] + '</div>'+								
													'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
                                                    '<div class="z-l-closeBtn-level4 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="4" level="4">+</div></div>'+
											        '</div><div>');
										
										}
									});
								}
								z_level4_resultSno = z_level3_sno + "-" + level4_serialNumber1 + "&#" +level4_serialNumber2;
								if(level4.isSelected){
									$('#z-sublevels4').append(
							            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels4-hide">' +
								            '<div class="row z-l-phaserow z-borderBottom">' +
								            '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + z_level4_resultSno + '</div>' +
								            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
								            '<div class="z-width-level5-col1 d-flex z-l-configbottom">' + 
								            '<div></div></div>' +
								            '<div class="z-width-level5-col2 d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content-level5">'+
								            '</div></div>'+
								            '<div class="z-width-level5-col3 d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content-level5">'+
								            '</div></div>'+
								            '<div class="z-width-level5-col4 d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "4" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'" baseLevel3="'+val1.phaseName +'">' + 
								            '<div class="z-well-content-level5">'+
								            level4['phaseName'] + '</div>'+								
											'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level4 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="4" level="4">+</div></div>'+
								            $('#z-sublevels5')[0].innerHTML+
									'</div><div>');
								}
								else{
									$('#z-sublevels4').append(
							            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels4-hide">' +
								            '<div class="row z-l-phaserow z-borderBottom">' +
								            '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + z_level4_resultSno + '</div>' +
								            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
								            '<div class="z-width-level5-col1 d-flex z-l-configbottom">' + 
								            '<div></div></div>' +
								            '<div class="z-width-level5-col2 d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content-level5">'+
								            '</div></div>'+
								            '<div class="z-width-level5-col3 d-flex z-l-configbottom" level="' + level + '">' + 
								            '<div class="z-well-content-level5">'+
								            '</div></div>'+
								            '<div class="z-width-level5-col4 d-flex z-l-configbottom z-tableData-row" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "4" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'" baselevel3="'+val1.phaseName+'">' + 
								            '<div class="z-well-content-level5">'+
								            level4['phaseName'] + '</div>'+								
											'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level4 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="4" level="4">+</div></div>'+
								            $('#z-sublevels5')[0].innerHTML+
									'</div><div>');
								}
								$('#z-sublevels5').empty();
								level4_serialNumber1 = level4_serialNumber1 + 1;
								if(level4_serialNumber1 >= 10){
									level4_serialNumber1 = 0;
									level4_serialNumber2 = level4_serialNumber2 + 1;
								}
							});
						}
						if(val1.isSelected){
							$('#z-sublevels3').append(
					            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels3-hide">' +
						            '<div class="row z-l-phaserow z-borderBottom">' +
						            '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + z_level3_sno + '</div>' +
						            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
						            '<div class="z-width-level5-col1 d-flex z-l-configbottom">' + 
						            '<div></div></div>' +
						            '<div class="z-width-level5-col2 d-flex z-l-configbottom" level="' + level + '">' + 
						            '<div class="z-well-content-level5">'+
						            '</div></div>'+
						            '<div class="z-width-level5-col3 d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "3" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'">' + 
						            '<div class="z-well-content-level5">'+
						            val1['phaseName'] + '</div>'+								
									'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level3 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
						            '<div class="z-width-level5-col4 d-flex z-l-configbottom z-config-content" level="' + level + '">' + 
						            '<div class="z-well-content-level5">'+
						            '</div></div>'+
						            $('#z-sublevels4')[0].innerHTML+
							'</div><div>');
						}
						else{
							$('#z-sublevels3').append(
					            	'<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels3-hide">' +
						            '<div class="row z-l-phaserow z-borderBottom">' +
						            '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + z_level3_sno + '</div>' +
						            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
						            '<div class="z-width-level5-col1 d-flex z-l-configbottom">' + 
						            '<div></div></div>' +
						            '<div class="z-width-level5-col2 d-flex z-l-configbottom" level="' + level + '">' + 
						            '<div class="z-well-content-level5">'+
						            '</div></div>'+
						            '<div class="z-width-level5-col3 d-flex z-l-configbottom z-tableData-row" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "3" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '" baseLevel2="'+val['phaseName']+'">' + 
						            '<div class="z-well-content-level5">'+
						            val1['phaseName'] + '</div>'+								
									'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level3 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
						            '<div class="z-width-level5-col4 d-flex z-l-configbottom z-config-content" level="' + level + '">' + 
						            '<div class="z-well-content-level5">'+
						            '</div></div>'+
						            $('#z-sublevels4')[0].innerHTML+
							'</div><div>');
						}
						$('#z-sublevels4').empty();
						z_level3_sno_start = z_level3_sno_start + 1;
						if(z_level3_sno_start > 9){
							z_level3_sno = sub_sn_result+"-"+z_level3_sno_start;
						}
						else{
							z_level3_sno = sub_sn_result+"-0"+z_level3_sno_start;
						}
					});
				}
				if(val.isSelected){
					$('#z-sublevels').append('<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels-hide">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + sub_sn_result + '</div>' +
				            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
				            '<div class="z-width-level5-col1 d-flex z-l-configbottom">' + 
				            '<div></div></div>' +
				            '<div class="z-width-level5-col2 d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
				            '<div class="z-well-content-level5">'+
				            val['phaseName'] + '</div>'+								
							'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level2 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level2 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
				            '<div class="z-width-level5-col3 d-flex z-l-configbottom" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)">' + 
				            '<div class="z-well-content-level5">'+
				            '</div></div>'+
				            '<div class="z-width-level5-col4 d-flex z-l-configbottom" level="' + level + '">' + 
				            '<div class="z-well-content-level5">'+
				            '</div></div>'+
				            $('#z-sublevels3')[0].innerHTML+
				            '</div><div>');
				}
				else{
					$('#z-sublevels').append('<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 z-sublevels-hide">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + sub_sn_result + '</div>' +
				            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
				            '<div class="z-width-level5-col1 d-flex z-l-configbottom">' + 
				            '<div></div></div>' +
				            '<div class="z-width-level5-col2 d-flex z-l-configbottom z-tableData-row" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
				            '<div class="z-well-content-level5">'+
				            val['phaseName'] + '</div>'+								
							'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level2 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level2 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
				            '<div class="z-width-level5-col3 d-flex z-l-configbottom" level="' + level + '" onclick="z_configActive_new(this)" selectlevel = "2" onmouseover="z_levels_hover_new(this)">' + 
				            '<div class="z-well-content-level5">'+
				            '</div></div>'+
				            '<div class="z-width-level5-col4 d-flex z-l-configbottom" level="' + level + '">' + 
				            '<div class="z-well-content-level5">'+
				            '</div></div>'+
				            $('#z-sublevels3')[0].innerHTML+
				            '</div><div>');
				}
				
				$('#z-sublevels3').empty();
	            });
			if(show == true && z_Selected_testArray.includes(obj['phaseName'].trim())){
				 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
							 '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + sub_sn_result + '</div>' +
				            '<div id="z-l' + j + '-phasewrap" class="z-l-phase-config z-l' + j + '-phasewrap"></div>' +
				            '<div class="z-width-level5-col1 d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel = "1" onmouseover="z_levels_hover_new(this)">' + 
				            '<div class="z-well-content-level5">'+
				            obj['phaseName'] + '</div>'+								
							'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
				            '</div>' +
				            $('#z-sublevels')[0].innerHTML+
				            '</div></div>');
			}
			else{
				if(obj.isSelected){
					 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
								 '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + sub_sn_result + '</div>' +
				            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
					            '<div class="z-width-level5-col1 d-flex z-l-configbottom z-tableData-row z-level-selection" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel = "1" onmouseover="z_levels_hover_new(this)">' + 
					            '<div class="z-well-content-level5">'+
					            obj['phaseName'] + '</div>'+								
								'<div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
					            '</div>' +
					            $('#z-sublevels')[0].innerHTML+
					            '</div></div>');
				}
				else{
					 $('#z-levelsConfig').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
					            '<div class="row z-l-phaserow z-borderBottom">' +
								 '<div class="z-codeWidth-level5 z-l-configbottom z-l-grey-color z-well-content-level5">' + sub_sn_result + '</div>' +
				            '<div id="z-l' + i + '-phasewrap" class="z-l-phase-config z-l' + i + '-phasewrap"></div>' +
					            '<div class="z-width-level5-col1 d-flex z-l-configbottom z-tableData-row z-l-grey-color" level="' + (Number(level)-1) + '" onclick="z_configActive_new(this)" selectlevel="1" onmouseover="z_levels_hover_new(this)" baselevel="'+ obj.phaseName + '">' + 
					            '<div class="z-well-content-level5">'+
					            obj['phaseName'] + '</div>'+								
								'<div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
'<div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deletePhase(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" '+ 'onclick="z_addPhase(this)" title="Add Phase" levels="1" level="1">+</div>' +
					            '</div>' +
					            $('#z-sublevels')[0].innerHTML+
					            '</div></div>');
				}
			
			}
			
				subLevel_sno = 0;
				if(sublevel_result_sno == 0){
						phase_sno = "0"+(Number(phase_sno) + 1).toString()+"1";	//2
					}
					else{
						if(Number(phase_sno) == 81){
						phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1"; 
						}
						else if(Number(phase_sno) >= 101){
							phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";	
						}
						else if(Number(phase_sno) <= 61){
						    phase_sno = "0"+(Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";
						}
					
					}
					sublevel_result_sno = sublevel_result_sno +1;
			 $('#z-sublevels').empty();
			 $('#z-sublevels3').empty();
		});
		//$('#z-levelsConfig').append("<div id='ws-level21-addphase' class='btn z-m-btn3 z-m-addPhase' levels='21' onclick='z_addPhase(\""+this+"\", \""+data+"\")'>Add Phase</div>");
		$('#z-levelsConfig').append("<div class='col-12'><div class='row'><div class='z-codeWidth-level5'></div><div class='z-width-level5-col1'><div id='ws-level21-addphase' class='btn z-m-addPhasebtn' level='1' onclick='z_addPhase(this)'>Add Phase</div>"+
				"<div id='z-level21-prevphase' class='btn z-m-addPhasebtn d-none' level='1' onclick='z_prevPhase(this)'>prev</div>"+
				"<div id='ws-level2-proceed' class='btn z-m-addPhasebtn' level='2' onclick='z_showNextLevel(this)'>Proceed to Level2</div>"+
				"<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-level1-del-btn' level='1' onclick='z_deleteLevels(this)'>Delete Phase</div></div>"+
				"<div class='z-width-level5-col2'><div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-sublevels-hide' level='2' onclick='z_addPhase(this)'>Add Phase</div>"+
				"<div id='ws-level22-addphase' class='btn z-m-addPhasebtn z-level2-del-btn d-none' level='2' onclick='z_deleteLevels(this)'>Delete Phase</div>"+
				"<div id='z-level-prevphase2' class='btn z-m-addPhasebtn z-sublevels-hide' level='2' onclick='z_prevPhase(this)'>prev</div>"+
				"<div id='ws-level3-proceed' class='btn z-m-addPhasebtn z-sublevels-hide' level='3' onclick='z_showNextLevel(this)'>Proceed to Level3</div></div>"+
				"<div class='z-width-level5-col3'><div id='ws-level31-addphase' class='btn z-m-addPhasebtn z-sublevels3-hide' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div>"+
				"<div id='ws-level3-proceed' class='btn z-m-addPhasebtn z-sublevels-hide' level='4' onclick='z_showNextLevel(this)'>Proceed to Level4</div>"+
				"<div id='ws-level4-proceed' class='btn z-m-addPhasebtn z-sublevels-hide' level='" + level + "' onclick='z_prevPhase(this)'>Prev</div>"+
		"<div id='ws-level32-addphase' class='btn z-m-addPhasebtn z-level2-del-btn z-sublevels3-hide' level='3' onclick='z_deleteLevels(this)'>Delete Phase</div></div>" +
		"<div class='z-width-level5-col4'><div id='ws-level41-addphase' class='btn z-m-addPhasebtn z-sublevels3-hide' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div>"+
		"<div id='ws-level41-deletephase' class='btn z-m-addPhasebtn z-sublevels3-hide' level='" + level + "' onclick='z_deleteLevels(this)'>Delete Phase</div></div>"+
		"<div id='ws-level5-proceed' class='btn z-m-addPhasebtn z-sublevels-hide d-none' level='" + level + "' onclick='z_prevPhase(this)'>Prev</div>"+
						"<div id='ws-level5-proceed' class='btn z-m-addPhasebtn z-sublevels-hide' level='5' onclick='z_showNextLevel(this)'>Proceed to Level5</div>"+
		"</div>"+
		"<div class='z-width-level5-col5'><div id='ws-level41-addphase' class='btn z-m-addPhasebtn z-sublevels3-hide' level='" + level + "' onclick='z_addPhase(this)'>Add Phase</div>"+
		"<div id='ws-level41-deletephase' class='btn z-m-addPhasebtn z-sublevels3-hide' level='" + level + "' onclick='z_deleteLevels(this)'>Delete Phase</div></div>"+
		"<div id='ws-level5-proceed' class='btn z-m-addPhasebtn z-sublevels-hide d-none' level='" + level + "' onclick='z_prevPhase(this)'>Prev</div>"+
		"</div>"+
		"</div></div>");
	
	
	}
	
}
function z_back_to_level2(el){
				if(z_level == "Level3"){
						$('#z-level-prevphase2').click();
						$('#ws-level2-proceed').click();
				}
				else if(z_level == "Level4"){
						$('#z-level-prevphase2').click();
						$('#ws-level2-proceed').click();
				}

}

function z_back_to_level3(el){
				$('#z-level-prevphase2').click();
				$('#ws-level2-proceed').click();
				$('#ws-level3-proceed').click();
				}

function z_deleteLevels(el){
	confirmation_Popup("Are  you sure want to delete the selected AFE Components for level 2..?", function () {
		//z_Selected_Array	
		//z_savewellConfig();
		 var z_config_select = $('#z-wellConfig').val();
		 var z_show_Phase = false;
		 var selected_level = $(el).attr('level');
		 if(!($('#z-level21-prevphase').hasClass('d-none'))){
			 z_show_Phase = true;
		 }
		 configData = z_sel_config;
		for(var i=0;i<z_Selected_Array.length;i++){
			for(var k=0;k<configData.length;k++){
			if(z_Selected_Array.includes(configData[k].phaseName) && selected_level == "1"){
			
			 if(z_Selected_phaseArray.includes(configData[k].phaseName)){
	            	var remove_phaseIndex_val = z_Selected_phaseArray.findIndex(function(val){
	            		return val == configData[k].phaseName;
	            	});
	            	z_Selected_phaseArray.splice(remove_phaseIndex_val,1);
	            }
			 configData.splice(k,1);
			}
			else{
				if(selected_level == "2"){
					var z_m_sublevels = configData[k].subLevels;
					z_m_sublevels.forEach(function (obj,val){
						
							if(z_Selected_Array.includes(obj.phaseName)){
								z_m_sublevels.splice(val,1);
							}
							 if(z_Selected_phaseArray.includes(obj.phaseName)){
					            	var remove_phaseIndex_val2 = z_Selected_phaseArray.findIndex(function(val){
					            		return val == obj.phaseName;
					            	});
					            	z_Selected_phaseArray.splice(remove_phaseIndex_val2,1);
					            }


	});
					z_show_Phase = true;
				}
				else if(selected_level == "3"){
					var z_m_sublevels = configData[k].subLevels;
					z_m_sublevels.forEach(function (obj,val){
						if(obj.subLevels != null){
							var level3_PhaseComponent = obj.subLevels;
							level3_PhaseComponent.forEach(function(level3,index3){
								if(z_Selected_Array.includes(level3.phaseName)){
									level3_PhaseComponent.splice(index3,1);
								}
								 if(z_Selected_phaseArray.includes(level3.phaseName)){
						            	var remove_phaseIndex_val2 = z_Selected_phaseArray.findIndex(function(val){
						            		return val == level3.phaseName;
						            	});
						            	z_Selected_phaseArray.splice(remove_phaseIndex_val2,1);
						            }	
							});
							
						}

	});
					z_show_Phase = true;
				}
		
			}
			
			}}
			config = z_config_select.substr(z_config_select.length-1); 
	     if(z_level == "Level1"){
	        if(config == "1"){
	        	z_configJson_data[0].wellConfig = JSON.stringify(configData);
	        }
	        else if(config == "2"){
	if(z_configJson_data.length > 1){
		z_configJson_data[1].wellConfig = JSON.stringify(configData);	
	            }
	            else{
	            	z_configJson_data[0].wellConfig = JSON.stringify(configData);
	            }
	        	
	        }
	        else if(config =="3"){
	            if(z_configJson_data.length > 1){
	            	z_configJson_data[2].wellConfig = JSON.stringify(configData);	
	            }
	            else{
	            	z_configJson_data[0].wellConfig = JSON.stringify(configData);
	            }
	        	
	        }
	        addLevel(configData,"1");
	    }
	    else if(z_level == "Level2"){
	        if(config == "1"){
	            if(z_configJson_data.length > 1){
	            	z_configJson_data[3].wellConfig = JSON.stringify(configData);	
	            }
	            else{
	            	z_configJson_data[0].wellConfig = JSON.stringify(configData);
	            }
	        	
	        }
	        addLevel(configData,"2");
	    }
	    else if(z_level == "Level3"){
	        if(config == "1"){
	            if(z_configJson_data.length > 1){
	            	z_configJson_data[4].wellConfig = JSON.stringify(configData);	
	            }
	            else{
	            	z_configJson_data[0].wellConfig = JSON.stringify(configData);
	            }
	        	
	        }
	        addLevel(configData,"3");
	    }
	     z_selected_leveldata = configData;
	        z_Selected_Array = z_Selected_phaseArray;
	        z_sel_config = configData;
	        if(z_show_Phase){
	        	 z_showLevels($('#ws-level2-proceed')[0]);
	        }
	        if(selected_level == "2"){
	        	$('#z-level21-prevphase').removeClass('d-none');
	        }
			alertPopup('success','AFE Components is deleted for level2'); 
			z_Selected_Array = [];
	 clearConfirmationPopup();
       });
	
}
var removed_element={};
var removed_array=[];
var test_array = [];
function z_deletePhase(e){
	 var z_noLevel = $('#z-req-wellLevel').val();
	    var z_config,config;
		z_config = $('#z-wellConfig').val();
	    config = z_config.substr(z_config.length-1);
	    var level_selection = z_noLevel.substr(z_noLevel.length-1);
	    var z_show_Phase = false;
		 if(!($('#z-level21-prevphase').hasClass('d-none'))){
			 z_show_Phase = true;
		 }
//	    if(z_configJson_data.length > 1){
//	    	for(var val=0;val<z_configJson_data.length;val++){
//		        if(level_selection == z_configJson_data[val].levelValue && config == z_configJson_data[val].configNumber)
//		        wellConfigData = JSON.parse(z_configJson_data[val].wellConfig);
//		    }	
//	    }
//	    else{
//	    	wellConfigData = JSON.parse(z_configJson_data[0].wellConfig);
//	    }
	    wellConfigData = z_sel_config;
	 confirmation_Popup("Are you sure want to Delete this Phase", function () {
		 //var z_phase = $('.z-levelconfig-color').text();
		 var z_phase = $(e).parent().text();
     //for level 1 all config
		 selectedlevels = $(e).attr('level');
     if(level_selection == "1"){
         selected_index = wellConfigData.findIndex(function (obj) {
             return (obj['phaseName'].trim() == z_phase.substr(0,z_phase.length-2).trim());
         });
         test_array = wellConfigData.splice(selected_index,1);
         removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
         removed_element['config'] = config;
         removed_element['selectedLevel'] = selectedlevels;
         removed_element['levelValue'] = test_array[0].levelValue;
         removed_element['phaseName'] = test_array[0].phaseName;
         removed_array.push(removed_element);
         if(z_Selected_Array.includes(test_array[0].phaseName)){
         	z_Selected_Array.splice(test_array[0].phaseName,1);
         }
         if(z_Selected_Array.includes("Time Dependent Costs")){
				z_Selected_Array.splice("Time Dependent Costs",1);
			}
         test_array = [];
         removed_element = {};
         wellConfigData.forEach(function (obj,i){
             if(i >= selected_index && selected_index != -1){
                 if(!(obj['levelValue'].startsWith("&#"))){
                     s_no = obj['levelValue'].charCodeAt(0);
                     obj['levelValue'] = '&#'+(s_no-1); 
                 }
                 else{
                     s_no = obj['levelValue'].substr(2);
                     obj['levelValue'] = '&#'+(s_no-1); 
                 }
             }
             return false;
         });
         for(var val1=0;val1 < z_configJson_data.length;val1++){
             if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                 z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
             }
         }
         addLevel(wellConfigData,"1");
     }
     else if(level_selection == "2"){
         if(selectedlevels == "2"){
             for(var m=0;m < wellConfigData.length; m++){
                 var z_sublevels = wellConfigData[m].subLevels;
                 selected_index = z_sublevels.findIndex(function (obj) {
                     return (obj['phaseName'].trim() == z_phase.substr(0,z_phase.length-2).trim());
                 });
                 if(!(selected_index == -1)){
                     test_array = z_sublevels.splice(selected_index,1);
         removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
         removed_element['config'] = config;
         removed_element['selectedLevel'] = selectedlevels;
         removed_element['levelValue'] = test_array[0].levelValue;
         removed_element['phaseName'] = test_array[0].phaseName;
         if(z_Selected_Array.includes(test_array[0].phaseName)){
         	z_Selected_Array.splice(test_array[0].phaseName,1);
         }
         if(z_Selected_phaseArray.includes(z_phase.substr(0,z_phase.length-2).trim())){
         	var remove_phaseIndex = z_Selected_phaseArray.findIndex(function(val){
         		return val == z_phase.substr(0,z_phase.length-2).trim();
         	});
         	z_Selected_phaseArray.splice(remove_phaseIndex,1);
         }
         removed_array.push(removed_element);
         removed_element = {};
         test_array=[];
         wellConfigData[m].subLevels = z_sublevels;
         wellConfigData[m].subLevels.forEach(function (obj,n){
             if(n >= selected_index && selected_index != -1){
                 if(!(obj['levelValue'].startsWith("&#"))){
                     s_no = Number(obj['levelValue'].substr(1));
                     obj['levelValue'] = obj['levelValue'].substr(0,1)+(s_no-1);  
                 }
             }
             return false;
         });
                 }
             }
             for(var val1=0;val1 < z_configJson_data.length;val1++){
                 if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                     z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
                 }
             }
             addLevel(wellConfigData,"2");
             if($('#z-level21-prevphase').hasClass('d-none')){
             	$('#z-level21-prevphase').removeClass('d-none');
             	z_show_Phase = true;
             	
    		 }
         }
         else if(selectedlevels == "1"){
             selected_index = wellConfigData.findIndex(function (obj) {
                 return (obj['phaseName'].trim() == z_phase.substr(0,z_phase.length-2).trim());
             });
             test_array = wellConfigData.splice(selected_index,1);
             removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
             removed_element['config'] = config;
             removed_element['selectedLevel'] = selectedlevels;
             removed_element['levelValue'] = test_array[0].levelValue;
             removed_element['phaseName'] = test_array[0].phaseName;
             if(z_Selected_Array.includes(test_array[0].phaseName)){
             	z_Selected_Array.splice(test_array[0].phaseName,1);
             }
             if(z_Selected_phaseArray.includes(z_phase.substr(0,z_phase.length-2).trim())){
             	var remove_phaseIndex1 = z_Selected_phaseArray.findIndex(function(val){
             		return val == z_phase.substr(0,z_phase.length-2).trim();
             	});
             	z_Selected_phaseArray.splice(remove_phaseIndex1,1);
             }
             test_array=[];
             removed_array.push(removed_element);
             removed_element = {};
             wellConfigData.forEach(function (obj,o){
                 if(o >= selected_index && selected_index != -1){
                     if(!(obj['levelValue'].startsWith("&#"))){
                         s_no = obj['levelValue'].charCodeAt(0);
                         obj['levelValue'] = '&#'+(s_no-1); 
                     }
                     else{
                         s_no = obj['levelValue'].substr(2);
                         obj['levelValue'] = '&#'+(s_no-1); 
                     }
                    obj.subLevels.forEach(function (obj1,index1){
                     s_no = Number(obj1['levelValue'].substr(1));
                     var s_no1 = obj1['levelValue'].charCodeAt(0);
                     obj1['levelValue'] = String.fromCharCode(s_no1-1)+s_no;
                 });
                 }
                 return false;
             });
             for(var val1=0;val1 < z_configJson_data.length;val1++){
                 if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                     z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
                 }
             }
             addLevel(wellConfigData,"2");
         }
         z_selected_leveldata = wellConfigData;
         z_sel_config = wellConfigData;
         z_Selected_Array = z_Selected_phaseArray;
         if(z_show_Phase){
        	 z_showLevels($('#ws-level2-proceed')[0]);
        }
         if(selectedlevels == "2"){
         	 if($('#z-level21-prevphase').hasClass('d-none')){
              	$('#z-level21-prevphase').removeClass('d-none');
              	//z_show_Phase = true;
              	
     		 }
         }
     }
     else if(level_selection == "3"){
         if(selectedlevels == "1"){

             selected_index = wellConfigData.findIndex(function (obj) {
                 return (obj['phaseName'].trim() == z_phase.substr(0,z_phase.length-2).trim());
             });
             test_array = wellConfigData.splice(selected_index,1);
             removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
             removed_element['config'] = config;
             removed_element['selectedLevel'] = selectedlevels;
             removed_element['levelValue'] = test_array[0].levelValue;
             removed_element['phaseName'] = test_array[0].phaseName;
             if(z_Selected_Array.includes(test_array[0].phaseName)){
             	z_Selected_Array.splice(test_array[0].phaseName,1);
             }
             if(z_Selected_phaseArray.includes(z_phase.substr(0,z_phase.length-2).trim())){
             	var remove_phaseIndex1 = z_Selected_phaseArray.findIndex(function(val){
             		return val == z_phase.substr(0,z_phase.length-2).trim();
             	});
             	z_Selected_phaseArray.splice(remove_phaseIndex1,1);
             }
             test_array=[];
             removed_array.push(removed_element);
             removed_element = {};
             wellConfigData.forEach(function (obj,o){
                 if(o >= selected_index && selected_index != -1){
                     if(!(obj['levelValue'].startsWith("&#"))){
                         s_no = obj['levelValue'].charCodeAt(0);
                         obj['levelValue'] = '&#'+(s_no-1); 
                     }
                     else{
                         s_no = obj['levelValue'].substr(2);
                         obj['levelValue'] = '&#'+(s_no-1); 
                     }
                    obj.subLevels.forEach(function (obj1,index1){
                     s_no = Number(obj1['levelValue'].substr(1));
                     var s_no1 = obj1['levelValue'].charCodeAt(0);
                     obj1['levelValue'] = String.fromCharCode(s_no1-1)+s_no;
                 });
                 }
                 return false;
             });
             for(var val1=0;val1 < z_configJson_data.length;val1++){
                 if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                     z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
                 }
             }
             addLevel(wellConfigData,"3");
         
         }
         else if(selectedlevels == "2"){

             for(var m=0;m < wellConfigData.length; m++){
                 var z_sublevels = wellConfigData[m].subLevels;
                 selected_index = z_sublevels.findIndex(function (obj) {
                     return (obj['phaseName'].trim() == z_phase.substr(0,z_phase.length-2).trim());
                 });
                 if(!(selected_index == -1)){
                     test_array = z_sublevels.splice(selected_index,1);
         removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
         removed_element['config'] = config;
         removed_element['selectedLevel'] = selectedlevels;
         removed_element['levelValue'] = test_array[0].levelValue;
         removed_element['phaseName'] = test_array[0].phaseName;
         if(z_Selected_Array.includes(test_array[0].phaseName)){
         	z_Selected_Array.splice(test_array[0].phaseName,1);
         }
         if(z_Selected_phaseArray.includes(z_phase.substr(0,z_phase.length-2).trim())){
         	var remove_phaseIndex = z_Selected_phaseArray.findIndex(function(val){
         		return val == z_phase.substr(0,z_phase.length-2).trim();
         	});
         	z_Selected_phaseArray.splice(remove_phaseIndex,1);
         }
         removed_array.push(removed_element);
         removed_element = {};
         test_array=[];
         wellConfigData[m].subLevels = z_sublevels;
         wellConfigData[m].subLevels.forEach(function (obj,n){
             if(n >= selected_index && selected_index != -1){
                 if(!(obj['levelValue'].startsWith("&#"))){
                     s_no = Number(obj['levelValue'].substr(1));
                     obj['levelValue'] = obj['levelValue'].substr(0,1)+(s_no-1);  
                 }
             }
             return false;
         });
                 }
             }
             for(var val1=0;val1 < z_configJson_data.length;val1++){
                 if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                     z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
                 }
             }
             addLevel(wellConfigData,"2");
             if($('#z-level21-prevphase').hasClass('d-none')){
             	$('#z-level21-prevphase').removeClass('d-none');
             	z_show_Phase = true;
             	
    		 }
         
         }
         else if(selectedlevels == "4"){
             for(var m=0;m < wellConfigData.length; m++){
                 var z_sublevels = wellConfigData[m].subLevels;
                 z_sublevels.forEach(function(level2,index_2){
                    if(level2.subLevels != null){
                        level2.subLevels.forEach(function(level_3,index3){
                            if(level_3.subLevels != null){
                                level_3.subLevels.forEach(function(level_4,index_4){
                                    if(level_4.phaseName == z_phase.substr(0,z_phase.length-2).trim()){
                                        test_array = level_3.subLevels.splice(index_4,1);
                                        removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
                                        removed_element['config'] = config;
                                        removed_element['selectedLevel'] = selectedlevels;
                                        removed_element['levelValue'] = test_array[0].levelValue;
                                        removed_element['phaseName'] = test_array[0].phaseName;
                                        if(z_Selected_Array.includes(test_array[0].phaseName)){
                                            z_Selected_Array.splice(test_array[0].phaseName,1);
                                        }
                                        if(z_Selected_phaseArray.includes(z_phase.substr(0,z_phase.length-2).trim())){
                                            var remove_phaseIndex = z_Selected_phaseArray.findIndex(function(val){
                                                return val == z_phase.substr(0,z_phase.length-2).trim();
                                            });
                                            z_Selected_phaseArray.splice(remove_phaseIndex,1);
                                        }
                                        removed_array.push(removed_element);
                                        removed_element = {};
                                        test_array=[];
                                        //wellConfigData[m].subLevels[index_3].subLevels = level3.subLevels;
                                    }
                                });
                            }
                        });
                    } 
                  
                 });
                
                
             }
             for(var val1=0;val1 < z_configJson_data.length;val1++){
                 if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                     z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
                 }
             }
             addLevel(wellConfigData,"3");
             if($('#z-level21-prevphase').hasClass('d-none')){
             	$('#z-level21-prevphase').removeClass('d-none');
             	z_show_Phase = true;
             	
    		 }
             z_selected_leveldata = wellConfigData;
             z_sel_config = wellConfigData;
             z_Selected_Array = z_Selected_phaseArray;
         }
         else if(selectedlevels == "3"){
            for(var m=0;m < wellConfigData.length; m++){
                var z_sublevels = wellConfigData[m].subLevels;
                z_sublevels.forEach(function(level2,index_2){
                    if(level2.subLevels != null){
                        level2.subLevels.forEach(function(level3,index3){
                            if(level3.phaseName == z_phase.substr(0,z_phase.length-3).trim()){
                                test_array = level2.subLevels.splice(index3,1);
                    removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
                    removed_element['config'] = config;
                    removed_element['selectedLevel'] = selectedlevels;
                    removed_element['levelValue'] = test_array[0].levelValue;
                    removed_element['phaseName'] = test_array[0].phaseName;
                    if(z_Selected_Array.includes(test_array[0].phaseName)){
                        z_Selected_Array.splice(test_array[0].phaseName,1);
                    }
                    if(z_Selected_phaseArray.includes(z_phase.substr(0,z_phase.length-2).trim())){
                        var remove_phaseIndex = z_Selected_phaseArray.findIndex(function(val){
                            return val == z_phase.substr(0,z_phase.length-2).trim();
                        });
                        z_Selected_phaseArray.splice(remove_phaseIndex,1);
                    }
                    removed_array.push(removed_element);
                    removed_element = {};
                    test_array=[];
                    //wellConfigData[m].subLevels[index_3].subLevels = level3.subLevels;
                          
                       }
                        });
                     
                    }
                  
                });
               
               
            }
            for(var val1=0;val1 < z_configJson_data.length;val1++){
                if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                    z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
                }
            }
            addLevel(wellConfigData,"3");
            if($('#z-level21-prevphase').hasClass('d-none')){
                $('#z-level21-prevphase').removeClass('d-none');
                z_show_Phase = true;
                
            }
            z_selected_leveldata = wellConfigData;
            z_sel_config = wellConfigData;
            z_Selected_Array = z_Selected_phaseArray;
        }
     }
     else if(level_selection == "4"){
         if(selectedlevels == "1"){
             selected_index = wellConfigData.findIndex(function (obj) {
                 return (obj['phaseName'].trim() == z_phase.substr(0,z_phase.length-2).trim());
             });
             test_array = wellConfigData.splice(selected_index,1);
             removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
             removed_element['config'] = config;
             removed_element['selectedLevel'] = selectedlevels;
             removed_element['levelValue'] = test_array[0].levelValue;
             removed_element['phaseName'] = test_array[0].phaseName;
             if(z_Selected_Array.includes(test_array[0].phaseName)){
             	z_Selected_Array.splice(test_array[0].phaseName,1);
             }
             if(z_Selected_phaseArray.includes(z_phase.substr(0,z_phase.length-2).trim())){
             	var remove_phaseIndex1 = z_Selected_phaseArray.findIndex(function(val){
             		return val == z_phase.substr(0,z_phase.length-2).trim();
             	});
             	z_Selected_phaseArray.splice(remove_phaseIndex1,1);
             }
             test_array=[];
             removed_array.push(removed_element);
             removed_element = {};
             wellConfigData.forEach(function (obj,o){
                 if(o >= selected_index && selected_index != -1){
                     if(!(obj['levelValue'].startsWith("&#"))){
                         s_no = obj['levelValue'].charCodeAt(0);
                         obj['levelValue'] = '&#'+(s_no-1); 
                     }
                     else{
                         s_no = obj['levelValue'].substr(2);
                         obj['levelValue'] = '&#'+(s_no-1); 
                     }
                    obj.subLevels.forEach(function (obj1,index1){
                     s_no = Number(obj1['levelValue'].substr(1));
                     var s_no1 = obj1['levelValue'].charCodeAt(0);
                     obj1['levelValue'] = String.fromCharCode(s_no1-1)+s_no;
                 });
                 }
                 return false;
             });
             for(var val1=0;val1 < z_configJson_data.length;val1++){
                 if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                     z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
                 }
             }
             addLevel(wellConfigData,"4");
         
         }
         else if(selectedlevels == "2"){

             for(var m=0;m < wellConfigData.length; m++){
                 var z_sublevels = wellConfigData[m].subLevels;
                 selected_index = z_sublevels.findIndex(function (obj) {
                     return (obj['phaseName'].trim() == z_phase.substr(0,z_phase.length-2).trim());
                 });
                 if(!(selected_index == -1)){
                     test_array = z_sublevels.splice(selected_index,1);
         removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
         removed_element['config'] = config;
         removed_element['selectedLevel'] = selectedlevels;
         removed_element['levelValue'] = test_array[0].levelValue;
         removed_element['phaseName'] = test_array[0].phaseName;
         if(z_Selected_Array.includes(test_array[0].phaseName)){
         	z_Selected_Array.splice(test_array[0].phaseName,1);
         }
         if(z_Selected_phaseArray.includes(z_phase.substr(0,z_phase.length-2).trim())){
         	var remove_phaseIndex = z_Selected_phaseArray.findIndex(function(val){
         		return val == z_phase.substr(0,z_phase.length-2).trim();
         	});
         	z_Selected_phaseArray.splice(remove_phaseIndex,1);
         }
         removed_array.push(removed_element);
         removed_element = {};
         test_array=[];
         wellConfigData[m].subLevels = z_sublevels;
         wellConfigData[m].subLevels.forEach(function (obj,n){
             if(n >= selected_index && selected_index != -1){
                 if(!(obj['levelValue'].startsWith("&#"))){
                     s_no = Number(obj['levelValue'].substr(1));
                     obj['levelValue'] = obj['levelValue'].substr(0,1)+(s_no-1);  
                 }
             }
             return false;
         });
                 }
             }
             for(var val1=0;val1 < z_configJson_data.length;val1++){
                 if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                     z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
                 }
             }
             addLevel(wellConfigData,"4");
             if($('#z-level21-prevphase').hasClass('d-none')){
             	$('#z-level21-prevphase').removeClass('d-none');
             	z_show_Phase = true;
             	
    		 }
         
         }
         else if(selectedlevels == "3"){

             for(var m=0;m < wellConfigData.length; m++){
                 var z_sublevels = wellConfigData[m].subLevels;
                 z_sublevels.forEach(function(level3,index_3){
                 	if(level3.subLevels != null){
                 		 selected_index = level3.subLevels.findIndex(function (obj) {
                              return (obj['phaseName'].trim() == z_phase.substr(0,z_phase.length-2).trim());
                          });
                 		 if(!(selected_index == -1)){

                              test_array = level3.subLevels.splice(selected_index,1);
                  removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
                  removed_element['config'] = config;
                  removed_element['selectedLevel'] = selectedlevels;
                  removed_element['levelValue'] = test_array[0].levelValue;
                  removed_element['phaseName'] = test_array[0].phaseName;
                  if(z_Selected_Array.includes(test_array[0].phaseName)){
                  	z_Selected_Array.splice(test_array[0].phaseName,1);
                  }
                  if(z_Selected_phaseArray.includes(z_phase.substr(0,z_phase.length-2).trim())){
                  	var remove_phaseIndex = z_Selected_phaseArray.findIndex(function(val){
                  		return val == z_phase.substr(0,z_phase.length-2).trim();
                  	});
                  	z_Selected_phaseArray.splice(remove_phaseIndex,1);
                  }
                  removed_array.push(removed_element);
                  removed_element = {};
                  test_array=[];
                  wellConfigData[m].subLevels[index_3].subLevels = level3.subLevels;
                 
                           
                 		 }
                 	}
                 });
                
                
             }
             for(var val1=0;val1 < z_configJson_data.length;val1++){
                 if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                     z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
                 }
             }
             addLevel(wellConfigData,"4");
             if($('#z-level21-prevphase').hasClass('d-none')){
             	$('#z-level21-prevphase').removeClass('d-none');
             	z_show_Phase = true;
             	
    		 }
             z_selected_leveldata = wellConfigData;
             z_sel_config = wellConfigData;
             z_Selected_Array = z_Selected_phaseArray;
         }
         else if(selectedlevels == "4"){
             for(var m=0;m < wellConfigData.length; m++){
                 var z_sublevels = wellConfigData[m].subLevels;
                 z_sublevels.forEach(function(level3,index_3){
                 	if(level3.subLevels != null){
                 		var z_level3_subLevels = level3.subLevels;
                 		z_level3_subLevels.forEach(function(level_Obj4,level_index_4){
                 			if(level_Obj4.subLevels != null){
                 				 selected_index = level_Obj4.subLevels.findIndex(function (obj) {
                                      return (obj['phaseName'].trim() == z_phase.substr(0,z_phase.length-2).trim());
                                  });
                 				 if(!(selected_index == -1)){
                 					 test_array = level3.subLevels[level_index_4].subLevels.splice(selected_index,1);
                          removed_element['level'] = z_noLevel.substr(z_noLevel.length-1);
                          removed_element['config'] = config;
                          removed_element['selectedLevel'] = selectedlevels;
                          removed_element['levelValue'] = test_array[0].levelValue;
                          removed_element['phaseName'] = test_array[0].phaseName;
                          if(z_Selected_Array.includes(test_array[0].phaseName)){
                          	z_Selected_Array.splice(test_array[0].phaseName,1);
                          }
                          if(z_Selected_phaseArray.includes(z_phase.substr(0,z_phase.length-2).trim())){
                          	var remove_phaseIndex = z_Selected_phaseArray.findIndex(function(val){
                          		return val == z_phase.substr(0,z_phase.length-2).trim();
                          	});
                          	z_Selected_phaseArray.splice(remove_phaseIndex,1);
                          }
                          removed_array.push(removed_element);
                          removed_element = {};
                          test_array=[];
                          wellConfigData[m].subLevels[index_3].subLevels[level_index_4].subLevels = level_Obj4.subLevels;
                         		 
                 				 }
                 			}
                 		});
                 	}
                 });
             }
             for(var val1=0;val1 < z_configJson_data.length;val1++){
                 if(level_selection == z_configJson_data[val1].levelValue && config == z_configJson_data[val1].configNumber){
                     z_configJson_data[val1].wellConfig = JSON.stringify(wellConfigData);
                 }
             }
             addLevel(wellConfigData,"4");
             if($('#z-level21-prevphase').hasClass('d-none')){
             	$('#z-level21-prevphase').removeClass('d-none');
             	z_show_Phase = true;
             	
    		 }
             z_selected_leveldata = wellConfigData;
             z_sel_config = wellConfigData;
             z_Selected_Array = z_Selected_phaseArray;
         }
     
     }
     clearConfirmationPopup();
   
     
     z_Selected_Array = [];
  });
}
var z_data_to_show = [];
function z_showLevels(el){
	
	
	z_data_to_show = [];
	if(z_Selected_Array.length > 0){
		z_selected_leveldata.forEach(function (ele,index1){
			if(z_Selected_Array.includes(ele.phaseName.trim())){
				z_data_to_show.push(ele);
			}
		});
	addLevel(z_data_to_show,"2");
	}
	else{
	addLevel(z_selected_leveldata,"2");
	}
		
	$('.z-sublevels-hide').removeClass('z-sublevels-hide');
	$('.z-level2-del-btn').removeClass('d-none');
}
function z_levels_hover(el){
	$('.z-l-phasebtn').addClass('d-none');
	//if($(el).children().first().hasClass('d-none') || $(el).children().next().hasClass('d-none')){
		$(el).children().first().removeClass('d-none');
		$(el).children().next().removeClass('d-none');
	//}
   
//	if($('.z-levelconfig-test').hasClass('z-levelconfig-color')){
//		$('.z-levelconfig-test').removeClass('.z-levelconfig-color');
//	}
//	el.classList.add("z-levelconfig-color");
//	el.classList.add("z-levelconfig-test");
//	el.classList.remove("z-l-grey-color");
//	$('.z-l-phasebtn').remove();
//	var z_closebtn = document.createElement('div');
//	var z_addbtn = document.createElement('div');

	
//	var s_no = 0;
//	var selected_index = 0;
//	var selectedlevels = el.getAttribute('level');
//	
//	z_closebtn.classList = "z-l-closeBtn z-l-phasebtn z-addconfig";
//	z_closebtn.innerText = "x";
//	z_closebtn.setAttribute('data-toggle','tooltip');
//	z_closebtn.setAttribute('title','Delete Phase');
//	el.appendChild(z_closebtn);
//	z_addbtn.classList = "z-l-phasebtn z-addconfig z-addconfig-left";
//	z_addbtn.innerText = "+";
//	z_addbtn.setAttribute('data-toggle','tooltip');
//	z_addbtn.setAttribute('title','Add Phase');
//	z_addbtn.setAttribute('levels',selectedlevels);
//	z_addbtn.setAttribute('level',selectedlevels);
//	el.appendChild(z_addbtn);
//	z_addbtn.addEventListener("click" ,function(el){
//		z_addPhase(this);
//	});
	
	

}
function z_levels_hover_new(el){
		$('.z-l-phasebtn').addClass('d-none');
		if($(el).children()[2].innerText == "+" || $(el).children()[2].innerText == "x"){
			$(el).children()[2].classList.remove('d-none');
		}
		if($(el).children()[3].innerText == "+" || $(el).children()[3].innerText == "x"){
			$(el).children()[3].classList.remove('d-none');
		}
		
		if($(el).children()[4] != null){
			if($(el).children()[4].innerText == "+" || $(el).children()[4].innerText == "x"){
				$(el).children()[4].classList.remove('d-none');
			}
			
		}
		
		//$(el).addClass('z-level-selection');
}
var z_Selected_Array = [];
var z_Selected_DayArray = [];
var z_Selected_phaseArray = [];
var z_Selected_testArray = [];
var get_level2_Array = [];
var check_forlevel1_Array = [];
function z_configActive_new(el){
	var serialObj = {};
	var selectedObj = {};
	var select_phaseName;
	get_level2_Array = [];
	var level2_attr;
	var base_level;
    var z_sublevelObj = {};
    var z_level2_phase;
    var z_level3_phase;
    var z_level4_phase;
	 var z_level5_phase;
	
if($(el)[0].hasAttribute('selectlevel')){
	level2_attr = $(el).attr('selectlevel');
    base_level = $(el).attr('baselevel');
    
	}
	if($(el).hasClass('z-level-selection')){
        $(el).removeClass('z-level-selection');
		$(el).children()[1].classList.remove('d-block');
        if($(el).hasClass('z-level2-test')){
            $(el).removeClass('z-level2-test');
        }
        if($(el)[0].hasAttribute('baselevel3')){
            z_level2_phase = $(el).attr('baselevel2');
            z_level3_phase = $(el).attr('baselevel3');
            z_level4_phase = $(el).text();
            if(z_level4_phase.includes("+")){
                z_level4_phase = z_level4_phase.substr(0,z_level4_phase.length-2);
            }
			z_level4_phase = z_level4_phase.replace('✓','');
			z_level4_phase = z_level4_phase.trim();
            z_selected_leveldata.forEach(function(val1,index1){
                if(val1.phaseName == base_level){
                    val1.subLevels.forEach(function(val2,index2){
                        if(val2.phaseName == z_level2_phase){
                            val2.subLevels.forEach(function(val3,index3){
                                if(val3.phaseName == z_level3_phase){
                                    val3.subLevels.forEach(function(val4,index4){
                                        if(val4.phaseName == z_level4_phase){
                                            val4.isSelected = false;
                                        }
                                    });
                                }
                            });
                        }
                    });
                }
            });
        }
		if($(el)[0].hasAttribute('baselevel4')){
            z_level2_phase = $(el).attr('baselevel2');
            z_level3_phase = $(el).attr('baselevel3');
			z_level4_phase = $(el).attr('baselevel4');
            z_level5_phase = $(el).text();
            if(z_level5_phase.includes("+")){
                z_level5_phase = z_level5_phase.substr(0,z_level5_phase.length-2);
            }
			z_level5_phase = z_level5_phase.replace('✓','');
			z_level5_phase = z_level5_phase.trim();
            z_selected_leveldata.forEach(function(val1,index1){
                if(val1.phaseName == base_level){
                    val1.subLevels.forEach(function(val2,index2){
                        if(val2.phaseName == z_level2_phase){
                            val2.subLevels.forEach(function(val3,index3){
                                if(val3.phaseName == z_level3_phase){
                                    val3.subLevels.forEach(function(val4,index4){
                                        if(val4.phaseName == z_level4_phase){
                                            val4.subLevels.forEach(function(val5,index5){
												if(val5.phaseName == z_level5_phase){
													val5.isSelected = false;
												}
												
											});
											val4.isSelected = false;
                                        }
                                    });
                                }
                            });
                        }
                    });
                }
            });
        }
        if(z_level == "Level1"){
            var z_level1_phase = $(el).text();
            var test_phase;
            if(z_level1_phase.includes("+")){
                z_level1_phase = z_level1_phase.substr(0,z_level1_phase.length-2);
            }
			z_level1_phase = z_level1_phase.replace('✓','');
            if(z_level1_phase.includes("Time Dependent Costs")){
                          test_phase = z_level1_phase.split("Time Dependent Costs - ");
            }
            //test_phase = z_level1_phase.split("Time Dependent Costs");
            z_level1_phase = z_level1_phase.trim();
            z_selected_leveldata.forEach(function(val1,index1){
                if(z_level1_phase.trim() == val1.phaseName.trim()){
                    val1.isSelected = false;
                    if(val1.lineItems.length > 0){
                        val1.lineItems.forEach(function(obj2,index_2){
                            obj2.lineInput = [];
                        });
                    }
                }
                if(val1.phaseName.includes("Time Dependent Costs") && z_level1_phase.includes("Time Dependent Costs")){
                    if(val1.lineItems.length > 0){
                        val1.lineItems.forEach(function(val2,index2){
                            if(val2.phase.trim().includes(test_phase[1].trim())){
                                val2.isSelected = false;
                                val2.lineInput = [];
                            }
                        });
                        if(val1.lineItems[1].isSelected == false && val1.lineItems[2].isSelected == false && val1.lineItems[4].isSelected == false){
                            val1.lineItems.forEach(function(val2,index2){
                                    val2.lineInput = [];
                            });
                        }
                    }
                }
            });
        }
	}
	else{
		el.classList.add("z-level-selection");
		el.classList.remove("z-l-grey-color");
		$(el).children()[1].classList.add('d-block');
		if($('#z-afe-timeline-panel').hasClass('z-estimate-panel')){
			el.classList.add("z-level2-test");
        }
        if(z_level == "Level1"){
            var z_level1_phase = $(el).text();
            var test_phase;
            if(z_level1_phase.includes("+")){
                z_level1_phase = z_level1_phase.substr(0,z_level1_phase.length-2);
            }
			z_level1_phase = z_level1_phase.replace('✓','');
            if(z_level1_phase.includes("Time Dependent Costs")){
                          test_phase = z_level1_phase.split("Time Dependent Costs - ");
            }
            z_level1_phase = z_level1_phase.trim();
            //test_phase = z_level1_phase.split("Time Dependent Costs");
            z_selected_leveldata.forEach(function(val1,index1){
                if(z_level1_phase == val1.phaseName.trim()){
                    val1.isSelected = true;
                    if(val1.lineItems.length > 0){
                        val1.lineItems.forEach(function(obj2,index_2){
                            obj2.lineInput = [];
                        });
                    }
                }
                if(val1.phaseName.includes("Time Dependent Costs") && z_level1_phase.includes("Time Dependent Costs")){
                    if(val1.lineItems.length > 0){
                        val1.lineItems.forEach(function(val2,index2){
                            if(val2.phase.trim().includes(test_phase[1].trim())){
                                val2.isSelected = true;
                                val2.lineInput = [];
                            }
                        });
                    }
                }
            });
        }
        if($(el)[0].hasAttribute('baselevel3')){
            z_level2_phase = $(el).attr('baselevel2');
            z_level3_phase = $(el).attr('baselevel3');
            z_level4_phase = $(el).text();
            if(z_level4_phase.includes("+")){
                z_level4_phase = z_level4_phase.substr(0,z_level4_phase.length-2);
            }
			z_level4_phase = z_level4_phase.replace('✓','');
			z_level4_phase = z_level4_phase.trim();
            z_selected_leveldata.forEach(function(val1,index1){
                if(val1.phaseName == base_level){
                    val1.subLevels.forEach(function(val2,index2){
                        if(val2.phaseName == z_level2_phase){
                            val2.subLevels.forEach(function(val3,index3){
                                if(val3.phaseName == z_level3_phase){
                                    val3.subLevels.forEach(function(val4,index4){
                                        if(val4.phaseName == z_level4_phase){
                                            val4.isSelected = true;
                                        }
                                    });
                                }
                            });
                        }
                    });
                }
            });
        }
		 if($(el)[0].hasAttribute('baselevel4')){
            z_level2_phase = $(el).attr('baselevel2');
            z_level3_phase = $(el).attr('baselevel3');
			z_level4_phase = $(el).attr('baselevel4');
            z_level5_phase = $(el).text();
            if(z_level5_phase.includes("+")){
                z_level5_phase = z_level5_phase.substr(0,z_level5_phase.length-2);
            }
			z_level5_phase = z_level5_phase.replace('✓','');
			z_level5_phase = z_level5_phase.trim();
            z_selected_leveldata.forEach(function(val1,index1){
                if(val1.phaseName == base_level){
                    val1.subLevels.forEach(function(val2,index2){
                        if(val2.phaseName == z_level2_phase){
                            val2.subLevels.forEach(function(val3,index3){
                                if(val3.phaseName == z_level3_phase){
                                    val3.subLevels.forEach(function(val4,index4){
                                        if(val4.phaseName == z_level4_phase){
                                               val4.subLevels.forEach(function(val5,index5){
												if(val5.phaseName == z_level5_phase){
													val5.isSelected = true;
												}
											});
											val4.isSelected = true;
                                        }
                                    });
                                }
                            });
                        }
                    });
                }
            });
        }
	}
	z_Selected_Array = [];
	z_Selected_DayArray = [];
	z_Selected_testArray = [];
    var selection_phase;
    if($('#z-afe-timeline-panel').hasClass('z-estimate-panel')){
        selection_phase = $('.z-level2-test');
    }
    else{
        selection_phase = $('.z-level-selection');
    }
	
	for(var select = 0; select < selection_phase.length;select++){
		select_phaseName = selection_phase[select].innerText;
		select_phaseName = select_phaseName.replace('✓','');
		select_phaseName = select_phaseName.trim();
		if(select_phaseName.includes("+")){
			select_phaseName = select_phaseName.substr(0,select_phaseName.length-4);
		}
			if(select_phaseName.startsWith("Time Dependent Costs") && z_level == "Level1"){
				select_phaseName = "Time Dependent Costs";
			}
			if(!z_Selected_Array.includes(select_phaseName) && !$('#z-afe-timeline-panel').hasClass('z-estimate-panel')){
				z_Selected_Array.push(select_phaseName);
				z_Selected_phaseArray.push(select_phaseName);
				if(!z_Selected_testArray.includes(select_phaseName)){
					z_Selected_testArray.push(select_phaseName);
				}
				if(level2_attr == "2"){
					z_sublevelObj['phase'] = select_phaseName;
					z_sublevelObj['baseLevel'] = base_level;
					if(!(get_level2_Array.includes(z_sublevelObj))){
						get_level2_Array.push(z_sublevelObj);
					}
					if(!(check_forlevel1_Array.includes(base_level))){
						check_forlevel1_Array.push(base_level);
					}
					
					z_sublevelObj = {};
				}
				
			}
			if($('#z-afe-timeline-panel').hasClass('z-estimate-panel')){
				z_Selected_DayArray.push(select_phaseName);
			}
		
	}
}
function z_configActive(el){
	var serialObj = {};
	var selectedObj = {};
	var select_phaseName;
	get_level2_Array = [];
	var level2_attr;
	var base_level;
    var z_sublevelObj = {};
    var z_level2_phase;
    var z_level3_phase;
    var z_level4_phase;
if($(el)[0].hasAttribute('selectlevel')){
	level2_attr = $(el).attr('selectlevel');
    base_level = $(el).attr('baselevel');
    
	}
	if($(el).hasClass('z-levelconfig-color')){
        $(el).removeClass('z-levelconfig-color');
        if($(el).hasClass('z-level2-test')){
            $(el).removeClass('z-level2-test');
        }
        if($(el)[0].hasAttribute('baselevel3')){
            z_level2_phase = $(el).attr('baselevel2');
            z_level3_phase = $(el).attr('baselevel3');
            z_level4_phase = $(el).text();
            if(z_level4_phase.includes("+")){
                z_level4_phase = z_level4_phase.substr(0,z_level4_phase.length-2);
            }
            z_selected_leveldata.forEach(function(val1,index1){
                if(val1.phaseName == base_level){
                    val1.subLevels.forEach(function(val2,index2){
                        if(val2.phaseName == z_level2_phase){
                            val2.subLevels.forEach(function(val3,index3){
                                if(val3.phaseName == z_level3_phase){
                                    val3.subLevels.forEach(function(val4,index4){
                                        if(val4.phaseName == z_level4_phase){
                                            val4.isSelected = false;
                                        }
                                    });
                                }
                            });
                        }
                    });
                }
            });
        }
        if(z_level == "Level1"){
            var z_level1_phase = $(el).text();
            var test_phase;
            if(z_level1_phase.includes("+")){
                z_level1_phase = z_level1_phase.substr(0,z_level1_phase.length-2);
            }
            if(z_level1_phase.includes("Time Dependent Costs")){
                          test_phase = z_level1_phase.split("Time Dependent Costs - ");
            }
            //test_phase = z_level1_phase.split("Time Dependent Costs");
            z_level1_phase = z_level1_phase.trim();
            z_selected_leveldata.forEach(function(val1,index1){
                if(z_level1_phase.trim() == val1.phaseName.trim()){
                    val1.isSelected = false;
                    if(val1.lineItems.length > 0){
                        val1.lineItems.forEach(function(obj2,index_2){
                            obj2.lineInput = [];
                        });
                    }
                }
                if(val1.phaseName.includes("Time Dependent Costs") && z_level1_phase.includes("Time Dependent Costs")){
                    if(val1.lineItems.length > 0){
                        val1.lineItems.forEach(function(val2,index2){
                            if(val2.phase.trim().includes(test_phase[1].trim())){
                                val2.isSelected = false;
                                val2.lineInput = [];
                            }
                        });
                        if(val1.lineItems[1].isSelected == false && val1.lineItems[2].isSelected == false && val1.lineItems[4].isSelected == false){
                            val1.lineItems.forEach(function(val2,index2){
                                    val2.lineInput = [];
                            });
                        }
                    }
                }
            });
        }
	}
	else{
		el.classList.add("z-levelconfig-color");
		el.classList.remove("z-l-grey-color");
		if($('#z-afe-timeline-panel').hasClass('z-estimate-panel')){
			el.classList.add("z-level2-test");
        }
        if(z_level == "Level1"){
            var z_level1_phase = $(el).text();
            var test_phase;
            if(z_level1_phase.includes("+")){
                z_level1_phase = z_level1_phase.substr(0,z_level1_phase.length-2);
            }
            if(z_level1_phase.includes("Time Dependent Costs")){
                          test_phase = z_level1_phase.split("Time Dependent Costs - ");
            }
            z_level1_phase = z_level1_phase.trim();
            //test_phase = z_level1_phase.split("Time Dependent Costs");
            z_selected_leveldata.forEach(function(val1,index1){
                if(z_level1_phase == val1.phaseName.trim()){
                    val1.isSelected = true;
                    if(val1.lineItems.length > 0){
                        val1.lineItems.forEach(function(obj2,index_2){
                            obj2.lineInput = [];
                        });
                    }
                }
                if(val1.phaseName.includes("Time Dependent Costs") && z_level1_phase.includes("Time Dependent Costs")){
                    if(val1.lineItems.length > 0){
                        val1.lineItems.forEach(function(val2,index2){
                            if(val2.phase.trim().includes(test_phase[1].trim())){
                                val2.isSelected = true;
                                val2.lineInput = [];
                            }
                        });
                    }
                }
            });
        }
        if($(el)[0].hasAttribute('baselevel3')){
            z_level2_phase = $(el).attr('baselevel2');
            z_level3_phase = $(el).attr('baselevel3');
            z_level4_phase = $(el).text();
            if(z_level4_phase.includes("+")){
                z_level4_phase = z_level4_phase.substr(0,z_level4_phase.length-2);
            }
            z_selected_leveldata.forEach(function(val1,index1){
                if(val1.phaseName == base_level){
                    val1.subLevels.forEach(function(val2,index2){
                        if(val2.phaseName == z_level2_phase){
                            val2.subLevels.forEach(function(val3,index3){
                                if(val3.phaseName == z_level3_phase){
                                    val3.subLevels.forEach(function(val4,index4){
                                        if(val4.phaseName == z_level4_phase){
                                            val4.isSelected = true;
                                        }
                                    });
                                }
                            });
                        }
                    });
                }
            });
        }
	}
	z_Selected_Array = [];
	z_Selected_DayArray = [];
	z_Selected_testArray = [];
    var selection_phase;
    if($('#z-afe-timeline-panel').hasClass('z-estimate-panel')){
        selection_phase = $('.z-level2-test');
    }
    else{
        selection_phase = $('.z-levelconfig-color');
    }
	
	for(var select = 0; select < selection_phase.length;select++){
		select_phaseName = selection_phase[select].innerText;
		if(select_phaseName.includes("+")){
			select_phaseName = select_phaseName.substr(0,select_phaseName.length-4);
		}
			if(select_phaseName.startsWith("Time Dependent Costs") && z_level == "Level1"){
				select_phaseName = "Time Dependent Costs";
			}
			if(!z_Selected_Array.includes(select_phaseName) && !$('#z-afe-timeline-panel').hasClass('z-estimate-panel')){
				z_Selected_Array.push(select_phaseName);
				z_Selected_phaseArray.push(select_phaseName);
				if(!z_Selected_testArray.includes(select_phaseName)){
					z_Selected_testArray.push(select_phaseName);
				}
				if(level2_attr == "2"){
					z_sublevelObj['phase'] = select_phaseName;
					z_sublevelObj['baseLevel'] = base_level;
					if(!(get_level2_Array.includes(z_sublevelObj))){
						get_level2_Array.push(z_sublevelObj);
					}
					if(!(check_forlevel1_Array.includes(base_level))){
						check_forlevel1_Array.push(base_level);
					}
					
					z_sublevelObj = {};
				}
				
			}
			if($('#z-afe-timeline-panel').hasClass('z-estimate-panel')){
				z_Selected_DayArray.push(select_phaseName);
			}
		
	}
	
	//$('.z-l-phasebtn').remove();	
}
var z_phase_selected,z_phase_selected_Element;
function z_addPhase(el,data){
    var phase_name="";
    var sel_index_add = 0;
    var z_active_phaseName1;
    var level1;
    var level2;
    var level3;
    var level4;
    z_phase_selected_Element = el;
    if(z_phase_selected_Element.innerText.includes("Add Phase")){
        level1 = configData[configData.length-1].phaseName;
    }
    else{
        level1 = $(z_phase_selected_Element).parent().attr('baselevel');
    }
    var z_l_levels = el.getAttribute('level');
    if(z_l_levels == "1"){
        z_active_phaseName1 =$('.z-level-selection[selectlevel="1"][baselevel="'+level1+'"]');
    }
    else if(z_l_levels == "2"){
        z_active_phaseName1 =$('.z-level-selection[selectlevel="2"][baselevel="'+level1+'"]');

    }
    else if(z_l_levels == "3"){
        z_active_phaseName1 =$('.z-level-selection[selectlevel="3"][baselevel="'+level1+'"]');

    }
    else{
        z_active_phaseName1 =$('.z-level-selection[selectlevel="4"][baselevel="'+level1+'"]');

    }

	var index_to_neglect = "";
	if(z_active_phaseName1.length > 0){
		index_to_neglect = z_active_phaseName1[0].innerText;
		z_phase_selected = z_active_phaseName1[0].innerText;
	}
	if(!(el.innerText.includes("Add Phase"))){
		z_phase_selected = $(el).parent().text();	
	}
	else{
		if(z_Aray_val.length > 0){
			z_phase_selected = z_Aray_val[z_Aray_val.length-1];
		}
		
	}
	
	if(z_phase_selected.includes("+")){
		z_phase_selected = z_phase_selected.substr(0,z_phase_selected.length-2);
	}
	if(z_phase_selected.substr(z_phase_selected.length-1) == "x"){
        z_phase_selected = z_phase_selected.substr(0,z_phase_selected.length-1);
    }
	z_selected_leveldata = z_sel_config;
	 $('#z-addPhase-modal').remove();
	 var noLevels = $('#z-req-wellLevel').val();
	 var noConfig = $('#z-wellConfig').val();
	    $('body').append('<div id="z-addPhase-modal" class="modal" tabindex="-1" role="dialog">' +
	        '<div class="modal-dialog" role="document">' +
	        '<div class="modal-content">' +
	        '<div class="modal-header">' +
	        '<h5 class="modal-title">Add Phase</h5>' +
	        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
	        '<span aria-hidden="true">&times;</span>' +
	        '</button>' +
	        '</div>' +
	        '<div class="modal-body">' +
	        '<div id="notSelectedPhase_list"></div>' +
	        '<div id="customPhase-insertWrap">' +
	        '<input id="customPhase-input" class="z-m-inputS1" placeholder="phase Name">' +
	        '<button id="customPhase-addBtn" type="button" class="btn btn-primary">Add</button>' +
	        '</div>' +
	        '<p class="d-none">Select a phase to Add</p>' +
	        '</div>' +
	        '<div class="modal-footer">' +
	        '<button id="z-addPhase-btn" type="button" class="btn btn-primary">Submit</button>' +
	        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
	        '</div>' +
	        '</div>' +
	        '</div>' +
	        '</div>');
	    $('#z-addPhase-btn').attr('selected-level',z_l_levels);
	    $('#z-addPhase-modal').modal('show');
$('#customPhase-addBtn').on('click', function () {
	phase_name = $('#customPhase-input').val();
	
	$('#notSelectedPhase_list').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
			'<div class="z-phaseName-select">'+phase_name+'</div></div>');
	$('#customPhase-input').val("");
        });
        for(var element=0;element<removed_array.length;element++){
            if(removed_array[element].level ==noLevels.substr(noLevels.length-1) && removed_array[element].config == noConfig.substr(noConfig.length-1) && removed_array[element].selectedLevel ==z_l_levels){
                $('#notSelectedPhase_list').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
			'<div class="z-phaseName-select">'+removed_array[element].phaseName+'</div></div>');
            }
        }
      
        if(noLevels.substr(noLevels.length-1) == "2"){
//        	if(z_configJson_data.length > 1){
//        		for(var val2=0;val2<z_configJson_data.length;val2++){
//                    if(noLevels.substr(noLevels.length-1) == z_configJson_data[val2].levelValue && noConfig.substr(noConfig.length-1) == z_configJson_data[val2].configNumber)
//                    wellConfigData = JSON.parse(z_configJson_data[val2].wellConfig);
//                }
//        	}
//        	else{
//        		wellConfigData = JSON.parse(z_configJson_data[0].wellConfig);
//        	}
        	wellConfigData = z_sel_config;
        	
        	if(z_l_levels == "2"){
        		var index_to_insert = 0;
        		wellConfigData.forEach(function (obj,o){
        		var alter_sublevels = obj.subLevels;
        		var selected_index1 = alter_sublevels.findIndex(function (obj2) {
                    return (obj2['phaseName'] == index_to_neglect.substr(0,index_to_neglect.length-4).trim());
                });
        		if(!(selected_index1==-1)){
        			index_to_insert = o;
        		}
        		return false;
        		});
        		wellConfigData.forEach(function (obj1,index){
        		if(!(index == index_to_insert)){
        			var sublevels_to_insert = obj1.subLevels;
        			sublevels_to_insert.forEach(function (obj3,index1) {
        				$('#notSelectedPhase_list').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
        						'<div class="z-phaseName-select">'+obj3.phaseName+'</div></div>');
        			});
        		}
        		});
        		}
        	}
$('#z-addPhase-btn').on('click', function (el) {
	var z_selected_phase = document.getElementsByClassName('z-phaseName-select');
    var z_active_phaseName;
    var totalCostObj = {};
    var level_1phaseName;
    var level_2phaseName;
    var level_3phaseName;
    var level_4phaseName;
    var tempMyObj;
    if(z_phase_selected_Element.innerText.includes("Add Phase")){
        level_1phaseName = configData[configData.length-1].phaseName;
    }
    else{
        level_1phaseName = $(z_phase_selected_Element).parent().attr('baselevel');
    }
    if(z_l_levels == "1"){
        z_active_phaseName =$('.z-level-selection[selectlevel="1"][baselevel="'+level_1phaseName+'"]');
    }
    else if(z_l_levels == "2"){
        z_active_phaseName =$('.z-level-selection[selectlevel="2"][baselevel="'+level_1phaseName+'"]');

    }
    else if(z_l_levels == "3"){
        z_active_phaseName =$('.z-level-selection[selectlevel="3"][baselevel="'+level_1phaseName+'"]');

    }
    else{
        z_active_phaseName =$('.z-level-selection[selectlevel="4"][baselevel="'+level_1phaseName+'"]');

    }
	var z_addphase=document.getElementById('ws-level1-addphase');
	var level_selected = $('#z-req-wellLevel').val();
	var z_activeSerialNumber = 0;
	var z_addphase_levels = document.getElementsByClassName('col-2 z-l-configbottom');
	var z_selected_phaseObject ={};
	var z_selected_subphaseObject ={};
	var z_selected_phaseName,z_sublevels=[];
	var z_serial_no="";
	var z_test = 0;
	var z_level2_snum = 0;
    var selected_phaseText = "";
    var z_config_select = $('#z-wellConfig').val();
    var z_selectedArray_l2 = [];
    var test_Select_array = [];
    var z_show_Phase = false;
    var x_total_cost_item;
    var x_total_costItemTitle;
    var test_total_cost = [];
    
    configData = z_sel_config;
    var z_userdefined_item = {};
    if(z_level != "Level1"){
        configData.forEach(function(a,e){
            if(a.phaseName.trim() == "Time Dependent Costs - Drilling Support Services"){
                a.subLevels.forEach(function(sub,index1){
                    if(sub.phaseName == "user defined services"){
                        z_userdefined_item['totalCostItem'] = sub.totalCostItem;
                        z_userdefined_item['totalCostItemTitle'] = sub.totalCostItemTitle;
                        return;
                    }
                    
                });
            }
        });
    }
    
    if(!($('#z-level21-prevphase').hasClass('d-none'))){
   	 z_show_Phase = true; 
    }
    
    for(var t=0;t < z_active_phaseName.length;t++){
    	if(z_active_phaseName[t].innerText.includes("+")){
        	test_Select_array.push(z_active_phaseName[t]);
    	}
    }
  if(test_Select_array.length > 0){
	  z_active_phaseName = test_Select_array;
  }
    
    for(var m=0;m<z_selected_phase.length;m++){
		if(z_selected_phase[m].previousElementSibling.checked){
			z_selectedArray_l2.push(z_selected_phase[m].innerText);	
		}
    }
    if(z_level == "Level1" || z_level == "Level2"){
    	for(var i=0;i<z_selected_phase.length;i++){
    		if(z_selected_phase[i].previousElementSibling.checked){
    			console.log(z_selected_phase[i].innerText);
    			if(z_active_phaseName.length > 0){
    				if(z_active_phaseName.length > 1){
    					selected_phaseText = z_active_phaseName[z_active_phaseName.length-1].innerText;
    					if(selected_phaseText.includes("+")){
    						selected_phaseText = selected_phaseText.substr(0,selected_phaseText.length-4).trim();
    						z_Selected_phaseArray = [];
    					}
    				}
    				else{
    					selected_phaseText = z_active_phaseName[0].innerText;
    					if(selected_phaseText.includes("+")){
    						selected_phaseText = selected_phaseText.substr(0,selected_phaseText.length-4).trim();
    						z_Selected_phaseArray = [];
    					}
    				}
    				if(level_selected.substr(level_selected.length-1) == "1"){
    					z_activeSerialNumber = z_active_phaseName[0].previousElementSibling.previousElementSibling.innerText.charCodeAt(0);
    					
    					for(var k=0;k<configData.length;k++){
    						if(configData[k].phaseName == selected_phaseText){
    								
    							if(z_Selected_Array.includes(configData[k].phaseName)){
    								z_Selected_Array.splice(configData[k].phaseName,1);
    							}
    							if(z_Selected_Array.includes("Time Dependent Costs")){
    								z_Selected_Array.splice("Time Dependent Costs",1);
    							}
    								z_selected_phaseObject['levelValue'] = "&#"+(z_activeSerialNumber+1);
    								z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
    								z_selected_phaseObject['lineItems'] = [" "];
    								configData.splice(k+1,0,z_selected_phaseObject);
    								z_selected_phaseObject={};
    								selected_phaseText = configData[k+1].phaseName;
    								z_activeSerialNumber = z_activeSerialNumber+1;
    								for(var l=k+2;l<configData.length;l++){
    									configData[l].levelValue = "&#"+(z_activeSerialNumber + 1);
    									z_activeSerialNumber = z_activeSerialNumber+1;
    								}
    								break;
    						}
    					}
    				}
    				else if(z_active_phaseName[0].getAttribute('level') == "1"){
    					z_activeSerialNumber = z_active_phaseName[0].previousElementSibling.previousElementSibling.innerText.charCodeAt(0);
                        tempMyObj = {};
                        for(var k=0;k<configData.length;k++){
    						if(configData[k].phaseName.trim() == selected_phaseText){
    							if(z_Selected_Array.includes(configData[k].phaseName.trim())){
    								z_Selected_Array.splice(configData[k].phaseName,1);
    							}
    								z_selected_phaseObject['levelValue'] = "&#"+(z_activeSerialNumber+1);
    								z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
                                    z_selected_phaseObject['isSelected'] = true;
                                    test_total_cost = configData[k].subLevels;
                                    z_selected_phaseObject['subLevels'] = test_total_cost.slice();
                                    tempMyObj = Object.create(z_selected_phaseObject);
    								configData.splice(k+1,0,tempMyObj);
    								z_selected_phaseObject={};
                                    z_selected_subphaseObject = {};
                                    tempMyObj = {};
    								z_sublevels = [];
    								if(!(z_Selected_phaseArray.includes(z_selected_phase[i].innerText))){
    									z_Selected_phaseArray.push(z_selected_phase[i].innerText);
    								}
    								
    								selected_phaseText = configData[k+1].phaseName;
    								z_activeSerialNumber = z_activeSerialNumber+1;
    								for(var l=k+2;l<configData.length;l++){
    									configData[l].levelValue = "&#"+(z_activeSerialNumber + 1);
    									var z_sno = "1";
    									configData[l].subLevels.forEach(function(obj,values){
    										obj.levelValue = String.fromCharCode(z_activeSerialNumber+1)+z_sno;
    										z_sno = (Number(z_sno)+1).toString();
    											//z_activeSerialNumber = z_activeSerialNumber+1;
    									});
    									z_activeSerialNumber = z_activeSerialNumber+1;
    								}
    								break;
    						}
    					}
    				}
    				else if(z_active_phaseName[0].getAttribute('level') == "2"){
    					var z_SerialNumber = z_active_phaseName[0].previousElementSibling.previousElementSibling.previousElementSibling.innerText;	
    					for(var k=0;k<configData.length;k++){
                            if(configData[k].phaseName == z_active_phaseName[0].getAttribute('baselevel')){
                                var z_sublevels = configData[k].subLevels;
                                z_sublevels.forEach(function (obj,val){
                                    if(obj.phaseName == selected_phaseText){
                                        if(z_Selected_Array.includes(obj.phaseName)){
                                            z_Selected_Array.splice(obj.phaseName,1);
                                        }
                                        z_level2_snum =Number(z_SerialNumber.substr(1))+1;
                                        z_SerialNumber = z_SerialNumber.substr(0,1)+z_level2_snum;
                                        z_selected_phaseObject['levelValue'] = z_SerialNumber;
                                        z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
                                        z_selected_phaseObject['isSelected'] = true;
                                        z_selected_phaseObject['totalCostItem'] = obj.totalCostItem;
                                        z_selected_phaseObject['totalCostItemTitle'] = obj.totalCostItemTitle;
                                        tempMyObj = Object.create(z_selected_phaseObject);
                                        z_sublevels.splice(val+1,0,tempMyObj);
                                        z_selected_phaseObject={};//pro k -->val
                                        tempMyObj = {};
                                        //selected_phaseText = configData[k+1].phaseName;
                                        z_level2_snum = z_level2_snum+1;
                                        z_SerialNumber = z_SerialNumber.substr(0,1)+z_level2_snum;
                                        for(var l=val+2;l<z_sublevels.length;l++){//serial number adjustment
                                            z_sublevels[l].levelValue = z_SerialNumber.substr(0,1) + z_level2_snum;
                                            z_SerialNumber = z_SerialNumber.substr(0,1) + z_level2_snum;
                                            z_level2_snum = z_level2_snum+1;
                                        }
                                        return;
                                    }
                                });
                            }
                           
    					}
    				}
    			
    			
    			}
    			else{
    				if(level_selected.substr(level_selected.length-1) == "1"){
    					if(z_test<1){
    						//z_addphase_levels = 
    						z_activeSerialNumber = z_addphase.previousElementSibling.firstElementChild.firstChild.innerText.charCodeAt(0);
    					}
    					z_selected_phaseObject['levelValue'] = "&#"+(z_activeSerialNumber + 1);
    					z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
    					z_selected_phaseObject['lineItems'] = [" "];
    					configData.push(z_selected_phaseObject);
    					z_activeSerialNumber = z_activeSerialNumber+1;
    					z_test = z_test+1;
    					z_selected_phaseObject={};
    					z_noLevel = "1";
    				}
    				else if(level_selected.substr(level_selected.length-1) == "2"){
    					var phase_selected = el.target.getAttribute('selected-level');
    					if(phase_selected == "1"){
    						if(z_test<1){
    							//error
    							z_SerialNumber = z_addphase_levels[z_addphase_levels.length-1].innerText.substr(0,1);
    							z_activeSerialNumber = z_SerialNumber.charCodeAt(0);
    						}
    						
    						z_selected_phaseObject['levelValue'] = "&#"+(z_activeSerialNumber + 1);
    						z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
    						z_selected_phaseObject['isSelected'] = true;
    						z_selected_subphaseObject['levelValue'] = String.fromCharCode(z_activeSerialNumber+1)+"1";
    						z_selected_subphaseObject['phaseName'] = "";
    						z_selected_subphaseObject['isSelected'] = true;
    						//z_sublevels.push(z_selected_subphaseObject);
    						z_selected_phaseObject['subLevels'] = configData[0].subLevels.slice();
//    						z_selected_phaseObject['subLevels'] = [];
                            //tempMyObj = Object.create(z_selected_phaseObject);
                            configData.push(z_selected_phaseObject);
                            tempMyObj = {};
    						z_activeSerialNumber = z_activeSerialNumber+1;
    						z_test = z_test+1;
    						z_selected_phaseObject={};
    						z_selected_subphaseObject = {};
    						z_sublevels = [];
    						z_noLevel = "2";
    					}
    					else if(phase_selected == "2"){
    						if(z_test<1){
    							//error
    							z_SerialNumber = z_addphase_levels[z_addphase_levels.length-1].innerText;
    						}
    						z_level2_snum =Number(z_SerialNumber.substr(1))+1;
    						z_SerialNumber = z_SerialNumber.substr(0,1) + z_level2_snum;
    						z_selected_phaseObject['levelValue'] = z_SerialNumber;
    						z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
                            z_selected_phaseObject['isSelected'] = true;
                            z_selected_phaseObject['totalCostItem'] = configData[0].subLevels[0].totalCostItem.slice();
                            z_selected_phaseObject['totalCostItemTitle'] = configData[0].subLevels[0].totalCostItemTitle.slice();
                            z_selected_phaseObject['totalCost'] = [];
                            z_selected_phaseObject['remark'] = '';
                            var z_m_subLevels = configData[configData.length-1].subLevels;
                            tempMyObj = Object.create(z_selected_phaseObject);

    						z_m_subLevels.push(tempMyObj);//error
    						//configData.push(z_selected_phaseObject);
    						z_SerialNumber = z_SerialNumber.substr(0,1) + z_level2_snum;
    						z_test = z_test+1;
                            z_selected_phaseObject={};
                            tempMyObj = {};
    						z_noLevel = "2";
    					}
    					
    				}
    				
    			}
    		}
    	
    	}
    }
    else if(z_level == "Level3"){
    	for(var i=0;i<z_selected_phase.length;i++){
    		if(z_selected_phase[i].previousElementSibling.checked){
    			console.log(z_selected_phase[i].innerText);
    			if(z_active_phaseName.length > 0){
    				if(z_active_phaseName.length > 1){
    					selected_phaseText = z_phase_selected;
    					z_Selected_phaseArray = [];
    				}
    				else{
    					selected_phaseText = z_phase_selected;
    					z_Selected_phaseArray = [];
    				
    				}
    					}
    			else{
    				selected_phaseText = z_phase_selected;
    			}
    				}
    		if(z_phase_selected_Element.getAttribute('level') == "1"){
				//z_activeSerialNumber = z_active_phaseName[0].previousElementSibling.previousElementSibling.innerText.charCodeAt(0);
				for(var k=0;k<configData.length;k++){
					if(configData[k].phaseName.trim() == selected_phaseText){
						if(z_Selected_Array.includes(configData[k].phaseName.trim())){
							z_Selected_Array.splice(configData[k].phaseName,1);
						}
							z_selected_phaseObject['levelValue'] = "&#";
							z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
                            z_selected_phaseObject['isSelected'] = true;
                            //est_total_cost = configData[k].subLevels.slice();
                            z_selected_phaseObject['subLevels'] = JSON.parse(JSON.stringify(configData[k].subLevels));
                            //configData[k].subLevels[0].phaseName = "test";
                            // console.log("******")
                            // console.log(configData[k].subLevels);
                            // console.log("******")
                            // console.log(z_selected_phaseObject['subLevels']);
                            //configData[k].subLevels = [];
                            //tempMyObj = Object.create(z_selected_phaseObject);
							configData.splice(k+1,0,z_selected_phaseObject);
                            z_selected_phaseObject={};
                            //tempMyObj = {};
                            //z_sublevels = [];
                            //test_total_cost = [];
							if(!(z_Selected_phaseArray.includes(z_selected_phase[i].innerText))){
								z_Selected_phaseArray.push(z_selected_phase[i].innerText);
							}
							
							selected_phaseText = configData[k+1].phaseName;
//							z_activeSerialNumber = z_activeSerialNumber+1;
							
							break;
					}
				}
			}
    		else if(z_phase_selected_Element.getAttribute('level') == "2"){
    			if(z_phase_selected_Element.innerText.includes("Add Phase")){
    				selected_phaseText = z_active_phaseName[z_active_phaseName.length-1].innerText;
                }
             
    			for(var k=0;k<configData.length;k++){
                    if(configData[k].phaseName == z_active_phaseName[0].getAttribute('baselevel')){
                        var z_sublevels = configData[k].subLevels;
                        z_sublevels.forEach(function (obj,val){
                            if(obj.phaseName == selected_phaseText){
                                if(z_Selected_Array.includes(obj.phaseName)){
                                    z_Selected_Array.splice(obj.phaseName,1);
                                }
                                //z_level2_snum =Number(z_SerialNumber.substr(1))+1;
                                //z_SerialNumber = z_SerialNumber.substr(0,1)+z_level2_snum;
                                z_selected_phaseObject['levelValue'] = "ss";
                                z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
                                z_selected_phaseObject['isSelected'] = true;
                                z_selected_phaseObject['totalCostItem'] = JSON.parse(JSON.stringify(obj.totalCostItem.slice()));
                                z_selected_phaseObject['totalCostItemTitle'] = obj.totalCostItemTitle.slice();
                                z_selected_phaseObject['remark'] = '';
                                z_selected_phaseObject['totalCost'] = [];
                                z_selected_phaseObject['subLevels'] = JSON.parse(JSON.stringify(obj.subLevels));
                                tempMyObj = Object.create(z_selected_phaseObject);

                                z_sublevels.splice(val+1,0,tempMyObj);
                                z_selected_phaseObject={};//pro k -->val
                                tempMyObj = {};
                                //selected_phaseText = configData[k+1].phaseName;
    //							z_level2_snum = z_level2_snum+1;
    //							z_SerialNumber = z_SerialNumber.substr(0,1)+z_level2_snum;
                                return;
                            }
                        });
                    }
                   
				}
			
    		}
    		else{

    			if(z_phase_selected_Element.innerText.includes("Add Phase")){
                    selected_phaseText = z_active_phaseName[z_active_phaseName.length-1].innerText;
                    level_1phaseName = z_active_phaseName[0].getAttribute('baselevel');
                    level_2phaseName = z_active_phaseName[0].getAttribute('baselevel2');
                }
                else{
                    level_1phaseName = z_active_phaseName[0].getAttribute('baselevel');
                    level_2phaseName = z_active_phaseName[0].getAttribute('baselevel2');
                }
    			for(var k=0;k<configData.length;k++){
                    if(configData[k].phaseName == level_1phaseName){
                        var z_sublevels = configData[k].subLevels;
                        z_sublevels.forEach(function (obj,val){
                            if(level_2phaseName == obj.phaseName){
                                if(obj.subLevels != null){
                                    var level3_Component = configData[k].subLevels[val].subLevels;
                                    level3_Component.forEach(function(level3,index3){
                                        if(level3.phaseName == selected_phaseText){
                                            //z_level2_snum =Number(z_SerialNumber.substr(1))+1;
                                            //z_SerialNumber = z_SerialNumber.substr(0,1)+z_level2_snum;
                                            x_total_cost_item = configData[k].subLevels[val].totalCostItem;
                                            x_total_costItemTitle = configData[k].subLevels[val].totalCostItemTitle;
                                            x_total_cost_item.forEach(function(valObj,indexVal){
                                                if(valObj.phase == selected_phaseText){
                                                    totalCostObj.phase = z_selected_phase[i].innerText;;
                                                    totalCostObj.disableIndex = valObj.disableIndex;
                                                    totalCostObj.formula = valObj.formula;
                                                    totalCostObj.rateValue = valObj.rateValue;
                                                    totalCostObj.subPhase = [];
                                                    x_total_cost_item.splice(indexVal+1,0,totalCostObj);
                                                    totalCostObj = {};
                                                    //break;

                                                }
                                            });
                                            //configData[k].subLevels[val].totalCostItem = x_total_cost_item;
                                            z_selected_phaseObject['levelValue'] = "ss";
                                            z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
                                            z_selected_phaseObject['isSelected'] = true;
                                            z_selected_phaseObject['remark'] = '';
                                            z_selected_phaseObject['totalCost'] = [];
                                            //z_selected_phaseObject['totalCostItem'] = z_userdefined_item.totalCostItem;
                                            //z_selected_phaseObject['totalCostItemTitle'] = z_userdefined_item.totalCostItemTitle;
                                            tempMyObj = Object.create(z_selected_phaseObject);

                                            level3_Component.splice(index3+1,0,tempMyObj);
                                            z_selected_phaseObject={};//pro k -->val
                                            tempMyObj = {};
                                            //selected_phaseText = configData[k+1].phaseName;
        //									z_level2_snum = z_level2_snum+1;
        //									z_SerialNumber = z_SerialNumber.substr(0,1)+z_level2_snum;
                                            return;
                                        }
                                    });
                                }
                            }
                            
                        });
                    }
                   
				}
			
    		
    		}
    		}
    	}
    else if(z_level == "Level4"){
    	for(var i=0;i<z_selected_phase.length;i++){
    		if(z_selected_phase[i].previousElementSibling.checked){
    			console.log(z_selected_phase[i].innerText);
    			if(z_active_phaseName.length > 0){
    				if(z_active_phaseName.length > 1){
    					selected_phaseText = z_phase_selected;
    					z_Selected_phaseArray = [];
    				}
    				else{
    					selected_phaseText = z_phase_selected;
    					z_Selected_phaseArray = [];
    				
    				}
    					}
    			else{
    				selected_phaseText = z_phase_selected;
    			}
    				}
    		if(z_phase_selected_Element.getAttribute('level') == "1"){
				//z_activeSerialNumber = z_active_phaseName[0].previousElementSibling.previousElementSibling.innerText.charCodeAt(0);
				for(var k=0;k<configData.length;k++){
					if(configData[k].phaseName.trim() == selected_phaseText){
						if(z_Selected_Array.includes(configData[k].phaseName.trim())){
							z_Selected_Array.splice(configData[k].phaseName,1);
						}
							z_selected_phaseObject['levelValue'] = "&#";
							z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
							z_selected_phaseObject['isSelected'] = true;
							// z_selected_subphaseObject['levelValue'] = String.fromCharCode(z_activeSerialNumber+1)+"1";
							// z_selected_subphaseObject['phaseName'] = "";
							// z_selected_subphaseObject['isSelected'] = true;
                            //z_sublevels.push(z_selected_subphaseObject);
                            //test_total_cost = configData[k].subLevels.slice();
                            z_selected_phaseObject['subLevels'] = configData[k].subLevels.slice();
                            //tempMyObj = Object.create(z_selected_phaseObject);
							configData.splice(k+1,0,z_selected_phaseObject);
							z_selected_phaseObject={};
                            z_selected_subphaseObject = {};
                            tempMyObj = {};
							z_sublevels = [];
							if(!(z_Selected_phaseArray.includes(z_selected_phase[i].innerText))){
								z_Selected_phaseArray.push(z_selected_phase[i].innerText);
							}
							
							selected_phaseText = configData[k+1].phaseName;
//							z_activeSerialNumber = z_activeSerialNumber+1;
							
							break;
					}
				}
			}
    		else if(z_phase_selected_Element.getAttribute('level') == "2"){
    			if(z_phase_selected_Element.innerText.includes("Add Phase")){
                    selected_phaseText = z_active_phaseName[z_active_phaseName.length-1].innerText;
                    level_1phaseName = z_active_phaseName[0].getAttribute('baselevel');
                    
                }
                else{
                    level_1phaseName = z_active_phaseName[0].getAttribute('baselevel');
                }
    			for(var k=0;k<configData.length;k++){
                    if(level_1phaseName == configData[k].phaseName){
                        var z_sublevels = configData[k].subLevels;
                        z_sublevels.forEach(function (obj,val){
                            if(obj.phaseName == selected_phaseText){
                                if(z_Selected_Array.includes(obj.phaseName)){
                                    z_Selected_Array.splice(obj.phaseName,1);
                                }
                                //z_level2_snum =Number(z_SerialNumber.substr(1))+1;
                                //z_SerialNumber = z_SerialNumber.substr(0,1)+z_level2_snum;
                                z_selected_phaseObject['levelValue'] = "ss";
                                z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
                                z_selected_phaseObject['isSelected'] = true;
                                z_selected_phaseObject['totalCostItem'] = JSON.parse(JSON.stringify(obj.totalCostItem));
                                z_selected_phaseObject['totalCostItemTitle'] = obj.totalCostItemTitle.slice();
                                z_selected_phaseObject['remark'] = '';
                                z_selected_phaseObject['totalCost'] = [];
                                z_selected_phaseObject['subLevels'] = JSON.parse(JSON.stringify(obj.subLevels));
                                z_sublevels.splice(val+1,0,z_selected_phaseObject);
                                z_selected_phaseObject={};//pro k -->val
                                //selected_phaseText = configData[k+1].phaseName;
    //							z_level2_snum = z_level2_snum+1;
    //							z_SerialNumber = z_SerialNumber.substr(0,1)+z_level2_snum;
                                return;
                            }
                        });
                    }
                   
				}
			
    		}
    		else if(z_phase_selected_Element.getAttribute('level') == "3"){

    			if(z_phase_selected_Element.innerText.includes("Add Phase")){
                    selected_phaseText = z_active_phaseName[z_active_phaseName.length-1].innerText;
                    level_1phaseName = z_active_phaseName[0].getAttribute('baselevel');
                    level_2phaseName = z_active_phaseName[0].getAttribute('baselevel2');
                }
                else{
                    level_1phaseName = z_active_phaseName[0].getAttribute('baselevel');
                    level_2phaseName = z_active_phaseName[0].getAttribute('baselevel2');
                }
    			for(var k=0;k<configData.length;k++){
                    if(level_1phaseName == configData[k].phaseName){
                        var z_sublevels = configData[k].subLevels;
                        z_sublevels.forEach(function (obj,val){
                            if(obj.phaseName == level_2phaseName){
                                if(obj.subLevels != null){
                                    var level3_Component = configData[k].subLevels[val].subLevels;
                                    level3_Component.forEach(function(level3,index3){
                                        if(level3.phaseName == selected_phaseText){
                                            //z_level2_snum =Number(z_SerialNumber.substr(1))+1;
                                            //z_SerialNumber = z_SerialNumber.substr(0,1)+z_level2_snum;
                                            x_total_cost_item = configData[k].subLevels[val].totalCostItem;
                                            x_total_cost_item.forEach(function(valObj,indexVal){
                                                if(valObj.phase == selected_phaseText){
                                                    totalCostObj.phase = z_selected_phase[i].innerText;
                                                    totalCostObj.disableIndex = valObj.disableIndex;
                                                    totalCostObj.formula = valObj.formula;
                                                    totalCostObj.rateValue = valObj.rateValue;
                                                    x_total_cost_item.splice(indexVal+1,0,totalCostObj);
                                                    totalCostObj = {};
                                                   // break;
                                                }
                                            });
                                            z_selected_phaseObject['levelValue'] = "ss";
                                            z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
                                            z_selected_phaseObject['isSelected'] = true;
                                            z_selected_phaseObject['totalCost'] = [];
                                            z_selected_phaseObject['remark'] = '';
                                           
                                            //z_selected_phaseObject['totalCostItem'] = z_userdefined_item.totalCostItem;
                                            //z_selected_phaseObject['totalCostItemTitle'] = z_userdefined_item.totalCostItemTitle;
                                            tempMyObj = Object.create(z_selected_phaseObject);
                                            level3_Component.splice(index3+1,0,z_selected_phaseObject);
                                            z_selected_phaseObject={};//pro k -->val
                                            tempMyObj = {};
                                            //selected_phaseText = configData[k+1].phaseName;
        //									z_level2_snum = z_level2_snum+1;
        //									z_SerialNumber = z_SerialNumber.substr(0,1)+z_level2_snum;
                                            return;
                                        }
                                    });
                                }
                            }
                            
                        });
                    }
                   
				}
			
    		
    		}
    		else if(z_phase_selected_Element.getAttribute('level') == "4"){
    			if(z_phase_selected_Element.innerText.includes("Add Phase")){
                    selected_phaseText = z_active_phaseName[z_active_phaseName.length-1].innerText;
                    level_1phaseName = z_active_phaseName[0].getAttribute('baselevel');
                    level_2phaseName = z_active_phaseName[0].getAttribute('baselevel2');
                    level_3phaseName = z_active_phaseName[0].getAttribute('baselevel3');
                }
                else{
                    level_1phaseName = z_active_phaseName[0].getAttribute('baselevel');
                    level_2phaseName = z_active_phaseName[0].getAttribute('baselevel2');
                    level_3phaseName = z_active_phaseName[0].getAttribute('baselevel3');
                }
    			for(var k=0;k<configData.length;k++){
                    if(level_1phaseName == configData[k].phaseName){
                        var z_sublevels = configData[k].subLevels;
					z_sublevels.forEach(function (obj,val){
                        if(level_2phaseName == obj.phaseName){
                            if(obj.subLevels != null){
                                var level3_Component = configData[k].subLevels[val].subLevels;
                                level3_Component.forEach(function(level3Obj,index3){
                                    if(level3Obj.phaseName == level_3phaseName){
                                        if(level3Obj.subLevels != null){
                                            var level4_Component = level3Obj.subLevels;
                                            level4_Component.forEach(function(level4,index4){
                                                if(level4.phaseName == selected_phaseText){
                                                    x_total_cost_item = obj.totalCostItem;
                                                    x_total_cost_item.forEach(function(valObj,indexVal){
                                                        if(valObj.phase == level3Obj.phaseName){
                                                            if(valObj.subPhase != null){
                                                                valObj.subPhase.forEach(function(val4Obj,val4_index){
                                                                    if(val4Obj.phase == selected_phaseText){
                                                                        totalCostObj.phase = z_selected_phase[i].innerText;
                                                                        totalCostObj.disableIndex = val4Obj.disableIndex;
                                                                        totalCostObj.formula = val4Obj.formula;
                                                                        totalCostObj.rateValue = val4Obj.rateValue;
                                                                        valObj.subPhase.splice(val4_index+1,0,totalCostObj);
                                                                        totalCostObj = {};
                                                                        //break;
                                                                    }
                                                                    
                                                                });
                                                            }
                                                        }
                                                    });
                                                    z_selected_phaseObject['levelValue'] = "ss";
                                                    z_selected_phaseObject['phaseName'] = z_selected_phase[i].innerText;
                                                    z_selected_phaseObject['isSelected'] = true;
                                                    z_selected_phaseObject['totalCost'] = [];
                                                    z_selected_phaseObject['remark'] = '';
                                                    //z_selected_phaseObject['totalCostItem'] = z_userdefined_item.totalCostItem;
                                                    //z_selected_phaseObject['totalCostItemTitle'] = z_userdefined_item.totalCostItemTitle;
                                                    tempMyObj = Object.create(z_selected_phaseObject);
                                                    level4_Component.splice(index4+1,0,tempMyObj);
                                                    z_selected_phaseObject={};
                                                    tempMyObj = {};
                                                    return;
                                                
                                                }
                                            });
                                        }
                                    }
                                  
                                });
                            }
                        }
                       
					});
                    }
                    
				}
    		}
    		}
    	
    }
	
	
	$(z_phase_selected_Element).addClass('z-level-selection');
     console.log(configData);
     var index_level_check;
     config = z_config_select.substr(z_config_select.length-1); 
     if(z_level == "Level1"){
        if(config == "1"){
            index_level_check = z_configJson_data.findIndex(function(obj){
                return obj.levelValue == "1" && obj.configNumber == "1";
            });
            z_configJson_data[index_level_check].wellConfig = JSON.stringify(configData);
        }
        else if(config == "2"){
if(z_configJson_data.length > 1){
    index_level_check = z_configJson_data.findIndex(function(obj){
        return obj.levelValue == "1" && obj.configNumber == "2";
    });
    z_configJson_data[index_level_check].wellConfig = JSON.stringify(configData);	
            }
            else{
            	z_configJson_data[0].wellConfig = JSON.stringify(configData);
            }
        	
        }
        else if(config =="3"){
            if(z_configJson_data.length > 1){
                index_level_check = z_configJson_data.findIndex(function(obj){
                    return obj.levelValue == "1" && obj.configNumber == "3";
                });
                z_configJson_data[index_level_check].wellConfig = JSON.stringify(configData);	
            }
            else{
            	z_configJson_data[0].wellConfig = JSON.stringify(configData);
            }
        	
        }
        addLevel(configData,"1");
    }
    else if(z_level == "Level2"){
        if(config == "1"){
            if(z_configJson_data.length > 1){
                index_level_check = z_configJson_data.findIndex(function(obj){
                    return obj.levelValue == "2" && obj.configNumber == "1";
                });
                z_configJson_data[index_level_check].wellConfig = JSON.stringify(configData);
                
            }
            else{
            	z_configJson_data[0].wellConfig = JSON.stringify(configData);
            }
            z_selected_leveldata = configData;
            z_sel_config = configData;
        	
        }
        if(z_active_phaseName.length > 0){
            if(z_active_phaseName[0].getAttribute('level') == "1" || phase_selected == "1"){
                configData.forEach(function(val1,index1){
                    if(val1.isSelected){
                        z_Selected_Array.push(val1.phaseName.trim());
                    }
                });
            }
            else if(z_active_phaseName[0].getAttribute('level') == "2" || phase_selected == "2"){
                var test_array = [];
                z_Selected_Array = [];
                configData.forEach(function(val,index){
                    if(val.isSelected){
                        test_array.push(val);
                        z_Selected_Array.push(val.phaseName.trim());
                    } 
                });
                configData = test_array;
            }
        }
       
        addLevel(configData,"2");
    }
    else if(z_level == "Level3"){
    	  if(config == "1"){
              if(z_configJson_data.length > 1){
                index_level_check = z_configJson_data.findIndex(function(obj){
                    return obj.levelValue == "3" && obj.configNumber == "1";
                });
                z_configJson_data[index_level_check].wellConfig = JSON.stringify(configData);
              }
              else{
              	z_configJson_data[0].wellConfig = JSON.stringify(configData);
              }
              z_selected_leveldata = configData;
              z_sel_config = configData;
              
          }
          addLevel(configData,"3");
    }
    else if(z_level == "Level4"){
  	  if(config == "1"){
            if(z_configJson_data.length > 1){
                index_level_check = z_configJson_data.findIndex(function(obj){
                    return obj.levelValue == "4" && obj.configNumber == "1";
                });
                z_configJson_data[index_level_check].wellConfig = JSON.stringify(configData);	
            }
            else{
            	z_configJson_data[0].wellConfig = JSON.stringify(configData);
            }
            z_selected_leveldata = configData;
            z_sel_config = configData;
            
        }
        addLevel(configData,"4");
    }
     //z_Selected_Array = z_Selected_phaseArray
    
     //
     z_Selected_Array = [];
	  if(z_level == "2"){
    	 if($('.z-sublevels-hide').length == 0){
            //addLevel(configData,"2"); 
            z_showLevels($('#ws-level2-proceed')[0]);
        }
        else{
            addLevel(configData,"2");
        }
    }
    if(z_level == "3"){
        if($('.z-sublevels3-hide').length > 0 && $('.z-sublevels4-hide').length > 0 && $('.z-sublevels-hide').length == 0){
            //addLevel(configData,"3");
            z_showNextLevel($('#ws-level2-proceed')[0]);
        }
        else if($('.z-sublevels3-hide').length == 0){
            //addLevel(configData,"3");
            z_showNextLevel($('#ws-level2-proceed')[0]);
            z_showNextLevel('3');
        }
        else{
            //addLevel(configData,"3");
        }
        //addLevel(configData,"3");
    }
    if(z_level == "4"){
        if($('.z-sublevels3-hide').length > 0 && $('.z-sublevels4-hide').length > 0 && $('.z-sublevels-hide').length == 0){
            //addLevel(configData,"4");
            z_showNextLevel($('#ws-level2-proceed')[0]);

        }
        else if($('.z-sublevels3-hide').length == 0 && $('.z-sublevels4-hide').length > 0){
            //addLevel(configData,"4");
            z_showNextLevel($('#ws-level2-proceed')[0]);
            z_showNextLevel('3');
        }
        else if($('.z-sublevels4-hide').length == 0){
            //addLevel(configData,"4");
            z_showNextLevel($('#ws-level2-proceed')[0]);
            z_showNextLevel('3');
            z_showNextLevel('4');
        }
        else{
            //addLevel(configData,"4");
        }
        //addLevel(configData,"4");
    }
     if(z_level == "Level2"){
    		$('#z-level21-prevphase').removeClass('d-none');
    	}
		
     $('#z-addPhase-modal').modal('hide');
	 //addLevel(configData,z_noLevel);
	 //phaseData(configData,"1");
	 
});

}
function z_confirm_Estimation(){
    var check_forwells_exist; 
    confirmation_Popup("Proceed to AFE Estimation Module..?", function () {
         average_select = $('#z-well-average').val();
         if($('#freshEstimate').attr('checkForFreshLevel') == "true"){
            clearConfirmationPopup();
            check_forwells_exist = z_configJson_data.findIndex(function(object){
                return object.levelValue == z_level.split("Level")[1] && object.configNumber == "1" && object.wellId == x_wellId;
            });
            if(check_forwells_exist != null && check_forwells_exist != -1){
                deleteLevels();
            }
            
            z_AfeEstimation(z_Selected_Array);
         }
         else{
            z_AfeEstimation(z_Selected_Array);
            clearConfirmationPopup();

         }	 
         $('#z-afe-estimateLevel-panel').removeClass('z-estimate-panel');
         $('#z-afe-estimateComponent-panel').addClass('z-estimate-panel');

	        });
}
var z_selected_leveldata = [];
var z_days_EstimateArray = [];
function z_well_timeline(e){
	var z_timeline = $(e).attr('days');	
	if($('#z-dayInput-check-level2').val() == "true"){
		z_EstimateBack("prev");
		$('#z-configlevelTable').addClass('d-none');
	}
	else{
		z_AfeEstimation(z_timeline);
		$('#z-configlevelTable').addClass('d-none');
		$('#z-days-level2-config1').removeClass('d-none');	
	}
	$('#z-timeline-title').text('CREATE WELL TIMELINE');
	$('#z-timeline-title').css('font-weight','bold');
	
}
var z_select_data2 = [];
var option_array = [];
var wellDays_data_level3;
var wellDays_data_level4;
var wellDays_data_level5;
function z_AfeEstimation(el){
	console.log("z_Array"+el);
    var z_currency = "";
    var wellStatus_index;
	var z_configJson_data_length = z_configJson_data.length;
	var average_val = $('#z-well-average').val();
	var days_enter_length;
	if(z_level && z_config && average_val && $('#z-well-budget').val()){
		if(z_configJson_data_length == 1){
			z_level = "Level"+z_configJson_data[0].levelValue;
			z_config = "Configuration "+z_configJson_data[0].configNumber;
		}
		var data = {
		        wellId: $('#z-wellid-estimate').attr('wellId'),
		        clientId: clientId
		    }
		    var projectId;
		    $.ajax({
		        url: "/api/getWell",
		        type: "GET",
		        data: data,
		        dataType: 'json',
		        contentType: 'application/json;charset=UTF-8',
		        success: function (result) {
		        	$('#z-wellName-estimate').text(result.wellName);
					$('#z-wellname-afe').text(result.wellName);
					$('#z-afe-reference-number').text(result.referenceNumber);
					$('#z-wellName-estimate-report').text(result.wellName);
		        	$('#z-wellrig-estimatelevel2').text(result.wellName);
					$('#z-wellrig-estimatelevel2-report').text(result.wellName);
		        	$('#z-wellrig-estimatelevel4').text(result.wellName);
		        	$('#z-wellrig-estimatelevel5').text(result.wellName);
					$('#z-wellrig-estimatelevel4-report').text(result.wellName);
		        	$('#z-wellrig-estimatelevel5-report').text(result.wellName);
		        	$('#z-fieldDetails-estimate').text(result.wellLandscape);
					$('#z-fieldDetails-estimate-report').text(result.wellLandscape);
		        	$('#z-fieldDetailslevel2-estimate').text(result.wellLandscape);
					$('#z-fieldDetailslevel2-estimate-report').text(result.wellLandscape);
		        	$('#z-fieldDetailslevel4-estimate').text(result.wellLandscape);
					$('#z-fieldDetailslevel4-estimate-report').text(result.wellLandscape);
		        	$('#z-fieldDetailslevel5-estimate').text(result.wellLandscape);
					$('#z-fieldDetailslevel5-estimate-report').text(result.wellLandscape);
		        	$('#z-welltypeDetails-estimate').text(result.wellType);
		        	$('#z-welltypeDetails-level2').text(result.wellType);
		        	$('#z-welltypeDetails-level4').text(result.wellType);
		        	$('#z-welltypeDetails-level5').text(result.wellType);
					
					$('#z-welltypeDetails-estimate-report').text(result.wellType);
		        	$('#z-welltypeDetails-level2-report').text(result.wellType);
		        	$('#z-welltypeDetails-level4-report').text(result.wellType);
		        	$('#z-welltypeDetails-level5-report').text(result.wellType);
					
		        	$('#z-wellid-estimate').attr('currency',result.currency);
		        	$('#z-Estimatecurrency').text($('#z-wellid-estimate').attr('currency'));
		        	if(result.oldWell == "true"){
		        		//$('#z-total-days').text(result.actualWellTime);
		        		//$('#z-total-costs').text(result.actualWellCost);
		        		
		        	}
		        	else{
		        		//$('#z-total-days').text(result.plannedWellTime);
		        		//$('#z-total-costs').text(result.plannedWellCost);
		        	}
		        }});
		    
	$('.z-rightSection-active').removeClass('z-rightSection-active');
	$('#z-afe-Estimationsection').addClass('z-rightSection-active');
	if(!($('#z-panel-well').hasClass('z-rightSection-active'))){
		$('#z-panel-well').addClass('z-rightSection-active');
	}
	//$('#z-estimate-header').addClass('z-rightSection-active');
	var data,level1Data;
	var dataObj = {};
	var selected_data = [];
	$('#z-Estimate-cost').empty();
	$('.z-phaseSection').remove();
	$('.z-cost-inputWidth').remove();
	if(z_level == "Level1"){
		
			//data = JSON.parse(z_configJson_data[0].wellConfig);
			data = z_sel_config;
			level1Data = data;
			if(el != null){
//				data = JSON.parse(well_config[0].wellConfig);
//				data.forEach(function(val,index){
//					var baseIndex = level1Data.findIndex(function(base){
//						return base.phaseName = val.phaseName;
//					});
//					if(baseIndex != -1){
//						dataObj['levelValue'] = level1Data[baseIndex].levelValue;
//						dataObj['lineItems'] = level1Data[baseIndex].lineItems;
//						dataObj['phaseName'] = level1Data[baseIndex].phaseName;
//						val = dataObj;
//						dataObj = {};
//					}
//				});
                            if(z_config == "Configuration 1"){
                                data.forEach(function (obj_el,index_to_search){
                                    if(el.length > 0 && el.includes("Time Dependent Costs") && obj_el.phaseName.startsWith("Time Dependent Costs")){
                                        selected_data.push(obj_el);
                                    }
                                    if(el.includes(obj_el.phaseName) && !obj_el.phaseName.startsWith("Time Dependent Costs")){
                                        selected_data.push(obj_el);
                                    }
                                });
                            }
                            else{
                                data.forEach(function (obj_el,index_to_search){
                                    if(el.length > 0){
                                        if(el.includes(obj_el.phaseName)){
                                            selected_data.push(obj_el);
                                        }
                                        
                                    }
                                   
                                });
                            }
			
			if(el.length > 0){
				var dataObj = {};
				//data = selected_data;
				data.forEach(function(val,index){
					var base_index = selected_data.findIndex(function(val1){
						return val1.phaseName == val.phaseName;
					});
					if(base_index == -1){
						dataObj['levelValue'] = val.levelValue;
						dataObj['phaseName'] = val.phaseName;
						dataObj['lineItems'] = val.lineItems;
						dataObj['isSelected'] = false;
						data[index] = dataObj;
						dataObj={};
					}
					else{
						dataObj['levelValue'] = val.levelValue;
						dataObj['phaseName'] = val.phaseName;
						dataObj['lineItems'] = val.lineItems;
						dataObj['isSelected'] = true;
						data[index] = dataObj;
						dataObj={};
					}
					
				});
				z_selected_leveldata = data;
				z_select_data2 = data;
			}
			}
			$('.z-level1active').removeClass('d-none');
			$('.z-level2-active').removeClass('d-none');
			$('.z-level2-active').addClass('d-none');
			if(!($('.z-level4-active').hasClass('d-none'))){
				$('.z-level4-active').addClass('d-none');
			}
			if(!($('.z-level5-active').hasClass('d-none'))){
				$('.z-level5-active').addClass('d-none');
			}
			//$('#z-estimate-header').addClass('z-rightSection-active');
			var testingDay = $('#z-estimate-testing-date');
			testingDay[0].disabled = false;
			$('#z-wellSection-AfeEstimate-btn').text("save");
            $('#z-days-level2-config1').addClass('d-none');
            var z_selected_index_Value = z_configJson_data.findIndex(function(valObject){
                return valObject.levelValue == z_level.split('Level')[1] && valObject.configNumber == z_config.substr(z_config.length-1);
            });
			
                var z_n_days = $('.z-level1-day-input');
               
                var z_days_entered = JSON.parse(z_configJson_data[z_selected_index_Value].wellEstimateDays);
                if(days_enter != null){
                    days_enter_length = days_enter.length;
					if(days_enter_length > 0){

                    }
                    else{
                        days_enter = z_days_entered;
                    }
                }
              
				var z_n_days_length = z_n_days.length;
				for(var z = 0 ; z < z_n_days_length;z++){
                    if(days_enter[z] != null){
                        z_n_days[z].value = days_enter[z]; 
                    }
                    else{
                        z_n_days[z].value = ""; 
                    }
                    
				}
				var z_n_incline = $('.z-incline-data-level1');
				var z_n_incline_length = z_n_incline.length;
				var z_inclinedata = JSON.parse(z_configJson_data[z_selected_index_Value].wellInclineDays);
                if(z_configJson_data[z_selected_index_Value].isconfigSubmitted || z_configJson_data[z_selected_index_Value].isconfigSaved){
                    for(var m=0;m < z_n_incline_length;m++){
                        if(z_inclinedata[m] != null){
                            z_n_incline[m].value = z_inclinedata[m];
                        }
                        else{
                            z_n_incline[m].value = "";
                        }
                        
                    }
                }
               
				
				
			
			$('#z-totalDays').val("");
			z_selected_leveldata = data;
			$('#z-wellSection-AfeEstimate-btn').prop("onclick", null).off("click");
			$('#z-wellSection-AfeEstimate-btn').off('click').on('click', function () {
				z_savewellConfig();
			});
			
		
	}
	else if(z_level == "Level2" && z_config == "Configuration 1"){
		$('.z-level1active').addClass('d-none');
		$('#z-days-level2-config1').removeClass('d-none');
		if(el != "timeline"){
			$('#z-days-level2-config1').addClass('d-none');	
		}
		if(!($('.z-level4-active').hasClass('d-none'))){
			$('.z-level4-active').addClass('d-none');
		}
		if(!($('.z-level5-active').hasClass('d-none'))){
			$('.z-level5-active').addClass('d-none');
		}
		$('#z-configlevelTable').removeClass('d-none');
		$('#z-configlevelTable').removeClass('z-rightSection');
		$('#z-wellSection-AfeEstimate-btn').text("next")
		$('#z-wellSection-AfeEstimate-btn').prop("onclick", null).off("click");
		var selected_subphasearray = [];
		z_configJson_data_length = z_configJson_data.length;
		if(z_configJson_data_length > 1){
            //data = JSON.parse(z_configJson_data[3].wellConfig);
            var wellStatus_index1 = z_configJson_data.findIndex(function(object_val){
                return (object_val.levelValue == "2" && object_val.isFreshLevel == false);
            });
            if(wellStatus_index1 != -1){
                wellDays_data = JSON.parse(z_configJson_data[wellStatus_index1].wellEstimateDays);
                z_selected_leveldata = JSON.parse(z_configJson_data[wellStatus_index1].wellConfig);
            }
            else{
                z_configJson_data.forEach(function(object1,indexVal1){
                    if(object1.levelValue == "2"){
                        wellDays_data = JSON.parse(object1.wellEstimateDays);
                        z_selected_leveldata = JSON.parse(object1.wellConfig);
                    }
                });
            }
           
			
			//z_days_EstimateArray = 
		}
		else{
			//data = JSON.parse(z_configJson_data[0].wellConfig);
			wellDays_data = JSON.parse(z_configJson_data[0].wellEstimateDays);
		}
		//data = z_sel_config;
		//el = z_Selected_Array;
		el = z_Aray_val;
		var z_sel_Obj = {};
		var z_subsel_Obj = {};
		var z_level2_subObj = {};
		data = z_selected_leveldata;
//		if(el.length > 0){
//			data.forEach(function (selobj, m) {
//				if(el.includes(selobj.phaseName.trim())){
//					if(check_forlevel1_Array.includes(selobj.phaseName.trim())){
//						selobj.subLevels.forEach(function (subobj, n) {
//							var check_subIndex = get_level2_Array.findIndex(function(val){
//								return val.phase == subobj.phaseName.trim();
//							});
//							if(!(check_subIndex == -1)){
//								selected_subphasearray.push(subobj);
//							}
//						});
//						selobj.subLevels = selected_subphasearray; 
//						z_sel_Obj['levelValue'] = selobj.levelValue;
//						z_sel_Obj['phaseName'] = selobj.phaseName;
//						z_sel_Obj['isSelected'] = true;
//						selobj.subLevels.forEach(function(val,index1){
//							z_subsel_Obj['levelValue'] = val.levelValue;
//							z_subsel_Obj['phaseName'] = val.phaseName;
//							z_subsel_Obj['isSelected'] = true;
//							z_subsel_Obj['totalCostItem'] = val.totalCostItem;
//							z_subsel_Obj['totalCostItemTitle'] = val.totalCostItemTitle;
//							if(val.remark !=null){
//								z_subsel_Obj['remark'] = val.remark;
//							}
//							else{
//								z_subsel_Obj['remark'] = "";
//							}
//							selobj.subLevels[index1] = z_subsel_Obj;
//							z_subsel_Obj ={};
//						});
//						
//						z_sel_Obj['subLevels'] = selobj.subLevels;
//						selobj = z_sel_Obj;
//						selected_data.push(selobj);
//						z_sel_Obj = {};
//						selected_subphasearray = [];
//					}
//					else{
//						selobj.subLevels.forEach(function (subobj, n) {
//							//if(el.includes(subobj.phaseName.trim())){
//								selected_subphasearray.push(subobj);
//							//}
//						});
//						selobj.subLevels = selected_subphasearray; 
//						z_sel_Obj['levelValue'] = selobj.levelValue;
//						z_sel_Obj['phaseName'] = selobj.phaseName;
//						z_sel_Obj['isSelected'] = true;
//						selobj.subLevels.forEach(function(val,index1){
//							z_subsel_Obj['levelValue'] = val.levelValue;
//							z_subsel_Obj['phaseName'] = val.phaseName;
//							z_subsel_Obj['isSelected'] = true;
//							z_subsel_Obj['totalCostItem'] = val.totalCostItem;
//							z_subsel_Obj['totalCostItemTitle'] = val.totalCostItemTitle;
//							if(val.remark !=null){
//								z_subsel_Obj['remark'] = val.remark;
//							}
//							selobj.subLevels[index1] = z_subsel_Obj;
//							z_subsel_Obj ={};
//						});
//						
//						z_sel_Obj['subLevels'] = selobj.subLevels;
//						selobj = z_sel_Obj;
//						selected_data.push(selobj);
//						z_sel_Obj = {};
//						selected_subphasearray = [];
//					}
//					
//				}
//			});
//			data = selected_data;
//			z_select_data2 = data;
//		}
		console.log("resss"+selected_data);
		z_selected_leveldata = data;
		$('#z-wellSection-AfeEstimate-btn').off('click').on('click', function () {
//			z_selected_leveldata = data;
			z_wellEstimate_section();
		});
	}
	else if(z_level == "Level3" && z_config == "Configuration 1"){
		if($('#z-configlevelTable').hasClass('z-rightSection')){
			$('#z-configlevelTable').removeClass('z-rightSection');
			}
		if($('#z-configlevelTable').hasClass('d-none')){
			$('#z-configlevelTable').removeClass('d-none');
			}
		if(!($('#z-days-level2-config1').hasClass('d-none'))){
			$('#z-days-level2-config1').addClass('d-none');
		}
		if(!($('#z-days-level4-config1').hasClass('d-none'))){
			$('#z-days-level4-config1').addClass('d-none');
		}
		var selected_subphasearray = [];
		if(z_configJson_data_length > 1){
            wellStatus_index = z_configJson_data.findIndex(function(object_val){
                return (object_val.levelValue == "3" && object_val.isFreshLevel == false);
            });
            if(wellStatus_index != -1){
                wellDays_data_level3 = JSON.parse(z_configJson_data[wellStatus_index].wellEstimateDays);
                z_selected_leveldata = JSON.parse(z_configJson_data[wellStatus_index].wellConfig);
            }
            else{
                z_configJson_data.forEach(function(object1,indexVal1){
                    if(object1.levelValue == "3"){
                        wellDays_data_level3 = JSON.parse(object1.wellEstimateDays);
                        z_selected_leveldata = JSON.parse(object1.wellConfig);

                    }
                });
            }
            
		}
		else{
			wellDays_data_level3 = JSON.parse(z_configJson_data[0].wellEstimateDays);
		}
		el = z_Aray_val;
		var z_sel_Obj = {};
		var z_subsel_Obj = {};
		var z_level2_subObj = {};
		data = z_selected_leveldata;
	}
	var z_no=1;
	var z_classno = 1;
	var z_phasename = "";
	var z_lineInput1 = "";
	var z_lineInput2 = "";
	var z_lineInput3 = "";
	var z_lineInput4 = "";
	var z_lineInput5 = "";
	if(z_level == "Level1"){
		if($('#z-costTable').hasClass('z-rightSection-active')){
		$('#z-costTable').removeClass('z-rightSection-active');
		}
		if(!($('#z-costTable').hasClass('z-rightSection'))){
			$('#z-costTable').addClass('z-rightSection');
			}
		if($('#z-estimate-header').hasClass('z-rightSection-active')){
			$('#z-estimate-header').removeClass('z-rightSection-active');
			}
			if($('#z-configlevelTable').hasClass('z-rightSection')){
				$('#z-configlevelTable').removeClass('z-rightSection');
				}
			if($('#z-configlevelTable').hasClass('d-none')){
				$('#z-configlevelTable').removeClass('d-none');
                }
                if(!($('#z-costTable-level3').hasClass('z-rightSection'))){
                    $('#z-costTable-level3').addClass('z-rightSection');
                    }
                
			
	data.forEach(function (obj, i) {
		console.log("datum:"+obj.phaseName);
		if(i == 0 && obj.isSelected){
			if(el != null && z_config == "Configuration 1"){
				if(el.length == 0 || el.includes("Time Dependent Costs")){
					z_phasename = obj.phaseName.split("-")[0];
				}
				else{
					z_phasename = obj.phaseName;
				}
			}
			
			else{
				z_phasename = obj.phaseName;
			}
			$('#z-costTable').append('<div class="col-12 z-phaseSection z-tableData-row">'+
		            '<div id="z-Estimate-Timecost" class="row z-borderBottom">'+
		            '<div class="col-1"></div>'+
		            '<div class="col-4 z-l-configbottom z-cost-content z-l-grey-color"><b>'+z_phasename+'</b></div>'+
		            '<div class="col-1"></div>'+
		               '<div class="col-2"></div>'+
		               '<div class="col-2"></div>'+
		            '<div class="col-2"></div></div></div>');
				obj.lineItems.forEach(function (obj1, j) {
					if(obj1.lineInput.length > 0){
						z_lineInput1 = obj1.lineInput[0];
						z_lineInput2 = obj1.lineInput[1];
						z_lineInput3 = obj1.lineInput[2];
						z_lineInput4 = obj1.lineInput[3];
						z_lineInput5 = obj1.lineInput[4];
					}
					else{
						z_lineInput1 = "";
						z_lineInput2 = "";
						z_lineInput3 = "";
						z_lineInput4 = "";
						z_lineInput5 = "";
                    }
                    if(obj1.isSelected || z_config == "Configuration 2" || z_config == "Configuration 3"){
                        $('#z-costTable').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Rigcost" class="row z-borderBottom">'+
		            '<div class="col-1 z-l-configbottom z-cost-content z-l-grey-color">'+ z_no +'</div>'+
		            '<div class="col-3 z-l-configbottom z-cost-content z-l-grey-color">'+obj1.phase+'</div>'+
					'<div class="col-3 z-l-configbottom z-l-grey-color z-report"><input id="z-rigcost1" class="w-100 z-cost-content" type="text" code="'+ (i+1) +'"name="" oninput = "z_rigCal(this)" value=""></div>'+
		            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost1" class="w-100 z-cost-content z-res'+ z_no +'" type="text" code="'+ (i+1) +'"name="" select-input="0" lineItems = "'+obj1.phase+'" onkeydown="z_removeRig(this)" oninput = "z_rigCal(this)" value="'+ z_lineInput1 +'"></div>'+
		               '<div class="col-2 z-l-configbottom z-l-grey-color z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 z-cost-content z-res'+ z_no +'" type="text" code="'+ (i+1) +'" name="" select-input="1" lineItems = "'+obj1.phase+'" value="'+ z_lineInput2 + '" onkeydown="z_removeRig(this)" oninput = "z_rigCal(this)"></div>'+
		            '<div id="z-rigcost-result" class="col-2 z-l-configbottom z-cost-content z-l-grey-color result'+ (i+1) +' z-res'+ z_no + '">'+ z_lineInput3 + '</div>'+
		               '<div class="col-2 z-l-configbottom z-l-grey-color z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 z-cost-content z-remarkBorder z-res'+ z_no + '" type="text" code="'+ (i+1) +'" name="" select-input="1" value="'+ z_lineInput4 + '"></div></div></div>');
                       z_no = z_no+1;
                    }
									
				});
				$('#z-costTable').append(' <div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Total-timeCost" class="row z-borderBottom"><div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="col-4 z-l-configbottom z-cost-content font-weight-bold z-total-colorBlue">Total '+ z_phasename + '</div>'+
			            '<div class="col-1 z-l-configbottom z-cost-content z-l-grey-color"></div>'+
			               '<div class="col-2 z-l-configbottom z-cost-content z-l-grey-color"></div>'+
			               '<div class="col-2 z-l-configbottom z-l-grey-color z-cost-content font-weight-bold z-total-colorBlue finalresult'+ z_classno + ' z-phase1 z-res'+ (z_no-1) + '">'+ z_lineInput5 +'</div>'+
			            '<div id="z-totalTimedependentCost-val" class="col-2 z-cost-content z-l-configbottom z-l-grey-color"></div></div></div>');
				z_classno = z_classno+1;
		}
		else if(i>0 && !(obj.phaseName.startsWith("Time Dependent Costs -")) && obj.isSelected){
			z_phasename = obj.phaseName;
			if(obj.lineItems.includes(" ")){
				$('#z-costTable').append("<div id='z-line-parentSection'><div class='col-12 z-phaseSection z-tableData-row'>"+
			            "<div id='z-Estimate-Timecost' class='row z-borderBottom'>"+
			            "<div class='col-1'></div>"+
			            "<div class='col-4 z-l-configbottom z-cost-content z-l-grey-color'><b>"+z_phasename+"</b></div>"+
			            "<div class='col-2 btn z-m-addPhasebtn z-l-configbottom' onclick='z_addLine_items(this,\"" +
			            z_no+
                    "\")'>Add Line items</div>" +
			               "<div class='col-2'></div>"+
			               "<div class='col-1'></div>"+
			            "<div class='col-2'></div></div></div></div>");
				
			}
			else{
				$('#z-costTable').append('<div id="z-line-parentSec"><div class="col-12 z-phaseSection z-tableData-row">'+
			            '<div id="z-Estimate-Timecost" class="row z-borderBottom">'+
			            '<div class="col-1"></div>'+
			            '<div class="col-4 z-cost-content z-l-configbottom z-l-grey-color"><b>'+z_phasename+'</b></div>'+
			            '<div class="col-2"></div>'+
			            '<div class="col-2"></div>'+
			               '<div class="col-1"></div>'+
			            '<div class="col-2"></div></div></div></div>');
				
			}
				if(obj.lineItems.length > 0){
					obj.lineItems.forEach(function (obj1, j) {
						if(!(obj1 == " ")){
							if(obj1.lineInput.length > 0){
								z_lineInput1 = obj1.lineInput[0];
								z_lineInput2 = obj1.lineInput[1];
								z_lineInput3 = obj1.lineInput[2];
								z_lineInput4 = obj1.lineInput[3];
								z_lineInput5 = obj1.lineInput[4];
							}
							else{
								z_lineInput1 = "";
								z_lineInput2 = "";
								z_lineInput3 = "";
								z_lineInput4 = "";
								z_lineInput5 = "";
							}
							$('#z-costTable').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Rigcost" class="row z-borderBottom">'+
						            '<div class="col-1 z-l-configbottom z-cost-content z-l-grey-color">'+ z_no +'</div>'+
						            '<div class="col-3 z-cost-content z-l-configbottom z-l-grey-color">'+obj1.phase+'</div>'+
														'<div class="col-3 z-l-configbottom z-l-grey-color z-report"><input id="z-rigcost1" class="w-100 z-cost-content" type="text" code="'+ (i+1) +'"name="" oninput = "z_rigCal(this)" value=""></div>'+
						            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost1" class="w-100 z-cost-content z-res'+ z_no + '" type="text" code="'+ (i+1) +'"name="" select-input="0" lineItems = "'+obj1.phase+'" onkeydown="z_removeRig(this)" oninput = "z_rigCal(this)" value="'+ z_lineInput1 + '"></div>'+
						               '<div class="col-2 z-l-configbottom z-l-grey-color z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 z-cost-content z-res' + z_no + '" type="text" code="'+ (i+1)+'" name="" select-input="1" lineItems = "'+obj1.phase+'" value="'+ z_lineInput2 + '" onkeydown="z_removeRig(this)" oninput = "z_rigCal(this)"></div>'+
						            '<div id="z-rigcost-result" class="col-2 z-cost-content z-l-configbottom z-l-grey-color result'+ (i+1) +' z-res'+ z_no +'">'+ z_lineInput3 + '</div>'+
						            '<div class="col-2 z-l-configbottom z-estimation z-estimationBlock z-l-grey-color"><input id="z-rigcost2" class="w-100 z-cost-content z-remarkBorder z-res'+ z_no + '" type="text" code="'+ (i+1) +'" name="" select-input="1" value="'+ z_lineInput4 + '"></div></div></div>');
									z_no = z_no+1;
						}
						if(j == obj.lineItems.length-1){
							$('#z-costTable').append(' <div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Total-timeCost" class="row z-borderBottom"><div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
						            '<div class="col-4 z-cost-content z-l-configbottom font-weight-bold z-total-colorBlue">Total '+ z_phasename + '</div>'+
						            '<div class="col-2 z-l-configbottom z-l-grey-color z-cost-content"></div>'+
						               '<div class="col-1 z-l-configbottom z-cost-content z-l-grey-color"></div>'+
						               '<div id="z-totalTimedependentCost-val" class="col-2 z-total-colorBlue font-weight-bold z-cost-content z-l-configbottom z-l-grey-color finalresult'+ (i+1) + ' z-phase1 z-res'+ (z_no-1) +'">'+ z_lineInput5 + '</div>'+
						               '<div class="col-2 z-l-configbottom z-cost-content z-l-grey-color"></div></div></div>');
			
						}
						
					});
									//z_classno = z_classno+1;
				}
					
			
		}
	});
	$('#z-costTable').append('<div class="col-12 z-phaseSection z-tableData-row">'+
            '<div id="z-Estimate-contigency" class="row z-borderBottom">'+
            '<div class="col-1"></div>'+
            '<div class="col-3 z-l-configbottom z-cost-content z-l-grey-color">Contingency %</div>'+
            '<div class="col-2 z-l-configbottom z-l-grey-color"></div>'+
               '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-estimate-contigencyDays-data" class="w-100 z-cost-content z-contigency" type="text" name="" value="" oninput="z_contigency(this)"></div>'+
            '<div id="z-contigencyresult" class="col-2 z-cost-content z-granttotal-padding font-weight-bold"></div>'+
            '<div class="col-2 z-l-configbottom z-l-grey-color z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 z-cost-content z-remarkBorder tax-remark" type="text" code="'+ (i+1) +'" name="" select-input="1" value=""></div>'+
               '</div></div><div class="col-12 z-phaseSection z-tableData-row">'+
            '<div id="z-Estimate-tax" class="row z-borderBottom">'+
            '<div class="col-1"></div>'+
            '<div class="col-3 z-l-configbottom z-cost-content z-l-grey-color">Taxes if Any like VAT or Government Levy %</div>'+
            '<div class="col-2 z-l-configbottom z-l-grey-color"></div>'+
               '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-estimate-levyDays-data" class="w-100 z-cost-content z-levy" type="text" name="" value="" oninput="z_levy(this)"></div>'+
            '<div id="z-total-levy" class="col-2 z-l-configbottom z-l-grey-color z-cost-content font-weight-bold z-levy-end"></div>'+
	            '<div class="col-2 z-l-configbottom z-l-grey-color z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 z-cost-content z-remarkBorder tax-remark" type="text" code="'+ (i+1) +'" name="" select-input="1" value=""></div>'+
               '</div></div>'+
              '<div class="col-12 z-phaseSection z-tableData-row">'+
            '<div id="z-Estimate-grantTotal" class="row z-borderBottom">'+
            '<div class="col-1"></div>'+
            '<div class="col-3 z-l-configbottom z-l-grey-color"></div>'+
            '<div class="col-2 z-l-configbottom z-l-grey-color"></div>'+
               '<div class="col-2 z-l-configbottom"><b>Grand Total</b></div>'+
            '<div id="z-grantTotal" class="col-2 z-granttotal-padding font-weight-bold clrRed"></div></div></div>');
	}
	else if(z_level == "Level2" && z_config == "Configuration 1"){
		if(!($('#z-costTable-level2').hasClass('d-none'))){
			$('#z-costTable-level2').addClass('d-none');
		}
		var phase_sno = "001";
		var subLevel_sno = 0;
		var result_sno;
		var sublevel_result_sno = 0;
		var sub_sn_result;
		var cost_table = ('#z-costTable-level2');
		var z_totalcost_length = 0;
		var z_totalcost_val = "";
		$('.z-days-datum').remove();
		data.forEach(function (level2_obj, i) {
		z_phasename = level2_obj.phaseName;
		if(i == 0){
		$('#z-costTable-level2').append('<div class="col-12 z-phaseSection z-subtotal-height z-tableData-row">'+
	            '<div id="z-Estimate-Timecost" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color"><b>Currency</b></div>'+
	            '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
	               '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
	               '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
	            '<div class="col-1"></div></div></div>');
		//console.log("curr:"+ z_currency);
		}
		if(level2_obj.isSelected){
			$('#z-costTable-level2').append('<div class="col-12 z-phaseSection z-subtotal-height z-tableData-row">'+
		            '<div id="z-Estimate-Timecost" class="row z-borderBottom">'+
		            '<div class="z-noWidth"></div>'+
		            '<div class="z-codeWidth z-cost-content">'+phase_sno+'</div>'+
		            '<div class="z-descWidth z-l-configbottom z-cost-content z-l-grey-color"><b>'+z_phasename+'</b></div>'+
		            '<div class="z-cost-inputWidth"></div>'+
		               '<div class="z-cost-inputWidth z-estimation z-estimationBlock"></div>'+
		               '<div class="z-cost-inputWidth"></div>'+
		            '<div class="z-cost-inputWidth z-estimation z-estimationBlock"></div></div></div>');
			subLevel_sno = 0;
			var sub_totalVal = "";
			var title_length = 0;
			var cost_item_length = 0;
			var z_cost_array = [];
			level2_obj.subLevels.forEach(function (obj1, j) {
				if(obj1.isSelected && !(obj1.phaseName.includes("user defined"))){
					result_sno = (subLevel_sno + 1).toString();
					subLevel_sno = subLevel_sno + 1;
					//subLevel_sno = (Number(subLevel_sno)+1).toString();
					if(Number(result_sno) < 10){
						result_sno = "0"+result_sno;
					}
					if(sublevel_result_sno == 0){
						sub_sn_result = "001"+"-"+result_sno;
					}
					else{
						sub_sn_result = phase_sno+"-"+result_sno;
					}
					
					var z_cost_element = "";
					var z_cost = 0;
					
					if(obj1.totalCostItem != null){
						var obj1_length = obj1.totalCostItem[0].rateValue.length;
						if(obj1_length > 0){
							title_length = obj1.totalCostItemTitle.length;
							obj1.totalCostItem.forEach(function(val,index1){
								if(val.rateValue.length == title_length+1){
									z_totalcost_length = val.rateValue.length;
									z_totalcost_val = val.rateValue[z_totalcost_length-1];
								}
								else{
									z_totalcost_length = val.rateValue.length;
									z_totalcost_val = val.rateValue[z_totalcost_length-2];
									//sub_totalVal = val.rateValue[z_totalcost_length-1];
								}
							});
						}
						else{
							z_totalcost_val = "";
						sub_totalVal = "0 $";
						}
						
						
					}
					else{
						z_totalcost_val = "";
						sub_totalVal = "0 $";
					}
					
					sub_totalVal = result_cost + " $"
					var remark = "";
					if(obj1.remark != null){
						remark = obj1.remark;
					}
                    z_cost_element = z_totalcost_val;
                    if(z_cost_element == null){
                        z_cost_element = "";
                    }
					z_cost_element =z_cost_element.replace(/,/gi,'');
					z_cost_element =z_cost_element.replace(/[^\w\s]/gi, '');
					z_cost_element =z_cost_element.trim();
					z_cost = Number(z_cost_element);
					z_cost_array.push(z_cost);
						$('#z-costTable-level2').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Rigcost" class="row z-borderBottom">'+
			            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color">'+ z_no +'</div>'+
			            '<div class="z-codeWidth z-l-configbottom z-cost-content z-l-grey-color">'+ sub_sn_result +'</div>'+
			            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color" onclick="z_costModel(this)" current-phase="2" base-level="'+ i + '">'+obj1.phaseName+'</div>'+
						'<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
			            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost1" class="w-100 level1-cost'+ z_no +'" type="text" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" cost-index="'+ z_no +'" oninput = "totalCostCalculate(this)" value=""></div>'+
			               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-estimation z-estimationBlock z-cost-content"><input id="z-rigcost2" class="w-100 level1-cost'+ z_no +'" type="text" code="'+ (i+1) +'" name="" select-input="1" indexselect="2" value="" cost-index="'+ z_no +'" oninput = "totalCostCalculate(this)"></div>'+
			               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 z-subCost-total z-subtotal'+(i+1)+' level1-cost'+z_no+'" type="text" code="'+ (i+1) +'" name="" select-input="1" value="'+ z_totalcost_val + '" cost-index="'+ z_no +'" disabled="true" base-level="'+ i + '" oninput = "z_rigCal(this)"></div>'+
			            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-estimation z-estimationBlock z-cost-content z-l-grey-color result'+ (i+1) +'"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks(this)" base-level="'+ i + '" sub-level="'+ j + '" value="'+ remark + '"></div></div></div>');
						z_no = z_no+1;
						z_totalcost_val = "";
						z_totalcost_length = 0;
				}
				
//					if(Number(subLevel_sno) > 9){
//						
//					}
//					else{
//						subLevel_sno = "0"+subLevel_sno;
//					}
				});
			if(sublevel_result_sno == 0){
				phase_sno = "0"+(Number(phase_sno) + 1).toString()+"1";	//2
			}
			else{
				if(Number(phase_sno) == 81){
				phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1"; 
				}
				else if(Number(phase_sno) >= 101){
					phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";	
				}
				else if(Number(phase_sno) <= 61){
				    phase_sno = "0"+(Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";
				}
			
			}
			sublevel_result_sno = sublevel_result_sno +1;
			//sublevel_result_sno = sublevel_result_sno+1;
			var result_cost = 0;
			var z_cost_array_length_val = z_cost_array.length;
			for(var sum1=0;sum1 < z_cost_array_length_val;sum1++){
				result_cost = result_cost + z_cost_array[sum1];
			}
			sub_totalVal = result_cost + " $";
			
				$('#z-costTable-level2').append(' <div class="col-12 z-phaseSection z-subtotal-height z-tableData-row"><div id="z-Estimate-Total-timeCost" class="row z-borderBottom"><div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
						'<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
						'<div class="z-descWidth z-l-configbottom z-cost-content z-total-colorBlue"><b>Total '+ z_phasename + '</b></div>'+
			            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
				            '<div id="z-totalTimedependentCost-val" class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-totalCost-margin finalresult'+ z_classno + ' z-phase1"'+'><input id="z-rigcost1" class="w-100 z-cost-content font-weight-bold z-total-colorBlue z-final-subcost'+(i+1)+'" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "z_rigCal(this)" disabled="true" value="'+ sub_totalVal +'"></div></div></div>');
				z_classno = z_classno+1;
		}
	
	
		
		
		
	});
		var tax_data;
		if(z_configJson_data.length > 1){
            wellStatus_index = z_configJson_data.findIndex(function(object_val){
                return (object_val.levelValue == "2" && object_val.isFreshLevel == false);
            });
            if(wellStatus_index != -1){
                tax_data = JSON.parse(z_configJson_data[wellStatus_index].taxAndLevyData);
            }
            else{
                z_configJson_data.forEach(function(object1,indexVal1){
                    if(object1.levelValue == "2"){
                        tax_data = JSON.parse(object1.taxAndLevyData);
                    }
                });
            }
            ///
            
		}
		else{
			tax_data = JSON.parse(z_configJson_data[0].taxAndLevyData);
		}
		//contigency_percent = tax_data[0][0];
		var contigency_percent,contigency_val,tax_percent,tax_val,grant_total_val,contigency_remark_val,tax_remark_val;
		if(tax_data.length > 0){
			contigency_percent = tax_data[1][0];
			contigency_val = tax_data[1][1];
			tax_percent = tax_data[0][0];
			tax_val = tax_data[0][1];
			grant_total_val = tax_data[2];
			contigency_remark_val = tax_data[3];
			tax_remark_val = tax_data[4];
		}
		else{
			contigency_percent = "";
			contigency_val = "";
			tax_percent = "";
			tax_val = "";
			grant_total_val = "";
			contigency_remark_val = "";
			tax_remark_val = "";
		}
		$('#z-costTable-level2').append('<div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-contigency" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color z-cost-content">Contingency %</div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom z-cost-content z-l-grey-color"><input id="z-estimate-contigencyDays-data" class="w-100 z-calCost z-contigency" type="text" name="" value="'+contigency_percent+'" oninput="z_totalCostCalulate(this)"></div>'+
	               '<div id="z-contigency-value" class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content">'+contigency_val+'</div>'+
	            '<div id="z-rigcost-contigency-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-estimation z-estimationBlock z-l-grey-color"><input id="z-rigcost1" class="w-100 z-taxData z-remarkBorder" type="text" name="" select-input="0" base-level="contigency" oninput = "saveRemarks(this)" value="'+contigency_remark_val+'"></div>'+
	            '</div></div><div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-tax" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color z-cost-content">Taxes if Any like VAT or Government Levy %</div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom z-cost-content z-l-grey-color"><input id="z-estimate-lvg-data" class="w-100 z-calCost z-levy" type="text" name="" value="'+tax_percent+'" oninput="z_totalCostCalulate(this)"></div>'+
	            '<div id="z-tax-value" class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content">'+tax_val+'</div>'+
		            '<div id="z-rigcost-taxresult" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-l-grey-color z-estimation z-estimationBlock"><input id="z-rigcost1" class="w-100 z-remarkBorder z-taxData" type="text" name="" select-input="0" base-level="tax" oninput = "saveRemarks(this)" value="'+tax_remark_val+'"></div>'+
	               '</div></div>'+
	              '<div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-grantTotal" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom"><b>Grand Total</b></div>'+
	            '<div id="z-grantTotal" class="z-cost-inputWidth font-weight-bold z-granttotal-padding clrRed">'+grant_total_val+'</div></div></div>');
		var z_line_input1 = "";
		var z_line_input2 = "";
		var z_line_input3 = "";
		var z_line_input4 = "";
		//$('.z-option-days1').remove();
		// if(z_configJson_data.length < 2){
		// 	//data = JSON.parse(z_configJson_data[0].wellConfig);
		// 	wellDays_data = wellDays_data[1];
		// 	//z_days_EstimateArray = 
		// }

	/* 	if(wellDays_data.length == 2){
            wellDays_data = wellDays_data[1];
        } */
		
		wellDays_data.forEach(function(obj,i){
			if(obj.subPhase.length > 0){
				$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData-row z-indexDay'+(i+1)+' z-days-datum z-baseDay z-days-level'+ (i+1) +' z-level1-day'+ (i+1) + ' hide-data">'+
			            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
			            '<div class="col-1 z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
			            '<div class="col-5 z-l-configbottom z-l-grey-color z-config-content z-days-font" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)"><b>'+obj.phase+'</b><div class="z-l-closeBtn z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
			            '<div class="col-3 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
			}
			else{
				if(obj.lineInput != null){
					z_line_input1 = obj.lineInput[0];
					z_line_input2 = obj.lineInput[1];
				}
			$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData-row z-indexDay'+(i+1)+' z-baseDay z-days-datum z-days-level'+ (i+1) + ' z-level1-day'+ (i+1) + ' hide-data">'+
			            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
			            '<div class="col-1 z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
			            '<div class="col-5 z-l-configbottom z-l-grey-color z-config-content z-days-font" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)">'+obj.phase+'<div class="z-l-closeBtn z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
			            '<div class="col-3 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="col-1 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-wellTesting" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+'" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
		               '<div class="col-2 z-l-configbottom z-l-grey-color z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
			}
			var x= '.z-indexDay'+(i+1);
			obj.subPhase.forEach(function(obj1,j){
				if(obj1.lineInput.length > 0 ){
					z_line_input1 = obj1.lineInput[0];
					if(obj1.lineInput.length > 1){
						z_line_input2 = obj1.lineInput[1];	
					}
					
				}
			
				if(j == 0){
							$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData z-days-datum z-days-level'+ (i+1) + '">'+
			            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
		            '<div class="col-1 z-l-configbottom z-l-grey-color" serial-number="true">'+(i+1)+'</div>'+
			            '<div class="col-5 z-l-configbottom z-l-grey-color d-none"></div>'+
			            '<div class="col-5 z-l-configbottom z-l-grey-color z-tableData-row z-days-font" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj1.phase+'<div class="z-l-closeBtn z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
			            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +'" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
			               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
				}
				else{
							$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData z-days-datum z-days-level'+ (i+1) + '">'+
			            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
		            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="col-5 z-l-configbottom z-l-grey-color d-none"></div>'+
			            '<div class="col-5 z-l-configbottom z-l-grey-color z-tableData-row z-days-font" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj1.phase+'<div class="z-l-closeBtn z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
			            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +'" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
			               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
				}
		
			});
			obj.totalPhase.forEach(function(obj2,k){
				if(obj2.lineInput.length > 0){
					z_line_input1 = obj2.lineInput[0];
				}
				if(obj2.lineInput.length > 1 && k==1){
					$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) +'">'+
				            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
					            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
					            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue z-days-font"><'+obj2.phase+'</div>'+
					            '<div class="col-2 z-l-configbottom z-totaldayscal z-l-grey-color z-total-check z-clear-text'+(i+1)+' z-totalEstimate-days'+ (i+1) +'">'+ z_line_input1 + '</div>'+
					               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
				}
				else if(obj2.lineInput.length > 1 && k==0){
					$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) +'">'+
				            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
					            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
					            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue z-days-font">'+obj2.phase+'</div>'+
					            '<div class="col-2 z-l-configbottom z-l-grey-color z-total-check z-clear-text'+(i+1)+' z-totalEstimate-days'+ (i+1) +'">'+ z_line_input1 + '</div>'+
					               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
				}
				else{
					$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) +'">'+
				            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
					            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
					            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue z-days-font">'+obj2.phase+'</div>'+
					            '<div class="col-2 z-l-configbottom z-totaldayscal z-l-grey-color z-total-check z-clear-text'+(i+1)+' z-totalEstimate-days'+ (i+1) +'">'+ z_line_input1 + '</div>'+
					               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
				}
				
			});
	            	
		});
		$('#z-estimateDay21').append('<div class="col-12 z-tableData-row z-days-datum">'+
	            '<div id="z-totalcost3" class="row z-borderBottom">'+
	            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue"><b>TOTAL DAYS</b></div>'+
	            '<div id="z-costGrant-total" class="col-2 z-l-configbottom z-l-grey-color"></div>'+
	            '<div id="z-estimate-grantTotal" class="col-1 z-l-configbottom z-l-grey-color"></div>'+
	               '<div id="z-allDays1" class="col-2 font-weight-bold z-l-configbottom z-total-colorBlue z-l-grey-color"></div></div></div>');
		$('#z-estimateDay21').append('<div class="col-12 z-tableData-row z-days-datum">'+
	            '<div id="z-totalcost3" class="row">'+
	            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="col-5 z-l-configbottom"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_deleteLineItems(this)">Delete Line Items</div></div>'+
	            '<div id="z-costGrant-total" class="col-4 z-l-configbottom z-l-grey-color"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_deleteLineItems(this)">Delete Line Items</div><div class="btn btn-link" onclick="z_activities_fn(this)">Back to Phases</div></div>'+
	            '<div id="z-estimate-grantTotal" class="col-1 z-l-configbottom z-l-grey-color"></div>'+
	               '<div id="z-all" class="col-1 z-l-configbottom z-l-grey-color"></div></div></div>');
		
	}
	//for level3 Estimation and TimeLine
	else if(z_level == "Level3" && z_config == "Configuration 1"){

		if($('.z-level2-active').hasClass('d-none')){
			$('.z-level2-active').removeClass('d-none');
		}
		if(!$('.z-level1active').hasClass('d-none')){
			$('.z-level1active').addClass('d-none');
		}
		if(!$('.z-level4-active').hasClass('d-none')){
			$('.z-level4-active').addClass('d-none');
		}
		
		if(!($('#z-costTable-level2').hasClass('d-none'))){
			$('#z-costTable-level2').addClass('d-none');
		}
		if(!($('#z-costTable-level4').hasClass('d-none'))){
			$('#z-costTable-level4').addClass('d-none');
		}
		if($('#z-costTable').hasClass('z-rightSection-active')){
			$('#z-costTable').removeClass('z-rightSection-active');
		}
		if($('#z-costTable-level3').hasClass('d-none')){
			$('#z-costTable-level3').removeClass('d-none');
        }
        $('#z-costTable-level3').addClass('z-rightSection-active');
		//$('.z-level1active').addClass('d-none');
		
		var phase_sno = "001";
		var subLevel_sno = 0;
		var result_sno;
		var sublevel_result_sno = 0;
		var sub_sn_result;
		var cost_table = ('#z-costTable-level3');
		var z_totalcost_length = 0;
		var z_totalcost_val = "";
		$('.z-days-datum').remove();
		data.forEach(function (level2_obj, i) {
		z_phasename = level2_obj.phaseName;
		if(i == 0){
		$('#z-costTable-level3').append('<div class="col-12 z-phaseSection z-subtotal-height z-tableData-row">'+
	            '<div id="z-Estimate-Timecost" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color"><b>Currency</b></div>'+
	            '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
	               '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
	               '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
	            '<div class="col-1"></div></div></div>');
		//console.log("curr:"+ z_currency);
		}
		if(level2_obj.isSelected){
			$('#z-costTable-level3').append('<div class="col-12 z-phaseSection z-subtotal-height z-tableData-row">'+
		            '<div id="z-Estimate-Timecost" class="row z-borderBottom">'+
		            '<div class="z-noWidth"></div>'+
		            '<div class="z-codeWidth z-cost-content">'+phase_sno+'</div>'+
		            '<div class="z-descWidth z-l-configbottom z-cost-content z-l-grey-color"><b>'+z_phasename+'</b></div>'+
					'<div class="z-cost-inputWidth"></div>'+
		               '<div class="z-cost-inputWidth z-estimation z-estimationBlock"></div>'+
		               '<div class="z-cost-inputWidth"></div>'+
		            '<div class="z-cost-inputWidth z-estimation z-estimationBlock"></div></div></div>');
			subLevel_sno = 0;
			var sub_totalVal = "";
			var title_length = 0;
			var cost_item_length = 0;
			var z_cost_array = [];
			level2_obj.subLevels.forEach(function (obj1, j) {
				if(obj1.isSelected && !(obj1.phaseName.includes("user defined"))){
					result_sno = (subLevel_sno + 1).toString();
					subLevel_sno = subLevel_sno + 1;
					//subLevel_sno = (Number(subLevel_sno)+1).toString();
					if(Number(result_sno) < 10){
						result_sno = "0"+result_sno;
					}
					if(sublevel_result_sno == 0){
						sub_sn_result = "001"+"-"+result_sno;
					}
					else{
						sub_sn_result = phase_sno+"-"+result_sno;
					}
					
					var z_cost_element = "";
					var z_cost = 0;
					if(obj1.totalCostItem != null){
						
						title_length = obj1.totalCostItemTitle.length;
						z_totalcost_val = "";
						sub_totalVal = "0 $";
						if(obj1.totalCostItem[0].subPhase != null){
							if(obj1.totalCostItem[0].subPhase.length > 0){
								if(obj1.totalCostItem[0].subPhase[0].rateValue != null){
									if(obj1.totalCostItem[0].subPhase[0].rateValue.length > 0){
										if(obj1.totalCostItem[0].subPhase[0].rateValue.length == title_length+1){
											z_totalcost_val = obj1.totalCostItem[0].subPhase[0].rateValue[obj1.totalCostItem[0].subPhase[0].rateValue.length-1];
										}
										else{
											z_totalcost_val = obj1.totalCostItem[0].subPhase[0].rateValue[obj1.totalCostItem[0].subPhase[0].rateValue.length-2];
										}
									}
								}
								
							}
							else{
								if(obj1.totalCostItem[0].rateValue != null){
									if(obj1.totalCostItem[0].rateValue.length > 0){
										if(obj1.totalCostItem[0].rateValue.length == title_length+1){
											z_totalcost_val = obj1.totalCostItem[0].rateValue[obj1.totalCostItem[0].rateValue.length-1];
										}
										else{
											z_totalcost_val = obj1.totalCostItem[0].rateValue[obj1.totalCostItem[0].rateValue.length-2];
										}
										
									}
									}
							
							}
						}
						else{
							if(obj1.totalCostItem[0].rateValue != null){
								if(obj1.totalCostItem[0].rateValue.length > 0){
									if(obj1.totalCostItem[0].rateValue.length == title_length+1){
										z_totalcost_val = obj1.totalCostItem[0].rateValue[obj1.totalCostItem[0].rateValue.length-1];
									}
									else{
										z_totalcost_val = obj1.totalCostItem[0].rateValue[obj1.totalCostItem[0].rateValue.length-2];
									}
									
								}
								}
						}
						
							//obj1.totalCostItem.forEach(function(val,index1){
								
//								if(val.subPhase.length > 0){
//									if(val.subPhase[val.subPhase.length-1].rateValue.length == title_length+1){
//										z_totalcost_length = val.subPhase[val.subPhase.length-1].rateValue.length;
//										z_totalcost_val = val.val.subPhase[val.subPhase.length-1].rateValue[z_totalcost_length-1];
//									}
//									else{
//										z_totalcost_length = val.subPhase[val.subPhase.length-1].rateValue.length;
//										z_totalcost_val = val.subPhase[val.subPhase.length-1].rateValue[z_totalcost_length-2];
//										//sub_totalVal = val.rateValue[z_totalcost_length-1];
//									}	
//								}
//								else{
//									if(val.rateValue.length == title_length+1){
//										z_totalcost_length = val.rateValue.length;
//										z_totalcost_val = val.rateValue[z_totalcost_length-1];
//									}
//									else{
//										z_totalcost_length = val.rateValue.length;
//										z_totalcost_val = val.rateValue[z_totalcost_length-2];
//										//sub_totalVal = val.rateValue[z_totalcost_length-1];
//									}
//								}
//								
							//});
						
					}
					else{
						z_totalcost_val = "";
						sub_totalVal = "0 $";
					}
					
					sub_totalVal = result_cost + " $"
					var remark = "";
					if(obj1.remark != null){
						remark = obj1.remark;
                    }
                    if(z_totalcost_val == null){
                        z_totalcost_val = "";
                    }
                    if(z_totalcost_val == undefined){
                        z_totalcost_val = "";
                    }
                    z_cost_element = z_totalcost_val;
                    if(z_cost_element == null){
                        z_cost_element = "";
                        z_cost = 0;
                    }
                    else{
                        z_cost_element =z_cost_element.replace(/,/gi,'');
                        z_cost_element =z_cost_element.replace(/[^\w\s]/gi, '');
                        z_cost_element =z_cost_element.trim();
                        z_cost = Number(z_cost_element);
                    }
				
					z_cost_array.push(z_cost);
					var cost_array1,cost_array2;
					if(obj1.totalCost != null){
						if(obj1.totalCost.length > 0){
							cost_array1 = obj1.totalCost[0];
							cost_array2 = obj1.totalCost[1];
						}
						else{
							cost_array1 = "";
							cost_array2 = "";
						}
					}
					
					else{
						cost_array1 = "";
						cost_array2 = "";
					}
						$('#z-costTable-level3').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate" class="row z-borderBottom">'+
			            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color">'+ z_no +'</div>'+
			            '<div class="z-codeWidth z-l-configbottom z-cost-content z-l-grey-color z-costlevel2">'+ sub_sn_result +'</div>'+
			            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color font-weight-bold" onclick="z_costModel(this)" current-phase="2" current-level="'+ j +'"  base-level="'+ i + '">'+obj1.phaseName+'</div>'+
						'<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
			            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost1" class="w-100 level1-cost'+ z_no +'" type="text" cost-index="'+ z_no +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" value="" oninput="totalCostCalculate(this)"></div>'+
			               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 level1-cost'+ z_no +'" type="text" cost-index="'+ z_no +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="2" value="" oninput="totalCostCalculate(this)"></div>'+
			               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 level1-cost'+ z_no +' z-subCost-total z-subtotal'+(i+1)+'" type="text" code="'+ (i+1) +'" name="" select-input="1" level1-phaseName ="'+z_phasename+'" value="'+ z_totalcost_val + '" disabled="true" base-level="'+ i + '" level2-phaseName="'+obj1.phaseName+'" oninput = "z_rigCal(this)"></div>'+
			            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-l-grey-color result'+ (i+1) +' z-estimation z-estimationBlock"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks(this)" base-level="'+ i + '" sub-level="'+ j + '" value="'+ remark + '"></div></div></div>');
						z_no = z_no+1;
						//z_totalcost_val = "";
						z_totalcost_length = 0;
						var zlevel3_sno = 1;
						var z_result_level3;
						var level3_no = "";
						var total_cost3_sum  = 0;
						var total_cost3 = 0;
						
						if(obj1.subLevels != null){
							obj1.subLevels.forEach(function(val3,index3){
								if(val3.isSelected){
									if(Number(zlevel3_sno) < 10){
										z_result_level3 = sub_sn_result+"-"+"0"+zlevel3_sno;
									}
									
									else{
										z_result_level3 = sub_sn_result+"-"+zlevel3_sno;
									}
									if(val3.totalCost != null){
										if(val3.totalCost.length > 0){
											cost_array1 = val3.totalCost[0];
											cost_array2 = val3.totalCost[1];
										}
										else{
											cost_array1 = "";
											cost_array2 = "";
										}
									}
									
									else{
										cost_array1 = "";
										cost_array2 = "";
									}
									total_cost3 = Number(cost_array1.replace(/,/g,"").split("$")[0].trim());
									total_cost3_sum = total_cost3_sum + total_cost3;
									$('#z-costTable-level3').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Rigcost" class="row z-borderBottom">'+
								            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color"></div>'+
								            '<div class="z-codeWidth z-l-configbottom z-cost-content z-l-grey-color z-costlevel2">'+ z_result_level3 +'</div>'+
								            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color" onclick="z_costModel(this)" current-phase="3" level2-name="'+obj1.phaseName+'" base-level="'+ i + '">'+val3.phaseName+'</div>'+
											'<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
								            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost1" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" value="" oninput="totalCostCalculate(this)"></div>'+
								               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'" name="" select-input="1" indexselect="2" value="" oninput="totalCostCalculate(this)"></div>'+
								               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 z-subCost-total level2-cost'+ z_result_level3 +' z-subtotal'+(i+1)+'" type="text" phase2="'+obj1.phaseName + '" code="'+ (i+1) +'" name="" select-input="1" value="'+ cost_array1 + '" disabled="true" level3Name="'+val3.phaseName+'" base-level="'+ i + '" oninput = "z_rigCal(this)"></div>'+
								            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-l-grey-color result'+ (i+1) +' z-estimation z-estimationBlock"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks_level3(this)" base-level="'+ i + '" sub-level="'+ j + '" level3-index="'+ index3 + '" value="'+ remark + '"></div></div></div>');
                                    zlevel3_sno = zlevel3_sno+1;
                                    //level4
										if(val3.subLevels != null){
											var level4_sno1 = 0;
											var level4_sno2 = 65;
											var level4_result_sno;
											val3.subLevels.forEach(function(valObj4,indexLevel4){
												if(valObj4.remark != null){
													remark = valObj4.remark;
												}
												else{
													remark = "";
												}
                                                level4_result_sno = z_result_level3 + "-" + level4_sno1 + "&#" +level4_sno2;
                                                if(obj1.totalCostItem[index3] != null){
                                                if(obj1.totalCostItem[index3].subPhase[indexLevel4] != null){
                                                    if(obj1.totalCostItem[index3].subPhase[indexLevel4].rateValue != null){
                                                        if(obj1.totalCostItem[index3].subPhase[indexLevel4].rateValue.length > 0){
                                                            if(obj1.totalCostItem[index3].subPhase[indexLevel4].rateValue.length < 2){
                                                                cost4 = obj1.totalCostItem[index3].subPhase[indexLevel4].rateValue[0];
                                                            }
                                                            else{
                                                                cost4 = obj1.totalCostItem[index3].subPhase[indexLevel4].rateValue[obj1.totalCostItem[index3].subPhase[indexLevel4].rateValue.length-2];
                                                            }
                                                            
                                                        }
                                                        else{
                                                            cost4 = "0 $";
                                                        }
                                                    }
                                                    else{
                                                        cost4 = "0 $";
                                                    }
                                                }
                                                else{
                                                    cost4 = "0 $";
                                                }
                                            }
                                            else{
                                                cost4 = "0 $";
                                            }

												if(valObj4.totalCost != null){
													if(valObj4.totalCost.length > 0){
														costValue1 = valObj4.totalCost[0];
														costValue2 = valObj4.totalCost[1];
													}
													else{
														costValue1 = "";
														costValue2 = "";
													}
												}
												
												else{
													costValue1 = "";
													costValue2 = "";
												}
												if(valObj4.isSelected){
													$('#z-costTable-level3').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Rigcost" class="row z-borderBottom">'+
												            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color"></div>'+
												            '<div class="z-codeWidth-estimate-level4-estimate-level4 z-l-configbottom z-cost-content z-l-grey-color">'+ level4_result_sno +'</div>'+
												            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color" current-phase="4" level2-name="'+obj1.phaseName+'" level3-name="'+val3.phaseName+'" onclick="z_costModel(this)" base-level="'+ i + '">'+valObj4.phaseName+'</div>'+
															'<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
												            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost1" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" value="'+costValue1+'" oninput="totalCostCalculate(this)"></div>'+
												               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'" name="" select-input="1" indexselect="2" value="'+costValue2+'" oninput="totalCostCalculate(this)"></div>'+
												               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 level2-cost'+ z_result_level3 +'" type="text" baseLevel="'+ obj1.phaseName +'" phaseName="'+valObj4.phaseName+'" phase3="'+ val3.phaseName +'" code="'+ (i+1) +'" name="" select-input="1" value="'+ cost4 + '" disabled="true" base-level="'+ i + '" oninput = "z_rigCal(this)"></div>'+
												            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-l-grey-color result'+ (i+1) +' z-estimation z-estimationBlock"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks_level4(this)" base-level="'+ i + '" sub-level="'+ j + '" level3-index="'+ index3 + '" level4-index="'+ indexLevel4 +'" value="'+ remark + '"></div></div></div>');
												}
								
												level4_sno1 = level4_sno1 + 1;
												if(level4_sno1 >= 10){
													level4_sno1 = 0;
													level4_sno2 = level4_sno2 + 1;
												}
											});
										}
								}
							});
							if(obj1.subLevels.length > 0){
								$('[base-level="'+i+'"][level2-phasename="'+obj1.phaseName+'"]').val(total_cost3_sum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " $");
							}
							else{
								if(obj1.totalCost.length > 0){
								
								$('[base-level="'+i+'"][level2-phasename="'+obj1.phaseName+'"]').val(obj1.totalCost[0]);
							}
							else{
								
                               $('[base-level="'+i+'"][level2-phasename="'+obj1.phaseName+'"]').val(total_cost3_sum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " $");
							}
							}
						}
						else{
							if(obj1.totalCost.length > 0){
								
								$('[base-level="'+i+'"][level2-phasename="'+obj1.phaseName+'"]').val(obj1.totalCost[0]);
							}
							else{
								
                               $('[base-level="'+i+'"][level2-phasename="'+obj1.phaseName+'"]').val(total_cost3_sum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " $");
							}
						}
				}
				
				
//					if(Number(subLevel_sno) > 9){
//						
//					}
//					else{
//						subLevel_sno = "0"+subLevel_sno;
//					}
				});
			if(sublevel_result_sno == 0){
				phase_sno = "0"+(Number(phase_sno) + 1).toString()+"1";	//2
			}
			else{
				if(Number(phase_sno) == 81){
				phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1"; 
				}
				else if(Number(phase_sno) >= 101){
					phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";	
				}
				else if(Number(phase_sno) <= 61){
				    phase_sno = "0"+(Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";
				}
			
			}
			sublevel_result_sno = sublevel_result_sno +1;
			//sublevel_result_sno = sublevel_result_sno+1;
			var result_cost = 0;
			var z_cost_array_length = z_cost_array.length;
			for(var sum1=0;sum1 < z_cost_array_length;sum1++){
				result_cost = result_cost + z_cost_array[sum1];
			}
			var level2CostElement = $('[level1-phaseName ="'+z_phasename+'"]');
			var level2CostElement_length = level2CostElement.length;
				var testVal;
				var testSum = 0;
				for(var test1 = 0;test1 < level2CostElement_length;test1++){
					testVal = level2CostElement[test1].value;
					testVal == null ? testVal = "0 $" : testVal = testVal;
					testVal = testVal.replace(/,/g,"").split("$")[0].trim();
					testSum = testSum + Number(testVal);
				}
			sub_totalVal = testSum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " $";
			
				$('#z-costTable-level3').append(' <div class="col-12 z-phaseSection z-subtotal-height z-tableData-row"><div id="z-Estimate-Total-timeCost" class="row z-borderBottom"><div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
						'<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
						'<div class="z-descWidth z-l-configbottom z-cost-content z-total-colorBlue"><b>Total '+ z_phasename + '</b></div>'+
			            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
				            '<div id="z-totalTimedependentCost-val" class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-totalCost-margin finalresult'+ z_classno + ' z-phase1"'+'><input id="z-rigcost1" class="w-100 z-cost-content font-weight-bold z-total-colorBlue z-final-subcost'+(i+1)+'" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "z_rigCal(this)" disabled="true" value="'+ sub_totalVal +'"></div></div></div>');
				z_classno = z_classno+1;
		}
	
	
		
		
		
	});
		var tax_data,inclineData2;
		if(z_configJson_data.length > 1){
            wellStatus_index = z_configJson_data.findIndex(function(object_val){
                return (object_val.levelValue == "3" && object_val.isFreshLevel == false);
            });
            if(wellStatus_index != -1){
                tax_data = JSON.parse(z_configJson_data[wellStatus_index].taxAndLevyData);
                inclineData2 = JSON.parse(z_configJson_data[wellStatus_index].wellInclineDays);
            }
            else{
                z_configJson_data.forEach(function(object1,indexVal1){
                    if(object1.levelValue == "3"){
                        tax_data = JSON.parse(object1.taxAndLevyData);
                        inclineData2 = JSON.parse(object1.wellInclineDays);
                    }
                });
            }
           
		}
		else{
			tax_data = JSON.parse(z_configJson_data[0].taxAndLevyData);
			inclineData2 = JSON.parse(z_configJson_data[0].wellInclineDays);
		}
		//contigency_percent = tax_data[0][0];
	/* 	var inclineElement3 = $('.z-incline-data-level2');
		var inclineElement3_length = inclineElement3.length;
		var inclineElement2_length = inclineData2.length;
		if(inclineElement3 != null && inclineData2 != null){
			if(inclineElement3_length > 0 && inclineElement2_length > 0){
				for(var inc2=0;inc2 < inclineElement3_length;inc2++){
					inclineElement3[inc2].value = inclineData2[inc2];
				}
			}
		} */
		var contigency_percent,contigency_val,tax_percent,tax_val,grant_total_val,contigency_remark_val,tax_remark_val;
		var tax_data_length = tax_data.length;
		if(tax_data_length > 0){
			contigency_percent = tax_data[1][0];
			contigency_val = tax_data[1][1];
			tax_percent = tax_data[0][0];
			tax_val = tax_data[0][1];
			grant_total_val = tax_data[2];
			contigency_remark_val = tax_data[3];
			tax_remark_val = tax_data[4];
		}
		else{
			contigency_percent = "";
			contigency_val = "";
			tax_percent = "";
			tax_val = "";
			grant_total_val = "";
			contigency_remark_val = "";
			tax_remark_val = "";
		}
		$('#z-costTable-level3').append('<div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-contigency" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color z-cost-content">Contingency %</div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom z-cost-content z-l-grey-color"><input id="z-estimate-contigencyDays-data" class="w-100 z-calCost z-contigency" type="text" name="" value="'+contigency_percent+'" oninput="z_totalCostCalulate(this)"></div>'+
	               '<div id="z-contigency-value" class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content">'+contigency_val+'</div>'+
	            '<div id="z-rigcost-contigency-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-l-grey-color z-estimation z-estimationBlock"><input id="z-rigcost1" class="w-100 z-taxData z-remarkBorder" type="text" name="" select-input="0" base-level="contigency" oninput = "saveRemarks(this)" value="'+contigency_remark_val+'"></div>'+
	            '</div></div><div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-tax" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color z-cost-content">Taxes if Any like VAT or Government Levy %</div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom z-cost-content z-l-grey-color"><input id="z-estimate-lvg-data" class="w-100 z-calCost z-levy" type="text" name="" value="'+tax_percent+'" oninput="z_totalCostCalulate(this)"></div>'+
	            '<div id="z-tax-value" class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content">'+tax_val+'</div>'+
		            '<div id="z-rigcost-taxresult" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-l-grey-color z-estimation z-estimationBlock"><input id="z-rigcost1" class="w-100 z-remarkBorder z-taxData" type="text" name="" select-input="0" base-level="tax" oninput = "saveRemarks(this)" value="'+tax_remark_val+'"></div>'+
	               '</div></div>'+
	              '<div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-grantTotal" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom"><b>Grand Total</b></div>'+
	            '<div id="z-grantTotal" class="z-cost-inputWidth font-weight-bold z-granttotal-padding clrRed">'+grant_total_val+'</div></div></div>');
		var z_line_input1 = "";
		var z_line_input2 = "";
		var z_line_input3 = "";
		var z_line_input4 = "";
		//$('.z-option-days1').remove();
		if(z_configJson_data.length < 2){
			//data = JSON.parse(z_configJson_data[0].wellConfig);
			if(typeof(wellDays_data_level3) == "string"){
				wellDays_data_level3 = JSON.parse(wellDays_data_level3.substr(2));
				if(typeof(wellDays_data_level3) == "string"){
					wellDays_data_level3 = JSON.parse(wellDays_data_level3);
					if(typeof(wellDays_data_level3) == "string"){
						wellDays_data_level3 = JSON.parse(wellDays_data_level3);
						if(typeof(wellDays_data_level3) == "string"){
							wellDays_data_level3 = JSON.parse(wellDays_data_level3);
						}
					}
				}
			}
			//z_days_EstimateArray = 
		}
	
//		var daysObj3 = {};
//		wellDays_data_level3.forEach(function(val_day,val_index){
//			if(val_day.isSubmitted == null){
//				daysObj3['phase'] = val_day.phase;
//				daysObj3['lineInput'] = val_day.lineInput;
//				daysObj3['subPhase'] = val_day.subPhase;
//				daysObj3['totalPhase'] = val_day.totalPhase;
//				daysObj3['isSubmitted'] = false;
//				wellDays_data_level3[val_index] = daysObj3;
//				daysObj3 = {};
//			}
//		});
		
        var grant_selectedObj = {};
        var total_input;
        z_grant_totalKey = [];
		wellDays_data_level3.forEach(function(obj,i){
            //for level1
            
            
            if(obj.isSubmitted != null){
                if(obj.isSubmitted){
                    grant_selectedObj.phase = obj.phase;
                    total_input = obj.totalPhase[0].lineInput[0];
                    grant_selectedObj.day = Number(total_input.split("Days")[0].trim());
                    grant_selectedObj.indexVal = i+1;
                    z_grant_totalKey.push(grant_selectedObj);
                    grant_selectedObj = {};
                }
            }
			if(obj.subPhase.length > 0){
				$('#z-estimateDay31').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' z-days-datum d-none z-baseDay z-days-level'+ (i+1) +' z-level1-day'+ (i+1) + ' hide-data">'+
			            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
			            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
			            '<div class="d-flex z-daysWidth1 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)"><b>'+obj.phase+'</b><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
			            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
			}
			else{
				if(obj.lineInput != null){
					z_line_input1 = obj.lineInput[0];
					z_line_input2 = obj.lineInput[1];
				}
			$('#z-estimateDay31').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' d-none z-baseDay z-days-datum z-days-level'+ (i+1) + ' z-level1-day'+ (i+1) + ' hide-data">'+
			            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
			            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
			            '<div class="d-flex z-daysWidth1 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)">'+obj.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
			            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-wellTesting" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+'" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
		
			}
			//for level2
			obj.subPhase.forEach(function(obj1,j){
				//for level2 -- it has total phase value for level 2
				if(obj1.lineInput.length > 0 ){
					z_line_input1 = obj1.lineInput[0];
					if(obj1.lineInput.length > 1){
						z_line_input2 = obj1.lineInput[1];	
					}
					
				}
				//it has level 2 entry
				$('#z-estimateDay31').append('<div class="col-12 z-tableData-row d-none z-days-datum z-days-level'+ (i+1) + ' hide-data">'+
			            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
		            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth1 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="d-flex z-daysWidth2 z-l-configbottom z-l-grey-color z-config-content z-cost-content d-flex" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj1.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
			            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');
				//for level 3 
				if(obj1.subPhase.length > 0){
					obj1.subPhase.forEach(function(obj2,k){
								if(obj2.lineInput.length > 0 ){
									z_line_input_level31 = obj2.lineInput[0];
									if(obj2.lineInput.length > 1){
										z_line_input_level32 = obj2.lineInput[1];	
									}
									
								}
								if(j == 0 && k == 0){
									$('#z-estimateDay31').append('<div class="col-12 d-none z-tableData z-days-datum z-days-level'+ (i+1) + '">'+
							            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
						            '<div class="col-1 z-l-configbottom z-l-grey-color z-serial-number" serial-number="true">'+(i+1)+'</div>'+
							            '<div class="z-daysWidth1 z-l-configbottom z-l-grey-color d-none"></div>'+
							            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color d-none"></div>'+
							            '<div class="d-flex col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content d-flex" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
							            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level31 + '"></div>'+
							               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input_level32 + '</div></div></div>');
					
								}
								else{
									$('#z-estimateDay31').append('<div class="col-12 d-none z-tableData z-days-datum z-days-level'+ (i+1) + '">'+
							            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
						            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth1 z-l-configbottom z-l-grey-color d-none"></div>'+
							            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color d-none"></div>'+
							            '<div class="d-flex col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content d-flex" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
							            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level31 + '"></div>'+
							               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input_level32 + '</div></div></div>');
					
								}
								
							
					});
				}
				//level2 total phase
				$('#z-estimateDay31').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) + ' hide-data">'+
			            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
		            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth1 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color">Total Days</div>'+
			            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color z-config-content z-clear-text'+(i+1)+' z-level2-totaldays'+ (i+1) +' z-cost-content">'+ z_line_input1 +'</div>'+
			            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');

			});
			//level1 total days
			obj.totalPhase.forEach(function(obj4,m){
				if(obj4.lineInput.length > 0){
					z_line_total_input1 = obj4.lineInput[0];
				}
				$('#z-estimateDay31').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) +'">'+
			            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
				            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
				            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue z-cost-content">'+obj4.phase+'</div>'+
				            '<div class="z-daysWidth2 z-l-configbottom z-total-colorBlue z-days-font d-none"></div>'+
				            '<div class="z-daysWidth2 z-l-configbottom text-right z-total-colorBlue z-cost-content d-none"></div>'+
				            '<div class="col-2 z-l-configbottom z-totaldayscal z-l-grey-color z-total-check z-cost-content z-clear-text'+(i+1)+' z-totalEstimate-days'+ (i+1) +'">'+ z_line_total_input1 + '</div>'+
				               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
			});
		});
		$('#z-estimateDay31').append('<div class="col-12 z-tableData-row z-days-datum">'+
	            '<div id="z-totalcost3" class="row z-borderBottom">'+
	            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="z-daysWidth1 z-l-configbottom text-right z-total-colorBlue"><b>TOTAL DAYS</b></div>'+
	            '<div id="z-costGrant-total" class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
	            '<div id="z-estimate-grantTotal" class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div id="z-allDays1" class="z-daysWidth2 font-weight-bold z-l-configbottom z-total-colorBlue z-l-grey-color"></div></div></div>');
		$('#z-estimateDay31').append('<div class="col-12 z-tableData-row z-days-datum">'+
	            '<div id="z-totalcost3" class="row">'+
	            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="z-daysWidth1 z-l-configbottom"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_deleteLineItems(this)">Delete Line Items</div></div>'+
	            '<div id="z-costGrant-total" class="z-daysWidth1 z-l-configbottom z-l-grey-color"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_deleteLineItems(this)">Delete Line Items</div><div class="btn btn-link" onclick="z_activities_fn(this)">Back to Phases</div></div>'+
	            '<div id="z-estimate-grantTotal" class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div id="z-all" class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
		
	
	}
	//level3 end
	//level 4
	else if(z_level == "Level4" && z_config == "Configuration 1"){
		$('#z-configlevelTable').removeClass('d-none');
		$('#z-configlevelTable').removeClass('z-rightSection');

		if($('.z-level4-active').hasClass('d-none')){
			$('.z-level4-active').removeClass('d-none');
		}
		
		if(!($('#z-costTable-level2').hasClass('d-none'))){
			$('#z-costTable-level2').addClass('d-none');
		}
		if(!($('#z-costTable-level3').hasClass('d-none'))){
			$('#z-costTable-level3').addClass('d-none');
		}
		if($('#z-costTable').hasClass('z-rightSection-active')){
			$('#z-costTable').removeClass('z-rightSection-active');
		}
		if($('#z-costTable-level4').hasClass('d-none')){
			$('#z-costTable-level4').removeClass('d-none');
		}
		if(!($('#z-days-level2-config1').hasClass('d-none'))){
			$('#z-days-level2-config1').addClass('d-none');
		}
		if(!($('#z-days-level3-config1').hasClass('d-none'))){
			$('#z-days-level3-config1').addClass('d-none');
		}
        $('.z-level2-active').removeClass('d-none');
        $('.z-level2-active').addClass('d-none');
		$('.z-level1active').addClass('d-none');
//		if($('#z-days-level4-config1').hasClass('d-none')){
//			$('#z-days-level4-config1').removeClass('d-none');
//		}
		var phase_sno = "001";
		var subLevel_sno = 0;
		var result_sno;
		var sublevel_result_sno = 0;
		var sub_sn_result;
		var cost_table = ('#z-costTable-level4');
		var z_totalcost_length = 0;
		var z_totalcost_val = "";
		var costArray4,costValue1,costValue2;
		var cost4,cost3;
		$('.z-days-datum').remove();
		var tax_data,z_line_input_level42,z_line_input_level41;
		z_configJson_data_length = z_configJson_data.length;
		if(z_configJson_data_length > 1){
            wellStatus_index = z_configJson_data.findIndex(function(object_val){
                return (object_val.levelValue == "4" && object_val.isFreshLevel == false);
            });
            if(wellStatus_index != -1){
                tax_data = JSON.parse(z_configJson_data[wellStatus_index].taxAndLevyData);
            }
            else{
                z_configJson_data.forEach(function(object1,indexVal1){
                    if(object1.levelValue == "4"){
                        tax_data = JSON.parse(object1.taxAndLevyData);
                    }
                });
            }
          
            
		}
		else{
			tax_data = JSON.parse(z_configJson_data[0].taxAndLevyData);
		}
		//contigency_percent = tax_data[0][0];
		var contigency_percent,contigency_val,tax_percent,tax_val,grant_total_val,contigency_remark_val,tax_remark_val;
		var tax_data_length = tax_data.length;
		if(tax_data_length > 0){
			contigency_percent = tax_data[1][0];
			contigency_val = tax_data[1][1];
			tax_percent = tax_data[0][0];
			tax_val = tax_data[0][1];
			grant_total_val = tax_data[2];
			contigency_remark_val = tax_data[3];
			tax_remark_val = tax_data[4];
		}
		else{
			contigency_percent = "";
			contigency_val = "";
			tax_percent = "";
			tax_val = "";
			grant_total_val = "";
			contigency_remark_val = "";
			tax_remark_val = "";
		}
		if(z_configJson_data_length < 2){
			z_selected_leveldata = JSON.parse(z_configJson_data[0].wellConfig);
		}
		else{
            wellStatus_index = z_configJson_data.findIndex(function(val_obj){
                return (val_obj.levelValue == "4" && val_obj.isFreshLevel == false);
            });
            if(wellStatus_index != -1){
                z_selected_leveldata = JSON.parse(z_configJson_data[wellStatus_index].wellConfig);
            }
            else{
                z_configJson_data.forEach(function(object_4){
                    if(object_4.levelValue == "4"){
                        z_selected_leveldata = JSON.parse(object_4.wellConfig);
                    }
                });
            }
            ///
            
		}
		//start
		data = z_selected_leveldata;
		data.forEach(function (level2_obj, i) {
			z_phasename = level2_obj.phaseName;
			if(i == 0){
			$('#z-costTable-level4').append('<div class="col-12 z-phaseSection z-subtotal-height z-tableData-row">'+
		            '<div id="z-Estimate-Timecost" class="row z-borderBottom">'+
		            '<div class="z-noWidth"></div>'+
		            '<div class="z-codeWidth-estimate-level4"></div>'+
		            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color"><b>Currency</b></div>'+
		            '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
		               '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
		               '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
		            '<div class="col-1"></div></div></div>');
			//console.log("curr:"+ z_currency);
			}
            //level1
            if(level2_obj.isSelected){
				$('#z-costTable-level4').append('<div class="col-12 z-phaseSection z-subtotal-height z-tableData-row">'+
			            '<div id="z-Estimate-Timecost" class="row z-borderBottom">'+
			            '<div class="z-noWidth"></div>'+
			            '<div class="z-codeWidth-estimate-level4 z-cost-content">'+phase_sno+'</div>'+
			            '<div class="z-descWidth z-l-configbottom z-cost-content z-l-grey-color"><b>'+z_phasename+'</b></div>'+
			            '<div class="z-cost-inputWidth"></div>'+
			               '<div class="z-cost-inputWidth z-estimation z-estimationBlock"></div>'+
			               '<div class="z-cost-inputWidth"></div>'+
			            '<div class="z-cost-inputWidth z-estimation z-estimationBlock"></div></div></div>');
				subLevel_sno = 0;
				var sub_totalVal = "";
				var title_length = 0;
				var cost_item_length = 0;
				var z_cost_array = [];
				var subphasse_length1;
				var subphasse_length2;
				var subphasse_length3;
				var subphasse_length4;
                //level2
                level2_obj.subLevels.forEach(function (obj1, j) {
					if(obj1.isSelected && !(obj1.phaseName.includes("user defined"))){
						result_sno = (subLevel_sno + 1).toString();
						subLevel_sno = subLevel_sno + 1;
						//subLevel_sno = (Number(subLevel_sno)+1).toString();
						if(Number(result_sno) < 10){
							result_sno = "0"+result_sno;
						}
						if(sublevel_result_sno == 0){
							sub_sn_result = "001"+"-"+result_sno;
						}
						else{
							sub_sn_result = phase_sno+"-"+result_sno;
						}
						
						var z_cost_element = "";
						var z_cost = 0;
						if(obj1.totalCostItem != null){
							
							title_length = obj1.totalCostItemTitle.length;
							z_totalcost_val = "";
							sub_totalVal = "0 $";
							if(obj1.totalCostItem[0].subPhase != null){
								subphasse_length1 = obj1.totalCostItem[0].subPhase.length;
								if(subphasse_length1 > 0){
									if(obj1.totalCostItem[0].subPhase[0].rateValue != null){
										if(obj1.totalCostItem[0].subPhase[0].subPhase != null){
                                            subphasse_length2 = obj1.totalCostItem[0].subPhase[0].subPhase[0].rateValue.length;
											if(subphasse_length2 > 0){
                                                
												if(subphasse_length2 == title_length+1){
                                                    z_totalcost_val = obj1.totalCostItem[0].subPhase[0].subPhase[0].rateValue[subphasse_length2-1];
                                                }
                                                else{
                                                    z_totalcost_val = obj1.totalCostItem[0].subPhase[0].subPhase[0].rateValue[subphasse_length2-2];
                                                }
                                            }
                                        }
                                        else{
                                            subphasse_length3 = obj1.totalCostItem[0].subPhase[0].rateValue.length;
											if(subphasse_length3 > 0){
                                                if(subphasse_length3 == title_length+1){
                                                    z_totalcost_val = obj1.totalCostItem[0].subPhase[0].rateValue[subphasse_length3-1];
                                                }
                                                else{
                                                    z_totalcost_val = obj1.totalCostItem[0].subPhase[0].rateValue[subphasse_length3-2];
                                                }
                                            }
                                        }
									}
									
								}
								else{
									if(obj1.totalCostItem[0].rateValue != null){
										subphasse_length4 = obj1.totalCostItem[0].rateValue.length;
										if(subphasse_length4 > 0){
											if(subphasse_length4 == title_length+1){
												z_totalcost_val = obj1.totalCostItem[0].rateValue[subphasse_length4-1];
											}
											else{
												z_totalcost_val = obj1.totalCostItem[0].rateValue[subphasse_length4-2];
											}
										}
										}
								
								}
							}
							else{
								if(obj1.totalCostItem[0].rateValue != null){
									subphasse_length4 = obj1.totalCostItem[0].rateValue.length;
									if(subphasse_length4 > 0){
										if(subphasse_length4 == title_length+1){
											z_totalcost_val = obj1.totalCostItem[0].rateValue[subphasse_length4-1];
										}
										else{
											z_totalcost_val = obj1.totalCostItem[0].rateValue[subphasse_length4-2];
										}
									}
									}
							}
							
								//obj1.totalCostItem.forEach(function(val,index1){
									
//									if(val.subPhase.length > 0){
//										if(val.subPhase[val.subPhase.length-1].rateValue.length == title_length+1){
//											z_totalcost_length = val.subPhase[val.subPhase.length-1].rateValue.length;
//											z_totalcost_val = val.val.subPhase[val.subPhase.length-1].rateValue[z_totalcost_length-1];
//										}
//										else{
//											z_totalcost_length = val.subPhase[val.subPhase.length-1].rateValue.length;
//											z_totalcost_val = val.subPhase[val.subPhase.length-1].rateValue[z_totalcost_length-2];
//											//sub_totalVal = val.rateValue[z_totalcost_length-1];
//										}	
//									}
//									else{
//										if(val.rateValue.length == title_length+1){
//											z_totalcost_length = val.rateValue.length;
//											z_totalcost_val = val.rateValue[z_totalcost_length-1];
//										}
//										else{
//											z_totalcost_length = val.rateValue.length;
//											z_totalcost_val = val.rateValue[z_totalcost_length-2];
//											//sub_totalVal = val.rateValue[z_totalcost_length-1];
//										}
//									}
//									
								//});
							
						}
						else{
							z_totalcost_val = "";
							sub_totalVal = "0 $";
						}
						if(obj1.totalCost != null){
							var totalCost_length = obj1.totalCost.length;
							if(totalCost_length > 0){
								costArray4 = obj1.totalCost;
								costValue1 = costArray4[0];
								costValue2 = costArray4[1];
							}
							else{
								costValue1 = "";
								costValue2 = "";
							}
						}
						
						else{
							costValue1 = "";
							costValue2 = "";
						}
						
						sub_totalVal = result_cost + " $"
						var remark = "";
						if(obj1.remark != null){
							remark = obj1.remark;
                        }
                       
                        z_cost_element = z_totalcost_val;
                        if(z_cost_element == null){
                            z_cost_element = "";
                            z_cost = 0;
                        }
                        else{
                            z_cost_element =z_cost_element.replace(/,/gi,'');
						z_cost_element =z_cost_element.replace(/[^\w\s]/gi, '');
						z_cost_element =z_cost_element.trim();
						z_cost = Number(z_cost_element);
                        }
						
						z_cost_array.push(z_cost);
							$('#z-costTable-level4').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate" class="row z-borderBottom">'+
				            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color">'+ z_no +'</div>'+
				            '<div class="z-codeWidth-estimate-level4 z-l-configbottom z-cost-content z-l-grey-color">'+ sub_sn_result +'</div>'+
				            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color font-weight-bold" current-phase="2" current-level="'+ j + '" base-level="'+ i + '"  onclick="z_costModel(this)">'+obj1.phaseName+'</div>'+
							'<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
				            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost1" class="w-100 level1-cost'+ z_no +'" type="text" cost-index="'+ z_no +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" value="" oninput="totalCostCalculate(this)"></div>'+
				               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 level1-cost'+ z_no +'" type="text" cost-index="'+ z_no +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="2" value="" oninput="totalCostCalculate(this)"></div>'+
				               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 level1-cost'+ z_no +' z-subCost-total z-subtotal'+(i+1)+'" type="text" code="'+ (i+1) +'" name="" select-input="1" level1-phaseName ="'+z_phasename+'" value="'+ z_totalcost_val + '" disabled="true" level2-phaseName="'+obj1.phaseName+'" base-level="'+ i + '" oninput = "z_rigCal(this)"></div>'+
				            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-l-grey-color result'+ (i+1) +' z-estimation z-estimationBlock"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks(this)" base-level="'+ i + '" sub-level="'+ j + '" value="'+ remark + '"></div></div></div>');
							z_no = z_no+1;
							//z_totalcost_val = "";
							z_totalcost_length = 0;
							var zlevel3_sno = 1;
							var z_result_level3;
							var level3_no = "";
							var total_cost4_sum  = 0;
								var total_cost4 = 0;
                            //level3
                            if(obj1.subLevels != null){
								obj1.subLevels.forEach(function(val3,index3){
									if(val3.isSelected){
										if(Number(zlevel3_sno) < 10){
											z_result_level3 = sub_sn_result+"-"+"0"+zlevel3_sno;
										}
										
										else{
											z_result_level3 = sub_sn_result+"-"+zlevel3_sno;
										}
										if(val3.remark != null){
											remark = val3.remark;
										}
										else{
											remark = "";
										}
										if(val3.totalCost != null){
											var totalCost_length3 = val3.totalCost.length;
											if(totalCost_length3 > 0){
												costValue1 = val3.totalCost[0];
												costValue2 = val3.totalCost[1];
										}
											else{
												costValue1 = "";
												costValue2 = "";
											}
										}
										
										else{
											costValue1 = "";
											costValue2 = "";
                                        }
										
                                        if(obj1.totalCostItem[index3] != null){
                                            if(obj1.totalCostItem[index3].rateValue != null){
                                                var rate_length_value = obj1.totalCostItem[index3].rateValue.length;
												if(rate_length_value > 0){
                                                    if(rate_length_value < 2){
                                                        cost3 = obj1.totalCostItem[index3].rateValue[0];
                                                    }
                                                    else{
                                                        cost3 = obj1.totalCostItem[index3].rateValue[rate_length_value-2];
                                                    }
                                                    
                                                }
                                                else{
                                                    cost3 = "0 $";
                                                }
                                            }
                                            else{
                                                cost3 = "0 $";
                                            }
                                        }
                                        else{
                                            cost3 = "0 $";
                                        }
										if(cost3 == null){
											cost3 = "0 $";
										}
										total_cost4 = Number(cost3.replace(/,/g,"").split("$")[0].trim());
                                        total_cost4_sum = total_cost4_sum + total_cost4;
										$('#z-costTable-level4').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Rigcost" class="row z-borderBottom">'+
									            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color"></div>'+
									            '<div class="z-codeWidth-estimate-level4 z-l-configbottom z-cost-content z-l-grey-color">'+ z_result_level3 +'</div>'+
									            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color" current-level="'+ j + '" current-phase="3" level2-name="'+obj1.phaseName+'" onclick="z_costModel(this)" base-level="'+ i + '">'+val3.phaseName+'</div>'+
												'<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
									            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost1" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" value="'+costValue1+'" oninput="totalCostCalculate(this)"></div>'+
									               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'" name="" select-input="1" indexselect="2" value="'+costValue2+'" oninput="totalCostCalculate(this)"></div>'+
									               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 z-subCost-total level2-cost'+ z_result_level3 +' z-subtotal'+(i+1)+'"type="text" phase2="'+ obj1.phaseName +'" phaseName="'+val3.phaseName+'" level3name="'+val3.phaseName+'" code="'+ (i+1) +'" name="" select-input="1" value="'+ cost3 + '" disabled="true" base-level="'+ i + '" oninput = "z_rigCal(this)"></div>'+
									            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-estimation z-estimationBlock z-l-grey-color result'+ (i+1) +'"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks_level3(this)" base-level="'+ i + '" sub-level="'+ j + '" level3-index="'+ index3 + '" value="'+ remark + '"></div></div></div>');
										zlevel3_sno = zlevel3_sno+1;
										//level4
										if(val3.subLevels != null){
											var level4_sno1 = 0;
											var level4_sno2 = 65;
											var level4_result_sno;
											var z_sublevels_rate_length1;
											val3.subLevels.forEach(function(valObj4,indexLevel4){
												if(valObj4.remark != null){
													remark = valObj4.remark;
												}
												else{
													remark = "";
												}
                                                level4_result_sno = z_result_level3 + "-" + level4_sno1 + "&#" +level4_sno2;
                                                if(obj1.totalCostItem[index3] != null){
                                                if(obj1.totalCostItem[index3].subPhase[indexLevel4] != null){
                                                    if(obj1.totalCostItem[index3].subPhase[indexLevel4].rateValue != null){
                                                        z_sublevels_rate_length1 = obj1.totalCostItem[index3].subPhase[indexLevel4].rateValue.length;
														if(z_sublevels_rate_length1 > 0){
                                                            if(z_sublevels_rate_length1 < 2){
                                                                cost4 = obj1.totalCostItem[index3].subPhase[indexLevel4].rateValue[0];
                                                            }
                                                            else{
                                                                cost4 = obj1.totalCostItem[index3].subPhase[indexLevel4].rateValue[z_sublevels_rate_length1-2];
                                                            }
                                                            
                                                        }
                                                        else{
                                                            cost4 = "0 $";
                                                        }
                                                    }
                                                    else{
                                                        cost4 = "0 $";
                                                    }
                                                }
                                                else{
                                                    cost4 = "0 $";
                                                }
                                            }
                                            else{
                                                cost4 = "0 $";
                                            }

												if(valObj4.totalCost != null){
													var z_totalCost4_length = valObj4.totalCost.length;
													if(z_totalCost4_length > 0){
														costValue1 = valObj4.totalCost[0];
														costValue2 = valObj4.totalCost[1];
													}
													else{
														costValue1 = "";
														costValue2 = "";
													}
												}
												
												else{
													costValue1 = "";
													costValue2 = "";
												}
												if(valObj4.isSelected){
													$('#z-costTable-level4').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Rigcost" class="row z-borderBottom">'+
												            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color"></div>'+
												            '<div class="z-codeWidth-estimate-level4-estimate-level4 z-l-configbottom z-cost-content z-l-grey-color">'+ level4_result_sno +'</div>'+
												            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color" current-phase="4" current-level="'+ j + '" level2-name="'+obj1.phaseName+'" level3-name="'+val3.phaseName+'" onclick="z_costModel(this)" base-level="'+ i + '">'+valObj4.phaseName+'</div>'+
															'<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
												            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-level4-margin"><input id="z-rigcost1" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" value="'+costValue1+'" oninput="totalCostCalculate(this)"></div>'+
												               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'" name="" select-input="1" indexselect="2" value="'+costValue2+'" oninput="totalCostCalculate(this)"></div>'+
												               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 level2-cost'+ z_result_level3 +'" type="text" baseLevel="'+ obj1.phaseName +'" phaseName="'+valObj4.phaseName+'" phase3="'+ val3.phaseName +'" code="'+ (i+1) +'" name="" select-input="1" value="'+ cost4 + '" disabled="true" base-level="'+ i + '" oninput = "z_rigCal(this)"></div>'+
												            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-estimation z-estimationBlock z-cost-content z-l-grey-color result'+ (i+1) +'"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks_level4(this)" base-level="'+ i + '" sub-level="'+ j + '" level3-index="'+ index3 + '" level4-index="'+ indexLevel4 +'" value="'+ remark + '"></div></div></div>');
												}
								
												level4_sno1 = level4_sno1 + 1;
												if(level4_sno1 >= 10){
													level4_sno1 = 0;
													level4_sno2 = level4_sno2 + 1;
												}
											});
										}
									}
								});
								var subLevels_length = obj1.subLevels.length;
								if(subLevels_length > 0){
								$('[base-level="'+i+'"][level2-phasename="'+obj1.phaseName+'"]').val(total_cost4_sum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " $");
							}
							else{
								var z_totalCost_length1 = obj1.totalCost.length;
								if(z_totalCost_length1 > 0){
								
								$('[base-level="'+i+'"][level2-phasename="'+obj1.phaseName+'"]').val(obj1.totalCost[0]);
							}
							else{
								
                               $('[base-level="'+i+'"][level2-phasename="'+obj1.phaseName+'"]').val(total_cost4_sum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " $");
							}
							}
							}
							else{
							var z_totalCost_length1val = obj1.totalCost.length;
							if(z_totalCost_length1val > 0){
								
								$('[base-level="'+i+'"][level2-phasename="'+obj1.phaseName+'"]').val(obj1.totalCost[0]);
							}
							else{
								
                               $('[base-level="'+i+'"][level2-phasename="'+obj1.phaseName+'"]').val(total_cost4_sum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " $");
							}
						}
					}
					
//						if(Number(subLevel_sno) > 9){
//							
//						}
//						else{
//							subLevel_sno = "0"+subLevel_sno;
//						}
					});
				if(sublevel_result_sno == 0){
					phase_sno = "0"+(Number(phase_sno) + 1).toString()+"1";	//2
				}
				else{
					if(Number(phase_sno) == 81){
					phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1"; 
					}
					else if(Number(phase_sno) >= 101){
						phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";	
					}
					else if(Number(phase_sno) <= 61){
					    phase_sno = "0"+(Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";
					}
				
				}
				sublevel_result_sno = sublevel_result_sno +1;
				//sublevel_result_sno = sublevel_result_sno+1;
				var result_cost = 0;
				var z_cost_array_length = z_cost_array.length;
				for(var sum1=0;sum1 < z_cost_array_length;sum1++){
					result_cost = result_cost + z_cost_array[sum1];
				}
					var level2CostElement = $('[level1-phaseName ="'+z_phasename+'"]');
				var testVal;
				var testSum = 0;
				var level2CostElement_length = level2CostElement.length;
				for(var test1 = 0;test1 < level2CostElement_length;test1++){
					testVal = level2CostElement[test1].value;
					testVal == null ? testVal = "0 $" : testVal = testVal;
					testVal = testVal.replace(/,/g,"").split("$")[0].trim();
					testSum = testSum + Number(testVal);
				}
				sub_totalVal = testSum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " $";
				
					$('#z-costTable-level4').append(' <div class="col-12 z-phaseSection z-subtotal-height z-tableData-row"><div id="z-Estimate-Total-timeCost" class="row z-borderBottom"><div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
							'<div class="z-codeWidth-estimate-level4 z-l-configbottom z-l-grey-color"></div>'+
							'<div class="z-descWidth z-l-configbottom z-cost-content z-total-colorBlue"><b>Total '+ z_phasename + '</b></div>'+
				            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
				               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
					            '<div id="z-totalTimedependentCost-val" class="z-cost-inputWidth z-l-configbottom z-l-grey-color finalresult'+ z_classno + ' z-phase1"'+'><input id="z-rigcost1" class="w-100 z-cost-content font-weight-bold z-total-colorBlue z-final-subcost'+(i+1)+'" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "z_rigCal(this)" disabled="true" value="'+ sub_totalVal +'"></div></div></div>');
					z_classno = z_classno+1;
			}
		
		
			
			
			
		});
		var tax_data,inclineData;
		if(z_configJson_data.length > 1){
            wellStatus_index = z_configJson_data.findIndex(function(tax_obj){
                return (tax_obj.levelValue == "4" && tax_obj.isFreshLevel == false);
            });
            if(wellStatus_index != -1){
                tax_data = JSON.parse(z_configJson_data[wellStatus_index].taxAndLevyData);
                inclineData = JSON.parse(z_configJson_data[wellStatus_index].wellInclineDays);
            }
            else{
                z_configJson_data.forEach(function(tax_Object4){
                    if(tax_Object4.levelValue == "4"){
                        tax_data = JSON.parse(tax_Object4.taxAndLevyData);
                inclineData = JSON.parse(tax_Object4.wellInclineDays);
                    }
                });
            }
            
            
		}
		else{
			tax_data = JSON.parse(z_configJson_data[0].taxAndLevyData);
			inclineData = JSON.parse(z_configJson_data[0].wellInclineDays);
		}
		var inclineElement = $('.z-incline-data-level4');
		
		if(inclineElement != null && inclineData != null){
			var inclineElement_length = inclineElement.length;
		var inclineData_length = inclineData.length;
			if(inclineElement_length > 0 && inclineData_length > 0){
				for(var inc=0;inc < inclineElement_length;inc++){
					inclineElement[inc].value = inclineData[inc];
				}
			}
		}
		//contigency_percent = tax_data[0][0];
		var contigency_percent,contigency_val,tax_percent,tax_val,grant_total_val,contigency_remark_val,tax_remark_val;
		var tax_length = tax_data.length;
		if(tax_length > 0){
			contigency_percent = tax_data[1][0];
			contigency_val = tax_data[1][1];
			tax_percent = tax_data[0][0];
			tax_val = tax_data[0][1];
			grant_total_val = tax_data[2];
			contigency_remark_val = tax_data[3];
			tax_remark_val = tax_data[4];
		}
		else{
			contigency_percent = "";
			contigency_val = "";
			tax_percent = "";
			tax_val = "";
			grant_total_val = "";
			contigency_remark_val = "";
			tax_remark_val = "";
		}	//end
		$('#z-costTable-level4').append('<div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-contigency" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color z-cost-content">Contingency %</div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom z-cost-content z-l-grey-color"><input id="z-estimate-contigencyDays-data" class="w-100 z-calCost z-contigency" type="text" name="" value="'+contigency_percent+'" oninput="z_totalCostCalulate(this)"></div>'+
	               '<div id="z-contigency-value" class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content">'+contigency_val+'</div>'+
	            '<div id="z-rigcost-contigency-result" class="z-cost-remarkWidth z-l-configbottom z-estimation z-estimationBlock z-cost-content z-l-grey-color"><input id="z-rigcost1" class="w-100 z-taxData z-remarkBorder" type="text" name="" select-input="0" base-level="contigency" oninput = "saveRemarks(this)" value="'+contigency_remark_val+'"></div>'+
	            '</div></div><div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-tax" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color z-cost-content">Taxes if Any like VAT or Government Levy %</div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom z-cost-content z-l-grey-color"><input id="z-estimate-lvg-data" class="w-100 z-calCost z-levy" type="text" name="" value="'+tax_percent+'" oninput="z_totalCostCalulate(this)"></div>'+
	            '<div id="z-tax-value" class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content">'+tax_val+'</div>'+
		            '<div id="z-rigcost-taxresult" class="z-cost-remarkWidth z-l-configbottom z-estimation z-estimationBlock z-cost-content z-l-grey-color"><input id="z-rigcost1" class="w-100 z-remarkBorder z-taxData" type="text" name="" select-input="0" base-level="tax" oninput = "saveRemarks(this)" value="'+tax_remark_val+'"></div>'+
	               '</div></div>'+
	              '<div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-grantTotal" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom"><b>Grand Total</b></div>'+
	            '<div id="z-grantTotal" class="z-cost-inputWidth font-weight-bold z-granttotal-padding clrRed">'+grant_total_val+'</div></div></div>');
		var z_line_input1 = "";
		var z_line_input2 = "";
		var z_line_input3 = "";
		var z_line_input4 = "";
		var z_totalline_input4 = "";
		//$('.z-option-days1').remove();
		if(z_configJson_data.length < 2){
			wellDays_data_level4 = JSON.parse(z_configJson_data[0].wellEstimateDays);
		}
		else{
            wellStatus_index = z_configJson_data.findIndex(function(daysVal_obj){
                return (daysVal_obj.levelValue == "4" && daysVal_obj.isFreshLevel == false);
            });
            if(wellStatus_index != -1){
                wellDays_data_level4 = JSON.parse(z_configJson_data[wellStatus_index].wellEstimateDays);
            }
            else{
                z_configJson_data.forEach(function(level4_object){
                    if(level4_object.levelValue == "4"){
                        wellDays_data_level4 = JSON.parse(level4_object.wellEstimateDays);
                    }
                });
            }
           
            
		}
		
//		var daysObj3 = {};
//		wellDays_data_level4.forEach(function(val_day,val_index){
//			if(val_day.isSubmitted == null){
//				daysObj3['phase'] = val_day.phase;
//				daysObj3['lineInput'] = val_day.lineInput;
//				daysObj3['subPhase'] = val_day.subPhase;
//				daysObj3['totalPhase'] = val_day.totalPhase;
//				daysObj3['isSubmitted'] = false;
//				wellDays_data_level4[val_index] = daysObj3;
//				daysObj3 = {};
//			}
//		});
	
        z_grant_totalKey = [];
        var grant_selectedObj1 = {};
        var total_input1;
		var subphase_length1;
		var subphase_length2;
		var subphase_length3;
		var subphase_length4;
		var subphase_lineInputlength1;
        var subphase_lineInputlength2;
        var subphase_lineInputlength3;
        var subphase_lineInputlength4;
        wellDays_data_level4.forEach(function(obj,i){
			//for level1
             
            if(obj.isSubmitted != null){
                if(obj.isSubmitted){
                    grant_selectedObj1.phase = obj.phase;
                    total_input1 = obj.totalPhase[0].lineInput[0];
                    grant_selectedObj1.day = Number(total_input1.split("Days")[0].trim());
                    grant_selectedObj1.indexVal = i+1;
                    z_grant_totalKey.push(grant_selectedObj1);
                    grant_selectedObj1 = {};
                }
            }
            if(obj.subPhase !=null){
			subphase_length1 = obj.subPhase.length;
			if(subphase_length1 > 0){
				$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' z-days-datum z-baseDay z-days-level'+ (i+1) +' z-level1-day'+ (i+1) + ' d-none hide-data">'+
			            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
			            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
			            '<div class="d-flex z-daysWidth1-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)"><b>'+obj.phase+'</b><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
			}
			else{
				if(obj.lineInput != null){
					z_line_input1 = obj.lineInput[0];
					z_line_input2 = obj.lineInput[1];
				}
			$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' z-baseDay z-days-datum z-days-level'+ (i+1) + ' z-level1-day'+ (i+1) + ' d-none hide-data">'+
			            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
			            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
			            '<div class="d-flex z-daysWidth1-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)">'+obj.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-days'+ (i+1) +' z-clear-input'+(i+1)+' z-wellTesting" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+'" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
		
			}
			}
			else{
				if(obj.lineInput != null){
					z_line_input1 = obj.lineInput[0];
					z_line_input2 = obj.lineInput[1];
				}
			$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' z-baseDay z-days-datum z-days-level'+ (i+1) + ' z-level1-day'+ (i+1) + ' d-none hide-data">'+
			            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
			            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
			            '<div class="d-flex z-daysWidth1-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)">'+obj.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-days'+ (i+1) +' z-clear-input'+(i+1)+' z-wellTesting" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+'" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
		
			}
			//for level2
			if(obj.subPhase != null){
			obj.subPhase.forEach(function(obj1,j){
				//for level2 -- it has total phase value for level 2
				subphase_lineInputlength1 = obj1.lineInput.length;
				if(subphase_lineInputlength1 > 0 ){
					z_line_input1 = obj1.lineInput[0];
					if(obj1.lineInput.length > 1){
						z_line_input2 = obj1.lineInput[1];	
					}
					
				}
				//it has level 2 entry
				$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none hide-data">'+
			            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
		            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj1.phase+'<div class="z-l-closeBtn-level4-days2 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4-days2" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');
				//for level 3 
				if(obj1.subPhase != null){
				subphase_length1 = obj1.subPhase.length;
				if(subphase_length1 > 0){
					obj1.subPhase.forEach(function(obj2,k){
								subphase_lineInputlength2 = obj2.lineInput.length;
								if(subphase_lineInputlength2 > 0 ){
									z_line_input_level31 = obj2.lineInput[0];
									if(subphase_lineInputlength2 > 1){
										z_line_input_level32 = obj2.lineInput[1];	
									}
									
								}
								if(obj2.subPhase != null){
									$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none hide-data">'+
								            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
							            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-closeBtn-level4-days3 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days3" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
								               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+'">'+ z_line_input_level32 + '</div></div></div>');
								
								}
								else{
									if(j == 0 && k == 0){
										$('#z-estimateDay41').append('<div class="col-12 z-tableData z-days-datum z-days-level'+ (i+1) + ' d-none">'+
								            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
							            '<div class="col-1 z-l-configbottom z-l-grey-color z-serial-number-level4">'+(i+1)+'</div>'+
								            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-closeBtn-level4-days3 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days3" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level31 + '"></div>'+
								               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input_level32 + '</div></div></div>');
								
									}
									else{
										$('#z-estimateDay41').append('<div class="col-12 z-tableData z-days-datum z-days-level'+ (i+1) + ' d-none">'+
								            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
							            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-closeBtn-level4-days3 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days3" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level31 + '"></div>'+
								               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input_level32 + '</div></div></div>');
								
									}
									
								}
									//for level 4
								if(obj2.subPhase != null){
								subphase_length2 = obj2.subPhase.length;
								if(subphase_length2 > 0){
									obj2.subPhase.forEach(function(obj4,k4){
										subphase_lineInputlength3 = obj4.lineInput.length;
										if(subphase_lineInputlength3 > 0 ){
											z_line_input_level41 = obj4.lineInput[0];
											if(obj4.lineInput.length > 1){
												z_line_input_level42 = obj4.lineInput[1];	
											}
											
										}
										level4_code = i + ""+ j + ""+ k;
										if(j == 0 && k == 0 && k4 == 0){
											$('#z-estimateDay41').append('<div class="col-12 z-tableData z-days-datum z-days-level'+ (i+1) + ' d-none">'+
									            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
								            '<div class="col-1 z-l-configbottom z-l-grey-color z-serial-number-level4">'+(i+1)+'</div>'+
									            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
									            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
									            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
									            '<div class="col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj4.phase+'<div class="z-l-closeBtn-level4-days4 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days4" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="4" level="4">+</div></div>'+
									            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +' z-level4'+level4_code+'" level4-code="'+level4_code+'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level41 + '"></div>'+
									               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input_level42 + '</div></div></div>');
								
										}
										else{
											$('#z-estimateDay41').append('<div class="col-12 z-tableData z-days-datum z-days-level'+ (i+1) + ' d-none">'+
									            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
								            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
									            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
									            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
									            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
									            '<div class="col-5 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj4.phase+'<div class="z-l-closeBtn-level4-days4 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days4" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="4" level="4">+</div></div>'+
									            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +' z-level4'+level4_code+'" level4-code="'+level4_code+'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level41 + '"></div>'+
									               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input_level42 + '</div></div></div>');
								
										}
										
									});
								}
								//level3 total phase
								if(obj2.lineInput != null){
									z_totalline_input4 = obj2.lineInput[0];
								}
								$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none hide-data">'+
							            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
						            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color">Total Days</div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-clear-text'+(i+1)+' z-level4-totaldays'+ (i+1) +' z-cost-content z-level4-total'+level4_code+'" level4-code="'+level4_code+'">'+ z_totalline_input4 +'</div>'+
							            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
							               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');
								}
								

					
							
					});
				}
			}
				//level2 total phase
				$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none hide-data">'+
			            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
		            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color">Total Days</div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-clear-text'+(i+1)+' z-level2-totaldays'+ (i+1) +' z-cost-content">'+ z_line_input1 +'</div>'+
			            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');

			});
		}
			//level1 total days
			obj.totalPhase.forEach(function(obj4,m){
				subphase_lineInputlength4 = obj4.lineInput.length;
				if(subphase_lineInputlength4 > 0){
					z_line_total_input1 = obj4.lineInput[0];
				}
				$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) +' d-none">'+
			            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
				            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
				            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue z-cost-content">'+obj4.phase+'</div>'+
				            '<div class="z-daysWidth2-level4 z-l-configbottom z-total-colorBlue z-days-font d-none"></div>'+
				            '<div class="z-daysWidth2-level4 z-l-configbottom text-right z-total-colorBlue z-cost-content d-none"></div>'+
				            '<div class="col-2 z-l-configbottom z-totaldayscal z-l-grey-color z-total-check z-cost-content z-clear-text'+(i+1)+' z-totalEstimate-days'+ (i+1) +'">'+ z_line_total_input1 + '</div>'+
				               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
			});
		});
		$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum">'+
	            '<div id="z-totalcost3" class="row z-borderBottom">'+
	            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="z-daysWidth1-level4 z-l-configbottom text-right z-total-colorBlue"><b>TOTAL DAYS</b></div>'+
	            '<div id="z-costGrant-total" class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
	            '<div id="z-estimate-grantTotal" class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div id="z-allDays1" class="z-codeWidth font-weight-bold z-l-configbottom z-total-colorBlue z-l-grey-color"></div></div></div>');
		$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum">'+
	            '<div id="z-totalcost3" class="row">'+
	            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="z-daysWidth1-level4 z-l-configbottom"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_deleteLineItems(this)">Delete Line Items</div></div>'+
	            '<div id="z-costGrant-total" class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_deleteLineItems(this)">Delete Line Items</div><div class="btn btn-link" onclick="z_activities_fn(this)">Back to Phases</div></div>'+
	            '<div id="z-estimate-grantTotal" class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div id="z-all" class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
		
	
	
	}
	else if(z_level == "Level5" && z_config == "Configuration 1"){

		$('#z-configlevelTable').removeClass('d-none');
		$('#z-configlevelTable').removeClass('z-rightSection');

		if(!$('.z-level4-active').hasClass('d-none')){
			$('.z-level4-active').addClass('d-none');
		}
		if($('.z-level5-active').hasClass('d-none')){
			$('.z-level5-active').removeClass('d-none');
		}
		
		if(!($('#z-costTable-level2').hasClass('d-none'))){
			$('#z-costTable-level2').addClass('d-none');
		}
		if(!($('#z-costTable-level3').hasClass('d-none'))){
			$('#z-costTable-level3').addClass('d-none');
		}
		if($('#z-costTable').hasClass('z-rightSection-active')){
			$('#z-costTable').removeClass('z-rightSection-active');
		}
		if(!$('#z-costTable-level4').hasClass('d-none')){
			$('#z-costTable-level4').addClass('d-none');
		}
		if($('#z-costTable-level5').hasClass('d-none')){
			$('#z-costTable-level5').removeClass('d-none');
		}
		if(!($('#z-days-level2-config1').hasClass('d-none'))){
			$('#z-days-level2-config1').addClass('d-none');
		}
		if(!($('#z-days-level3-config1').hasClass('d-none'))){
			$('#z-days-level3-config1').addClass('d-none');
		}
		if(!($('.z-level2-active').hasClass('d-none'))){
			$('.z-level2-active').addClass('d-none');
        }
        $('.z-level2-active').removeClass('d-none');
        $('.z-level2-active').addClass('d-none');
		$('.z-level1active').addClass('d-none');
//		if($('#z-days-level4-config1').hasClass('d-none')){
//			$('#z-days-level4-config1').removeClass('d-none');
//		}
		var phase_sno = "001";
		var subLevel_sno = 0;
		var result_sno;
		var sublevel_result_sno = 0;
		var sub_sn_result;
		var cost_table = ('#z-costTable-level5');
		var z_totalcost_length = 0;
		var z_totalcost_val = "";
		var costArray4,costValue1,costValue2;
		
		$('.z-days-datum').remove();
		var tax_data,z_line_input_level42,z_line_input_level41;
		var z_level5Index = z_configJson_data.findIndex(function(val){
			return val.levelValue == "5" && val.configNumber == "1";
		});
		if(z_configJson_data.length > 1){
			tax_data = JSON.parse(z_configJson_data[z_level5Index].taxAndLevyData);
		}
		else{
			tax_data = JSON.parse(z_configJson_data[0].taxAndLevyData);
		}
		//contigency_percent = tax_data[0][0];
		var contigency_percent,contigency_val,tax_percent,tax_val,grant_total_val,contigency_remark_val,tax_remark_val;
		var tax_data_length = tax_data.length;
		if(tax_data_length > 0){
			contigency_percent = tax_data[1][0];
			contigency_val = tax_data[1][1];
			tax_percent = tax_data[0][0];
			tax_val = tax_data[0][1];
			grant_total_val = tax_data[2];
			contigency_remark_val = tax_data[3];
			tax_remark_val = tax_data[4];
		}
		else{
			contigency_percent = "";
			contigency_val = "";
			tax_percent = "";
			tax_val = "";
			grant_total_val = "";
			contigency_remark_val = "";
			tax_remark_val = "";
		}
		if(z_configJson_data.length < 2){
			z_selected_leveldata = JSON.parse(z_configJson_data[0].wellConfig);
		}
		else{
			z_selected_leveldata = JSON.parse(z_configJson_data[z_level5Index].wellConfig);
		}
		//start
		data = z_selected_leveldata;
		data.forEach(function (level2_obj, i) {
			z_phasename = level2_obj.phaseName;
			if(i == 0){
			$('#z-costTable-level5').append('<div class="col-12 z-phaseSection z-subtotal-height z-tableData-row">'+
		            '<div id="z-Estimate-Timecost" class="row z-borderBottom">'+
		            '<div class="z-noWidth"></div>'+
		            '<div class="z-codeWidth-estimate-level4"></div>'+
		            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color"><b>Currency</b></div>'+
		            '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
		               '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
		               '<div class="z-cost-inputWidth z-total-Currency text-center"></div>'+
		            '<div class="col-1"></div></div></div>');
			//console.log("curr:"+ z_currency);
			}
			if(level2_obj.isSelected){
				$('#z-costTable-level5').append('<div class="col-12 z-phaseSection z-subtotal-height z-tableData-row">'+
			            '<div id="z-Estimate-Timecost" class="row z-borderBottom">'+
			            '<div class="z-noWidth"></div>'+
			            '<div class="z-codeWidth-estimate-level4 z-cost-content">'+phase_sno+'</div>'+
			            '<div class="z-descWidth z-l-configbottom z-cost-content z-l-grey-color"><b>'+z_phasename+'</b></div>'+
			            '<div class="z-cost-inputWidth"></div>'+
			               '<div class="z-cost-inputWidth z-estimation z-estimationBlock"></div>'+
			               '<div class="z-cost-inputWidth"></div>'+
			            '<div class="z-cost-inputWidth z-estimation z-estimationBlock"></div></div></div>');
				subLevel_sno = 0;
				var sub_totalVal = "";
				var title_length = 0;
				var cost_item_length = 0;
				var z_cost_array = [];
				var total_cost_subPhase_length1;
				var total_cost_subPhase_ratelength1;
				var subPhase_ratelength1;
				level2_obj.subLevels.forEach(function (obj1, j) {
					if(obj1.isSelected && !(obj1.phaseName.includes("user defined"))){
						result_sno = (subLevel_sno + 1).toString();
						subLevel_sno = subLevel_sno + 1;
						//subLevel_sno = (Number(subLevel_sno)+1).toString();
						if(Number(result_sno) < 10){
							result_sno = "0"+result_sno;
						}
						if(sublevel_result_sno == 0){
							sub_sn_result = "001"+"-"+result_sno;
						}
						else{
							sub_sn_result = phase_sno+"-"+result_sno;
						}
						
						var z_cost_element = "";
						var z_cost = 0;
						if(obj1.totalCostItem != null){
							
							title_length = obj1.totalCostItemTitle.length;
							z_totalcost_val = "";
							sub_totalVal = "0 $";
							if(obj1.totalCostItem[0].subPhase != null){
								total_cost_subPhase_length1 = obj1.totalCostItem[0].subPhase.length;
								if(total_cost_subPhase_length1 > 0){
									if(obj1.totalCostItem[0].subPhase[0].rateValue != null){
										total_cost_subPhase_ratelength1 = obj1.totalCostItem[0].subPhase[0].subPhase[0].rateValue.length;
										if(total_cost_subPhase_ratelength1 > 0){
											if(total_cost_subPhase_ratelength1 == title_length+1){
												z_totalcost_val = obj1.totalCostItem[0].subPhase[0].subPhase[0].rateValue[total_cost_subPhase_ratelength1-1];
											}
											else{
												z_totalcost_val = obj1.totalCostItem[0].subPhase[0].subPhase[0].rateValue[total_cost_subPhase_ratelength1-2];
											}
										}
									}
									
								}
								else{
									if(obj1.totalCostItem[0].rateValue != null){
										subPhase_ratelength1 = obj1.totalCostItem[0].rateValue.length;
										if(obj1.totalCostItem[0].rateValue.length > 0){
											if(subPhase_ratelength1 == title_length+1){
												z_totalcost_val = obj1.totalCostItem[0].rateValue[subPhase_ratelength1-1];
											}
											else{
												z_totalcost_val = obj1.totalCostItem[0].rateValue[subPhase_ratelength1-2];
											}
										}
										}
								
								}
							}
							else{
								if(obj1.totalCostItem[0].rateValue != null){
									subPhase_ratelength1 = obj1.totalCostItem[0].rateValue.length;
									if(subPhase_ratelength1 > 0){
										if(subPhase_ratelength1 == title_length+1){
											z_totalcost_val = obj1.totalCostItem[0].rateValue[subPhase_ratelength1-1];
										}
										else{
											z_totalcost_val = obj1.totalCostItem[0].rateValue[subPhase_ratelength1-2];
										}
									}
									}
							}
							
								//obj1.totalCostItem.forEach(function(val,index1){
									
//									if(val.subPhase.length > 0){
//										if(val.subPhase[val.subPhase.length-1].rateValue.length == title_length+1){
//											z_totalcost_length = val.subPhase[val.subPhase.length-1].rateValue.length;
//											z_totalcost_val = val.val.subPhase[val.subPhase.length-1].rateValue[z_totalcost_length-1];
//										}
//										else{
//											z_totalcost_length = val.subPhase[val.subPhase.length-1].rateValue.length;
//											z_totalcost_val = val.subPhase[val.subPhase.length-1].rateValue[z_totalcost_length-2];
//											//sub_totalVal = val.rateValue[z_totalcost_length-1];
//										}	
//									}
//									else{
//										if(val.rateValue.length == title_length+1){
//											z_totalcost_length = val.rateValue.length;
//											z_totalcost_val = val.rateValue[z_totalcost_length-1];
//										}
//										else{
//											z_totalcost_length = val.rateValue.length;
//											z_totalcost_val = val.rateValue[z_totalcost_length-2];
//											//sub_totalVal = val.rateValue[z_totalcost_length-1];
//										}
//									}
//									
								//});
							
						}
						else{
							z_totalcost_val = "";
							sub_totalVal = "0 $";
						}
						var totalCost_obj1_length;
						if(obj1.totalCost != null){
							totalCost_obj1_length = obj1.totalCost.length;
							if(totalCost_obj1_length > 0){
								costArray4 = obj1.totalCost;
								costValue1 = costArray4[0];
								costValue2 = costArray4[1];
							}
							else{
								costValue1 = "";
								costValue2 = "";
							}
						}
						
						else{
							costValue1 = "";
							costValue2 = "";
						}
						
						sub_totalVal = result_cost + " $"
						var remark = "";
						if(obj1.remark != null){
							remark = obj1.remark;
						}
						if(z_totalcost_val == null){
							z_totalcost_val = "";
						}
						z_cost_element = z_totalcost_val;
						z_cost_element =z_cost_element.replace(/,/gi,'');
						z_cost_element =z_cost_element.replace(/[^\w\s]/gi, '');
						z_cost_element =z_cost_element.trim();
						z_cost = Number(z_cost_element);
						z_cost_array.push(z_cost);
							$('#z-costTable-level5').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate" class="row z-borderBottom">'+
				            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color">'+ z_no +'</div>'+
				            '<div class="z-codeWidth-estimate-level4 z-l-configbottom z-cost-content z-l-grey-color">'+ sub_sn_result +'</div>'+
				            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color" current-phase="2" current-level="'+ j +'" base-level="'+ i + '" onclick="z_costModel(this)">'+obj1.phaseName+'</div>'+
				            '<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
							'<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost1" class="w-100 level1-cost'+ z_no +'" type="text" cost-index="'+ z_no +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" value="" oninput="totalCostCalculate(this)"></div>'+
				               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 level1-cost'+ z_no +'" type="text" cost-index="'+ z_no +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="2" value="" oninput="totalCostCalculate(this)"></div>'+
				               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 level1-cost'+ z_no +' z-subCost-total z-subtotal'+(i+1)+'" type="text" code="'+ (i+1) +'" name="" select-input="1" value="'+ costValue1 + '" disabled="true" level1-phaseName ="'+z_phasename+'" base-level="'+ i + '" level2-phaseName="'+obj1.phaseName+'" oninput = "z_rigCal(this)"></div>'+
				            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-estimation z-estimationBlock z-l-grey-color result'+ (i+1) +'"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks(this)" base-level="'+ i + '" sub-level="'+ j + '" value="'+ remark + '"></div></div></div>');
							z_no = z_no+1;
							//z_totalcost_val = "";
							z_totalcost_length = 0;
							var zlevel3_sno = 1;
							var z_result_level3;
							var level3_no = "";
							if(obj1.subLevels != null){
								obj1.subLevels.forEach(function(val3,index3){
									if(val3.isSelected){
										if(Number(zlevel3_sno) < 10){
											z_result_level3 = sub_sn_result+"-"+"0"+zlevel3_sno;
										}
										
										else{
											z_result_level3 = sub_sn_result+"-"+zlevel3_sno;
										}
										if(val3.remark != null){
											remark = val3.remark;
										}
										else{
											remark = "";
										}
										if(val3.totalCost != null){
											var val3_totalCost_length = val3.totalCost.length;
											if(val3_totalCost_length > 0){
												costValue1 = val3.totalCost[0];
												costValue2 = val3.totalCost[1];
										}
											else{
												costValue1 = "";
												costValue2 = "";
											}
										}
										
										else{
											costValue1 = "";
											costValue2 = "";
										}
										$('#z-costTable-level5').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Rigcost" class="row z-borderBottom">'+
									            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color"></div>'+
									            '<div class="z-codeWidth-estimate-level4 z-l-configbottom z-cost-content z-l-grey-color">'+ z_result_level3 +'</div>'+
									            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color" current-phase="3" level2-name="'+obj1.phaseName+'" base-level="'+ i + '">'+val3.phaseName+'</div>'+
									            '<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
												'<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost1" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" value="'+costValue1+'" oninput="totalCostCalculate(this)"></div>'+
									               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'" name="" select-input="1" indexselect="2" value="'+costValue2+'" oninput="totalCostCalculate(this)"></div>'+
									               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 z-subCost-total level2-cost'+ z_result_level3 +' z-subtotal'+(i+1)+'"type="text" phase2="'+ obj1.phaseName +'" phaseName="'+val3.phaseName+'" level3name="'+val3.phaseName+'" code="'+ (i+1) +'" name="" select-input="1" value="'+ z_totalcost_val + '" disabled="true" oninput = "z_rigCal(this)"></div>'+
									            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-estimation z-estimationBlock z-l-grey-color result'+ (i+1) +'"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks_level3(this)" base-level="'+ i + '" sub-level="'+ j + '" level3-index="'+ index3 + '" value="'+ remark + '"></div></div></div>');
										zlevel3_sno = zlevel3_sno+1;
										//level4
										if(val3.subLevels != null){
											var level4_sno1 = 0;
											var level4_sno2 = 65;
											var level4_result_sno;
											val3.subLevels.forEach(function(valObj4,indexLevel4){
												if(valObj4.isSelected){
													if(valObj4.remark != null){
														remark = valObj4.remark;
													}
													else{
														remark = "";
													}
													level4_result_sno = z_result_level3 + "-" + level4_sno1 + "&#" +level4_sno2;
													if(valObj4.totalCost != null){
														var val4_totalCost_length = valObj4.totalCost.length;
														if(val4_totalCost_length > 0){
															costValue1 = valObj4.totalCost[0];
															costValue2 = valObj4.totalCost[1];
														}
														else{
															costValue1 = "";
															costValue2 = "";
														}
													}
													
													else{
														costValue1 = "";
														costValue2 = "";
													}
													$('#z-costTable-level5').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Rigcost" class="row z-borderBottom">'+
												            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color"></div>'+
												            '<div class="z-codeWidth-estimate-level4-estimate-level4 z-l-configbottom z-cost-content z-l-grey-color">'+ level4_result_sno +'</div>'+
												            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color" current-phase="4" level2-name="'+obj1.phaseName+'" level3-name="'+val3.phaseName+'" base-level="'+ i + '">'+valObj4.phaseName+'</div>'+
                                                            '<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
															'<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost1" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" value="'+costValue1+'" oninput="totalCostCalculate(this)"></div>'+
												               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'" name="" select-input="1" indexselect="2" value="'+costValue2+'" oninput="totalCostCalculate(this)"></div>'+
												               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 z-subCost-total level2-cost'+ z_result_level3 +' z-subtotal'+(i+1)+'" type="text" code="'+ (i+1) +'" baseLevel="'+ obj1.phaseName +'" phaseName="'+valObj4.phaseName+'" phase3="'+ val3.phaseName +'" name="" select-input="1" value="'+ z_totalcost_val + '" disabled="true" oninput = "z_rigCal(this)"></div>'+
												            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-estimation z-estimationBlock z-cost-content z-l-grey-color result'+ (i+1) +'"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks_level4(this)" base-level="'+ i + '" sub-level="'+ j + '" level3-index="'+ index3 + '" level4-index="'+ indexLevel4 +'" value="'+ remark + '"></div></div></div>');
													level4_sno1 = level4_sno1 + 1;
													if(level4_sno1 >= 10){
														level4_sno1 = 0;
														level4_sno2 = level4_sno2 + 1;
													}
													if(valObj4.subLevels != null){
														valObj4.subLevels.forEach(function(valObj5,index5){
															if(valObj5.isSelected){
																$('#z-costTable-level5').append('<div class="col-12 z-phaseSection z-tableData-row"><div id="z-Estimate-Rigcost" class="row z-borderBottom">'+
															            '<div class="z-noWidth z-l-configbottom z-cost-content z-l-grey-color"></div>'+
															            '<div class="z-codeWidth-estimate-level4-estimate-level4 z-l-configbottom z-cost-content z-l-grey-color">'+ level4_result_sno +'</div>'+
															            '<div class="z-descWidth z-cost-content z-l-configbottom z-l-grey-color" current-phase="5" level2-name="'+obj1.phaseName+'" level3-name="'+val3.phaseName+'" level4-name="'+valObj4.phaseName+'" base-level="'+ i + '">'+valObj5.phaseName+'</div>'+
															                               '<div class="z-descWidth-level4 z-report"><input id="z-rigcompany" class="w-100" type="text" value=""></div>'+
																		'<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost1" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'"name="" select-input="0" indexselect="1" value="'+costValue1+'" oninput="totalCostCalculate(this)"></div>'+
															               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content z-estimation z-estimationBlock"><input id="z-rigcost2" class="w-100 level2-cost'+ z_result_level3 +'" type="text" cost-index="'+ z_result_level3 +'" code="'+ (i+1) +'" name="" select-input="1" indexselect="2" value="'+costValue2+'" oninput="totalCostCalculate(this)"></div>'+
															               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content"><input id="z-rigcost2" class="w-100 z-subCost-total level2-cost'+ z_result_level3 +' z-subtotal'+(i+1)+'" type="text" phase2="'+ obj1.phaseName +'" code="'+ (i+1) +'" baseLevel="'+ obj1.phaseName +'" phaseName="'+valObj5.phaseName+'" phase4="'+ valObj4.phaseName +'" phase3="'+ val3.phaseName +'" name="" select-input="1" value="'+ z_totalcost_val + '" disabled="true" oninput = "z_rigCal(this)"></div>'+
															            '<div id="z-rigcost-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-estimation z-estimationBlock z-l-grey-color result'+ (i+1) +'"><input id="z-rigcost1" class="w-100 z-remarkBorder" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "saveRemarks_level4(this)" base-level="'+ i + '" sub-level="'+ j + '" level3-index="'+ index3 + '" level4-index="'+ indexLevel4 +'" value="'+ remark + '"></div></div></div>');
														
															}
															
														});
													}
												}
											
											});
										}
									}
								});
							}
					}
					
//						if(Number(subLevel_sno) > 9){
//							
//						}
//						else{
//							subLevel_sno = "0"+subLevel_sno;
//						}
					});
				if(sublevel_result_sno == 0){
					phase_sno = "0"+(Number(phase_sno) + 1).toString()+"1";	//2
				}
				else{
					if(Number(phase_sno) == 81){
					phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1"; 
					}
					else if(Number(phase_sno) >= 101){
						phase_sno = (Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";	
					}
					else if(Number(phase_sno) <= 61){
					    phase_sno = "0"+(Number(phase_sno.substr(0,phase_sno.length-1))+2).toString()+"1";
					}
				
				}
				sublevel_result_sno = sublevel_result_sno +1;
				//sublevel_result_sno = sublevel_result_sno+1;
				var result_cost = 0;
				var z_cost_array_length = z_cost_array.length;
				for(var sum1=0;sum1 < z_cost_array_length;sum1++){
					result_cost = result_cost + z_cost_array[sum1];
				}
				sub_totalVal = result_cost + " $";
					$('#z-costTable-level5').append(' <div class="col-12 z-phaseSection z-subtotal-height z-tableData-row"><div id="z-Estimate-Total-timeCost" class="row z-borderBottom"><div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
							'<div class="z-codeWidth-estimate-level4 z-l-configbottom z-l-grey-color"></div>'+
							'<div class="z-descWidth z-l-configbottom z-cost-content z-total-colorBlue"><b>Total '+ z_phasename + '</b></div>'+
				            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
				               '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
					            '<div id="z-totalTimedependentCost-val" class="z-cost-inputWidth z-l-configbottom z-l-grey-color finalresult'+ z_classno + ' z-phase1"'+'><input id="z-rigcost1" class="w-100 z-cost-content font-weight-bold z-total-colorBlue z-final-subcost'+(i+1)+'" type="text" code="'+ (i+1) +'"name="" select-input="0" oninput = "z_rigCal(this)" disabled="true" value="'+ sub_totalVal +'"></div></div></div>');
					z_classno = z_classno+1;
			}
		});
		var tax_data,inclineData;
		if(z_configJson_data.length > 1){
			tax_data = JSON.parse(z_configJson_data[4].taxAndLevyData);
			inclineData = JSON.parse(z_configJson_data[4].wellInclineDays);
		}
		else{
			tax_data = JSON.parse(z_configJson_data[0].taxAndLevyData);
			inclineData = JSON.parse(z_configJson_data[0].wellInclineDays);
		}
		var inclineElement = $('.z-incline-data-level4');
		
		if(inclineElement != null && inclineData != null){
			var inclineElement_length = inclineElement.length;
		var inclineData_length = inclineData.length;
			if(inclineElement_length > 0 && inclineData_length > 0){
				for(var inc=0;inc < inclineElement_length;inc++){
					inclineElement[inc].value = inclineData[inc];
				}
			}
		}
		//contigency_percent = tax_data[0][0];
		var contigency_percent,contigency_val,tax_percent,tax_val,grant_total_val,contigency_remark_val,tax_remark_val;
		var tax_data_length = tax_data.length;
		if(tax_data_length > 0){
			contigency_percent = tax_data[1][0];
			contigency_val = tax_data[1][1];
			tax_percent = tax_data[0][0];
			tax_val = tax_data[0][1];
			grant_total_val = tax_data[2];
			contigency_remark_val = tax_data[3];
			tax_remark_val = tax_data[4];
		}
		else{
			contigency_percent = "";
			contigency_val = "";
			tax_percent = "";
			tax_val = "";
			grant_total_val = "";
			contigency_remark_val = "";
			tax_remark_val = "";
		}	//end
		$('#z-costTable-level5').append('<div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-contigency" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color z-cost-content">Contingency %</div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom z-cost-content z-l-grey-color"><input id="z-estimate-contigencyDays-data" class="w-100 z-calCost z-contigency" type="text" name="" value="'+contigency_percent+'" oninput="z_totalCostCalulate(this)"></div>'+
	               '<div id="z-contigency-value" class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content">'+contigency_val+'</div>'+
	            '<div id="z-rigcost-contigency-result" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-estimation z-estimationBlock z-l-grey-color"><input id="z-rigcost1" class="w-100 z-taxData z-remarkBorder" type="text" name="" select-input="0" base-level="contigency" oninput = "saveRemarks(this)" value="'+contigency_remark_val+'"></div>'+
	            '</div></div><div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-tax" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color z-cost-content">Taxes if Any like VAT or Government Levy %</div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom z-cost-content z-l-grey-color"><input id="z-estimate-lvg-data" class="w-100 z-calCost z-levy" type="text" name="" value="'+tax_percent+'" oninput="z_totalCostCalulate(this)"></div>'+
	            '<div id="z-tax-value" class="z-cost-inputWidth z-l-configbottom z-l-grey-color z-cost-content">'+tax_val+'</div>'+
		            '<div id="z-rigcost-taxresult" class="z-cost-remarkWidth z-l-configbottom z-cost-content z-estimation z-estimationBlock z-l-grey-color"><input id="z-rigcost1" class="w-100 z-remarkBorder z-taxData" type="text" name="" select-input="0" base-level="tax" oninput = "saveRemarks(this)" value="'+tax_remark_val+'"></div>'+
	               '</div></div>'+
	              '<div class="col-12 z-phaseSection z-tableData-row">'+
	            '<div id="z-Estimate-grantTotal" class="row z-borderBottom">'+
	            '<div class="z-noWidth"></div>'+
	            '<div class="z-codeWidth"></div>'+
	            '<div class="z-descWidth z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="z-cost-inputWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div class="z-cost-inputWidth z-l-configbottom"><b>Grand Total</b></div>'+
	            '<div id="z-grantTotal" class="z-cost-inputWidth font-weight-bold z-granttotal-padding clrRed">'+grant_total_val+'</div></div></div>');
		var z_line_input1 = "";
		var z_line_input2 = "";
		var z_line_input3 = "";
		var z_line_input4 = "";
		var z_totalline_input4 = "";
		//$('.z-option-days1').remove();
		var level5_index = z_configJson_data.findIndex(function(val){
			return val.levelValue == "5" && val.configNumber == "1";
		});
		if(z_configJson_data.length < 2){
			wellDays_data_level4 = JSON.parse(z_configJson_data[0].wellEstimateDays);
		}
		else{
			wellDays_data_level4 = JSON.parse(z_configJson_data[level5_index].wellEstimateDays);
		}
		
//		var daysObj3 = {};
//		wellDays_data_level4.forEach(function(val_day,val_index){
//			if(val_day.isSubmitted == null){
//				daysObj3['phase'] = val_day.phase;
//				daysObj3['lineInput'] = val_day.lineInput;
//				daysObj3['subPhase'] = val_day.subPhase;
//				daysObj3['totalPhase'] = val_day.totalPhase;
//				daysObj3['isSubmitted'] = false;
//				wellDays_data_level4[val_index] = daysObj3;
//				daysObj3 = {};
//			}
//		});
	
		var subphase_lineInputlength1;
		var subphase_lineInputlength2;
		var subphase_lineInputlength3;
		var subphase_lineInputlength4;
		var subphase_length2;
		var subphase_length1;
		var total_cost_subPhase_length1;
		wellDays_data_level4.forEach(function(obj,i){
			//for level1
			if(obj.subPhase !=null){
			subphase_length1 = obj.subPhase.length;
			if(subphase_length1 > 0){
				$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' z-days-datum z-baseDay z-days-level'+ (i+1) +' z-level1-day'+ (i+1) + ' d-none">'+
			            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
			            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
			            '<div class="d-flex z-daysWidth1-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)"><b>'+obj.phase+'</b><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
			}
			else{
				if(obj.lineInput != null){
					z_line_input1 = obj.lineInput[0];
					z_line_input2 = obj.lineInput[1];
				}
			$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' z-baseDay z-days-datum z-days-level'+ (i+1) + ' z-level1-day'+ (i+1) + ' d-none">'+
			            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
			            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
			            '<div class="d-flex z-daysWidth1-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)">'+obj.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-days'+ (i+1) +' z-wellTesting" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+'" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
		
			}
			}
			else{
				if(obj.lineInput != null){
					z_line_input1 = obj.lineInput[0];
					z_line_input2 = obj.lineInput[1];
				}
			$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' z-baseDay z-days-datum z-days-level'+ (i+1) + ' z-level1-day'+ (i+1) + ' d-none">'+
			            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
			            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
			            '<div class="d-flex z-daysWidth1-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)">'+obj.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-days'+ (i+1) +' z-wellTesting" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+'" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
		
			}
			//for level2
			if(obj.subPhase != null){
			obj.subPhase.forEach(function(obj1,j){
				//for level2 -- it has total phase value for level 2
				subphase_lineInputlength1 = obj1.lineInput.length;
				if(subphase_lineInputlength1 > 0 ){
					z_line_input1 = obj1.lineInput[0];
					if(subphase_lineInputlength1 > 1){
						z_line_input2 = obj1.lineInput[1];	
					}
					
				}
				//it has level 2 entry
				$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none">'+
			            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
		            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj1.phase+'<div class="z-l-closeBtn-level4-days2 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4-days2" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');
				//for level 3 
				if(obj1.subPhase != null){
				subphase_lineInputlength1 = obj1.subPhase.length;
				if(subphase_lineInputlength1 > 0){
					obj1.subPhase.forEach(function(obj2,k){
								subphase_lineInputlength2 = obj2.lineInput.length;
								if(subphase_lineInputlength2 > 0 ){
									z_line_input_level31 = obj2.lineInput[0];
									if(subphase_lineInputlength2 > 1){
										z_line_input_level32 = obj2.lineInput[1];	
									}
									
								}
								if(obj2.subPhase != null){
									$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none">'+
								            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
							            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-closeBtn-level4-days3 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days3" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
								               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center">'+ z_line_input_level32 + '</div></div></div>');
								
								}
								else{
									$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none">'+
								            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
							            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-closeBtn-level4-days3 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days3" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-days'+ (i+1) +' z-level2-Indexday'+ j +'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level31 + '"></div>'+
								               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center z-cumulative'+ (i+1) +'">'+ z_line_input_level32 + '</div></div></div>');
								
								}
									//for level 4
								if(obj2.subPhase != null){
								subphase_length2 = obj2.subPhase.length;
								if(subphase_length2 > 0){
									obj2.subPhase.forEach(function(obj4,k4){
										subphase_lineInputlength4 = obj4.lineInput.length;
										if(subphase_lineInputlength4 > 0 ){
											z_line_input_level41 = obj4.lineInput[0];
											if(subphase_lineInputlength4 > 1){
												z_line_input_level42 = obj4.lineInput[1];	
											}
											
										}
										level4_code = i + ""+ j + ""+ k;
										$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none">'+
									            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
								            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
									            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
									            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
									            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
									            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj4.phase+'<div class="z-l-closeBtn-level4-days4 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days4" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="4" level="4">+</div></div>'+
									            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-days'+ (i+1) +' z-level2-Indexday'+ j +' z-level4'+level4_code+'" level4-code="'+level4_code+'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level41 + '"></div>'+
									               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center z-cumulative'+ (i+1) +'">'+ z_line_input_level42 + '</div></div></div>');
								
									});
								}
								//level3 total phase
								if(obj2.lineInput != null){
									z_totalline_input4 = obj2.lineInput[0];
								}
								$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none">'+
							            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
						            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color">Total Days</div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-level4-totaldays'+ (i+1) +' z-cost-content z-level4-total'+level4_code+'" level4-code="'+level4_code+'">'+ z_totalline_input4 +'</div>'+
							            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
							               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');
								}
								

					
							
					});
				}
			}
				//level2 total phase
				$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none">'+
			            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
		            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color">Total Days</div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-level2-totaldays'+ (i+1) +' z-cost-content">'+ z_line_input1 +'</div>'+
			            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
			               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');

			});
		}
			//level1 total days
			obj.totalPhase.forEach(function(obj4,m){
				total_cost_subPhase_length1 = obj4.lineInput.length;
				if(total_cost_subPhase_length1 > 0){
					z_line_total_input1 = obj4.lineInput[0];
				}
				$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) +' d-none">'+
			            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
				            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
				            '<div class="z-daysWidth1-level4 z-l-configbottom text-right z-total-colorBlue z-cost-content">'+obj4.phase+'</div>'+
				            '<div class="z-daysWidth2-level4 z-l-configbottom z-total-colorBlue z-days-font"></div>'+
				            '<div class="z-daysWidth2-level4 z-l-configbottom text-right z-total-colorBlue z-cost-content"></div>'+
				            '<div class="z-codeWidth z-l-configbottom z-totaldayscal z-l-grey-color z-total-check z-cost-content z-totalEstimate-days'+ (i+1) +'">'+ z_line_total_input1 + '</div>'+
				               '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
			});
		});
		$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum">'+
	            '<div id="z-totalcost3" class="row z-borderBottom">'+
	            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="z-daysWidth1-level4 z-l-configbottom text-right z-total-colorBlue"><b>TOTAL DAYS</b></div>'+
	            '<div id="z-costGrant-total" class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
	            '<div id="z-estimate-grantTotal" class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div id="z-allDays1" class="z-codeWidth font-weight-bold z-l-configbottom z-total-colorBlue z-l-grey-color"></div></div></div>');
		$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum">'+
	            '<div id="z-totalcost3" class="row">'+
	            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
	            '<div class="z-daysWidth1-level4 z-l-configbottom"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_deleteLineItems(this)">Delete Line Items</div></div>'+
	            '<div id="z-costGrant-total" class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_deleteLineItems(this)">Delete Line Items</div><div class="btn btn-link" onclick="z_activities_fn(this)">Back to Phases</div></div>'+
	            '<div id="z-estimate-grantTotal" class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
	               '<div id="z-all" class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
		
	
	
	}
    var z_selected_index = z_configJson_data.findIndex(function(valObj){
        return valObj.levelValue == z_level.split("Level")[1] && valObj.configNumber == z_config.substr(z_config.length-1);
    });
    if(z_configJson_data[z_selected_index].taxAndLevyData == "[]"){
        $('.z-contigency').val('');
        $('.z-levy').val('');
    }
	if(z_level == "Level1" && z_configJson_data[z_selected_index].wellId != ""){
        var z_n_contigency = $('.z-contigency');
		var z_cont_val = JSON.parse(z_configJson_data[z_selected_index].taxAndLevyData);
		var z_n_contigency_length = z_n_contigency.length;
		for(var n = 0 ; n < z_n_contigency_length;n++){
            if(z_cont_val[0][n] != null)
            z_n_contigency[n].value = z_cont_val[0][n];
        }
        if(z_cont_val[0][1] != null){
            $('#z-contigencyresult').text(z_cont_val[0][1]);
        }
		
		var z_n_levy = $('.z-levy');
		z_n_levy[0].value = z_cont_val[1][0];
		//z_n_levy[1].value = z_cont_val[1][1];
		$('#z-total-levy').text(z_cont_val[1][1]);
		$('#z-grantTotal').text(z_cont_val[2]);
		$('#z-totalDays').val(z_days_entered[z_days_entered.length-1]);
		var tax_remark = $('.tax-remark');
		tax_remark[0].value = z_cont_val[3];
		tax_remark[1].value = z_cont_val[4];
    }
    else if(z_level == "Level1" && z_configJson_data[z_selected_index].isconfigSaved == false && contigencyVal != "" && contigencyPercent != "" && taxPercent != "" && taxValue != ""){
        var z_n_contigency = $('.z-contigency');
        z_n_contigency[0].value = contigencyVal;
        $('#z-contigencyresult').text(contigencyPercent);
		var z_n_levy = $('.z-levy');
        z_n_levy[0].value = taxValue;
        $('#z-total-levy').text(taxPercent);
    }
}
	else{
		alertPopup('alert','Please select levels and configurations with average');
	}
	
}
var z_total_array = [];
var z_grant_total = [];
var z_grant_totalKey = [];
function z_daysCal(el){
	$('#z-dayInput-check-level2').val("true");
	$('.z-total-error').remove();
	var index_days = $(el).attr('code');
	var sub_phase_class = "z-days"+index_days;
	var subphase_element = document.getElementsByClassName(sub_phase_class);
	var z_total_Estimate = "z-totalEstimate-days"+index_days;
	var z_total_Estimate_element = document.getElementsByClassName(z_total_Estimate);
	var z_total_days = 0;
	var z_subphase_days = 0;
	var sum_ofdays = 0;
	var x_length = 0;
	var baseobj = {};
	var total_precissionArray,total_precissionVal;
	var sub_total_class,sub_total_classElement;
	var index_val = Number(el.classList[1].split("z-days")[1]);
	var base = $(el).attr('base-level');
	var subphase_element_length = subphase_element.length;
	var z_total_Estimate_element_length = z_total_Estimate_element.length;
	var z_grant_totalKey_length = z_grant_totalKey.length;
	for(var index = 0;index < subphase_element_length; index++){
	    if(!(isNaN(subphase_element[index].value))){
	    	z_subphase_days = 	Number(subphase_element[index].value);
	    }
		z_total_days = z_total_days + z_subphase_days;
	}
	if(z_total_days.toString().includes(".")){
		total_precissionArray = z_total_days.toString().split(".");
		total_precissionVal = total_precissionArray[0] + "." + total_precissionArray[1].substr(0,2);
		z_total_days = Number(total_precissionVal);
		
	}
	z_total_array[Number(index_days)-1] = z_total_days;
	//$(el).parent().parent().parent().next().children().last().prev().text(z_total_days.toString());
	//console.log("total days"+z_total_days);
	if(z_total_Estimate_element_length > 1){
		z_total_Estimate_element[0].innerText = z_total_days.toString()+" Days";
		
//		for(var sum=0;sum<z_total_array.length;sum++){
//			if(z_total_array[sum] == null){
//				z_total_array[sum] = 0;
//			}
//			sum_ofdays = sum_ofdays + z_total_array[sum];
//		}
		if(z_total_array[Number(index_days)-2] == null){
			x_length = 0;
			}
		else{
			x_length = z_total_array[Number(index_days)-2];
		}
		
		sum_ofdays = z_total_days + x_length;
		z_total_Estimate_element[1].innerText = sum_ofdays.toString()+" Days";
		z_grant_total[Number(index_days)-1] = sum_ofdays;
		baseobj.phase = base;
		baseobj.day = sum_ofdays;
		baseobj.indexVal = index_val; 
		if(z_grant_totalKey_length > 0){
			var grant_index = z_grant_totalKey.findIndex(function(val){
				return val.phase == base;
			});
			if(grant_index == -1){
				z_grant_totalKey.push(baseobj);
			}
			else{
				z_grant_totalKey[grant_index] = baseobj;
			}
		}
		else{
			z_grant_totalKey.push(baseobj);
		}
		
		
		baseobj = {};
	}
	else{
//		if($(el).parent().prev().prev().text().includes("Well Testing")){
//			var well_test = document.getElementsByClassName('z-wellTesting');
//			var total_well = $('.z-totalEstimate-days14');
//			var well_count = 0;
//			var test_Well = 0;
//			for(var well = 0;well<3;well++){
//				test_Well = 0;
//				if(!isNaN(well_test[well].value)){
//					test_Well = Number(well_test[well].value);	
//				}
//				well_count = well_count + test_Well;
//			}
//			//var z_total_well = Number(well_test[0].value) + Number(well_test[1].value) + Number(well_test[2].value);
//			total_well[0].innerText = well_count.toString();
//			z_grant_total[14] = well_count;
//		}
		
			z_total_Estimate_element[0].innerText = z_total_days.toString() + " Days";
			z_grant_total[Number(index_days)-1] = z_total_days;
			baseobj.phase = base;
			baseobj.day = z_total_days;
			baseobj.indexVal = Number(el.getAttribute("code")); 
			if(z_grant_totalKey_length > 0){
				var grant_index = z_grant_totalKey.findIndex(function(val){
					return val.phase == base;
				});
				if(grant_index == -1){
					z_grant_totalKey.push(baseobj);
				}
				else{
					z_grant_totalKey[grant_index] = baseobj;
				}
			}
			else{
				z_grant_totalKey.push(baseobj);
			}
			baseobj = {};
		
	}
	
	granttotal_calculation();
	z_grant_totalKey.sort(function(a,b){
		return a.indexVal - b.indexVal;
	});
	
	if(z_level == "Level3"){
		index_days = $(el).attr('code');
		sub_total_class = "z-level2-totaldays"+index_days;
		sub_total_classElement = document.getElementsByClassName(sub_total_class);
		var sub_total_classElement_length = sub_total_classElement.length;
		if(sub_total_classElement_length > 0){
			var z_data2 = $(el).attr('level2-code');
			var code3 = $(el).attr('code');
			var class1 = "z-days"+code3;
			var precision_3Array,precission_3Val;
			var z_level2_input = $('.'+class1+".z-level2-Indexday"+z_data2);
			var level2_sum = 0;
			var level2_val = 0;
			var z_level2_input_length = z_level2_input.length;
			for(var m = 0; m < z_level2_input_length;m++){
				 if(!(isNaN(z_level2_input[m].value))){
					 level2_val = 	Number(z_level2_input[m].value);
				    }
				 level2_sum = level2_sum + level2_val;
			}
			if(level2_sum.toString().includes(".")){
				precision_3Array = level2_sum.toString().split(".");
				precission_3Val = precision_3Array[0]+"."+precision_3Array[1].substr(0,2);
				level2_sum = Number(precission_3Val);
			}
            sub_total_classElement[z_data2].innerText = level2_sum + " Days";
            for(var total=0;total < sub_total_classElement_length;total++){
                if(total != z_data2){
                    if(sub_total_classElement[total].innerText == ""){
                        sub_total_classElement[total].innerText = "0 Days";
                    }
                }
            }
		}
		
	}
	else if(z_level == "Level4"){

		index_days = $(el).attr('code');
		sub_total_class = "z-level2-totaldays"+index_days;
		sub_total_classElement = document.getElementsByClassName(sub_total_class);
		var sub_total_classElement_length = sub_total_classElement.length;
		if(sub_total_classElement_length > 0){
			var z_data2 = $(el).attr('level2-code');
			var code3 = $(el).attr('code');
			var class1 = "z-days"+code3;
			var precision_3Array,precission_3Val;
			var z_level2_input = $('.'+class1+".z-level2-Indexday"+z_data2);
			var level2_sum = 0;
			var level2_val = 0;
			var z_level2_input_length = z_level2_input.length;
			for(var m = 0; m < z_level2_input_length;m++){
				 if(!(isNaN(z_level2_input[m].value))){
					 level2_val = 	Number(z_level2_input[m].value);
				    }
				 level2_sum = level2_sum + level2_val;
			}
			if(level2_sum.toString().includes(".")){
				precision_3Array = level2_sum.toString().split(".");
				precission_3Val = precision_3Array[0]+"."+precision_3Array[1].substr(0,2);
				level2_sum = Number(precission_3Val);
			}
            sub_total_classElement[z_data2].innerText = level2_sum + " Days";
            for(var total=0;total < sub_total_classElement_length;total++){
                if(total != z_data2){
                    if(sub_total_classElement[total].innerText == ""){
                        sub_total_classElement[total].innerText = "0 Days";
                    }
                }
            }
			var level4_code = $(el).attr('level4-code');
			var level4_totalPhase = $('.z-level4-total'+level4_code);
			var level4_val = 0;
			var level4_result = 0;
			if(level4_code != null){
				var level4_Input = $('.z-level4'+level4_code);
				var precision_4Array,precission_4Val;
				var level4_Input_length = level4_Input.length;
				for(var p=0;p < level4_Input_length;p++){
					if(!(isNaN(level4_Input[p].value))){
						level4_val  = 	Number(level4_Input[p].value);
					    }
					level4_result = level4_result + level4_val;
				}
				if(level4_result.toString().includes(".")){
					precision_4Array = level4_result.toString().split(".");
					precission_4Val = precision_4Array[0] + "."+precision_4Array[1].substr(0,2);
					level4_result = Number(precission_4Val);
				}
                level4_totalPhase[0].innerText = level4_result + " Days";
				var level4_totalPhase_length = level4_totalPhase.length;
                for(var total1=0;total1 < level4_totalPhase_length;total1++){
                    if(total1 != z_data2){
                        if(level4_totalPhase[total1].innerText == ""){
                            level4_totalPhase[total1].innerText = "0 Days";
                        }
                    }
                }
			}
		}
		
	
    }
	z_grant_totalKey_length = z_grant_totalKey.length;
    for(var cumulative = 0;cumulative < z_grant_totalKey_length;cumulative++){
		
		index_days = z_grant_totalKey[cumulative].indexVal;
		sub_phase_class = "z-days"+index_days;
		var subphase_element = document.getElementsByClassName(sub_phase_class);
		var current_element = $('.z-days'+index_days);
		z_cumulativeDays(current_element[0],index_days,subphase_element);	
	}
	//z_sumofDayscal(z_grant_total);
	//z_savewellConfig();
}

function z_sumofDayscal(array){
	var all_days = 0;
	var sub_day;
	//var z_phaseday = document.getElementsByClassName('z-wellDayLevel2');
	var array_length = array.length;
	for(var sum1 = 0;sum1 < array_length;sum1++){
		((array[sum1] == null) ? sub_day = 0 : sub_day = array[sum1]); 
		all_days = all_days + sub_day;
	}
	$('#z-allDays').text(all_days);
	$('#z-allDays1').text("");
	$('#z-allDays1').text(all_days+" days");
	$('#z-totalDays').val(all_days);
	$('#z-rigandAccept-day').text(array[1]);
	$('#z-estimate-preparetodrill-day').text((array[1]+array[2]));
	$('#z-rigandAccept-day').text(array[1]);
	
}
function z_cumulativeDays(el,index,subphase_element){
	var cumulative_days = document.getElementsByClassName('z-cumulative'+index);
	var prev_cumulative_days;
	var count1 = 0;
	var test_count = 0;
	var grant_count = 0;
	var z_testCount = 0;
	var previndex,baseindex;
	var precisionVal,precisionArray;
	var z_activedays1 = $('.z-days-active.z-baseDay');
	var baseday_name = $(el).attr('base-level');
	//index=z_activedays[0].classList[2].substr(z_activedays[0].classList[2].length-1);
	var prev_cum = 0;
	var cumulative_days_length = cumulative_days.length;
	if(z_activedays1[0].innerText.includes(baseday_name)){
		for(var c = 0; c < cumulative_days_length; c++){
			count1 = count1 + Number(subphase_element[c].value);
			if(count1.toString().includes(".")){
				precisionArray = count1.toString().split(".");
				precisionVal = precisionArray[0] +"."+ precisionArray[1].substr(0,2);
				count1 = Number(precisionVal);
			}
			cumulative_days[c].innerText = count1.toString();
		}
	}
	else{
//		for(var grant = 1; grant < Number(index);grant++){
//			((z_grant_total[grant] == null) ? z_testCount = 0 : z_testCount = z_grant_total[grant]);  
//			grant_count = grant_count + z_testCount;
//		}
        var baseindexval;
        var indexDay_index;
        var indexDay_index2;
		var z_activedays1_length = z_activedays1.length;
		for(var m=1;m<z_activedays1_length;m++){
			if(z_activedays1[m].innerText.includes(baseday_name)){
				//index=z_activedays1[m].classList[2].substr(z_activedays1[m].classList[2].length-1);
                z_activedays1[m].classList.forEach(function(obj_1,index_1){
                    if(obj_1.includes("z-indexDay")){
                        indexDay_index = index_1;
                    }
                });
                index = z_activedays1[m].classList[indexDay_index].split("z-indexDay")[1];
				baseindexval = z_activedays1[m].innerText;
				if(isNaN(baseindexval.substr(0,2)) == false){
					baseindex = Number(baseindexval.substr(0,2));
				}
				else if(isNaN(baseindexval.substr(0,1)) == false){
					baseindex = Number(baseindexval.substr(0,1));
				}
                //baseindex = Number(z_activedays1[m].innerText.substr(0,1));
                z_activedays1[m-1].classList.forEach(function(obj_2,index_2){
                    if(obj_2.includes("z-indexDay")){
                        indexDay_index2 = index_2;
                    }
                });
				previndex = z_activedays1[m-1].classList[indexDay_index2];
				previndex = previndex.split("z-indexDay")[1];
				//.substr(z_activedays1[baseindex-2].classList[2].length-1);
				prev_cumulative_days = document.getElementsByClassName('z-cumulative'+(previndex));
				var prev_cumulative_days_length = prev_cumulative_days.length;
				if(prev_cumulative_days_length > 0){
					prev_cum = Number(prev_cumulative_days[prev_cumulative_days_length-1].innerText);
					cumulative_days = document.getElementsByClassName('z-cumulative'+index);
					cumulative_days_length = cumulative_days.length;
					for(var c1 = 0; c1 < cumulative_days_length; c1++){
						(isNaN(subphase_element[c1].value) ? testCount = 0 : testCount = Number(subphase_element[c1].value)); 
						if(c1 == 0){
							count1 = count1 + testCount+prev_cum;
							if(count1.toString().includes(".")){
								precisionArray = count1.toString().split(".");
								precisionVal = precisionArray[0] +"."+ precisionArray[1].substr(0,2);
								count1 = Number(precisionVal);
							}
							cumulative_days[c1].innerText = count1;
							
						}
						else{
							count1 = count1 + testCount;
							if(count1.toString().includes(".")){
								precisionArray = count1.toString().split(".");
								precisionVal = precisionArray[0] +"."+ precisionArray[1].substr(0,2);
								count1 = Number(precisionVal);
							}
							cumulative_days[c1].innerText = count1;
							
						}
					}
				}
				
				
			}
		}
//		var num = 0;
//		num = Number(index) - 1;
//		((z_grant_total[num] == null) ? z_testCount = 0 : z_testCount = z_grant_total[num]); 
//		grant_count = z_testCount;
//		for(var d = 0; d < cumulative_days.length; d++){
//			(isNaN(subphase_element[d].value) ? testCount = 0 : testCount = Number(subphase_element[d].value));  
//			count1 = count1 + testCount;
//			cumulative_days[d].innerText = (count1 + grant_count).toString();
//		}
	}
	//else{
//		for(var d = 0; d < cumulative_days.length; d++){
//			   if(!(isNaN(subphase_element[d].value)) && !(z_grant_total[d+1] == null)){
//				test_count = Number(subphase_element[d].value);
//				grant_count = z_grant_total[d+1];
//			}
//			count1 = grant_count + count1 + test_count;
//			cumulative_days[d].innerText = count1.toString();
//			count1 = 0;
//			test_count = 0;
//		}
	//}
	
}

var check_for_lineItems = [];
function z_addLine_items(el,z_no){
		var current_element = el;
	$('#z-addlinePhase-modal').remove();
	 
	    $('body').append('<div id="z-addlinePhase-modal" class="modal" tabindex="-1" role="dialog">' +
	        '<div class="modal-dialog" role="document">' +
	        '<div class="modal-content">' +
	        '<div class="modal-header">' +
	        '<h5 class="modal-title">Add Line Items</h5>' +
	        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
	        '<span aria-hidden="true">&times;</span>' +
	        '</button>' +
	        '</div>' +
	        '<div class="modal-body">' +
	        '<div id="notSelectedlinePhase_list"></div>' +
	        '<div id="customlinePhase-insertWrap">' +
	        '<input id="customlinePhase-input" class="z-m-inputS1" placeholder="phase Name">' +
	        '<button id="customlinePhase-addBtn" type="button" class="btn btn-primary" style="margin-left: 15px;">Add</button>' +
	        '</div>' +
	        '<p class="d-none">Select a phase to Add</p>' +
	        '</div>' +
	        '<div class="modal-footer">' +
	        '<button id="z-addlinePhase-btn" type="button" class="btn btn-primary">Submit</button>' +
	        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
	        '</div>' +
	        '</div>' +
	        '</div>' +
	        '</div>');
	    //$('#z-addlinePhase-btn').attr('selected-level',z_l_levels);
	    $('#z-addlinePhase-modal').modal('show');
$('#customlinePhase-addBtn').on('click', function () {
	phase_name = $('#customlinePhase-input').val();
	
	$('#notSelectedlinePhase_list').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
			'<div class="z-lineSelect">'+phase_name+'</div></div>');
	$('#customlinePhase-input').val("");
       });
$('#z-addlinePhase-btn').on('click', function (ele) {
	var z_selected_line_items = document.getElementsByClassName('z-lineSelect');
    var check_for_Total_item = $(current_element).parent().parent().parent().children().last().text();
    var object_val = {};
	for(var val=0;val<z_selected_line_items.length;val++){
		if(z_selected_line_items[val].previousElementSibling.checked){
			var lineitem = z_selected_line_items[val].innerText;
				configData.forEach(function (obj_toinsert,index_insert){
					if(obj_toinsert.phaseName == $(current_element).prev().text()){
						obj_toinsert.phaseName = $(current_element).prev().text();
                        object_val.phase = lineitem;
                        object_val.isSelected = true;
                        object_val.lineInput = [];
                        obj_toinsert.lineItems.push(object_val);
                        object_val = {};
					}
				});
		}
	}
	z_configJson_data[0].wellConfig = JSON.stringify(configData);
	$('#z-addlinePhase-modal').modal('hide');
	$('.z-phaseSection').remove();
	$('.z-rightSection-active').removeClass('z-rightSection-active');
	z_AfeEstimation();
});
}
function z_EstimateBack(el){
	if(el.innerText == "prev" || el == "prev"){
    	$('#z-estimate-header').removeClass('z-rightSection-active');
    	//$('.z-phaseSection').remove();
    		$('#z-days-level2-config1').removeClass('d-none');
    		$('#z-days-level2-config1').removeClass('d-none');
    			$('.z-level2-active').addClass('d-none');
    			$('#z-wi-Estimation-back').text('back');
    			$('#z-wellSection-AfeEstimate-btn').text('next');
				var panel_text = $('.z-estimate-panel').text();
    			if(panel_text == "AFE Estimation"){
    				$('#z-afe-timeline-panel').click();
    				$('.z-estimate-panel').removeClass('z-estimate-panel');
    				$('#z-afe-timeline-panel').addClass('z-estimate-panel');
    			}
    			else if(panel_text == "Well Timeline"){
    				$('#z-afe-estimateComponent-panel').click();
    				$('.z-estimate-panel').removeClass('z-estimate-panel');
    				$('#z-afe-estimateComponent-panel').addClass('z-estimate-panel');
    			}

}
	else{
		$('.z-rightSection-active').removeClass('z-rightSection-active');
		$('.z-phaseSection').remove();
		if(panel_text == "AFE Components"){
			$('#z-afe-estimateLevel-panel').click();
			
		}
		else if(panel_text == "Well Timeline"){
			$('#z-afe-estimateComponent-panel').click();
			
		}
		else if(panel_text == "AFE Estimation"){
			$('#z-afe-timeline-panel').click();
		}
		
		//$('#z-afe-Configsection').addClass('z-rightSection-active');
		//z_Selected_Array = [];
	}
}
var days_enter = [];
function z_totalDays(el){
	if(!(isNaN(el.value))){
		 
		if($(el).parent().children().next().length > 0){
			$(el).parent().children().next().remove();
		}
		var z_days;
		if(z_level == "Level1"){
			z_days = document.getElementsByClassName('z-level1-day-input');
		}
		else{
			z_days = document.getElementsByClassName('z-wellDay');
		}
		
		var tot_days = 0;
		for(var i=0;i<z_days.length;i++){
			tot_days = tot_days + Number(z_days[i].value);
		}
		$('#z-totalDays').val(tot_days.toString());
	}
	else{
		if($(el).parent().children().next().length > 0){
			$(el).parent().children().next().remove();
		}
		$(el).parent().append('<div id="z-errorday" class="error">Enter only Numbers</div>');
		
	}
var total_days = $('.z-level1-day-input');
for(var input = 0;input < total_days.length;input++){
    if(days_enter != null){
        if(days_enter[input] != null){
            days_enter[input] = total_days[input].value;
        }
    }
    
}
if(days_enter != null){
    if(days_enter[total_days.length] != null){
        days_enter[total_days.length] = tot_days;

    }
}
}
var z_estimate_currency;
function z_rigCal(el){
	//z_estimate_currency = $('#z-wellid-estimate').attr('currency');
	z_estimate_currency = "$";
	var z_cost_input;
	if(el.value){
		if($(el).parent().children().next().length > 0){
			$(el).parent().children().next().remove();
		}
			z_cost_input = el.value;
	var selected_element = el.getAttribute('select-input');
	var input1,input2;
	var str_input1,str_input2,subtotal;
	var add_result = 0;
	var total_days = $('#z-totalDays').val();
	var total_Element=0;
	var grant_total=0;
	
	var code = 'result'+el.getAttribute('code');
	var sub_total = document.getElementsByClassName(code);
	var grant_total_class =  'finalresult'+el.getAttribute('code');
	var grant_total_element = document.getElementsByClassName(grant_total_class);
			if(!(total_days == "") && !(total_days == null)){
				x = Number(total_days);
			}
			else{
				x = 0;
			}
			if(selected_element){
					if(selected_element =="0"){
						str_input1 = $(el).val();
						str_input2 = $(el).parent().next().children().val();
						str_input1 = str_input1.replace(/  [^\w\s]/gi, '');
						str_input1 = str_input1.replace(/,/gi, '');
						
						str_input2 = str_input2.replace(/  [^\w\s]/gi, '');
						str_input2 = str_input2.replace(/,/gi, '');
						input1 = Number(str_input1.trim());
						input2 = Number(str_input2.trim());
						add_result = (x*input1)+input2;
						var add_result1 = add_result.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
						add_result1 = add_result1 + " "+z_estimate_currency;
						$(el).parent().next().next().text(add_result1);
					
					}
					else if(selected_element =="1"){
						str_input1 = $(el).parent().prev().children().val();
						str_input1 = str_input1.replace(/  [^\w\s]/gi, '');
						str_input1 = str_input1.replace(/,/gi, '');
						str_input2 = $(el).val();
						str_input2 = str_input2.replace(/  [^\w\s]/gi, '');
						str_input2 = str_input2.replace(/,/gi, '');
						
						input2 = Number(str_input2);
						input1 = Number(str_input1);
						add_result = (x*input1)+input2;
						var add_result2 = add_result.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
						add_result2 = add_result2 + " "+z_estimate_currency;
						$(el).parent().next().text(add_result2);
					
					}
			for(var val=0;val<sub_total.length;val++){
				subtotal = sub_total[val].innerText;
				subtotal = subtotal.replace(/,/gi, '');
				subtotal = subtotal.replace(/[^\w\s]/gi, '');
				total_Element = total_Element + Number(subtotal.trim());
			}
				grant_total_element[0].innerText = total_Element.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")+" "+z_estimate_currency;
			}

}
	/* else{
			if($(el).parent().children().next().length > 0){
				$(el).parent().children().next().remove();
			}
				z_cost_input = el.value;
				z_cost_input = z_cost_input.replace(/,/g, '');
				z_cost_input = z_cost_input.split(z_estimate_currency)[0].trim();
				$(el).val(el.value.replace(/,/g, ''));
				$(el).val(el.value.replace(/  [^\w\s]/gi, ''));
		//$(el).parent().append('<div id="z-error-rig" class="error">Enter only Numbers</div>');
	} */
				z_contigency($('#z-estimate-contigencyDays-data'));
				
				var key_val =  $(el).attr('key');
	if(key_val == "true"){
		
			if(el.value.includes(z_estimate_currency)){
				//el.value = el.value.replace(/  /g, '');
				el.value = el.value.replace(/  [^\w\s]/gi, '');
				el.value = el.value.trim();
				el.value = el.value.substr(0,el.value.length-1);
			}
			el.value = el.value.replace(/,/gi, '');
			el.value = el.value.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
			el.value = el.value + "  "+z_estimate_currency;
		
	}
	else{
		
			if(el.value.includes(z_estimate_currency)){
				el.value = el.value.replace(/  /g, '');
				el.value = el.value.replace(/[^\w\s]/gi, '');
			
				//el.value = el.value.substr(0,el.value.length-2);
			}
			el.value = el.value.replace(/,/gi, '');
			el.value = el.value.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
			el.value = el.value.trim() + "  "+z_estimate_currency;
		
	}
}
var contigencyVal;
var taxValue;
var contigencyPercent;
var taxPercent;
function z_contigency(el){
	if(!(isNaN(el.value)) || (el[0].value == "") || !(isNaN(el[0].value))){
		if($(el).parent().children().next().length > 0){
			$(el).parent().children().next().remove();
        }
        
	var x = document.getElementsByClassName('z-contigency');
    var contigency1;
    contigencyVal = x[0].value;
	(x[0].value =="" ? contigency1=0 : contigency1 = Number(x[0].value));
	//(x[1].value =="" ? contigency2=0 : contigency2 = Number(x[1].value));
	var contigency = contigency1;
	var z_all_subtotals = document.getElementsByClassName('z-phase1');
	var z_total = 0;
	var z_all_sub_total;
	for(var total=0;total<z_all_subtotals.length;total++){
		z_all_sub_total = z_all_subtotals[total].innerText;
		z_all_sub_total = z_all_sub_total.replace(/,/gi, '');
		z_all_sub_total = z_all_sub_total.replace(/[^\w\s]/gi, '');
		z_total = z_total+Number(z_all_sub_total.trim());
	}
	var z_contigency_percent = (z_total*contigency)/100;
	var z_final_cont = z_contigency_percent.toString().split(".")[0].trim();
    $('#z-contigencyresult').text(z_final_cont.replace(/\B(?=(\d{3})+(?!\d))/g, ",")+" "+z_estimate_currency);
    contigencyPercent = z_final_cont.replace(/\B(?=(\d{3})+(?!\d))/g, ",")+" "+z_estimate_currency;
	z_levy($('#z-estimate-levyDays-data'));
}
else{
	if($(el).parent().children().next().length > 0){
		$(el).parent().children().next().remove();
	}
	$(el).parent().append('<div id="z-error-contigency" class="error">Enter only Numbers</div>');
}
}
function z_levy(el){
	if(!(isNaN(el.value)) || (el[0].value == "") || !(isNaN(el[0].value))){
		if($(el).parent().children().next().length > 0){
			$(el).parent().children().next().remove();
        }
        
	var levy = document.getElementsByClassName('z-levy');
	var z_levy = 0;
    var levy1;
    taxValue = levy[0].value;
	(levy[0].value =="" ? levy1=0 : levy1 = Number(levy[0].value));
	//(levy[1].value =="" ? levy2=0 : levy2 = Number(levy[1].value));
	var total_levy = levy1;
	var z_subTotal_val =  document.getElementsByClassName('z-phase1');
	var allsub_levy_total;
	for(var total1=0;total1<z_subTotal_val.length;total1++){
		allsub_levy_total = z_subTotal_val[total1].innerText;
		allsub_levy_total = allsub_levy_total.replace(/,/gi, '');
		allsub_levy_total = allsub_levy_total.replace(/[^\w\s]/gi, '');
		z_levy = z_levy+Number(allsub_levy_total.trim());
	}
	var z_levy_total = 0;
	var contigencyVal = $('#z-contigencyresult').text();
	contigencyVal = contigencyVal.replace(/[^\w\s]/gi, '');
	contigencyVal = contigencyVal.replace(/,/gi, '');
	
	z_levy_total = ((z_levy+Number(contigencyVal))*total_levy)/100;
	var z_final_levy = z_levy_total.toString().split(".")[0].trim();
    $('#z-total-levy').text(z_final_levy.replace(/\B(?=(\d{3})+(?!\d))/g, ",")+" "+z_estimate_currency);
    taxPercent = z_final_levy.replace(/\B(?=(\d{3})+(?!\d))/g, ",")+" "+z_estimate_currency;
	var result_contigency = $('#z-contigencyresult').text();
	result_contigency = result_contigency.replace(/[^\w\s]/gi, '');
	result_contigency = result_contigency.replace(/,/gi, '');
	var grantTotal = z_levy+z_levy_total+Number(result_contigency.trim());
	var final_grant_total = grantTotal.toString().split(".")[0];
	$('#z-grantTotal').text(final_grant_total.replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " " + z_estimate_currency);
}
	else{
		if($(el).parent().children().next().length > 0){
			$(el).parent().children().next().remove();
		}
		$(el).parent().append('<div id="z-error-levy" class="error">Enter only Numbers</div>');
	}
	}
var z_rateArray = [];
var z_rateSubArray = [];
var z_wellcal_data = [];
function z_saveRates(el){
	z_rateArray = [];
	z_rateSubArray = [];
	var z_phase_Select = $(el).attr('phase');
	var z_phase1_Select = $(el).attr('level1-phase');
	var z_rate_length = Number($(el).attr('rateLength'));
    var z_rate;
    var current_phase;
	if(z_level == "Level2"){
		for(var y=0;y<z_rate_length;y++){
			z_rate = $('.z-costTotal-calc'+y+z_phase_Select);
			for(var rate =0 ; rate < z_rate.length;rate++){
				z_rateSubArray.push(z_rate[rate].value);
			}
			z_rateArray.push(z_rateSubArray);
			z_rateSubArray = [];
			 
		}
	}
	else if(z_level == "Level3"){
		var x = z_selected_leveldata[Number(z_phase1_Select)].subLevels[Number(z_phase_Select)].totalCostItem;
		var index = 0;
        var level2index = 0;
        var rate_obj = {};
        current_phase = $(rig_element).attr('current-phase');
        if(current_phase == "2"){
            x.forEach(function(val1,ind1){
                if(val1.subPhase != null){
                    if(val1.subPhase.length > 0){
                        val1.subPhase.forEach(function(val2,ind2){
                            z_rate = $('.z-costTotal-calc'+index+""+ind2+""+z_phase_Select);
                            for(var rate =0 ; rate < z_rate.length;rate++){
                                rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                rate_obj.value = z_rate[rate].value;
                                rate_obj.index = $(z_rate[rate]).attr('index');
                                z_rateSubArray.push(rate_obj);
                                rate_obj = {};
                            }
                            z_rateArray.push(z_rateSubArray);
                            z_rateSubArray = [];
                        });
                    }
                    else{
                        z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                        for(var rate =0 ; rate < z_rate.length;rate++){
                            rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                rate_obj.value = z_rate[rate].value;
                                rate_obj.index = $(z_rate[rate]).attr('index');
                            z_rateSubArray.push(rate_obj);
                            rate_obj = {};
                        }
                        z_rateArray.push(z_rateSubArray);
                        z_rateSubArray = [];
                        //index = index + 1;
                    }
                }
                
                index = index + 1;
            });
        }
        else if(current_phase == "3"){
            var z_level3_element = $(rig_element).text();
            x.forEach(function(val1,ind1){
                if(val1.phase == z_level3_element){
                    if(val1.subPhase != null){
                        if(val1.subPhase.length > 0){
                            val1.subPhase.forEach(function(val2,ind2){
                                    z_rate = $('.z-costTotal-calc'+index+""+ind2+""+z_phase_Select);
                                    for(var rate =0 ; rate < z_rate.length;rate++){
                                        rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                        rate_obj.value = z_rate[rate].value;
                                        rate_obj.index = $(z_rate[rate]).attr('index');
                                        z_rateSubArray.push(rate_obj);
                                        rate_obj = {};
                                    }
                                    z_rateArray.push(z_rateSubArray);
                                    z_rateSubArray = [];
                                
                               
                            });
                        }
                        else{
                            z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                            for(var rate =0 ; rate < z_rate.length;rate++){
                                rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                    rate_obj.value = z_rate[rate].value;
                                    rate_obj.index = $(z_rate[rate]).attr('index');
                                z_rateSubArray.push(rate_obj);
                                rate_obj = {};
                            }
                            z_rateArray.push(z_rateSubArray);
                            z_rateSubArray = [];
                            //index = index + 1;
                        }
                    }
                    index = index + 1;
                }
                
                
                
            });
        }
	
	
	}
	else if(z_level == "Level5"){
		var x = z_selected_leveldata[Number(z_phase1_Select)].subLevels[Number(z_phase_Select)].totalCostItem;
		var index = 0;
		var input_selectIndex = 0;
        var level2index = 0;
        var rate_obj = {};
        var level3_Name;
        var level4_Name;
        var level2_Name;
        var level_3index;
        var level_4Index;
		var index2;
		var index3;
		var index4;
        var z_subLevels = z_selected_leveldata[Number(z_phase1_Select)].subLevels[Number(z_phase_Select)].subLevels;
		var x_rate_length;
	current_phase = $(rig_element).attr('current-phase');
	if(current_phase == "2"){
                x.forEach(function(val1,ind1){
                    index2 = z_subLevels.findIndex(function(obj){
						return obj.phaseName == val1.phase && obj.isSelected;
					});
					if(index2 != -1){
						if(val1.subPhase != null){
                        if(val1.subPhase.length > 0){
                            val1.subPhase.forEach(function(val2,ind2){
                                index3 = z_subLevels[index2].subLevels.findIndex(function(obj){
						return obj.phaseName == val2.phase && obj.isSelected;
					});
					if(index3 != -1){
						if(val2.subPhase != null){
                                    val2.subPhase.forEach(function(level4Obj,level_4index){
                                        //z_rate = $('.z-costTotal-calc'+index+""+level_4index+""+z_phase_Select);
										 index4 = z_subLevels[index2].subLevels[index3].subLevels.findIndex(function(obj){
						return obj.phaseName == level4Obj.phase && obj.isSelected;
					});
					if(index4 != -1){
						if(level4Obj.subPhase != null){
											level4Obj.subPhase.forEach(function(level5Obj,level_5index){
											  	
												 z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                        for(var rate =0 ; rate < z_rate.length;rate++){
                                            rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                            rate_obj.value = z_rate[rate].value;
                                            rate_obj.index = $(z_rate[rate]).attr('index');
                                            z_rateSubArray.push(rate_obj);
                                            rate_obj = {};
                                        }
                                        z_rateArray.push(z_rateSubArray);
                                        z_rateSubArray = [];
                                        input_selectIndex = input_selectIndex + 1;
											});
										}
										else{
											 z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                        for(var rate =0 ; rate < z_rate.length;rate++){
                                            rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                            rate_obj.value = z_rate[rate].value;
                                            rate_obj.index = $(z_rate[rate]).attr('index');
                                            z_rateSubArray.push(rate_obj);
                                            rate_obj = {};
                                        }
                                        z_rateArray.push(z_rateSubArray);
                                        z_rateSubArray = [];
                                        input_selectIndex = input_selectIndex + 1;
										}
					}
										
                                       
                                    });
                                }
                                else{
    
                                    //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                                    z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                    for(var rate =0 ; rate < z_rate.length;rate++){
                                        rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                        rate_obj.value = z_rate[rate].value;
                                        rate_obj.index = $(z_rate[rate]).attr('index');
                                        z_rateSubArray.push(rate_obj);
                                        rate_obj = {};
                                    }
                                    z_rateArray.push(z_rateSubArray);
                                    z_rateSubArray = [];
                                    input_selectIndex = input_selectIndex + 1;
                                    //index = index + 1;
                                
                                }
					}
								
                                
                            });
                        }
                        else{
                            //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                            z_rate = $('.z-costTotal-calc'+input_selectIndex);
                            for(var rate =0 ; rate < z_rate.length;rate++){
                                rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                rate_obj.value = z_rate[rate].value;
                                rate_obj.index = $(z_rate[rate]).attr('index');
                                z_rateSubArray.push(rate_obj);
                                rate_obj = {};
                            }
                            z_rateArray.push(z_rateSubArray);
                            z_rateSubArray = [];
                            input_selectIndex = input_selectIndex + 1;
                            //index = index + 1;
                        }
                    }
                    else{
    
                        //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                        z_rate = $('.z-costTotal-calc'+input_selectIndex);
                        for(var rate =0 ; rate < z_rate.length;rate++){
                            rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                            rate_obj.value = z_rate[rate].value;
                            rate_obj.index = $(z_rate[rate]).attr('index');
                            z_rateSubArray.push(rate_obj);
                            rate_obj = {};
                        }
                        z_rateArray.push(z_rateSubArray);
                        z_rateSubArray = [];
                        input_selectIndex = input_selectIndex + 1;
                        //index = index + 1;
                    
                    }
					index = index + 1;
					}
					
                    
                    
                });
            }
			            else if(current_phase == "3"){
                level3_Name = $(rig_element).text();
                x.forEach(function(val1,ind1){
                    if(val1.phase == level3_Name){
                        level_3index = z_subLevels.findIndex(function(val){
                            return val.phaseName == level3_Name;
                        });
                        if(level_3index != -1){
                            if(val1.subPhase != null){
                                if(val1.subPhase.length > 0){
                                    val1.subPhase.forEach(function(val2,ind2){
                                        level_4Index = z_subLevels[level_3index].subLevels.findIndex(function(valOb4){
                                            return valOb4.phaseName == val2.phase;
                                        });
                                        if(level_4Index != -1){
                                            if(z_subLevels[level_3index].subLevels[level_4Index].isSelected){
                                                if(val2.subPhase != null){
                                                    val2.subPhase.forEach(function(level4Obj,level_4index){
                                                        //z_rate = $('.z-costTotal-calc'+index+""+level_4index+""+z_phase_Select);
                                                        if(level4Obj.subPhase != null){
															level4Obj.subPhase.forEach(function(level5){
																z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                                        for(var rate =0 ; rate < z_rate.length;rate++){
                                                            rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                                            rate_obj.value = z_rate[rate].value;
                                                            rate_obj.index = $(z_rate[rate]).attr('index');
                                                            z_rateSubArray.push(rate_obj);
                                                            rate_obj = {};
                                                        }
                                                        z_rateArray.push(z_rateSubArray);
                                                        z_rateSubArray = [];
                                                        input_selectIndex = input_selectIndex + 1;
															});
														}
														else{
															z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                                        for(var rate =0 ; rate < z_rate.length;rate++){
                                                            rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                                            rate_obj.value = z_rate[rate].value;
                                                            rate_obj.index = $(z_rate[rate]).attr('index');
                                                            z_rateSubArray.push(rate_obj);
                                                            rate_obj = {};
                                                        }
                                                        z_rateArray.push(z_rateSubArray);
                                                        z_rateSubArray = [];
                                                        input_selectIndex = input_selectIndex + 1;
														}
														
                                                    });
                                                }
                                                else{
                    
                                                    //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                                                    z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                                    for(var rate =0 ; rate < z_rate.length;rate++){
                                                        rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                                        rate_obj.value = z_rate[rate].value;
                                                        rate_obj.index = $(z_rate[rate]).attr('index');
                                                        z_rateSubArray.push(rate_obj);
                                                        rate_obj = {};
                                                    }
                                                    z_rateArray.push(z_rateSubArray);
                                                    z_rateSubArray = [];
                                                    input_selectIndex = input_selectIndex + 1;
                                                    //index = index + 1;
                                                
                                                }
                                            }
                                        }
                                           
                                    });
                                }
                                else{
                                    //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                                    z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                    for(var rate =0 ; rate < z_rate.length;rate++){
                                        rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                        rate_obj.value = z_rate[rate].value;
                                        rate_obj.index = $(z_rate[rate]).attr('index');
                                        z_rateSubArray.push(rate_obj);
                                        rate_obj = {};
                                    }
                                    z_rateArray.push(z_rateSubArray);
                                    z_rateSubArray = [];
                                    input_selectIndex = input_selectIndex + 1;
                                    //index = index + 1;
                                }
                            }
                            else{
            
                                //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                                z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                for(var rate =0 ; rate < z_rate.length;rate++){
                                    rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                    rate_obj.value = z_rate[rate].value;
                                    rate_obj.index = $(z_rate[rate]).attr('index');
                                    z_rateSubArray.push(rate_obj);
                                    rate_obj = {};
                                }
                                z_rateArray.push(z_rateSubArray);
                                z_rateSubArray = [];
                                input_selectIndex = input_selectIndex + 1;
                                //index = index + 1;
                            
                            }
                            
                            index = index + 1;
                        }
                        
                    }
                
                });
            }
	}
	else if(z_level == "Level4"){
		var x = z_selected_leveldata[Number(z_phase1_Select)].subLevels[Number(z_phase_Select)].totalCostItem;
		var index = 0;
		var input_selectIndex = 0;
        var level2index = 0;
        var rate_obj = {};
        var level3_Name;
        var level4_Name;
        var level2_Name;
        var level_3index;
        var level_4Index;
        var z_subLevels = z_selected_leveldata[Number(z_phase1_Select)].subLevels[Number(z_phase_Select)].subLevels;
		// if(z_selected_leveldata[Number(z_phase1_Select)].subLevels[Number(z_phase_Select)].phaseName == "Rig Rate"){
		// 	for(var y=0;y<z_rate_length;y++){
		// 		z_rate = $('.z-costTotal-calc'+y+z_phase_Select);
		// 		for(var rate =0 ; rate < z_rate.length;rate++){
		// 			z_rateSubArray.push(z_rate[rate].value);
		// 		}
		// 		z_rateArray.push(z_rateSubArray);
		// 		z_rateSubArray = [];
				 
		// 	}
		// }
		//else{
            current_phase = $(rig_element).attr('current-phase');
            if(current_phase == "2"){
                x.forEach(function(val1,ind1){
                    if(val1.subPhase != null){
                        if(val1.subPhase.length > 0){
                            val1.subPhase.forEach(function(val2,ind2){
                                if(val2.subPhase != null){
                                    val2.subPhase.forEach(function(level4Obj,level_4index){
                                        //z_rate = $('.z-costTotal-calc'+index+""+level_4index+""+z_phase_Select);
                                        z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                        for(var rate =0 ; rate < z_rate.length;rate++){
                                            rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                            rate_obj.value = z_rate[rate].value;
                                            rate_obj.index = $(z_rate[rate]).attr('index');
                                            z_rateSubArray.push(rate_obj);
                                            rate_obj = {};
                                        }
                                        z_rateArray.push(z_rateSubArray);
                                        z_rateSubArray = [];
                                        input_selectIndex = input_selectIndex + 1;
                                    });
                                }
                                else{
    
                                    //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                                    z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                    for(var rate =0 ; rate < z_rate.length;rate++){
                                        rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                        rate_obj.value = z_rate[rate].value;
                                        rate_obj.index = $(z_rate[rate]).attr('index');
                                        z_rateSubArray.push(rate_obj);
                                        rate_obj = {};
                                    }
                                    z_rateArray.push(z_rateSubArray);
                                    z_rateSubArray = [];
                                    input_selectIndex = input_selectIndex + 1;
                                    //index = index + 1;
                                
                                }
                                
                            });
                        }
                        else{
                            //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                            z_rate = $('.z-costTotal-calc'+input_selectIndex);
                            for(var rate =0 ; rate < z_rate.length;rate++){
                                rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                rate_obj.value = z_rate[rate].value;
                                rate_obj.index = $(z_rate[rate]).attr('index');
                                z_rateSubArray.push(rate_obj);
                                rate_obj = {};
                            }
                            z_rateArray.push(z_rateSubArray);
                            z_rateSubArray = [];
                            input_selectIndex = input_selectIndex + 1;
                            //index = index + 1;
                        }
                    }
                    else{
    
                        //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                        z_rate = $('.z-costTotal-calc'+input_selectIndex);
                        for(var rate =0 ; rate < z_rate.length;rate++){
                            rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                            rate_obj.value = z_rate[rate].value;
                            rate_obj.index = $(z_rate[rate]).attr('index');
                            z_rateSubArray.push(rate_obj);
                            rate_obj = {};
                        }
                        z_rateArray.push(z_rateSubArray);
                        z_rateSubArray = [];
                        input_selectIndex = input_selectIndex + 1;
                        //index = index + 1;
                    
                    }
                    
                    index = index + 1;
                });
            }
            else if(current_phase == "3"){
                level3_Name = $(rig_element).text();
                x.forEach(function(val1,ind1){
                    if(val1.phase == level3_Name){
                        level_3index = z_subLevels.findIndex(function(val){
                            return val.phaseName == level3_Name;
                        });
                        if(level_3index != -1){
                            if(val1.subPhase != null){
                                if(val1.subPhase.length > 0){
                                    val1.subPhase.forEach(function(val2,ind2){
                                        level_4Index = z_subLevels[level_3index].subLevels.findIndex(function(valOb4){
                                            return valOb4.phaseName == val2.phase;
                                        });
                                        if(level_4Index != -1){
                                            if(z_subLevels[level_3index].subLevels[level_4Index].isSelected){
                                                if(val2.subPhase != null){
                                                    val2.subPhase.forEach(function(level4Obj,level_4index){
                                                        //z_rate = $('.z-costTotal-calc'+index+""+level_4index+""+z_phase_Select);
                                                        z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                                        for(var rate =0 ; rate < z_rate.length;rate++){
                                                            rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                                            rate_obj.value = z_rate[rate].value;
                                                            rate_obj.index = $(z_rate[rate]).attr('index');
                                                            z_rateSubArray.push(rate_obj);
                                                            rate_obj = {};
                                                        }
                                                        z_rateArray.push(z_rateSubArray);
                                                        z_rateSubArray = [];
                                                        input_selectIndex = input_selectIndex + 1;
                                                    });
                                                }
                                                else{
                    
                                                    //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                                                    z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                                    for(var rate =0 ; rate < z_rate.length;rate++){
                                                        rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                                        rate_obj.value = z_rate[rate].value;
                                                        rate_obj.index = $(z_rate[rate]).attr('index');
                                                        z_rateSubArray.push(rate_obj);
                                                        rate_obj = {};
                                                    }
                                                    z_rateArray.push(z_rateSubArray);
                                                    z_rateSubArray = [];
                                                    input_selectIndex = input_selectIndex + 1;
                                                    //index = index + 1;
                                                
                                                }
                                            }
                                        }
                                           
                                    });
                                }
                                else{
                                    //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                                    z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                    for(var rate =0 ; rate < z_rate.length;rate++){
                                        rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                        rate_obj.value = z_rate[rate].value;
                                        rate_obj.index = $(z_rate[rate]).attr('index');
                                        z_rateSubArray.push(rate_obj);
                                        rate_obj = {};
                                    }
                                    z_rateArray.push(z_rateSubArray);
                                    z_rateSubArray = [];
                                    input_selectIndex = input_selectIndex + 1;
                                    //index = index + 1;
                                }
                            }
                            else{
            
                                //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                                z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                for(var rate =0 ; rate < z_rate.length;rate++){
                                    rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                    rate_obj.value = z_rate[rate].value;
                                    rate_obj.index = $(z_rate[rate]).attr('index');
                                    z_rateSubArray.push(rate_obj);
                                    rate_obj = {};
                                }
                                z_rateArray.push(z_rateSubArray);
                                z_rateSubArray = [];
                                input_selectIndex = input_selectIndex + 1;
                                //index = index + 1;
                            
                            }
                            
                            index = index + 1;
                        }
                        
                    }
                
                });
            }
            else if(current_phase == "4"){
                level3_Name = $(rig_element).attr('level3-name');
                level4_Name = $(rig_element).text();
                x.forEach(function(val1,ind1){
                    if(val1.phase == level3_Name){
                        if(val1.subPhase != null){
                            if(val1.subPhase.length > 0){
                                val1.subPhase.forEach(function(val2,ind2){
                                    if(val2.phase == level4_Name){
                                        if(val2.subPhase != null){
                                            val2.subPhase.forEach(function(level4Obj,level_4index){
                                                //z_rate = $('.z-costTotal-calc'+index+""+level_4index+""+z_phase_Select);
                                                    z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                                    for(var rate =0 ; rate < z_rate.length;rate++){
                                                        rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                                        rate_obj.value = z_rate[rate].value;
                                                        rate_obj.index = $(z_rate[rate]).attr('index');
                                                        z_rateSubArray.push(rate_obj);
                                                        rate_obj = {};
                                                    }
                                                    z_rateArray.push(z_rateSubArray);
                                                    z_rateSubArray = [];
                                                    input_selectIndex = input_selectIndex + 1;
                                                
                                               
                                            });
                                        }
                                        else{
            
                                            //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                                            z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                            for(var rate =0 ; rate < z_rate.length;rate++){
                                                rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                                rate_obj.value = z_rate[rate].value;
                                                rate_obj.index = $(z_rate[rate]).attr('index');
                                                z_rateSubArray.push(rate_obj);
                                                rate_obj = {};
                                            }
                                            z_rateArray.push(z_rateSubArray);
                                            z_rateSubArray = [];
                                            input_selectIndex = input_selectIndex + 1;
                                            //index = index + 1;
                                        
                                        }
                                    }
                                    
                                    
                                });
                            }
                            else{
                                //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                                z_rate = $('.z-costTotal-calc'+input_selectIndex);
                                for(var rate =0 ; rate < z_rate.length;rate++){
                                    rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                    rate_obj.value = z_rate[rate].value;
                                    rate_obj.index = $(z_rate[rate]).attr('index');
                                    z_rateSubArray.push(rate_obj);
                                    rate_obj = {};
                                }
                                z_rateArray.push(z_rateSubArray);
                                z_rateSubArray = [];
                                input_selectIndex = input_selectIndex + 1;
                                //index = index + 1;
                            }
                        }
                        else{
        
                            //z_rate = $('.z-costTotal-calc'+index+""+z_phase_Select);
                            z_rate = $('.z-costTotal-calc'+input_selectIndex);
                            for(var rate =0 ; rate < z_rate.length;rate++){
                                rate_obj.phaseName = $(z_rate[rate]).attr('line-item');
                                rate_obj.value = z_rate[rate].value;
                                rate_obj.index = $(z_rate[rate]).attr('index');
                                z_rateSubArray.push(rate_obj);
                                rate_obj = {};
                            }
                            z_rateArray.push(z_rateSubArray);
                            z_rateSubArray = [];
                            input_selectIndex = input_selectIndex + 1;
                            //index = index + 1;
                        
                        }
                        index = index + 1;
                    }
                });
            }
		
		//}
	}
	z_rateArray.push($('#grant-value-cost').text());
	var z_modal_title =$('#z-cost-modal-title').text();
//    if(z_configJson_data.length > 1){
//    	z_wellcal_data = JSON.parse(z_configJson_data[3].wellConfig);
//    }
//    else{
//    	z_wellcal_data = JSON.parse(z_configJson_data[0].wellConfig);
//    }
	if(z_level == "Level2"){
		z_selected_leveldata.forEach(function(obj,index_val){
            if(index_val == $(rig_element).attr('base-level')){
                obj.subLevels.forEach(function(obj1,index_val1){
                    if(obj1.phaseName == z_modal_title){
                        obj1.totalCostItem.forEach(function(obj3,m2){
                            for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
                                obj3.rateValue[title_index] = z_rateArray[m2][title_index];	
                            }
                            obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1];
                            //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                            
                        });
                    }
                });
            }
         
	    });
		z_sel_config.forEach(function(obj,index_val){
            if(index_val == $(rig_element).attr('base-level')){
                obj.subLevels.forEach(function(obj1,index_val1){
                    if(obj1.phaseName == z_modal_title){
                        obj1.totalCostItem.forEach(function(obj3,m2){
                            for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
                                obj3.rateValue[title_index] = z_rateArray[m2][title_index];	
                            }
                            obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1];
                            //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                            
                        });
                    }
                });
            }
          
	    });
	}
	else if(z_level == "Level5"){
		var select_index1 = 0;
        var select_index2 = 0;
        var level3_name;
        var level4_name;
		  var level5_name;
		  var findIndex1 = -1;
		  var findIndex2 = -1;
		  var findIndex3 = -1;
		  var findIndex4 = -1;
		var z_subLevels1 = z_selected_leveldata[Number(z_phase1_Select)].subLevels[Number(z_phase_Select)].subLevels;

        if($(rig_element).attr('current-phase') == "2"){
            z_modal_title = $('#z-cost-modal-title').text();
            z_selected_leveldata.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                findIndex1 = z_subLevels1.findIndex(function(test1){
									return test1.phaseName == obj3.phase && test1.isSelected;
								});
								if(findIndex1 != -1){
										if(obj3.subPhase != null){
                                    if(obj3.subPhase.length > 0){
                                        obj3.subPhase.forEach(function(val_obj,index_Val3){
                                             findIndex2 = z_subLevels1[findIndex1].subLevels.findIndex(function(test2){
									return test2.phaseName == val_obj.phase && test2.isSelected;
								});
								if(findIndex2 != -1){
									if(val_obj.subPhase != null){
                                                val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                    findIndex3 = z_subLevels1[findIndex1].subLevels[findIndex2].subLevels.findIndex(function(test3){
									return test3.phaseName == levelob_4.phase && test3.isSelected;
								});
								if(findIndex3 != -1){
									if(levelob_4.subPhase != null){
														levelob_4.subPhase.forEach(function(levelob_5,level_index_5){
															findIndex4 = z_subLevels1[findIndex1].subLevels[findIndex2].subLevels[findIndex3].subLevels.findIndex(function(test4){
									return test4.phaseName == levelob_5.phase;
															});
															if(findIndex4 != -1){
																for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                        if(z_rateArray[select_index1].length > 0){
														levelob_5.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;

														}
                                                    }
                                                    levelob_5.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                    select_index1 = select_index1 + 1;
															}
															
														});
													}
													else{
														for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                        if(z_rateArray[select_index1].length > 0){
														levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;

														}
                                                    }
                                                    levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                    select_index1 = select_index1 + 1;
													}
								}
													
													
                                                });
                                            }
                                            else{
                                                for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                    if(z_rateArray[select_index1].length > 0){
														val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
													}
													
                                                }
                                                val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                select_index1 = select_index1 + 1;
                                            }
								}
											
                                        
                                        });
                                    }
                                    else{
                                        for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                             if(z_rateArray[select_index1].length > 0){
												 obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
											 }
												
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                                else{
                                    for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                        if(z_rateArray[select_index1].length > 0){
											obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
										}
											
                                    }
                                    obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                    select_index1 = select_index1 + 1;
                                }
								}
							
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
              
            });
            select_index1 = 0;
            
            z_sel_config.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                findIndex1 = z_subLevels1.findIndex(function(test1){
									return test1.phaseName == obj3.phase && test1.isSelected;
								});
								if(findIndex1 != -1){
									if(obj3.subPhase != null){
                                    if(obj3.subPhase.length > 0){
                                        obj3.subPhase.forEach(function(val_obj,index_Val3){
                                            findIndex2 = z_subLevels1[findIndex1].subLevels.findIndex(function(test2){
									return test2.phaseName == val_obj.phase && test2.isSelected;
								});
											if(findIndex2 != -1){
												if(val_obj.subPhase != null){
                                                val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                    findIndex3 = z_subLevels1[findIndex1].subLevels[findIndex2].subLevels.findIndex(function(test3){
									return test3.phaseName == levelob_4.phase && test3.isSelected;
								});
												if(findIndex3 != -1){
													
													if(levelob_4.subPhase != null){
														levelob_4.subPhase.forEach(function(levelob_5,level_index_5){
															
																findIndex4 = z_subLevels1[findIndex1].subLevels[findIndex2].subLevels[findIndex3].subLevels.findIndex(function(test4){
																									return test4.phaseName == levelob_5.phase;
																															});
															if(findIndex4 != -1){
																for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                        if(z_rateArray[select_index1].length > 0){
														levelob_5.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;

														}
                                                    }
                                                    levelob_5.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                    select_index1 = select_index1 + 1;
															}
															
														});
													}
													else{
														for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                        if(z_rateArray[select_index1].length > 0){
														levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;

														}
                                                    }
                                                    levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                    select_index1 = select_index1 + 1;
													}
												}
                                                });
                                            }
                                            else{
                                                for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                    if(z_rateArray[select_index1].length > 0){
														val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
													}
													
                                                }
                                                val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                select_index1 = select_index1 + 1;
                                            }
											}
											
                                        
                                        });
                                    }
                                    else{
                                        for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                            if(z_rateArray[select_index1].length > 0){
												obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
											}
												
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                                else{
                                    for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                         if(z_rateArray[select_index1].length > 0){
											 obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
										 }
											
                                    }
                                    obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                    select_index1 = select_index1 + 1;
                                }
								}
								
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
               
            });
        }
		else if($(rig_element).attr('current-phase') == "3"){
            z_modal_title = $(rig_element).attr('level2-name');
            level3_name = $(rig_element).text();
            z_selected_leveldata.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.phase == level3_name){
                                    level_3index = z_subLevels.findIndex(function(val3Obj){
                                        return val3Obj.phaseName == level3_name;
                                    });
                                    if(level_3index != -1){
                                        if(obj3.subPhase != null){
                                            if(obj3.subPhase.length > 0){
                                                obj3.subPhase.forEach(function(val_obj,index_Val3){
                                                    level_4Index = z_subLevels[level_3index].subLevels.findIndex(function(valOb4){
                                                        return valOb4.phaseName == val_obj.phase;
                                                    });
                                                    if(level_4Index != -1){
                                                        if(z_subLevels[level_3index].subLevels[level_4Index].isSelected){
                                                            if(val_obj.subPhase != null){
                                                                val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                                    if(levelob_4.subPhase != null){
																		levelob_4.subPhase.forEach(function(level5){
																				for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                        if(z_rateArray[select_index1].length > 0){
																			level5.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																		}
																		
                                                                    }
                                                                    level5.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                                    select_index1 = select_index1 + 1;
																		});
																	}
																	else{
																	for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                        if(z_rateArray[select_index1].length > 0){
																			levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																		}
																		
                                                                    }
                                                                    levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                                    select_index1 = select_index1 + 1;	
																	}
																	
                                                                });
                                                            }
                                                            else{
                                                                for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                                    if(z_rateArray[select_index1].length > 0){
																		val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
																	}
																	
                                                                }
                                                                val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                                select_index1 = select_index1 + 1;
                                                            }
                                                        }
                                                    } 
                                                    
                                                
                                                });
                                            }
                                            else{
                                                for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                                     if(z_rateArray[select_index1].length > 0){
														 obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
													 }
														
                                                }
                                                obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                select_index1 = select_index1 + 1;
                                            }
                                        }
                                        else{
                                            for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                                 if(z_rateArray[select_index1].length > 0){
													 obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
												 }
													
                                            }
                                            obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                            select_index1 = select_index1 + 1;
                                        }
                                    }
                                   
                                }
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
              
            });
            select_index1 = 0;
            
            z_sel_config.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.phase == level3_name){
                                            level_3index = z_subLevels.findIndex(function(val){
                                                return val.phaseName == level3_Name;
                                            });
                                            if(level_3index != -1){
                                                if(obj3.subPhase != null){
                                                    if(obj3.subPhase.length > 0){
                                                        obj3.subPhase.forEach(function(val_obj,index_Val3){
                                                            level_4Index = z_subLevels[level_3index].subLevels.findIndex(function(valOb4){
                                                                return valOb4.phaseName == val_obj.phase;
                                                            });
                                                            if(level_4Index != -1){
                                                                if(z_subLevels[level_3index].subLevels[level_4Index].isSelected){
                                                                    if(val_obj.subPhase != null){
                                                                        val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                                            if(levelob_4.subPhase != null){
																				levelob_4.subPhase.forEach(function(level5){
																							for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                                
																				if(z_rateArray[select_index1].length > 0){
																					level5.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																				}
                                                                                
                                                                            }
                                                                            level5.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                                            select_index1 = select_index1 + 1;
																				});
																			
																			}
																			else{
																			for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                                console.log("error in level4"+levelob_4.phase);
                                                                                console.log("index1"+select_index1);
                                                                                console.log("index2"+title_index1);
																				if(z_rateArray[select_index1].length > 0){
																					levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																				}
                                                                                
                                                                            }
                                                                            levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                                            select_index1 = select_index1 + 1;	
																			}
																			
                                                                        });
                                                                    }
                                                                    else{
                                                                        for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                                            if(z_rateArray[select_index1].length > 0){
																				val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
																			}
																			
                                                                        }
                                                                        val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                                        select_index1 = select_index1 + 1;
                                                                    }
                                                                }
                                                            }
                                                            
                                                        
                                                        });
                                                    }
                                                    else{
                                                        for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                                            if(z_rateArray[select_index1].length > 0){
																obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
															}
																
                                                        }
                                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                        select_index1 = select_index1 + 1;
                                                    }
                                                }
                                                else{
                                                    for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                                        if(z_rateArray[select_index1].length > 0){
															obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
														}
															
                                                    }
                                                    obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                    select_index1 = select_index1 + 1;
                                                }
                                            }
                                    
                                }
                              
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
             
            });
        }
		else if($(rig_element).attr('current-phase') == "4"){
            z_modal_title = $(rig_element).attr('level2-name');
            level3_name = $(rig_element).attr('level3-name');
            level4_name = $(rig_element).text();
            z_selected_leveldata.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.phase == level3_name){
                                    if(obj3.subPhase != null){
                                        if(obj3.subPhase.length > 0){
                                            obj3.subPhase.forEach(function(val_obj,index_Val3){
                                                if(val_obj.phase == level4_name){
                                                    if(val_obj.subPhase != null){
                                                        val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                            if(levelob_4.subPhase != null){
																levelob_4.subPhase.forEach(function(level5){
																	for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                if(z_rateArray[select_index1].length > 0){
																	level5.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																}
																
                                                            }
                                                            level5.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                            select_index1 = select_index1 + 1;
																});
															}
															else{
																for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                if(z_rateArray[select_index1].length > 0){
																	levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																}
																
                                                            }
                                                            levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                            select_index1 = select_index1 + 1;
															}
															
                                                        });
                                                    }
                                                    else{
                                                        for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                            if(z_rateArray[select_index1].length > 0){
																val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
															}
															
                                                        }
                                                        val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                        select_index1 = select_index1 + 1;
                                                    }
                                                }
                                              
                                            
                                            });
                                        }
                                        else{
                                            for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                                if(z_rateArray[select_index1].length > 0){
													obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
												}
													
                                            }
                                            obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                            select_index1 = select_index1 + 1;
                                        }
                                    }
                                    else{
                                        for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                             if(z_rateArray[select_index1].length > 0){
												 obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
											 }
												
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                               
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
              
            });
            select_index1 = 0;
            
            z_sel_config.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.phase == level3_name){
                                    if(obj3.subPhase != null){
                                        if(obj3.subPhase.length > 0){
                                            obj3.subPhase.forEach(function(val_obj,index_Val3){
                                                if(val_obj.phase == level4_name){
                                                    if(val_obj.subPhase != null){
                                                        val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                            if(levelob_4.subPhase != null){
																levelob_4.subPhase.forEach(function(level5){
																	for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                console.log("error in level4"+levelob_4.phase);
                                                                console.log("index1"+select_index1);
                                                                console.log("index2"+title_index1);
																if(z_rateArray[select_index1].length > 0){
																	level5.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																}
                                                                
                                                            }
                                                            level5.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                            select_index1 = select_index1 + 1;
																});
															}
															else{
																for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                console.log("error in level4"+levelob_4.phase);
                                                                console.log("index1"+select_index1);
                                                                console.log("index2"+title_index1);
																if(z_rateArray[select_index1].length > 0){
																	levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																}
                                                                
                                                            }
                                                            levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                            select_index1 = select_index1 + 1;
															}
															
                                                        });
                                                    }
                                                    else{
                                                        for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                            if(z_rateArray[select_index1].length > 0){
																val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
															}
															
                                                        }
                                                        val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                        select_index1 = select_index1 + 1;
                                                    }
                                                }
                                               
                                            
                                            });
                                        }
                                        else{
                                            for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                                if(z_rateArray[select_index1].length > 0){
													obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
												}
													
                                            }
                                            obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                            select_index1 = select_index1 + 1;
                                        }
                                    }
                                    else{
                                        for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                            if(z_rateArray[select_index1].length > 0){
												obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;	
											}
											
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                               
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
             
            });
        }
	}
	else if(z_level == "Level4"){
		var select_index1 = 0;
        var select_index2 = 0;
        var level3_name;
        var level4_name
        if($(rig_element).attr('current-phase') == "2"){
            z_modal_title = $('#z-cost-modal-title').text();
            z_selected_leveldata.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.subPhase != null){
                                    if(obj3.subPhase.length > 0){
                                        obj3.subPhase.forEach(function(val_obj,index_Val3){
                                            if(val_obj.subPhase != null){
                                                val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                    for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                        if(z_rateArray[select_index1].length > 0){
														levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;

														}
                                                    }
                                                    levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                    select_index1 = select_index1 + 1;
                                                });
                                            }
                                            else{
                                                for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                    if(z_rateArray[select_index1].length > 0){
														val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
													}
													
                                                }
                                                val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                select_index1 = select_index1 + 1;
                                            }
                                        
                                        });
                                    }
                                    else{
                                        for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                             if(z_rateArray[select_index1].length > 0){
												 obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
											 }
												
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                                else{
                                    for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                        if(z_rateArray[select_index1].length > 0){
											obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
										}
											
                                    }
                                    obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                    select_index1 = select_index1 + 1;
                                }
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
              
            });
            select_index1 = 0;
            
            z_sel_config.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.subPhase != null){
                                    if(obj3.subPhase.length > 0){
                                        obj3.subPhase.forEach(function(val_obj,index_Val3){
                                            if(val_obj.subPhase != null){
                                                val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                    for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                        console.log("error in level4"+levelob_4.phase);
                                                        console.log("index1"+select_index1);
                                                        console.log("index2"+title_index1);
														if(z_rateArray[select_index1].length > 0){
															levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
														}
                                                        
                                                    }
                                                    levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                    select_index1 = select_index1 + 1;
                                                });
                                            }
                                            else{
                                                for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                    if(z_rateArray[select_index1].length > 0){
														val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
													}
													
                                                }
                                                val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                select_index1 = select_index1 + 1;
                                            }
                                        
                                        });
                                    }
                                    else{
                                        for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                            if(z_rateArray[select_index1].length > 0){
												obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
											}
												
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                                else{
                                    for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                         if(z_rateArray[select_index1].length > 0){
											 obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
										 }
											
                                    }
                                    obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                    select_index1 = select_index1 + 1;
                                }
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
               
            });
        }
        else if($(rig_element).attr('current-phase') == "3"){
            z_modal_title = $(rig_element).attr('level2-name');
            level3_name = $(rig_element).text();
            z_selected_leveldata.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.phase == level3_name){
                                    level_3index = z_subLevels.findIndex(function(val3Obj){
                                        return val3Obj.phaseName == level3_name;
                                    });
                                    if(level_3index != -1){
                                        if(obj3.subPhase != null){
                                            if(obj3.subPhase.length > 0){
                                                obj3.subPhase.forEach(function(val_obj,index_Val3){
                                                    level_4Index = z_subLevels[level_3index].subLevels.findIndex(function(valOb4){
                                                        return valOb4.phaseName == val_obj.phase;
                                                    });
                                                    if(level_4Index != -1){
                                                        if(z_subLevels[level_3index].subLevels[level_4Index].isSelected){
                                                            if(val_obj.subPhase != null){
                                                                val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                                    for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                        if(z_rateArray[select_index1].length > 0){
																			levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																		}
																		
                                                                    }
                                                                    levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                                    select_index1 = select_index1 + 1;
                                                                });
                                                            }
                                                            else{
                                                                for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                                    if(z_rateArray[select_index1].length > 0){
																		val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
																	}
																	
                                                                }
                                                                val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                                select_index1 = select_index1 + 1;
                                                            }
                                                        }
                                                    } 
                                                    
                                                
                                                });
                                            }
                                            else{
                                                for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                                     if(z_rateArray[select_index1].length > 0){
														 obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
													 }
														
                                                }
                                                obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                select_index1 = select_index1 + 1;
                                            }
                                        }
                                        else{
                                            for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                                 if(z_rateArray[select_index1].length > 0){
													 obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
												 }
													
                                            }
                                            obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                            select_index1 = select_index1 + 1;
                                        }
                                    }
                                   
                                }
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
              
            });
            select_index1 = 0;
            
            z_sel_config.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.phase == level3_name){
                                            level_3index = z_subLevels.findIndex(function(val){
                                                return val.phaseName == level3_Name;
                                            });
                                            if(level_3index != -1){
                                                if(obj3.subPhase != null){
                                                    if(obj3.subPhase.length > 0){
                                                        obj3.subPhase.forEach(function(val_obj,index_Val3){
                                                            level_4Index = z_subLevels[level_3index].subLevels.findIndex(function(valOb4){
                                                                return valOb4.phaseName == val_obj.phase;
                                                            });
                                                            if(level_4Index != -1){
                                                                if(z_subLevels[level_3index].subLevels[level_4Index].isSelected){
                                                                    if(val_obj.subPhase != null){
                                                                        val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                                            for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                                console.log("error in level4"+levelob_4.phase);
                                                                                console.log("index1"+select_index1);
                                                                                console.log("index2"+title_index1);
																				if(z_rateArray[select_index1].length > 0){
																					levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																				}
                                                                                
                                                                            }
                                                                            levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                                            select_index1 = select_index1 + 1;
                                                                        });
                                                                    }
                                                                    else{
                                                                        for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                                            if(z_rateArray[select_index1].length > 0){
																				val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
																			}
																			
                                                                        }
                                                                        val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                                        select_index1 = select_index1 + 1;
                                                                    }
                                                                }
                                                            }
                                                            
                                                        
                                                        });
                                                    }
                                                    else{
                                                        for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                                            if(z_rateArray[select_index1].length > 0){
																obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
															}
																
                                                        }
                                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                        select_index1 = select_index1 + 1;
                                                    }
                                                }
                                                else{
                                                    for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                                        if(z_rateArray[select_index1].length > 0){
															obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
														}
															
                                                    }
                                                    obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                    select_index1 = select_index1 + 1;
                                                }
                                            }
                                    
                                }
                              
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
             
            });
        }
        else if($(rig_element).attr('current-phase') == "4"){
            z_modal_title = $(rig_element).attr('level2-name');
            level3_name = $(rig_element).attr('level3-name');
            level4_name = $(rig_element).text();
            z_selected_leveldata.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.phase == level3_name){
                                    if(obj3.subPhase != null){
                                        if(obj3.subPhase.length > 0){
                                            obj3.subPhase.forEach(function(val_obj,index_Val3){
                                                if(val_obj.phase == level4_name){
                                                    if(val_obj.subPhase != null){
                                                        val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                            for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                if(z_rateArray[select_index1].length > 0){
																	levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																}
																
                                                            }
                                                            levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                            select_index1 = select_index1 + 1;
                                                        });
                                                    }
                                                    else{
                                                        for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                            if(z_rateArray[select_index1].length > 0){
																val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
															}
															
                                                        }
                                                        val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                        select_index1 = select_index1 + 1;
                                                    }
                                                }
                                              
                                            
                                            });
                                        }
                                        else{
                                            for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                                if(z_rateArray[select_index1].length > 0){
													obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
												}
													
                                            }
                                            obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                            select_index1 = select_index1 + 1;
                                        }
                                    }
                                    else{
                                        for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                             if(z_rateArray[select_index1].length > 0){
												 obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
											 }
												
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                               
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
              
            });
            select_index1 = 0;
            
            z_sel_config.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.phase == level3_name){
                                    if(obj3.subPhase != null){
                                        if(obj3.subPhase.length > 0){
                                            obj3.subPhase.forEach(function(val_obj,index_Val3){
                                                if(val_obj.phase == level4_name){
                                                    if(val_obj.subPhase != null){
                                                        val_obj.subPhase.forEach(function(levelob_4,level_index_4){
                                                            for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                                console.log("error in level4"+levelob_4.phase);
                                                                console.log("index1"+select_index1);
                                                                console.log("index2"+title_index1);
																if(z_rateArray[select_index1].length > 0){
																	levelob_4.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
																}
                                                                
                                                            }
                                                            levelob_4.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                            select_index1 = select_index1 + 1;
                                                        });
                                                    }
                                                    else{
                                                        for(var title_index14 = 0;title_index14 < obj1.totalCostItemTitle.length;title_index14++){
                                                            if(z_rateArray[select_index1].length > 0){
																val_obj.rateValue[title_index14] = z_rateArray[select_index1][title_index14].value;
															}
															
                                                        }
                                                        val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                        select_index1 = select_index1 + 1;
                                                    }
                                                }
                                               
                                            
                                            });
                                        }
                                        else{
                                            for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                                if(z_rateArray[select_index1].length > 0){
													obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
												}
													
                                            }
                                            obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                            select_index1 = select_index1 + 1;
                                        }
                                    }
                                    else{
                                        for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                            if(z_rateArray[select_index1].length > 0){
												obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;	
											}
											
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                               
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
             
            });
        }
		
	
	}
	else if(z_level == "Level3"){
		var select_index1 = 0;
        var select_index2 = 0;
        
        if($(rig_element).attr('current-phase') == "2"){
            z_modal_title = $('#z-cost-modal-title').text();
            z_selected_leveldata.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.subPhase != null){
                                    if(obj3.subPhase.length > 0){
                                        obj3.subPhase.forEach(function(val_obj,index_Val3){
                                            for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                if(z_rateArray[select_index1].length > 0){
													val_obj.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
												}
												
                                            }
                                            val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                            select_index1 = select_index1 + 1;
                                        });
                                    }
                                    else{
                                        for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                             if(z_rateArray[select_index1].length > 0){
												obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value; 
											 }
												
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                                else{
                                    for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                        if(z_rateArray[select_index1].length > 0){
											obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;	
										}
										
                                    }
                                    obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                    select_index1 = select_index1 + 1;
                                }
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
               
            });
            select_index1 = 0;
            
            z_sel_config.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.subPhase != null){
                                    if(obj3.subPhase.length > 0){
                                        obj3.subPhase.forEach(function(val3,index_Val3){
                                            for(var title_index3 = 0;title_index3 < obj1.totalCostItemTitle.length;title_index3++){
                                                //console.log("select index"+select_index1);
                                                //console.log("title_index3"+title_index3);
                                                  if(z_rateArray[select_index1].length > 0){
													  val3.rateValue[title_index3] = z_rateArray[select_index1][title_index3].value;
												  }
												
                                            }
                                            val3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                            select_index1 = select_index1 + 1;
                                        });
                                    }
                                    else{
                                        for(var title_index41 = 0;title_index41 < obj1.totalCostItemTitle.length;title_index41++){
                                            if(z_rateArray[select_index1].length > 0){
												obj3.rateValue[title_index41] = z_rateArray[select_index1][title_index41].value;
											}
												
                                        }
                                        select_index1 = select_index1 + 1;
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                    }
                                }
                                else{
                                    for(var title_index4 = 0;title_index4 < obj1.totalCostItemTitle.length;title_index4++){
                                        if(z_rateArray[select_index1].length > 0){
											obj3.rateValue[title_index4] = z_rateArray[select_index1][title_index4].value;
										}
											
                                    }
                                    obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                    select_index1 = select_index1 + 1;
                                }
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
              
            });
        }
        else if($(rig_element).attr('current-phase') == "3"){
            z_modal_title = $(rig_element).attr('level2-name');
            var z_level3_Element = $(rig_element).text();
            z_selected_leveldata.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.phase == z_level3_Element){
                                    if(obj3.subPhase != null){
                                        if(obj3.subPhase.length > 0){
                                            obj3.subPhase.forEach(function(val_obj,index_Val3){
                                                    for(var title_index1 = 0;title_index1 < obj1.totalCostItemTitle.length;title_index1++){
                                                         if(z_rateArray[select_index1].length > 0){
															 val_obj.rateValue[title_index1] = z_rateArray[select_index1][title_index1].value;
														 }
														
                                                    }
                                                    val_obj.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                    select_index1 = select_index1 + 1;
                                                
                                               
                                            });
                                        }
                                        else{
                                            for(var title_index21 = 0;title_index21 < obj1.totalCostItemTitle.length;title_index21++){
                                                if(z_rateArray[select_index1].length > 0){
													obj3.rateValue[title_index21] = z_rateArray[select_index1][title_index21].value;
												}
													
                                            }
                                            obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                            select_index1 = select_index1 + 1;
                                        }
                                    }
                                    else{
                                        for(var title_index2 = 0;title_index2 < obj1.totalCostItemTitle.length;title_index2++){
                                            if(z_rateArray[select_index1].length > 0){
												obj3.rateValue[title_index2] = z_rateArray[select_index1][title_index2].value;
											}
												
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                              
            
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
               
            });
            select_index1 = 0;
            
            z_sel_config.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
                    obj.subLevels.forEach(function(obj1,index_val1){
                        if(obj1.phaseName == z_modal_title){
                            obj1.totalCostItem.forEach(function(obj3,m2){
                                if(obj3.phase == z_level3_Element){
                                    if(obj3.subPhase != null){
                                        if(obj3.subPhase.length > 0){
                                            obj3.subPhase.forEach(function(val3,index_Val3){
                                                for(var title_index3 = 0;title_index3 < obj1.totalCostItemTitle.length;title_index3++){
                                                    //console.log("select index"+select_index1);
                                                    //console.log("title_index3"+title_index3);
                                                      if(z_rateArray[select_index1].length > 0){
														 val3.rateValue[title_index3] = z_rateArray[select_index1][title_index3].value; 
													  }
													
                                                }
                                                val3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                                select_index1 = select_index1 + 1;
                                            });
                                        }
                                        else{
                                            for(var title_index41 = 0;title_index41 < obj1.totalCostItemTitle.length;title_index41++){
                                                  if(z_rateArray[select_index1].length > 0){
													 obj3.rateValue[title_index41] = z_rateArray[select_index1][title_index41].value; 
												  }
													
                                            }
                                            select_index1 = select_index1 + 1;
                                            obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        }
                                    }
                                    else{
                                        for(var title_index4 = 0;title_index4 < obj1.totalCostItemTitle.length;title_index4++){
                                              if(z_rateArray[select_index1].length > 0){
												  obj3.rateValue[title_index4] = z_rateArray[select_index1][title_index4].value;
											  }
												
                                        }
                                        obj3.rateValue[obj1.totalCostItemTitle.length] = z_rateArray[z_rateArray.length-1].value;
                                        select_index1 = select_index1 + 1;
                                    }
                                }
                                //obj3.rateValue[obj1.totalCostItemTitle.length+1] = z_rateArray[obj1.totalCostItemTitle.length+1];
                                
                            });
                        }
                    });
                }
               
            });
        }
	
	}
	
//    if(z_configJson_data.length > 1){
//        z_configJson_data[3].wellConfig = JSON.stringify(z_wellcal_data);
//    }
//    else{
//        z_configJson_data[0].wellConfig = JSON.stringify(z_wellcal_data);
//    }
    	
	
}
var total_cost_element,rig_element;
function z_cost_popup(el){
	
	$('#costPhase-modal').remove();
	var zbase_level = $(el).attr('base-level');
	rig_element = el;
	total_cost_element = $(el).next().next().next().next().children();
    $('body').append('<div id="costPhase-modal" class="modal" tabindex="-1" role="dialog">' +
        '<div id="custom-modal" class="modal-dialog" role="document">' +
        '<div id="z-test-modal" class="modal-content">' +
        '<div id="modal-cost-header" class="modal-header">' +
        '<h5 id="z-cost-modal-title" class="modal-title">'+ $(el).text().split("choose")[0].trim() + '</h5>' +
        '<input id="z-base-level" type="hidden" base-level="'+zbase_level + '" value="">'+
        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
        '<span aria-hidden="true">&times;</span>' +
        '</button>' +
        '</div>' +
        '<div class="col-12"><div class="row"><div class="col-3"></div><div class="col-3 z-l-configbottom"></div>'+ 
        '<div class="col-3 z-l-configbottom" style="cursor:pointer;"></div><div class="col-3 z-rig-daysBtn"><div class="z-m-wellcreate-btn" id="z-save-days" phase="" rateLength = "" onclick="z_saveRates(this)">Save</div><div class="z-m-wellcreate-btn">|</div><div class="z-m-wellcreate-btn" id="z-well-viewSummary" days="timeline" phase="" onclick="z_well_summary(this)" phase="" rateLength = "">View Summary</div></div></div></div>' +
        '<div id="custom-modal-content" class="modal-body z-modal-totalcost z-configContainerBorder z-m-boxShadow">' +
        '</div>' +
        '<p class="d-none">Select a phase to Add</p>' +
        '</div>' +
        '<div class="modal-footer">' +
        '</div>' +
        '</div>' +
        '</div>' +
        '</div>');
    $('#costPhase-modal').modal('show');
    $('#costPhase-modal').on('hidden.bs.modal', function () {
        var titleName;
        var z_total_currency = "$";
        var z_baseval = $('#z-base-level').attr('base-level');
        var z_baselevelIndex = Number(z_baseval);
        var z_sublevelIndex = Number($(el).attr('current-level'));
        var z_subcost_elements;
        var level3_name;
        var level4_name;

        if($(rig_element).attr('current-phase') == "2"){
            titleName = $('#z-cost-modal-title').text();
            level3_name = $('#z-cost-modal-title').text();
            z_subcost_elements = $('[base-level="'+z_baseval+'"][phase2="'+titleName+'"]');//has level3 items//has level3 items
        }
        else if($(rig_element).attr('current-phase') == "3"){
            titleName = $(rig_element).attr('level2-name');
            z_subcost_elements = $('[base-level="'+z_baseval+'"][phase2="'+$(rig_element).attr('level2-name')+'"]');
            level3_name = $(rig_element).text();
        }
        else if($(rig_element).attr('current-phase') == "4"){
            titleName = $(rig_element).attr('level2-name');
            z_subcost_elements = $('[base-level="'+z_baseval+'"][phase2="'+$(rig_element).attr('level2-name')+'"]');
            level3_name = $(rig_element).attr('level3-name');
            level4_name = $(rig_element).text();
        }
        
        var z_subelements,cost_item;
        var z_baseElements;
        var base_test_index = 0;
        var x1,x2,x3;
        var sum3 = 0;
        var sum2 = 0;
        var sum4 = 0;
        var currentLevel;
        var currentLevel2;
        var cost_level;
        var cost_level4,cost_level3;
        var zlevel2,zlevel3;
        var z_subcost_elements4;
        var z_grant_level3_total = 0;
        var level3_index;
        var level4_index;
		if(z_subcost_elements.length > 0 && z_level == "Level4" && $(rig_element).attr('current-phase') != "4"){
            // if(titleName == "Rig Rate"){
            //     cost_item = z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].totalCostItem;
            //     cost_level = z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].subLevels;
            //     for(var k=0;k<z_subcost_elements.length;k++){
            //         z_subcost_elements[k].value = 0 + " "+z_total_currency;
            //         cost_level[k].totalCost = 0 + " "+z_total_currency;
            //     }
                
            // }
            //else{
                cost_item = z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].totalCostItem;
                cost_level = z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].subLevels;
                cost_item.forEach(function(val1,index1){
                   

                    if(val1.phase == level3_name || $(rig_element).attr('current-phase') == "2"){
                        level3_index = cost_level.findIndex(function(valOb){
                            return valOb.phaseName == val1.phase;
                        });
                        if(level3_index != -1){
                            if(cost_level[level3_index].isSelected){
                                zlevel2 = $('[level2-base="'+val1.phase+'"]');
                                z_subcost_elements4 = $('[base-level="'+z_baseval+'"][phase3="'+val1.phase+'"][baseLevel="'+titleName+'"]');
                                cost_level3 = $('input[level2-phase="'+val1.phase+'"]');
                                if(val1.subPhase != null){
                                    val1.subPhase.forEach(function(val2,index2){
                                        if(val2.subPhase != null){
                                            sum2 = 0;
                                            for(var level=0;level<z_subcost_elements4.length;level++){
                                                if(z_subcost_elements4[level].getAttribute('baseLevel') == titleName){
                                                    zlevel3 = $('[level3-base="'+z_subcost_elements4[level].getAttribute('phaseName')+'"]');
                                                    sum3 = 0;
                                                    for(var level2=0;level2<zlevel3.length;level2++){
                                                        x1 = zlevel3[level2].value;
                                                    (x1.includes(z_total_currency) ? x1 = x1.replace(/ [^\w\s]/gi, '') : x1 = x1);
                                                        x1 = x1.replace(/,/g, '');
                                                        x1 = x1.trim();
                                                        (!(isNaN(x1)) ? x1 = Number(x1) : x1 = 0);
                                                        sum3 = sum3 + x1;
                                                        
                                                    }
                                                    sum2 = sum2 + sum3;
                                                    z_subcost_elements4[level].value = sum3.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency;
                                                    if(val2.phase == z_subcost_elements4[level].getAttribute('phaseName')){
                                                        val2.rateValue = [z_subcost_elements4[level].value];
                                                    }
                                                   
                                                    sum3 = 0;
                                                }
                                               
                                            }
                                            currentLevel = $('[base-level="'+z_baseval+'"][phaseName="'+val1.phase+'"][phase2="'+titleName+'"]');
                                            for(var c=0;c<currentLevel.length;c++){
                                                if(currentLevel[c].getAttribute('phase2') == titleName){
                                                    currentLevel[c].value = sum2.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency;
                                                    val1.rateValue = [currentLevel[c].value];
                                                    z_grant_level3_total = z_grant_level3_total + sum2;
                                                    sum2 = 0;
                                                }
                                            }
                                        
                                        }
                                        else{
                                            //level2 upto
                                            currentLevel = $('[base-level="'+z_baseval+'"][phaseName="'+val1.phase+'"][phase2="'+titleName+'"]');
                                            //currentLevel2 = $('input[phaseName="'+val2.phase+'"]');
                                            sum3 = 0;
                                            for(var n = 0;n < cost_level3.length;n++){
                                                x1 = cost_level3[n].value;
                                                if(z_subcost_elements4[n] != null){
                                                    z_subcost_elements4[n].value = x1;
                                                }
                                                
                                                (x1.includes(z_total_currency) ? x1 = x1.replace(/ [^\w\s]/gi, '') : x1 = x1);
                                                    x1 = x1.replace(/,/g, '');
                                                    x1 = x1.trim();
                                                    (!(isNaN(x1)) ? x1 = Number(x1) : x1 = 0);
                                                    sum3 = sum3 + x1;
                                            }
                                            if(currentLevel[0] != null){
                                                currentLevel[0].value = sum3.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency;
                                                z_grant_level3_total = z_grant_level3_total + sum3;
                                                val1.rateValue = [currentLevel[0].value];
                                            }
                                            
                                        }
                                    });
                                }
                                else{
                                    cost_level4 = $('input[level1-phase="'+val1.phase+'"]');
                                    currentLevel = $('input[base-level="'+z_baseval+'"][phaseName="'+val1.phase+'"][phase2="'+titleName+'"]');
                                    if(currentLevel[0] != null){
                                        currentLevel[0].value = cost_level4[0].value;
                                        val1.rateValue = [cost_level4[0].value];
                                        sum4 = cost_level4[0].value;
                                        (sum4.includes(z_total_currency) ? sum4 = sum4.replace(/ [^\w\s]/gi, '') : sum4 = sum4);
                                        sum4 = sum4.replace(/,/g, '');
                                        sum4 = sum4.trim();
                                        (!(isNaN(sum4)) ? sum4 = Number(sum4) : sum4 = 0);
                                        z_grant_level3_total = z_grant_level3_total + sum4;
            
                                    }
                                    
                                  
                                }
                            }
                        }
                    }
                   
                    
                });
             
            //}
        }
        if(z_level == "Level3" || z_level == "Level4"){
            var z_val;
            var sum_val = 0;
            var sum_val4 = 0;
            var z_val_4;
            var z_subcost_elements4;
            if($(rig_element).attr('current-phase') == "4"){
                z_subcost_elements4 = $('[base-level="'+z_baseval+'"][phase3="'+$(rig_element).attr('level3-name')+'"]');
                for(var n=0;n<z_subcost_elements4.length;n++){
                    z_val_4 = z_subcost_elements4[n].value;
                    (z_val_4.includes(z_total_currency) ? z_val_4 = z_val_4.replace(/ [^\w\s]/gi, '') : z_val_4 = z_val_4);
                    z_val_4 = z_val_4.replace(/,/g, '');
                    z_val_4 = z_val_4.trim();
                        (!(isNaN(z_val_4)) ? z_val_4 = Number(z_val_4) : z_val_4 = 0);
                        sum_val4 = sum_val4 + z_val_4;
                }
                $('[base-level="'+z_baseval+'"][phasename="'+$(rig_element).attr('level3-name')+'"]').val(sum_val4.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency);
                z_subcost_elements = $('[base-level="'+z_baseval+'"][phase2="'+$(rig_element).attr('level2-name')+'"]');  
            }
                //z_subcost_elements = $('[phase2="'+$(rig_element).attr('level2-name')+'"]');
                //z_costModel(z_subcost_elements);
                //$('#costPhase-modal').click();
                for(var m=0;m<z_subcost_elements.length;m++){
                z_val = z_subcost_elements[m].value;
                (z_val.includes(z_total_currency) ? z_val = z_val.replace(/ [^\w\s]/gi, '') : z_val = z_val);
                z_val = z_val.replace(/,/g, '');
                z_val = z_val.trim();
                    (!(isNaN(z_val)) ? z_val = Number(z_val) : z_val = 0);
                    sum_val = sum_val + z_val;
            }
			z_selected_leveldata[z_baselevelIndex].subLevels.forEach(function(val2Object){
				if(val2Object.phaseName == titleName){
					val2Object.totalCost = [];
					val2Object.totalCost.push(sum_val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency);
				}
			});
            $('[base-level="'+z_baseval+'"][level2-phaseName="'+$(rig_element).attr('level2-name')+'"]').val(sum_val.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency);    
        }
   
        var z_class_val = $('#z-base-level').attr('base-level');
        class_index = Number(z_class_val)+1;
        z_levelcost = $('.z-final-subcost'+class_index);
        var z_subtotalCost = $('.z-subtotal'+class_index);
        var x_total1 = 0;
        var sum3 = 0;
        for(var sum = 0;sum < z_subtotalCost.length;sum++){
            if(z_subtotalCost[sum].getAttribute('phase2') == null){
                if(z_subtotalCost[sum].value == ""){
                    x_total1 = 0;	
                }
                else{
                    var z_filter = z_subtotalCost[sum].value;
                    
                    z_filter = z_filter.replace(/,/g, '');
                    z_filter = z_filter.split(z_total_currency)[0].trim();
                        
                    x_total1 = Number(z_filter);
                }
                sum3 = sum3 + x_total1;
            }
            
        }
		if($('#z-rt-costModel-heading').hasClass('d-none')){
			        z_levelcost[0].value = sum3.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency;

		}
    
    
    var title_cost;
          if($(rig_element).attr('current-phase') == "3"){
        title_cost = $(rig_element).attr('level2-name');
    }
    else if($(rig_element).attr('current-phase') == "2"){
        title_cost = $('#z-cost-modal-title').text();
    }
    else if($(rig_element).attr('current-phase') == "4"){
        title_cost = $(rig_element).attr('level2-name');
    }
	 else if($(rig_element).attr('current-phase') == "5"){
        title_cost = $(rig_element).attr('level2-name');
    }
        z_class_val = $('#z-base-level').attr('base-level');
        class_index = Number(z_class_val)+1;
        //class_index = class_index -1;
        var phase_index = z_sel_config[z_class_val].subLevels.findIndex(function(val){
            return val.phaseName == title_cost;
        });
    
        z_saveRates($('#z-save-days')[0]);
		if($('#z-rt-costModel-heading').hasClass('d-none')){
        z_rateArray[z_rateArray.length] = z_levelcost[0].value;

		}
        z_totalCostCalulate($('#z-estimate-lvg-data')[0]);
        // var line_item = $(el).attr('line-item');
        // var line_index = z_sel_config[class_index-1].subLevels[phase_index].totalCostItem.findIndex(function(val){
        // 	return val.phase == line_item;
        // });
        if(z_level == "Level2"){
            if(z_sel_config[z_class_val].subLevels[phase_index].totalCostItemTitle != null){
                var array_length = z_sel_config[class_index-1].subLevels[phase_index].totalCostItemTitle.length;
                z_selected_leveldata[class_index-1].subLevels[phase_index].totalCostItem.forEach(function(val3,index3){
                    val3.rateValue[array_length+1] = z_rateArray[z_rateArray.length-1];
                });	
            }
        }
        else if(z_level == "Level3"){
            if(z_sel_config[z_class_val].subLevels[phase_index].totalCostItemTitle != null){
                var array_length = z_sel_config[class_index-1].subLevels[phase_index].totalCostItemTitle.length;
                z_selected_leveldata[class_index-1].subLevels[phase_index].totalCostItem.forEach(function(val3,index3){
                    if(val3.subPhase != null){
                        if(val3.subPhase.length > 0){
                            val3.subPhase.forEach(function(val1,index1){
                                val1.rateValue[array_length+1] = z_rateArray[z_rateArray.length-1].value;
                            });	
                        }
                    }
                    else{
                        val3.rateValue[array_length+1] = z_rateArray[z_rateArray.length-1].value;
                    }
                    
                });	
            }
        }
        
        
        z_sel_config = z_selected_leveldata;
		if($('#costModalRealTime').attr('costModal') == 'true'){
					var activeDays = $('#costModalRealTime').attr('active-day-index');

					var data = {
						wellId: x_wellId,
						daysValue: activeDays,
						realTimeTotalCostArray: JSON.stringify(z_sel_config)
					};
					$.ajax({
			        url: "/api/submitCostModal",
			        type: "POST",
			        data:  JSON.stringify(data),
			        async: false,
			        dataType: 'text',
				contentType: 'application/json;charset=UTF-8',
			        success: function (result) {
			        	realTimeCostModalArray = JSON.parse(result);
						//z_sel_config = realTimeCostModalArray[0].realTimeTotalCostArray;
						
			        }
				});
				var x_totalCost = "0 $";
				var level1Name = z_sel_config[z_baseval].phaseName;
				z_sel_config[z_baseval].subLevels.forEach(function(val){
					if(val.phaseName == titleName){
						if(val.totalCost.length > 0){
						x_totalCost = val.totalCost[0];	
						}
					}
				});
				$('[level1="'+level1Name+'"][level2="'+titleName+'"][days-input="'+activeDays+'"]').val(x_totalCost);
				var totalCostComponent = $('[level1="'+level1Name+'"][level2="'+titleName+'"]');
				var totalCostComponentLength = totalCostComponent.length;
				var sumval;
				var totalCostValue = 0;
				for(var test=0;test<totalCostComponentLength;test++){
					sumval = totalCostComponent[test].value;
					sumval = sumval.split("$")[0].trim();
					totalCostValue = totalCostValue + Number(sumval);
				}
				$('[level1-totalCost="'+level1Name+'"][level2-totalCost="'+titleName+'"]').val(totalCostValue+" $");


									}
      });
    $('#custom-modal').css("max-width","100%");
    
    $('#modal-cost-header').css("border","0px");
   
 
    z_RigAddition(el);		
    $('#z-test-modal').css("overflow-x","auto");
    $('#z-test-modal').css("height","500px");
    $('#custom-modal-content').addClass('z-modal-totalcost');
    var header_width = $('#custom-modal-content').width();
    $('#modal-cost-header').width(header_width);
  
}
function z_RigAddition(el){
	var well_data;
	var total_days = $('#z-totalDays').val();
	var total_day_Asnum = 0;
	if(total_days != ""){
		total_day_Asnum = Number(total_days);
	}
	   $('#custom-modal-content').append('<div id="z-total-cost-content-title" class="d-flex z-l-title z-height-cost"><div class="z-col-1 z-rig-desc">No</div>'+
		'<div class="z-col-3 z-rig-desc">Description</div><div class="col-1"></div><div class="col-3 z-l-configbottom z-borderBottom z-rig-titledays z-cw-wellPage text-center" onclick="z_costTitle(this)">Days</div><div class="col-3 z-l-configbottom z-borderBottom z-rig-titledays text-center" style="cursor:pointer;" onclick="z_costTitle(this)">Rates</div><div class="z-colWidth-rig"></div><div class="z-col-2 z-rig-totalCost">Total Cost</div></div>');
	   
	   $('#custom-modal-content').append('<div id="z-total-cost-content" class="d-flex z-l-title z-m-estimate-bottom z-height-cost"><div class="z-col-1"></div>'+
		'<div class="z-col-3"></div></div>');
	   if($(el).text().split("choose")[0].trim() == "Rig Rate"){
		   $('#custom-modal-content').append('<div id="z-rig-content" class=""></div>');
	   }
	   else{
		   $('#custom-modal-content').append('<div id="z-rig-content" class="z-rig-scroll"></div>'); 
	   }
	  
//  if(z_configJson_data.length > 1){
//  	well_data = JSON.parse(z_configJson_data[3].wellConfig);
//  }
//  else{
//  	well_data = JSON.parse(z_configJson_data[0].wellConfig);
//  }
  well_data = z_selected_leveldata;
  
  var sel_index;
  var rateval = "0";
  var grant_total_val = "";
  var sub_obj = {};
  var sub_index = 0;
  var z_class;
  if(z_level == "Level5"){
	  
var z_level4SerialNumber = 0;
var levelSelect = $(rig_element).attr('current-phase');
    var levelSelect_name = $(rig_element).text();
    var total_cost_itemVal = [];
    var level2_name = "";
    var level3_name = "";
    var level4_name = "";
	var level5_name = "";
    if(levelSelect == "2"){
        level2_name = $(rig_element).text();
    }
    else if(levelSelect == "3"){
        level2_name = $(rig_element).attr('level2-name');
        level3_name = $(rig_element).text();
    }
    else if(levelSelect == "4"){
        level2_name = $(rig_element).attr('level2-name');
        level3_name = $(rig_element).attr('level3-name');
        level4_name = $(rig_element).text();
    }
    else if(levelSelect == "5"){
        level2_name = $(rig_element).attr('level2-name');
        level3_name = $(rig_element).attr('level3-name');
        level4_name = $(rig_element).attr('level4-name');
		level5_name = $(rig_element).text();
    } 	
	  well_data.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
		  	obj.subLevels.forEach(function(obj1,index_val1){
		  		
		  		if(obj1.phaseName == rig_element.innerText.split("choose")[0].trim()|| obj1.phaseName == level2_name){
		  			if(obj1.totalCostItemTitle != null){
		  				obj1.totalCostItemTitle.forEach(function(obj3,index_val3){
		  		  			
		  	  				if(obj1.totalCostItemTitle.length > 0){
		  	  					if(!(obj3.includes("Rate")) && !(obj3.includes("Cost")) && !(obj3 == "Total Cost")){
		  	  	  					if(obj3.includes("Total Days")){
		  	  	  					$('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday1">'+ obj3 + '<select class="z-toggleClass" index="'+ index_val3 +'" onchange="z_daysToggle(this)"><option value="software">software</option><option value="Manual">Manual</option></select></div>');
		  	  	  					}
		  	  	  					else{
		  	  	  					$('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday1">'+ obj3 + '</div>');
		  	  	  					}
		  	  						
		  	  	  				}
		  	  	  				else{
		  	  	  					if(obj3 == "Total Cost"){
		  	  	  						//$('#z-total-cost-content').append('<div class="z-col-2">'+ obj3 + '</div>');
		  	  	  					}
		  	  	  					else{
		  	  	  						$('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday2 d-none">'+ obj3 + '</div>');
		  	  	  					}
		  	  	  					
		  	  	  				}
		  	  				if(obj1.totalCostItemTitle.length ==7 || obj1.totalCostItemTitle.length ==8){
		  	  				$('.z-colWidth-rig').addClass('z-totalCost-width');
			  					$('.z-colWidth-rig').removeClass('z-colWidth-rig');
		  	  				}
		  	  				
		  	  					
		  	  				}
		  	  				
		  	  					
		  	  			});
		  			}
		  			
		  			var max_cost_limit = 0;
		  			var level4_no = 0;
		  			var subday_index,subday_index_level4;
					                      var total_cost_item = [];
                      var total_cost_item1 = {};
                      var total_cost_item2 = {};
                      var total_cost_item4 = [];
					               var total_cost_item5 = [];
					var total_cost_item4Obj = {};
                      var find_level2;
                      var find_level3;
                      var find_level4;
					  
						  if(levelSelect == "2"){
                        obj1.totalCostItem.forEach(function(sub_obj,sub_index){
                            total_cost_item2.phase = sub_obj.phase;
                            total_cost_item2.disableIndex = sub_obj.disableIndex;
                            total_cost_item2.rateValue = sub_obj.rateValue;
                            total_cost_item2.formula = sub_obj.formula;
                            find_level2 = obj1.subLevels.findIndex(function(val_object){
                                return val_object.phaseName == sub_obj.phase;
                            });
                            if(find_level2 != -1){
                                if(obj1.subLevels[find_level2].isSelected){
                                    if(sub_obj.subPhase != null){
                                        sub_obj.subPhase.forEach(function(level4){
                                            find_level3 = obj1.subLevels[find_level2].subLevels.findIndex(function(val_obj4){
                                                return val_obj4.phaseName == level4.phase;
                                            });
                                            if(find_level3 != -1){
                                                if(obj1.subLevels[find_level2].subLevels[find_level3].isSelected){
                                                    if(level4.subPhase != null){
														level4.subPhase.forEach(function(level5){
															find_level4 = obj1.subLevels[find_level2].subLevels[find_level3].subLevels.findIndex(function(val_obj5){
                                                return val_obj5.phaseName == level5.phase && val_obj5.isSelected;
															});
												if(find_level4 != -1){
													total_cost_item5.push(level5);
												}
														
													});
													}
													total_cost_item4Obj = JSON.parse(JSON.stringify(level4));
													total_cost_item4Obj.subPhase = total_cost_item5;
													total_cost_item4.push(total_cost_item4Obj);
													total_cost_item4Obj = {};
													total_cost_item5 = [];
                                                    //val_obj4 = {};
                                                }
                                            }
                                          
                                        });
                                        total_cost_item2.subPhase = total_cost_item4;
                                        total_cost_item4 = [];
                                    }
                                    //sub_obj = total_cost_item2;
                                    total_cost_item.push(total_cost_item2);
                                    total_cost_item2 = {};
                                }
                            }
                        
                            
                        });
                        
                      }
                      else if(levelSelect == "3"){
                        obj1.totalCostItem.forEach(function(sub_obj,sub_index){
                            if(sub_obj.phase == level3_name){
                                total_cost_item2.phase = sub_obj.phase;
                                total_cost_item2.disableIndex = sub_obj.disableIndex;
                                total_cost_item2.rateValue = sub_obj.rateValue;
                                total_cost_item2.formula = sub_obj.formula;
                                find_level2 = obj1.subLevels.findIndex(function(valOb3){
                                    return valOb3.phaseName == level3_name;
                                });
                                if(find_level2 != -1){
                                    if(sub_obj.subPhase != null){
                                        sub_obj.subPhase.forEach(function(level4){
                                            find_level4 = obj1.subLevels[find_level2].subLevels.findIndex(function(valOb4){
                                                return valOb4.phaseName == level4.phase && valOb4.isSelected;
                                            });
                                            if(find_level4 != -1){
                                                if(obj1.subLevels[find_level2].subLevels[find_level4].isSelected){
                                                    if(level4.subPhase != null){
														level4.subPhase.forEach(function(level5,index5){
															 find_level5 = obj1.subLevels[find_level2].subLevels[find_level4].subLevels.findIndex(function(valOb5){
                                                return valOb5.phaseName == level5.phase && valOb5.isSelected;
                                            });
											if(find_level5 != -1){
													total_cost_item5.push(level5);

											}
														});
													}
													total_cost_item4Obj = JSON.parse(JSON.stringify(level4));
													total_cost_item4Obj.subPhase = total_cost_item5;
													total_cost_item4.push(total_cost_item4Obj);
													total_cost_item4Obj = {};
													total_cost_item5 = [];
                                                }
                                            }
                                          
                                            
                                        });
                                        if(total_cost_item4.length > 0){
                                            total_cost_item2.subPhase = total_cost_item4;
                                            total_cost_item4 = [];
                                        }
                                   
                                    }
                                    total_cost_item.push(total_cost_item2);
                                    total_cost_item2 = {};
                                }
                                
                            }
                            
                        });
                      }
                      else if(levelSelect == "4"){
                        obj1.totalCostItem.forEach(function(sub_obj,sub_index){
                            if(sub_obj.phase == level3_name){
                                if(sub_obj.subPhase != null){
                                    sub_obj.subPhase.forEach(function(level4,subIndex4){
                                        if(level4.phase == level4_name){
                                            if(level4.subPhase != null){
												level4.subPhase.forEach(function(level5){
													find_level5 = obj1.subLevels[sub_index].subLevels[subIndex4].subLevels.findIndex(function(valOb5){
                                                return valOb5.phaseName == level5.phase && valOb5.isSelected;
                                            });
											if(find_level5 != -1){
													total_cost_item5.push(level5);

											}
												});
											}
													total_cost_item4Obj = JSON.parse(JSON.stringify(level4));
													total_cost_item4Obj.subPhase = total_cost_item5;
													total_cost_item.push(total_cost_item4Obj);
													total_cost_item4Obj = {};
													total_cost_item5 = [];                                        }
                                        
                                    });
                                }
                            }
                        });
                      } 
					  else if(levelSelect == "5"){
                        obj1.totalCostItem.forEach(function(sub_obj,sub_index){
                            if(sub_obj.phase == level3_name){
                                if(sub_obj.subPhase != null){
                                    sub_obj.subPhase.forEach(function(level4,subIndex4){
                                        if(level4.phase == level4_name){
                                            if(level4.subPhase != null){
												level4.subPhase.forEach(function(level5){
													find_level5 = obj1.subLevels[sub_index].subLevels[subIndex4].subLevels.findIndex(function(valOb5){
                                                return valOb5.phaseName == level5.phase && valOb5.isSelected;
                                            });
											if(find_level5 != -1){
													total_cost_item5.push(level5);

											}
												});
											}
													total_cost_item4Obj = JSON.parse(JSON.stringify(level4));
													total_cost_item4Obj.subPhase = total_cost_item5;
													total_cost_item.push(total_cost_item4Obj);
													total_cost_item4Obj = {};
													total_cost_item5 = [];                                        }
                                        
                                    });
                                }
                            }
                        });
                      } 
                   
					  console.log("tested"+total_cost_item);
		  			if(total_cost_item != null){
		  				total_cost_item.forEach(function(sub_obj,sub_index){
		  					if(sub_obj.subPhase != null){
		  					if(sub_obj.subPhase.length > 0){
		  						$('#z-rig-content').append('<div id="z-costBase-index-'+ sub_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1">'+ (sub_index+1) + '</div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ sub_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="rig" level="1">+</div></div></div>');	
		  						sub_obj.subPhase.forEach(function(level3_obj,level3_index){
		  							subday_index = sub_index+""+level3_index;
		  							//sel_index = subday_index + index_val1.toString();
		  							//sel_index = z_level4SerialNumber;
		  							//z_level4SerialNumber = z_level4SerialNumber + 1;
				  	  				if(level3_obj.subPhase != null){
			  						if(level3_obj.subPhase.length > 0){
				  						$('#z-rig-content').append('<div id="z-cost-index-'+ subday_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1"></div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ level3_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="2" level="2" level2-phase="'+sub_obj.phase+'" base-level="'+level3_index+'" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" base-level="'+level3_index+'" level2-phase="'+sub_obj.phase+'" levels="rig" level="2">+</div></div></div>');	
				  	  				level3_obj.subPhase.forEach(function(level4Obj,level4Index){
				  	  				if(level4Obj.subPhase != null){
					          $('#z-rig-content').append('<div id="z-cost-index-'+ subday_index_level4 + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1"></div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ level4Obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="3" level="3" level2-phase="'+sub_obj.phase+'" base-level="'+level3_index+'" level3-index="'+level4Index+'" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" level2-phase="'+sub_obj.phase+'" base-level="'+level3_index+'" level3-index="'+level4Index+'" levels="rig" level="3">+</div></div></div>');	

										level4Obj.subPhase.forEach(function(level5Obj,level5Index){
												subday_index_level4 = subday_index+""+level4Index+level4_no;
				  	  				level4_no = level4_no + 1;
				  	  					$('#z-rig-content').append('<div id="z-cost-index-'+ subday_index_level4 + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1"></div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ level5Obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="3" level="3" level2-phase="'+sub_obj.phase+'" base-level="'+level3_index+'" level3-index="'+level4Index+'" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" level2-phase="'+sub_obj.phase+'" base-level="'+level3_index+'" level3-index="'+level4Index+'" levels="rig" level="3">+</div></div></div>');	
				  	  				//sel_index = subday_index + ""+level4Index + ""+index_val1.toString();
				  	  				sel_index = z_level4SerialNumber;
		  							z_level4SerialNumber = z_level4SerialNumber + 1;
				  						for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
						  	  				max_cost_limit = obj1.totalCostItemTitle.length;
						  	  			((level5Obj.rateValue[title_index] == null) ? rateval="" : rateval = level5Obj.rateValue[title_index]);
						  	  		//console.log("log error"+level5Obj.phase);
						  	  			if(level5Obj.disableIndex.includes(title_index.toString())){
			  	  						if(level5Obj.disableIndex[level5Obj.disableIndex.length-1] == title_index.toString()){
			  	          					if(max_cost_limit > 0){
			  	          						if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost") ){
			  	          						if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;    
                                                    $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ level5Obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	          						else{
			  	          							$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ level5Obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');

			  	          						}
			  	              					}
			  	              					else{
			  	              						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	                  						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level3-title="'+level3_index+'" level3-base="'+level3_obj.phase+'" level2-base="'+sub_obj.phase+'" level4-base="'+level4Obj.phase+'" disabled="true"></div></div></div>');

			  	              						}
			  	              						else if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                        z_class = 'z-grantTotal-element'+index_val1;    
                                                        $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ level5Obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	              						else{
			  	                  						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ level5Obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
			  	              						}
			  	              					}
			  	          					}
			  	  							
			  	  						}
			  	  					else{
		  	  							if(max_cost_limit > 0){
		  	  								if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
		  	  								if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                z_class = 'z-grantTotal-element'+index_val1;    
                                                $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level5Obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

		  	  								}
		  	  								else{
		  	  									$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ level5Obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

		  	  								}
		  	  	          					}
		  	  	          					else{
		  	  	          						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
		  	  	              						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level3-base="'+level3_obj.phase+'" level2-base="'+sub_obj.phase+'" level4-base="'+level4Obj.phase+'" disabled="true"></div></div></div>');

		  	  	          						}
		  	  	          						else{
		  	  	              						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+level5Obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

		  	  	          						}
		  	  	          					}
		  	  							}
		  	  						
		  	          				
		  	  						}
		  	  					}
						  	  	else{
		  	  						z_class = 'z-grantTotal-element'+index_val1;
		  	  						$(total_cost_element).addClass(z_class);
		  	  						if(max_cost_limit > 0){
		  	  							if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
		  	  	      						$('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ level5Obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
		  	  	      					}
		  	  	      					else{
		  	  	      						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
		  	  	          						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level3-base="'+level3_obj.phase+'" level4-base="'+level4Obj.phase+'" level2-base="'+sub_obj.phase+'" disabled="true"></div></div></div>');

		  	  	      						}
		  	  	      						else{
		  	  	          						$('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level5Obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
		  	  	      						}
		  	  	      					}
		  	  						}
		  	      				
		  	  					}
						  	  				}
										});
									}
									else{
											subday_index_level4 = subday_index+""+level4Index+level4_no;
				  	  				level4_no = level4_no + 1;
				  	  					$('#z-rig-content').append('<div id="z-cost-index-'+ subday_index_level4 + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1"></div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ level4Obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="3" level="3" level2-phase="'+sub_obj.phase+'" base-level="'+level3_index+'" level3-index="'+level4Index+'" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" level2-phase="'+sub_obj.phase+'" base-level="'+level3_index+'" level3-index="'+level4Index+'" levels="rig" level="3">+</div></div></div>');	
				  	  				//sel_index = subday_index + ""+level4Index + ""+index_val1.toString();
				  	  				sel_index = z_level4SerialNumber;
		  							z_level4SerialNumber = z_level4SerialNumber + 1;
				  						for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
						  	  				max_cost_limit = obj1.totalCostItemTitle.length;
						  	  			((level4Obj.rateValue[title_index] == null) ? rateval="" : rateval = level4Obj.rateValue[title_index]);
						  	  		//console.log("log error"+level4Obj.phase);
						  	  			if(level4Obj.disableIndex.includes(title_index.toString())){
			  	  						if(level4Obj.disableIndex[level4Obj.disableIndex.length-1] == title_index.toString()){
			  	          					if(max_cost_limit > 0){
			  	          						if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost") ){
			  	          						if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;    
                                                    $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ level4Obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	          						else{
			  	          							$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ level4Obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');

			  	          						}
			  	              					}
			  	              					else{
			  	              						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	                  						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level3-title="'+level3_index+'" level3-base="'+level3_obj.phase+'" level2-base="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	              						}
			  	              						else if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                        z_class = 'z-grantTotal-element'+index_val1;    
                                                        $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ level4Obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	              						else{
			  	                  						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ level4Obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
			  	              						}
			  	              					}
			  	          					}
			  	  							
			  	  						}
			  	  					else{
		  	  							if(max_cost_limit > 0){
		  	  								if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
		  	  								if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                z_class = 'z-grantTotal-element'+index_val1;    
                                                $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level4Obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

		  	  								}
		  	  								else{
		  	  									$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ level4Obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

		  	  								}
		  	  	          					}
		  	  	          					else{
		  	  	          						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
		  	  	              						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level3-base="'+level3_obj.phase+'" level2-base="'+sub_obj.phase+'" disabled="true"></div></div></div>');

		  	  	          						}
		  	  	          						else{
		  	  	              						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+level4Obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

		  	  	          						}
		  	  	          					}
		  	  							}
		  	  						
		  	          				
		  	  						}
		  	  					}
						  	  	else{
		  	  						z_class = 'z-grantTotal-element'+index_val1;
		  	  						$(total_cost_element).addClass(z_class);
		  	  						if(max_cost_limit > 0){
		  	  							if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
		  	  	      						$('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ level4Obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
		  	  	      					}
		  	  	      					else{
		  	  	      						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
		  	  	          						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level3-base="'+level3_obj.phase+'" level2-base="'+sub_obj.phase+'" disabled="true"></div></div></div>');

		  	  	      						}
		  	  	      						else{
		  	  	          						$('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level4Obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
		  	  	      						}
		  	  	      					}
		  	  						}
		  	      				
		  	  					}
						  	  				}
									}
				  	  				
				  	  				});
				  	  				}
		  						}//level2 costinput
				  	  				else{
				  	  					subday_index_level4 = subday_index+""+level4_no;
				  	  				level4_no = level4_no + 1;
				  	  					$('#z-rig-content').append('<div id="z-cost-index-'+ subday_index_level4 + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1"></div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ level3_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="2" level="2" level2-phase="'+sub_obj.phase+'" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" level2-phase="'+sub_obj.phase+'" levels="rig" level="2">+</div></div></div>');	
				  	  				//sel_index = subday_index + "" + ""+index_val1.toString();
				  	  				sel_index = z_level4SerialNumber;
		  							z_level4SerialNumber = z_level4SerialNumber + 1;
				  						for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
						  	  				max_cost_limit = obj1.totalCostItemTitle.length;
						  	  			((level3_obj.rateValue[title_index] == null) ? rateval="" : rateval = level3_obj.rateValue[title_index]);
						  	  		if(level3_obj.disableIndex.includes(title_index.toString())){
			  	  						if(level3_obj.disableIndex[level3_obj.disableIndex.length-1] == title_index.toString()){
			  	          					if(max_cost_limit > 0){
			  	          						if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost") ){
			  	          						if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;   
                                                    $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ level3_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	          						else{
			  	          							$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ level3_obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');

			  	          						}
			  	              					}
			  	              					else{
			  	              						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	                  						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level2-title="'+sub_index+'" level2-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	              						}
			  	              						else if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                        z_class = 'z-grantTotal-element'+index_val1;    
                                                        $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ level3_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	              						else{
			  	                  						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ level3_obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
			  	              						}
			  	              					}
			  	          					}
			  	  							
			  	  						}
			  	  					else{
		  	  							if(max_cost_limit > 0){
		  	  								if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
		  	  								if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                z_class = 'z-grantTotal-element'+index_val1;    
                                                $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level3_obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

		  	  								}
		  	  								else{
		  	  									$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ level3_obj.phase+ '" index="'+ sel_index +  '"value="\"'+ rateval.toString() + '"\""phase="'+ index_val1 + '" disabled="true"></div></div></div>');

		  	  								}
		  	  	          					}
		  	  	          					else{
		  	  	          						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
		  	  	              						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level2-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

		  	  	          						}
		  	  	          						else{
		  	  	              						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+level3_obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

		  	  	          						}
		  	  	          					}
		  	  							}
		  	  						
		  	          				
		  	  						}
		  	  					}
						  	  	else{
		  	  						z_class = 'z-grantTotal-element'+index_val1;
		  	  						$(total_cost_element).addClass(z_class);
		  	  						if(max_cost_limit > 0){
		  	  							if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
		  	  	      						$('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ level3_obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
		  	  	      					}
		  	  	      					else{
		  	  	      						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
		  	  	          						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level2-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

		  	  	      						}
		  	  	      						else{
		  	  	          						$('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level3_obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
		  	  	      						}
		  	  	      					}
		  	  						}
		  	      				
		  	  					}
						  	  				}
				  	  				
				  	  				}
			  					
				  	  				$('#z-save-days').attr('phase',index_val1);
				  	  			$('#z-save-days').attr('level1-phase',index_val);
				  	  				$('#z-save-days').attr('rateLength',total_cost_item.length);
				  	  				if(level3_obj.rateValue[level3_obj.rateValue.length-1] && level3_obj.rateValue.length > 0){
				  	      				grant_total_val = level3_obj.rateValue[level3_obj.rateValue.length-1];
				  	  				}
			  					
		  						});
		  					}
							else{
		  						$('#z-rig-content').append('<div id="z-cost-index-'+ sub_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1">'+ (sub_index+1) + '</div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ sub_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="rig" level="1">+</div></div></div>');	
		  						sel_index = z_level4SerialNumber;
				  	  			z_level4SerialNumber = z_level4SerialNumber + 1;
		  						for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
			  	  				//sel_index = sub_index.toString() + index_val1.toString();
			  	  					max_cost_limit = obj1.totalCostItemTitle.length;
			  							((sub_obj.rateValue[title_index] == null) ? rateval="" : rateval = sub_obj.rateValue[title_index]);            
			  							if(sub_obj.disableIndex.includes(title_index.toString())){
			  	  						if(sub_obj.disableIndex[sub_obj.disableIndex.length-1] == title_index.toString()){
			  	          					if(max_cost_limit > 0){
			  	          						if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
			  	          						if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;    
                                                    $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ sub_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	          						else{
			  	          							$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');

			  	          						}
			  	              					}
			  	              					else{
			  	              						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	                  						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-title="'+index_val+'" level1-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	              						}
			  	              						else if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                        z_class = 'z-grantTotal-element'+index_val1;    
                                                        $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ sub_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	              						else{
			  	                  						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
			  	              						}
			  	              					}
			  	          					}
			  	  							
			  	  						}
			  	  						else{
			  	  							if(max_cost_limit > 0){
			  	  								if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
			  	  								if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;
			  	  									$('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ sub_obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	  								}
			  	  								else{
			  	  									$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ sub_obj.phase+ '" index="'+ sel_index +  '"value="\"'+ rateval.toString() + '"\""phase="'+ index_val1 + '" disabled="true"></div></div></div>');

			  	  								}
			  	  	          					}
			  	  	          					else{
			  	  	          						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	  	              						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	  	          						}
			  	  	          						else{
			  	  	              						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+sub_obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

			  	  	          						}
			  	  	          					}
			  	  							}
			  	  						
			  	          				
			  	  						}
			  	  					}
			  	  					else{
			  	  						z_class = 'z-grantTotal-element'+index_val1;
			  	  						$(total_cost_element).addClass(z_class);
			  	  						if(max_cost_limit > 0){
			  	  							if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
			  	  	      						$('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ sub_obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
			  	  	      					}
			  	  	      					else{
			  	  	      						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	  	          						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	  	      						}
			  	  	      						else{
			  	  	          						$('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ sub_obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
			  	  	      						}
			  	  	      					}
			  	  						}
			  	      				
			  	  					}
			  	  				}
			  	  				$('#z-save-days').attr('phase',index_val1);
			  	  				$('#z-save-days').attr('rateLength',total_cost_item.length);
			  	  			$('#z-save-days').attr('level1-phase',index_val);
			  	  				if(sub_obj.rateValue[sub_obj.rateValue.length-1] && sub_obj.rateValue.length > 0){
			  	      				grant_total_val = sub_obj.rateValue[sub_obj.rateValue.length-1];
			  	  				}
		  					}
		  				}
		  					else{
		  						$('#z-rig-content').append('<div id="z-cost-index-'+ sub_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1">'+ (sub_index+1) + '</div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ sub_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="rig" level="1">+</div></div></div>');	
		  						sel_index = z_level4SerialNumber;
				  	  			z_level4SerialNumber = z_level4SerialNumber + 1;
		  						for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
			  	  				//sel_index = sub_index.toString() + index_val1.toString();
			  	  					max_cost_limit = obj1.totalCostItemTitle.length;
			  							((sub_obj.rateValue[title_index] == null) ? rateval="" : rateval = sub_obj.rateValue[title_index]);            
			  							if(sub_obj.disableIndex.includes(title_index.toString())){
			  	  						if(sub_obj.disableIndex[sub_obj.disableIndex.length-1] == title_index.toString()){
			  	          					if(max_cost_limit > 0){
			  	          						if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
			  	          						if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;    
                                                    $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ sub_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	          						else{
			  	          							$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');

			  	          						}
			  	              					}
			  	              					else{
			  	              						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	                  						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-title="'+index_val+'" level1-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	              						}
			  	              						else if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                        z_class = 'z-grantTotal-element'+index_val1;    
                                                        $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ sub_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	              						else{
			  	                  						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
			  	              						}
			  	              					}
			  	          					}
			  	  							
			  	  						}
			  	  						else{
			  	  							if(max_cost_limit > 0){
			  	  								if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
			  	  								if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;
			  	  									$('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ sub_obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	  								}
			  	  								else{
			  	  									$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ sub_obj.phase+ '" index="'+ sel_index +  '"value="\"'+ rateval.toString() + '"\""phase="'+ index_val1 + '" disabled="true"></div></div></div>');

			  	  								}
			  	  	          					}
			  	  	          					else{
			  	  	          						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	  	              						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	  	          						}
			  	  	          						else{
			  	  	              						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+sub_obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

			  	  	          						}
			  	  	          					}
			  	  							}
			  	  						
			  	          				
			  	  						}
			  	  					}
			  	  					else{
			  	  						z_class = 'z-grantTotal-element'+index_val1;
			  	  						$(total_cost_element).addClass(z_class);
			  	  						if(max_cost_limit > 0){
			  	  							if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
			  	  	      						$('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ sub_obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
			  	  	      					}
			  	  	      					else{
			  	  	      						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	  	          						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	  	      						}
			  	  	      						else{
			  	  	          						$('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ sub_obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
			  	  	      						}
			  	  	      					}
			  	  						}
			  	      				
			  	  					}
			  	  				}
			  	  				$('#z-save-days').attr('phase',index_val1);
			  	  				$('#z-save-days').attr('rateLength',total_cost_item.length);
			  	  			$('#z-save-days').attr('level1-phase',index_val);
			  	  				if(sub_obj.rateValue[sub_obj.rateValue.length-1] && sub_obj.rateValue.length > 0){
			  	      				grant_total_val = sub_obj.rateValue[sub_obj.rateValue.length-1];
			  	  				}
		  					}
		  			
		  	  			});
		  				$('#custom-modal-content').append('<div id="z-cost-Granttotal" class="d-flex z-tableData-row  z-borderBottom z-height-subcost z-cost-contentday2 d-none"><div class="z-col-1"></div><div class="z-col-3"></div><div class="z-col-2"></div><div class="z-col-2"></div><div class="z-col-2"></div><div class="z-col-3 z-grant-total-sec">GRAND TOTAL</div><div id="grant-value-cost" class="z-col-2">'+ grant_total_val + '</div></div>');
						$('#custom-modal-content').append('<div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" levels = "rig" onclick="z_addcustomItems(this)">Add Line Items</div>');
						$('#custom-modal-content').append('<div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" levels = "rig" onclick="z_deleteRigItems(this)">Delete Line Items</div>');
		  			}
		  			
						

		  		}
		  	});
		  
        }
	  });
  
  
  }
  else if(z_level == "Level4"){
var z_level4SerialNumber = 0;
var levelSelect = $(rig_element).attr('current-phase');
    var levelSelect_name = $(rig_element).text();
    var total_cost_itemVal = [];
    var level2_name = "";
    var level3_name = "";
    var level4_name = "";
    if(levelSelect == "2"){
        level2_name = $(rig_element).text();
    }
    else if(levelSelect == "3"){
        level2_name = $(rig_element).attr('level2-name');
        level3_name = $(rig_element).text();
    }
    else if(levelSelect == "4"){
        level2_name = $(rig_element).attr('level2-name');
        level3_name = $(rig_element).attr('level3-name');
        level4_name = $(rig_element).text();
    } 
	  well_data.forEach(function(obj,index_val){
                if(index_val == $(rig_element).attr('base-level')){
		  	obj.subLevels.forEach(function(obj1,index_val1){
		  		
		  		if(obj1.phaseName == rig_element.innerText.split("choose")[0].trim()|| obj1.phaseName == level2_name){
		  			if(obj1.totalCostItemTitle != null){
		  				obj1.totalCostItemTitle.forEach(function(obj3,index_val3){
		  		  			
		  	  				if(obj1.totalCostItemTitle.length > 0){
		  	  					if(!(obj3.includes("Rate")) && !(obj3.includes("Cost")) && !(obj3 == "Total Cost")){
		  	  	  					if(obj3.includes("Total Days")){
		  	  	  					$('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday1">'+ obj3 + '<select class="z-toggleClass" index="'+ index_val3 +'" onchange="z_daysToggle(this)"><option value="software">software</option><option value="Manual">Manual</option></select></div>');
		  	  	  					}
		  	  	  					else{
		  	  	  					$('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday1">'+ obj3 + '</div>');
		  	  	  					}
		  	  						
		  	  	  				}
		  	  	  				else{
		  	  	  					if(obj3 == "Total Cost"){
		  	  	  						//$('#z-total-cost-content').append('<div class="z-col-2">'+ obj3 + '</div>');
		  	  	  					}
		  	  	  					else{
		  	  	  						$('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday2 d-none">'+ obj3 + '</div>');
		  	  	  					}
		  	  	  					
		  	  	  				}
		  	  				if(obj1.totalCostItemTitle.length ==7 || obj1.totalCostItemTitle.length ==8){
		  	  				$('.z-colWidth-rig').addClass('z-totalCost-width');
			  					$('.z-colWidth-rig').removeClass('z-colWidth-rig');
		  	  				}
		  	  				
		  	  					
		  	  				}
		  	  				
		  	  					
		  	  			});
		  			}
		  			
		  			var max_cost_limit = 0;
		  			var level4_no = 0;
		  			var subday_index,subday_index_level4;
					                      var total_cost_item = [];
                      var total_cost_item1 = {};
                      var total_cost_item2 = {};
                      var total_cost_item4 = [];
                      var find_level2;
                      var find_level3;
                      var find_level4;
                      if(levelSelect == "2"){
                        obj1.totalCostItem.forEach(function(sub_obj,sub_index){
                            total_cost_item2.phase = sub_obj.phase;
                            total_cost_item2.disableIndex = sub_obj.disableIndex;
                            total_cost_item2.rateValue = sub_obj.rateValue;
                            total_cost_item2.formula = sub_obj.formula;
                            find_level2 = obj1.subLevels.findIndex(function(val_object){
                                return val_object.phaseName == sub_obj.phase;
                            });
                            if(find_level2 != -1){
                                if(obj1.subLevels[find_level2].isSelected){
                                    if(sub_obj.subPhase != null){
                                        sub_obj.subPhase.forEach(function(level4){
                                            find_level3 = obj1.subLevels[find_level2].subLevels.findIndex(function(val_obj4){
                                                return val_obj4.phaseName == level4.phase;
                                            });
                                            if(find_level3 != -1){
                                                if(obj1.subLevels[find_level2].subLevels[find_level3].isSelected){
                                                    total_cost_item4.push(level4);
                                                    //val_obj4 = {};
                                                }
                                            }
                                          
                                        });
                                        total_cost_item2.subPhase = total_cost_item4;
                                        total_cost_item4 = [];
                                    }
                                    //sub_obj = total_cost_item2;
                                    total_cost_item.push(total_cost_item2);
                                    total_cost_item2 = {};
                                }
                            }
                        
                            
                        });
                        
                      }
                      else if(levelSelect == "3"){
                        obj1.totalCostItem.forEach(function(sub_obj,sub_index){
                            if(sub_obj.phase == level3_name){
                                total_cost_item2.phase = sub_obj.phase;
                                total_cost_item2.disableIndex = sub_obj.disableIndex;
                                total_cost_item2.rateValue = sub_obj.rateValue;
                                total_cost_item2.formula = sub_obj.formula;
                                find_level2 = obj1.subLevels.findIndex(function(valOb3){
                                    return valOb3.phaseName == level3_name;
                                });
                                if(find_level2 != -1){
                                    if(sub_obj.subPhase != null){
                                        sub_obj.subPhase.forEach(function(level4){
                                            find_level4 = obj1.subLevels[find_level2].subLevels.findIndex(function(valOb4){
                                                return valOb4.phaseName == level4.phase;
                                            });
                                            if(find_level4 != -1){
                                                if(obj1.subLevels[find_level2].subLevels[find_level4].isSelected){
                                                    total_cost_item4.push(level4);
                                                }
                                            }
                                          
                                            
                                        });
                                        if(total_cost_item4.length > 0){
                                            total_cost_item2.subPhase = total_cost_item4;
                                            total_cost_item4 = [];
                                        }
                                   
                                    }
                                    total_cost_item.push(total_cost_item2);
                                    total_cost_item2 = {};
                                }
                                
                            }
                            
                        });
                      }
                      else if(levelSelect == "4"){
                        obj1.totalCostItem.forEach(function(sub_obj,sub_index){
                            if(sub_obj.phase == level3_name){
                                if(sub_obj.subPhase != null){
                                    sub_obj.subPhase.forEach(function(level4){
                                        if(level4.phase == level4_name){
                                            total_cost_item.push(level4);
                                        }
                                        
                                    });
                                }
                            }
                        });
                      }
		  			if(total_cost_item != null){
		  				total_cost_item.forEach(function(sub_obj,sub_index){
		  					if(sub_obj.subPhase != null){
		  					if(sub_obj.subPhase.length > 0){
		  						$('#z-rig-content').append('<div id="z-costBase-index-'+ sub_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1">'+ (sub_index+1) + '</div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ sub_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="rig" level="1">+</div></div></div>');	
		  						sub_obj.subPhase.forEach(function(level3_obj,level3_index){
		  							subday_index = sub_index+""+level3_index;
		  							//sel_index = subday_index + index_val1.toString();
		  							//sel_index = z_level4SerialNumber;
		  							//z_level4SerialNumber = z_level4SerialNumber + 1;
				  	  				if(level3_obj.subPhase != null){
			  						if(level3_obj.subPhase.length > 0){
				  						$('#z-rig-content').append('<div id="z-cost-index-'+ subday_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1"></div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ level3_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="2" level="2" level2-phase="'+sub_obj.phase+'" base-level="'+level3_index+'" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" base-level="'+level3_index+'" level2-phase="'+sub_obj.phase+'" levels="rig" level="2">+</div></div></div>');	
				  	  				level3_obj.subPhase.forEach(function(level4Obj,level4Index){
				  	  				
				  	  					subday_index_level4 = subday_index+""+level4Index+level4_no;
				  	  				level4_no = level4_no + 1;
				  	  					$('#z-rig-content').append('<div id="z-cost-index-'+ subday_index_level4 + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1"></div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ level4Obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="3" level="3" level2-phase="'+sub_obj.phase+'" base-level="'+level3_index+'" level3-index="'+level4Index+'" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" level2-phase="'+sub_obj.phase+'" base-level="'+level3_index+'" level3-index="'+level4Index+'" levels="rig" level="3">+</div></div></div>');	
				  	  				//sel_index = subday_index + ""+level4Index + ""+index_val1.toString();
				  	  				sel_index = z_level4SerialNumber;
		  							z_level4SerialNumber = z_level4SerialNumber + 1;
				  						for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
						  	  				max_cost_limit = obj1.totalCostItemTitle.length;
						  	  			((level4Obj.rateValue[title_index] == null) ? rateval="" : rateval = level4Obj.rateValue[title_index]);
						  	  		//console.log("log error"+level4Obj.phase);
						  	  			if(level4Obj.disableIndex.includes(title_index.toString())){
			  	  						if(level4Obj.disableIndex[level4Obj.disableIndex.length-1] == title_index.toString()){
			  	          					if(max_cost_limit > 0){
			  	          						if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost") ){
			  	          						if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;    
                                                    $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ level4Obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	          						else{
			  	          							$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ level4Obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');

			  	          						}
			  	              					}
			  	              					else{
			  	              						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	                  						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level3-title="'+level3_index+'" level3-base="'+level3_obj.phase+'" level2-base="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	              						}
			  	              						else if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                        z_class = 'z-grantTotal-element'+index_val1;    
                                                        $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ level4Obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	              						else{
			  	                  						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ level4Obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
			  	              						}
			  	              					}
			  	          					}
			  	  							
			  	  						}
			  	  					else{
		  	  							if(max_cost_limit > 0){
		  	  								if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
		  	  								if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                z_class = 'z-grantTotal-element'+index_val1;    
                                                $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level4Obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

		  	  								}
		  	  								else{
		  	  									$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ level4Obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

		  	  								}
		  	  	          					}
		  	  	          					else{
		  	  	          						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
		  	  	              						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level3-base="'+level3_obj.phase+'" level2-base="'+sub_obj.phase+'" disabled="true"></div></div></div>');

		  	  	          						}
		  	  	          						else{
		  	  	              						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+level4Obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

		  	  	          						}
		  	  	          					}
		  	  							}
		  	  						
		  	          				
		  	  						}
		  	  					}
						  	  	else{
		  	  						z_class = 'z-grantTotal-element'+index_val1;
		  	  						$(total_cost_element).addClass(z_class);
		  	  						if(max_cost_limit > 0){
		  	  							if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
		  	  	      						$('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ level4Obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
		  	  	      					}
		  	  	      					else{
		  	  	      						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
		  	  	          						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level3-base="'+level3_obj.phase+'" level2-base="'+sub_obj.phase+'" disabled="true"></div></div></div>');

		  	  	      						}
		  	  	      						else{
		  	  	          						$('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level4Obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
		  	  	      						}
		  	  	      					}
		  	  						}
		  	      				
		  	  					}
						  	  				}
				  	  				});
				  	  				}
		  						}//level2 costinput
				  	  				else{
				  	  					subday_index_level4 = subday_index+""+level4_no;
				  	  				level4_no = level4_no + 1;
				  	  					$('#z-rig-content').append('<div id="z-cost-index-'+ subday_index_level4 + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1"></div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ level3_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="2" level="2" level2-phase="'+sub_obj.phase+'" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" level2-phase="'+sub_obj.phase+'" levels="rig" level="2">+</div></div></div>');	
				  	  				//sel_index = subday_index + "" + ""+index_val1.toString();
				  	  				sel_index = z_level4SerialNumber;
		  							z_level4SerialNumber = z_level4SerialNumber + 1;
				  						for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
						  	  				max_cost_limit = obj1.totalCostItemTitle.length;
						  	  			((level3_obj.rateValue[title_index] == null) ? rateval="" : rateval = level3_obj.rateValue[title_index]);
						  	  		if(level3_obj.disableIndex.includes(title_index.toString())){
			  	  						if(level3_obj.disableIndex[level3_obj.disableIndex.length-1] == title_index.toString()){
			  	          					if(max_cost_limit > 0){
			  	          						if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost") ){
			  	          						if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;   
                                                    $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ level3_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	          						else{
			  	          							$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ level3_obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');

			  	          						}
			  	              					}
			  	              					else{
			  	              						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	                  						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level2-title="'+sub_index+'" level2-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	              						}
			  	              						else if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                        z_class = 'z-grantTotal-element'+index_val1;    
                                                        $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ level3_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	              						else{
			  	                  						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ level3_obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
			  	              						}
			  	              					}
			  	          					}
			  	  							
			  	  						}
			  	  					else{
		  	  							if(max_cost_limit > 0){
		  	  								if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
		  	  								if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                z_class = 'z-grantTotal-element'+index_val1;    
                                                $('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level3_obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

		  	  								}
		  	  								else{
		  	  									$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ level3_obj.phase+ '" index="'+ sel_index +  '"value="\"'+ rateval.toString() + '"\""phase="'+ index_val1 + '" disabled="true"></div></div></div>');

		  	  								}
		  	  	          					}
		  	  	          					else{
		  	  	          						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
		  	  	              						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level2-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

		  	  	          						}
		  	  	          						else{
		  	  	              						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+level3_obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

		  	  	          						}
		  	  	          					}
		  	  							}
		  	  						
		  	          				
		  	  						}
		  	  					}
						  	  	else{
		  	  						z_class = 'z-grantTotal-element'+index_val1;
		  	  						$(total_cost_element).addClass(z_class);
		  	  						if(max_cost_limit > 0){
		  	  							if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
		  	  	      						$('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ level3_obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
		  	  	      					}
		  	  	      					else{
		  	  	      						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
		  	  	          						$('#z-cost-index-'+subday_index_level4).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level2-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

		  	  	      						}
		  	  	      						else{
		  	  	          						$('#z-cost-index-'+subday_index_level4).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level3_obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
		  	  	      						}
		  	  	      					}
		  	  						}
		  	      				
		  	  					}
						  	  				}
				  	  				
				  	  				}
			  					
				  	  				$('#z-save-days').attr('phase',index_val1);
				  	  			$('#z-save-days').attr('level1-phase',index_val);
				  	  				$('#z-save-days').attr('rateLength',total_cost_item.length);
				  	  				if(level3_obj.rateValue[level3_obj.rateValue.length-1] && level3_obj.rateValue.length > 0){
				  	      				grant_total_val = level3_obj.rateValue[level3_obj.rateValue.length-1];
				  	  				}
			  					
		  						});
		  					}
		  				}
		  					else{
		  						$('#z-rig-content').append('<div id="z-cost-index-'+ sub_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1">'+ (sub_index+1) + '</div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ sub_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="rig" level="1">+</div></div></div>');	
		  						sel_index = z_level4SerialNumber;
				  	  			z_level4SerialNumber = z_level4SerialNumber + 1;
		  						for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
			  	  				//sel_index = sub_index.toString() + index_val1.toString();
			  	  					max_cost_limit = obj1.totalCostItemTitle.length;
			  							((sub_obj.rateValue[title_index] == null) ? rateval="" : rateval = sub_obj.rateValue[title_index]);            
			  							if(sub_obj.disableIndex.includes(title_index.toString())){
			  	  						if(sub_obj.disableIndex[sub_obj.disableIndex.length-1] == title_index.toString()){
			  	          					if(max_cost_limit > 0){
			  	          						if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
			  	          						if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;    
                                                    $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ sub_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	          						else{
			  	          							$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');

			  	          						}
			  	              					}
			  	              					else{
			  	              						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	                  						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-title="'+index_val+'" level1-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	              						}
			  	              						else if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                        z_class = 'z-grantTotal-element'+index_val1;    
                                                        $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ sub_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	          						}
			  	              						else{
			  	                  						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
			  	              						}
			  	              					}
			  	          					}
			  	  							
			  	  						}
			  	  						else{
			  	  							if(max_cost_limit > 0){
			  	  								if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
			  	  								if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                    z_class = 'z-grantTotal-element'+index_val1;
			  	  									$('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ sub_obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

			  	  								}
			  	  								else{
			  	  									$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ sub_obj.phase+ '" index="'+ sel_index +  '"value="\"'+ rateval.toString() + '"\""phase="'+ index_val1 + '" disabled="true"></div></div></div>');

			  	  								}
			  	  	          					}
			  	  	          					else{
			  	  	          						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	  	              						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	  	          						}
			  	  	          						else{
			  	  	              						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+sub_obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

			  	  	          						}
			  	  	          					}
			  	  							}
			  	  						
			  	          				
			  	  						}
			  	  					}
			  	  					else{
			  	  						z_class = 'z-grantTotal-element'+index_val1;
			  	  						$(total_cost_element).addClass(z_class);
			  	  						if(max_cost_limit > 0){
			  	  							if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
			  	  	      						$('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ sub_obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
			  	  	      					}
			  	  	      					else{
			  	  	      						if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
			  	  	          						$('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-phase="'+sub_obj.phase+'" disabled="true"></div></div></div>');

			  	  	      						}
			  	  	      						else{
			  	  	          						$('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ sub_obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
			  	  	      						}
			  	  	      					}
			  	  						}
			  	      				
			  	  					}
			  	  				}
			  	  				$('#z-save-days').attr('phase',index_val1);
			  	  				$('#z-save-days').attr('rateLength',total_cost_item.length);
			  	  			$('#z-save-days').attr('level1-phase',index_val);
			  	  				if(sub_obj.rateValue[sub_obj.rateValue.length-1] && sub_obj.rateValue.length > 0){
			  	      				grant_total_val = sub_obj.rateValue[sub_obj.rateValue.length-1];
			  	  				}
		  					}
		  			
		  	  			});
		  				$('#custom-modal-content').append('<div id="z-cost-Granttotal" class="d-flex z-tableData-row  z-borderBottom z-height-subcost z-cost-contentday2 d-none"><div class="z-col-1"></div><div class="z-col-3"></div><div class="z-col-2"></div><div class="z-col-2"></div><div class="z-col-2"></div><div class="z-col-3 z-grant-total-sec">GRAND TOTAL</div><div id="grant-value-cost" class="z-col-2">'+ grant_total_val + '</div></div>');
						$('#custom-modal-content').append('<div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" levels = "rig" onclick="z_addcustomItems(this)">Add Line Items</div>');
						$('#custom-modal-content').append('<div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" levels = "rig" onclick="z_deleteRigItems(this)">Delete Line Items</div>');
		  			}
		  			
						

		  		}
		  	});
		  
        }
	  });
  
  }
  else if(z_level == "Level3"){
	  var levelSelect = $(rig_element).attr('current-phase');
    var levelSelect_name = $(rig_element).text();
    var total_cost_itemVal = [];
    var level2_name = "";

    if(levelSelect == "3"){
        level2_name = $(rig_element).attr('level2-name');
    }  
	  well_data.forEach(function(obj,index_val){
        if(index_val == $(rig_element).attr('base-level')){
		  	obj.subLevels.forEach(function(obj1,index_val1){
		  		
		  		if(obj1.phaseName == rig_element.innerText.split("choose")[0].trim()|| obj1.phaseName == level2_name){
		  			if(obj1.totalCostItemTitle != null){
		  				obj1.totalCostItemTitle.forEach(function(obj3,index_val3){
		  		  			
		  	  				if(obj1.totalCostItemTitle.length > 0){
		  	  					if(!(obj3.includes("Rate")) && !(obj3.includes("Cost")) && !(obj3 == "Total Cost")){
		  	  	  					if(obj3.includes("Total Days")){
		  	  	  					$('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday1">'+ obj3 + '<select class="z-toggleClass" index="'+ index_val3 +'" onchange="z_daysToggle(this)"><option value="software">software</option><option value="Manual">Manual</option></select></div>');
		  	  	  					}
		  	  	  					else{
		  	  	  						$('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday1">'+ obj3 + '</div>');
		  	  	  					}
		  	  						
		  	  	  				}
		  	  	  				else{
		  	  	  					if(obj3 == "Total Cost"){
		  	  	  						//$('#z-total-cost-content').append('<div class="z-col-2">'+ obj3 + '</div>');
		  	  	  					}
		  	  	  					else if(obj3 == "Days for Other Rates"){
		  	  	  						$('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday1">'+ obj3 + '</div>');
		  	  	  					}
		  	  	  					else{
		  	  	  						$('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday2 d-none">'+ obj3 + '</div>');
		  	  	  					}
		  	  	  					
		  	  	  				}
		  	  				if(obj1.totalCostItemTitle.length ==7 || obj1.totalCostItemTitle.length ==8){
		  	  				$('.z-colWidth-rig').addClass('z-totalCost-width');
			  					$('.z-colWidth-rig').removeClass('z-colWidth-rig');
		  	  				}
		  	  				
		  	  					
		  	  				}
		  	  				
		  	  					
		  	  			});
		  			}
		  			
		  			var max_cost_limit = 0;
		  			var subday_index;
					var total_obj = {};
                      var total_sub_obj = {};
                      var find_level2;
                      var find_level3;
		  			if(obj1.totalCostItem != null){
                             if(levelSelect == "2"){
                                obj1.totalCostItem.forEach(function(sub_obj,sub_index){
                                    find_level2 = obj1.subLevels.findIndex(function(val_object){
                                        return val_object.phaseName == sub_obj.phase;
                                    });
                                    if(find_level2 != -1){
                                        if(obj1.subLevels[find_level2].isSelected){
                                            total_cost_itemVal.push(sub_obj);
                                        }
                                    }
                                  
                                    
                                });
                             }
                             else if(levelSelect == "3"){
                                obj1.totalCostItem.forEach(function(sub_obj,sub_index){
                                    find_level2 = obj1.subLevels.findIndex(function(val_object){
                                        return val_object.phaseName == sub_obj.phase;
                                    });
                                    
                                    if(sub_obj.phase == $(rig_element).text()){
                                        total_cost_itemVal.push(sub_obj);
                                    }
                                    
                                });
                             }
                            }
		  			if(total_cost_itemVal != null){
		  				total_cost_itemVal.forEach(function(sub_obj,sub_index){
		  				   if(sub_obj.subPhase.length > 0){
                                    $('#z-rig-content').append('<div id="z-costBase-index-'+ sub_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1">'+ (sub_index+1) + '</div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ sub_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="rig" level="1">+</div></div></div>');	
                                    sub_obj.subPhase.forEach(function(level3_obj,level3_index){
                                        subday_index = sub_index+""+level3_index;
                                        sel_index = subday_index + index_val1.toString();
                                        $('#z-rig-content').append('<div id="z-cost-index-'+ subday_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1"></div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ level3_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="2" level="2" level2-phase="'+sub_obj.phase+'" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" level2-phase="'+sub_obj.phase+'" levels="rig" level="2">+</div></div></div>');	
                                          for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
                                          max_cost_limit = obj1.totalCostItemTitle.length;
                                      ((level3_obj.rateValue[title_index] == null) ? rateval="" : rateval = level3_obj.rateValue[title_index]);
                                  if(level3_obj.disableIndex.includes(title_index.toString())){
                                      if(level3_obj.disableIndex[level3_obj.disableIndex.length-1] == title_index.toString()){
                                          if(max_cost_limit > 0){
                                              if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost") ){
                                              if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                              z_class = 'z-grantTotal-element'+index_val1;    
                                              $('#z-cost-index-'+subday_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"'line-item='"+ level3_obj.phase + "'index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");
  
                                              }
                                              else{
                                                  $('#z-cost-index-'+subday_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ level3_obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');
  
                                              }
                                              }
                                              else{
                                                  if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
                                                      $('#z-cost-index-'+subday_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-title="'+sub_index+'" disabled="true"></div></div></div>');
  
                                                  }
                                              else if(obj1.totalCostItemTitle[title_index] == "Days for Other Rates"){
                                                  $('#z-cost-index-'+subday_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ level3_obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');
                                              }
                                                  else if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                  z_class = 'z-grantTotal-element'+index_val1;    
                                                  $('#z-cost-index-'+subday_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"'line-item='"+ level3_obj.phase + "'index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");
  
                                              }
                                                  else{
                                                      $('#z-cost-index-'+subday_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ level3_obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
                                                  }
                                              }
                                          }
                                          
                                      }
                                  else{
                                      if(max_cost_limit > 0){
                                          if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
                                          if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                          z_class = 'z-grantTotal-element'+index_val1;    
                                          $('#z-cost-index-'+subday_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level3_obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");
  
                                          }
                                          else{
                                              $('#z-cost-index-'+subday_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ level3_obj.phase+ '" index="'+ sel_index +  '"value="\"'+ rateval.toString() + '"\""phase="'+ index_val1 + '" disabled="true"></div></div></div>');
  
                                          }
                                            }
                                            else{
                                                if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
                                                    $('#z-cost-index-'+subday_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-title="'+sub_index+'" disabled="true"></div></div></div>');
  
                                                }
                                            else if(obj1.totalCostItemTitle[title_index] == "Days for Other Rates"){
                                              $('#z-cost-index-'+subday_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ level3_obj.phase+ '" index="'+ sel_index +  '"value="\"'+ rateval.toString() + '"\""phase="'+ index_val1 + '" disabled="true"></div></div></div>');
                                            }
                                                else{
                                                    $('#z-cost-index-'+subday_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+level3_obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
  
                                                }
                                            }
                                      }
                                  
                                  
                                  }
                              }
                              else{
                                  z_class = 'z-grantTotal-element'+index_val1;
                                  $(total_cost_element).addClass(z_class);
                                  if(max_cost_limit > 0){
                                      if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
                                            $('#z-cost-index-'+subday_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ level3_obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
                                        }
                                        else{
                                            if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
                                                $('#z-cost-index-'+subday_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-title="'+sub_index+'" disabled="true"></div></div></div>');
  
                                            }
                                        else if(obj1.totalCostItemTitle[title_index] == "Days for Other Rates"){
                                            $('#z-cost-index-'+subday_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ level3_obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
                                        }
                                            else{
                                                $('#z-cost-index-'+subday_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ level3_obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
                                            }
                                        }
                                  }
                              
                              }
                                          }
                                          $('#z-save-days').attr('phase',index_val1);
                                      $('#z-save-days').attr('level1-phase',index_val);
                                          $('#z-save-days').attr('rateLength',total_cost_itemVal.length);
                                          if(level3_obj.rateValue[level3_obj.rateValue.length-1] && level3_obj.rateValue.length > 0){
                                              grant_total_val = level3_obj.rateValue[level3_obj.rateValue.length-1];
                                          }
                                    
                                    });
                                }
                                else{
                                    $('#z-rig-content').append('<div id="z-cost-index-'+ sub_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1">'+ (sub_index+1) + '</div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ sub_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="rig" level="1">+</div></div></div>');	
                                      for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
                                      sel_index = sub_index.toString() + index_val1.toString();
                                          max_cost_limit = obj1.totalCostItemTitle.length;
                                            ((sub_obj.rateValue[title_index] == null) ? rateval="" : rateval = sub_obj.rateValue[title_index]);            
                                            if(sub_obj.disableIndex.includes(title_index.toString())){
                                              if(sub_obj.disableIndex[sub_obj.disableIndex.length-1] == title_index.toString()){
                                                  if(max_cost_limit > 0){
                                                      if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
                                                      if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                      z_class = 'z-grantTotal-element'+index_val1;    
                                                      $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ sub_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");
  
                                                      }
                                                      else{
                                                          $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');
  
                                                      }
                                                      }
                                                      else{
                                                          if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
                                                              $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-base-title="'+sub_index+'" disabled="true"></div></div></div>');
  
                                                          }
                                                      else if(obj1.totalCostItemTitle[title_index] == "Days for Other Rates"){
                                                          $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');
                                                      }
                                                          else if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                          z_class = 'z-grantTotal-element'+index_val1;    
                                                          $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ sub_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");
  
                                                      }
                                                          else{
                                                              $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
                                                          }
                                                      }
                                                  }
                                                  
                                              }
                                              else{
                                                  if(max_cost_limit > 0){
                                                      if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
                                                      if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                                      z_class = 'z-grantTotal-element'+index_val1;    
                                                      $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ sub_obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "' oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");
  
                                                      }
                                                      else{
                                                          $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ sub_obj.phase+ '" index="'+ sel_index +  '"value="\"'+ rateval.toString() + '"\""phase="'+ index_val1 + '" disabled="true"></div></div></div>');
  
                                                      }
                                                        }
                                                        else{
                                                            if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
                                                                $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-base-title="'+sub_index+'" disabled="true"></div></div></div>');
  
                                                            }
                                                        else if(obj1.totalCostItemTitle[title_index] == "Days for Other Rates"){
                                                          $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ sub_obj.phase+ '" index="'+ sel_index +  '"value="\"'+ rateval.toString() + '"\""phase="'+ index_val1 + '" disabled="true"></div></div></div>');
                                                        }
                                                            else{
                                                                $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+sub_obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
  
                                                            }
                                                        }
                                                  }
                                              
                                              
                                              }
                                          }
                                          else{
                                              z_class = 'z-grantTotal-element'+index_val1;
                                              $(total_cost_element).addClass(z_class);
                                              if(max_cost_limit > 0){
                                                  if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost")){
                                                        $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ sub_obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
                                                    }
                                                    else{
                                                        if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
                                                            $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" level1-base-title="'+sub_index+'" disabled="true"></div></div></div>');
  
                                                        }
                                                    else if(obj1.totalCostItemTitle[title_index] == "Days for Other Rates"){
                                                        $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ sub_obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
                                                    }
                                                        else{
                                                            $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ sub_obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
                                                        }
                                                    }
                                              }
                                          
                                          }
                                      }
                                      $('#z-save-days').attr('phase',index_val1);
                                      $('#z-save-days').attr('rateLength',total_cost_itemVal.length);
                                  $('#z-save-days').attr('level1-phase',index_val);
                                      if(sub_obj.rateValue[sub_obj.rateValue.length-1] && sub_obj.rateValue.length > 0){
                                          grant_total_val = sub_obj.rateValue[sub_obj.rateValue.length-1];
                                      }
                                }
		  			
		  	  			});
		  				$('#custom-modal-content').append('<div id="z-cost-Granttotal" class="d-flex z-tableData-row  z-borderBottom z-height-subcost z-cost-contentday2 d-none"><div class="z-col-1"></div><div class="z-col-3"></div><div class="z-col-2"></div><div class="z-col-2"></div><div class="z-col-2"></div><div class="z-col-3 z-grant-total-sec">GRAND TOTAL</div><div id="grant-value-cost" class="z-col-2">'+ grant_total_val + '</div></div>');
						$('#custom-modal-content').append('<div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" levels = "rig" onclick="z_addcustomItems(this)">Add Line Items</div>');
						$('#custom-modal-content').append('<div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" levels = "rig" onclick="z_deleteRigItems(this)">Delete Line Items</div>');
		  			}
		  			
						

		  		}
		  	});
		  
        }
	  });
  }
  else{
	  well_data.forEach(function(obj,index_val){
        if(index_val == $(rig_element).attr('base-level')){
            obj.subLevels.forEach(function(obj1,index_val1){
                if(obj1.phaseName == rig_element.innerText.split("choose")[0].trim()){
                    if(obj1.totalCostItemTitle != null){
                        obj1.totalCostItemTitle.forEach(function(obj3,index_val3){
                              
                              if(obj1.totalCostItemTitle.length > 0){
                                  if(!(obj3.includes("Rate")) && !(obj3.includes("Cost")) && !(obj3 == "Total Cost") && !(obj3 == "Unit Price")){
                                        
                                    if(obj3.includes("Total Days")){
                                        $('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday1">'+ obj3 + '<select class="z-toggleClass" index="'+ index_val3 +'" onchange="z_daysToggle(this)"><option value="software">software</option><option value="Manual">Manual</option></select></div>');
                                        }
                                    else{
                                    $('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday1">'+ obj3 + '</div>');
                                    }
                                    }
                                    else{
                                        if(obj3 == "Total Cost"){
                                            //$('#z-total-cost-content').append('<div class="z-col-2">'+ obj3 + '</div>');
                                        }
                                        else{
                                            $('#z-total-cost-content').append('<div class="z-col-2 z-cost-contentday2 d-none">'+ obj3 + '</div>');
                                        }
                                        
                                    }
                              if(obj1.totalCostItemTitle.length ==7 || obj1.totalCostItemTitle.length ==8){
                              $('.z-colWidth-rig').addClass('z-totalCost-width');
                                $('.z-colWidth-rig').removeClass('z-colWidth-rig');
                              }
                              
                                  
                              }
                              
                                  
                          });
                    }
                    
                    var max_cost_limit = 0;
                    if(obj1.totalCostItem != null){
                        obj1.totalCostItem.forEach(function(sub_obj,sub_index){
                              $('#z-rig-content').append('<div id="z-cost-index-'+ sub_index + '" class="d-flex z-tableData-row  z-borderBottom z-height-subcost"><div class="z-col-1">'+ (sub_index+1) + '</div><div class="z-col-3 z-config-content" onclick="z_selectRigItems(this)" onmouseover="z_levels_hover(this)">'+ sub_obj.phase + '<div class="z-l-closeBtn-cost z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteRigItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-cost d-none" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="rig" level="1">+</div></div></div>');	
                              for(var title_index = 0; title_index < obj1.totalCostItemTitle.length; title_index++){
                                  sel_index = sub_index.toString() + index_val1.toString();
                                  max_cost_limit = obj1.totalCostItemTitle.length;
                                    ((sub_obj.rateValue[title_index] == null) ? rateval="" : rateval = sub_obj.rateValue[title_index]);            
                                    if(sub_obj.disableIndex.includes(title_index.toString())){
                                      if(sub_obj.disableIndex[sub_obj.disableIndex.length-1] == title_index.toString()){
                                          if(max_cost_limit > 0){
                                              if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost") && !(obj1.totalCostItemTitle[title_index] == "Unit Price")){
                                              if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                              z_class = 'z-grantTotal-element'+index_val1;
                                                  $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+ obj1.totalCostItemTitle[title_index] +"' title-index='"+ title_index +"' line-item='"+ sub_obj.phase + "' index='"+ sel_index +  "'value='"+ total_day_Asnum +"'phase='"+ index_val1 + "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

                                              }
                                              else{
                                                  $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+ obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '"value="\"'+ rateval.toString() +'"\""phase="'+ index_val1 + '"disabled="true"></div></div></div>');

                                              }
                                              }
                                              else{
                                                  if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
                                                      $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'"title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

                                                  }
                                                  else{
                                                      $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-index="'+title_index+'" title-value="'+obj1.totalCostItemTitle[title_index]+'" line-item="'+ sub_obj.phase + '" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');
                                                  }
                                              }
                                          }
                                          
                                      }
                                      else{
                                          if(max_cost_limit > 0){
                                              if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost") && !(obj1.totalCostItemTitle[title_index] == "Unit Price")){
                                              if(obj1.totalCostItemTitle[title_index] == "Total Days"){
                                              z_class = 'z-grantTotal-element'+index_val1;
                                                  $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"'type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ sub_obj.phase+ "' index='"+ sel_index +  "'value='"+ total_day_Asnum + "'phase='"+ index_val1 + "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' add-currency='false' disabled='true'></div></div></div>");

                                              }
                                              else{
                                                  $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday1"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+ sub_obj.phase+ '" index="'+ sel_index +  '"value="\"'+ rateval.toString() + '"\""phase="'+ index_val1 + '" disabled="true"></div></div></div>');

                                              }
                                                }
                                                else{
                                                    if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
                                                        $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

                                                    }
                                                    else{
                                                        $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-cost-contentday2 d-none"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" line-item="'+sub_obj.phase+ '" index="'+ sel_index +  '" value="'+ rateval +'" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

                                                    }
                                                }
                                          }
                                      
                                      
                                      }
                                  }
                                  else{
                                      z_class = 'z-grantTotal-element'+index_val1;
                                      $(total_cost_element).addClass(z_class);
                                      if(max_cost_limit > 0){
                                          if(!(obj1.totalCostItemTitle[title_index].includes("Rate")) && !(obj1.totalCostItemTitle[title_index].includes("Cost")) && !(obj1.totalCostItemTitle[title_index] == "Total Cost") && !(obj1.totalCostItemTitle[title_index] == "Unit Price")){
                                                $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday1'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+ "' line-item='"+ sub_obj.phase +"' add-currency='false' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' value='"+ rateval.toString() +"' phase='"+ index_val1 + "'></div></div></div>");
                                            }
                                            else{
                                                if(obj1.totalCostItemTitle[title_index] == "Total Cost"){
                                                    $('#z-cost-index-'+sub_index).append('<div class="z-col-2 z-custom-totalCost"><div class="z-l-grey-color"><input class="w-100 z-viewCost z-totalCost-sum z-costTotal-calc' + sel_index +'"type="text" title-value="'+obj1.totalCostItemTitle[title_index]+'" title-index="'+title_index+'" index="'+ sel_index +  '" value="'+ rateval + '" phase="'+ index_val1 + '" disabled="true"></div></div></div>');

                                                }
                                                else{
                                                    $('#z-cost-index-'+sub_index).append("<div class='z-col-2 z-cost-contentday2 d-none'><div class='z-l-grey-color'><input class='w-100 z-viewCost z-costTotal-calc" + sel_index +"' type='text' title-value='"+obj1.totalCostItemTitle[title_index]+"' title-index='"+title_index+"' line-item='"+ sub_obj.phase + "' add-currency='true' index='"+ sel_index +  "'oninput='z_totalCost_cal(this,\""+ z_class +"\")' onkeydown='z_removeRig(this,\""+ z_class +"\")' key='false' value='"+ rateval + "' phase='"+ index_val1 + "'></div></div></div>");
                                                }
                                            }
                                      }
                                  
                                  }
                              }
                              $('#z-save-days').attr('phase',index_val1);
                              $('#z-save-days').attr('rateLength',obj1.totalCostItem.length);
                          $('#z-save-days').attr('level1-phase',index_val);
                              if(sub_obj.rateValue[sub_obj.rateValue.length-1] && sub_obj.rateValue.length > 0){
                                  grant_total_val = sub_obj.rateValue[sub_obj.rateValue.length-1];
                              }
                          });
                        $('#custom-modal-content').append('<div id="z-cost-Granttotal" class="d-flex z-tableData-row  z-borderBottom z-height-subcost z-cost-contentday2 d-none"><div class="z-col-1"></div><div class="z-col-3"></div><div class="z-col-2"></div><div class="z-col-2"></div><div class="z-col-2"></div><div class="z-col-3 z-grant-total-sec">GRAND TOTAL</div><div id="grant-value-cost" class="z-col-2">'+ grant_total_val + '</div></div>');
                      $('#custom-modal-content').append('<div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" levels = "rig" onclick="z_addcustomItems(this)">Add Line Items</div>');
                      $('#custom-modal-content').append('<div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" levels = "rig" onclick="z_deleteRigItems(this)">Delete Line Items</div>');
                    }
                    
                      

                }
            });
        }      
       
		  
	  });
  }
}
function z_removeRig(el,z){
	z_estimate_currency = "$";
	 var key = event.keyCode || event.charCode;
	 if( key == 8 || key == 46 ){
		 $(el).attr('key','true');
		 if(z_level != "Level1"){
			 z_totalCost_cal(el,z);
		 }
		 else{
			 	if(el.value.includes(z_estimate_currency)){
				//el.value = el.value.replace(/  /g, '');
				el.value = el.value.replace(/  [^\w\s]/gi, '');
				el.value = el.value.trim();
				el.value = el.value.substr(0,el.value.length-1);
			}
			el.value = el.value + "  "+z_estimate_currency;
		 }
		 
		 $(el).attr('key','false');
	 }
}
function z_wellPanel(el,callback){
	//loading_gif();
	$('.z-afeEstimation-header').removeClass('z-afeEstimation-header');
	$('.z-estimate-panel').removeClass('z-estimate-panel');
	$(el).addClass('z-estimate-panel');
	$('#brand-logo-company').addClass('d-none');
	var z_panel_text = $(el).text();
	//$('#z-timeline-title').css("font-weight":"bold");
	if(z_panel_text == "AFE Components"){
		var check_forwells_exist = z_configJson_data.findIndex(function(object){
            return object.levelValue == z_level.split("Level")[1] && object.configNumber == "1" && object.wellId == x_wellId;
        });
        var check_for_selected;
        var check_for_next_level = "false";
        if($('#freshEstimate').attr('checkForFreshLevel') == "true"){
            
            if(check_forwells_exist != null && check_forwells_exist != -1){
                deleteLevels();
            }
            
        }
        z_AfeEstimation();
        z_showLevels_selected();
		average_select = $('#z-well-average').val();
		if(!($('#z-days-level3-config1').hasClass('d-none'))){
			$('#z-days-level3-config1').addClass('d-none');
		}
		$('#z-wellSection-AfeEstimate-finalbtn').text('Finalize AFE Components');
		$('#z-timeline-title').text('Select AFE Components');
		if(!($('#print-btn').hasClass('d-none'))){
			$('#print-btn').addClass('d-none');
		}
		if(z_level == "Level3"){
			if(!$('#z-days-level3-config1').hasClass('d-none')){
				$('#z-days-level3-config1').addClass('d-none');
            }
            check_for_selected = z_selected_leveldata.findIndex(function(valObj){
                return valObj.isSelected == true;
            });
           
            z_selected_leveldata.forEach(function(valObj1){
                if(valObj1.subLevels != null){
                    valObj1.subLevels.forEach(function(valObj2){
                        if(valObj2.subLevels != null){
                            valObj2.subLevels.forEach(function(valObj3){
                                if(valObj3.subLevels != null){
                                    valObj3.subLevels.forEach(function(valObj4){
                                        if(valObj4.isSelected){
                                            check_for_next_level = "true";
                                        }
                                    });
                                }
                            });
                        }
                    });
                }
            });
			if(z_configJson_data.length < 2 && z_configJson_data[0].wellId != "" || check_for_selected != -1){
                if(check_for_selected != -1){
                    z_showNextLevel("2");
                    z_showNextLevel("3");
                    if(check_for_next_level == "true"){
                        z_showNextLevel("4");
                    }
                }
               
                
			}
			
		}
		else if(z_level == "Level2"){
            check_for_selected = z_selected_leveldata.findIndex(function(valObj){
                return valObj.isSelected == true;
            });
            if(z_configJson_data.length < 2  && z_configJson_data[0].wellId != "" || check_for_selected != -1){
                if(check_for_selected != -1){
                    z_showNextLevel();
                }
                
			}
			
		}
		else if(z_level == "Level4"){
			
			if(!($('#z-days-level2-config1').hasClass('d-none'))){
				$('#z-days-level2-config1').addClass('d-none');
			}
			if(!($('#z-days-level4-config1').hasClass('d-none'))){
				$('#z-days-level4-config1').addClass('d-none');
            }
            check_for_selected = z_selected_leveldata.findIndex(function(valObj){
                return valObj.isSelected == true;
            });
           
            z_selected_leveldata.forEach(function(valObj1){
                if(valObj1.subLevels != null){
                    valObj1.subLevels.forEach(function(valObj2){
                        if(valObj2.subLevels != null){
                            valObj2.subLevels.forEach(function(valObj3){
                                if(valObj3.subLevels != null){
                                    valObj3.subLevels.forEach(function(valObj4){
                                        if(valObj4.subLevels != null){
                                            valObj4.subLevels.forEach(function(valObj5){
                                                if(valObj5.isSelected){
                                                    check_for_next_level = "true";
                                                }
                                            });
                                            
                                        }
                                    });
                                }
                            });
                        }
                    });
                }
            });
			if(z_configJson_data.length < 2  && z_configJson_data[0].wellId != "" || check_for_selected != -1){
                if(check_for_selected != -1){
                    z_showNextLevel("2");
                    z_showNextLevel("3");
                    z_showNextLevel("4");
                }
               
			}
		
		}
		
	}
	else if(z_panel_text == "Well Timeline"){
		if(z_level == "Level1"){
			/* if(!($('#z-estimate-header').hasClass('z-rightSection-active'))){
				$('#z-estimate-header').addClass('z-rightSection-active');
			} */
			if(!($('#z-configlevelTable').hasClass('z-rightSection'))){
				$('#z-configlevelTable').addClass('z-rightSection');
			}
			if($('#z-costTable').hasClass('z-rightSection-active')){
				$('#z-costTable').removeClass('z-rightSection-active');
			}
			if(!($('#print-btn').hasClass('d-none'))){
				$('#print-btn').addClass('d-none');
			}
			$('.test').remove();
			
			
			$('#z-total-days').text('');
			$('#z-total-costs').text('');
			/* $('#level2-day-result').append('<div id="z-check-total-level2" class="col-12 z-tableData-row test">'+
		             '<div class="row z-borderBottom">'+
		            '<div id="z-wellTotal" class="col-2 z-l-configbottom"></div>'+
		            '<div id="z-wellTotalSec" class="col-3 z-l-configbottom"></div>'+
		            '<div id="z-TotalDays-estimate" class="col-5 z-total-colorBlue z-l-configbottom font-weight-bold z-cost-content z-l-grey-color">Total Days</div>'+
		            '<div id="z-totalDaysSection-estimate" class="col-2 z-l-configbottom"><input id="z-totalDays" class="w-100 z-cost-content z-total-colorBlue font-weight-bold" type="text" name="" disabled=true value=""></div>'+
		            '</div></div>'); */
            if(days_enter != null){
                if(days_enter.length > 0){
                    $('#z-totalDays').val(days_enter[days_enter.length-1]);
                }
                else{
                    $('#z-totalDays').val('');
                }
            }
            else{
                $('#z-totalDays').val('');
            }
                    
			$('#z-afe-Configsection').removeClass('z-rightSection-active');
			$('#z-level1-wellTimeline').addClass('z-rightSection-active');
			/* if(!$('#z-afe-Estimationsection').hasClass('z-rightSection-active')){
				$('#z-afe-Estimationsection').addClass('z-rightSection-active');
			} */
		}
		else if(z_level == "Level2"){
			z_EstimateBack("prev");
			z_well_timeline();
			z_getSelected_days();
			z_serialNumberAdjust();
			z_showSeletedDays();
			cumulativeAdjustment();
			granttotal_calculation();
			$('#z-wellSection-AfeEstimate-finalbtn').text('Finalize Well Timeline');
			//$('#print-btn').removeClass('d-none');
			$('#z-afe-Configsection').removeClass('z-rightSection-active');
			if(!$('#z-afe-Estimationsection').hasClass('z-rightSection-active')){
				$('#z-afe-Estimationsection').addClass('z-rightSection-active');
			}
				z_timelinefn();
			$('.z-estimateBlock').removeClass('z-estimateBlock');
			$('#z-EstimateTitle-level2day').addClass('z-estimateBlock');
			$('.hide-data').addClass('d-none');
		}
		else if(z_level == "Level3"){
			$('#z-days-level3-config1').removeClass('d-none');
			if(!($('#z-configlevelTable').hasClass('z-rightSection'))){
				$('#z-configlevelTable').addClass('z-rightSection');
			}
			if(($('#z-configlevelTable').hasClass('z-rightSection-active'))){
				$('#z-configlevelTable').removeClass('z-rightSection-active');
			}
			if(($('#z-estimate-header').hasClass('z-rightSection-active'))){
				$('#z-estimate-header').removeClass('z-rightSection-active');
			}
			z_well_timeline();
			z_getSelected_days();
			z_serialNumberAdjust();
			z_showSeletedDays();
			cumulativeAdjustment();
			granttotal_calculation();
			if(!$('#z-days-level2-config1').hasClass('d-none')){
				$('#z-days-level2-config1').addClass('d-none');
			}
			if($('#z-days-level3-config1').hasClass('d-none')){
				$('#z-days-level3-config1').removeClass('d-none');
			}
			$('#z-afe-Configsection').removeClass('z-rightSection-active');
			if(!$('#z-afe-Estimationsection').hasClass('z-rightSection-active')){
				$('#z-afe-Estimationsection').addClass('z-rightSection-active');
			}
			z_timelinefn();
			$('.z-estimateBlock').removeClass('z-estimateBlock');
			$('#z-EstimateTitle-level3day').addClass('z-estimateBlock');
			$('.hide-data').addClass('d-none');
		}
		else if(z_level == "Level4"){
		
			if(!($('#z-configlevelTable').hasClass('z-rightSection'))){
				$('#z-configlevelTable').addClass('z-rightSection');
			}
			if(($('#z-configlevelTable').hasClass('z-rightSection-active'))){
				$('#z-configlevelTable').removeClass('z-rightSection-active');
			}
			if(($('#z-estimate-header').hasClass('z-rightSection-active'))){
				$('#z-estimate-header').removeClass('z-rightSection-active');
			}
			
			z_well_timeline();
			//z_getSelected_days();
			var z_array_dayObj1 = {};
			var test_index = 0;
			var z_activeday;
			var active_val;
			var z_day_active;
			var z_baselevel_length;
            var z_days_level_length;
			var wellDays_data_level4_length = wellDays_data_level4.length;
			for(var i = 0 ; i < wellDays_data_level4_length;i++){
				var z_baselevel = $('.z-level1-day'+ (i+1));
				var z_days_level = $('.z-days-level'+ (i+1));
				z_baselevel_length = z_baselevel.length;
                z_days_level_length = z_days_level.length;
				var z_basedays_level = $('.z-baseDay.z-days-level'+ (i+1));
				if(z_baselevel_length > 0 && z_days_level_length > 0){
						if(!(wellDays_data_level4[i].isSubmitted === undefined)){
							if(wellDays_data_level4[i].isSubmitted == true){
								$(z_days_level).removeClass('d-none');
								$(z_days_level).addClass('z-days-active');
								$(z_basedays_level).children().children()[0].innerText = (test_index+1).toString();
								z_activeday = z_basedays_level[0].classList[2];
						z_activeday = z_activeday.split('z-indexDay')[1];
						active_val = Number(z_activeday);
						z_day_active = $('.z-days'+active_val);
                        if(!wellDays_data_level4[i].hasOwnProperty("subPhase")){
                            z_daysCal(z_day_active[0]);
                        }
								test_index = test_index + 1;
									z_array_dayObj1.phase = 	wellDays_data_level4[i].phase;
						z_array_dayObj1.totalPhase = wellDays_data_level4[i].totalPhase;
						var z_index_day = z_array_day.findIndex(function(val){
							return val.phase == z_array_dayObj1.phase;
						});
						if(z_index_day == -1){
							z_array_day.push(z_array_dayObj1);
						}
						
						z_array_dayObj1 = {};
							}
							}
							if(z_selected_days_data.includes(z_baselevel[0].innerText)){
								$(z_days_level).removeClass('d-none');
								$(z_days_level).addClass('z-days-active');
								$(z_basedays_level).children().children()[0].innerText = (test_index+1).toString();
								z_activeday = z_basedays_level[0].classList[2];
						z_activeday = z_activeday.split('z-indexDay')[1];
						active_val = Number(z_activeday);
						z_day_active = $('.z-days'+active_val);
                        if(!wellDays_data_level4[i].hasOwnProperty("subPhase")){
                            z_daysCal(z_day_active[0]);
                        }
                        
								test_index = test_index + 1;
							}
						
				}
				}
			//z_serialNumberAdjust();
			z_showSeletedDays();
			//cumulativeAdjustment();
			granttotal_calculation();
			if(!($('#z-days-level2-config1').hasClass('d-none'))){
				$('#z-days-level2-config1').addClass('d-none');
			}
			if($('#z-days-level4-config1').hasClass('d-none')){
				$('#z-days-level4-config1').removeClass('d-none');
			}
			$('#z-afe-Configsection').removeClass('z-rightSection-active');
			if(!$('#z-afe-Estimationsection').hasClass('z-rightSection-active')){
				$('#z-afe-Estimationsection').addClass('z-rightSection-active');
			}
			z_timelinefn();
			$('.z-estimateBlock').removeClass('z-estimateBlock');
			$('#z-EstimateTitle-level4day').addClass('z-estimateBlock');
			$('.hide-data').addClass('d-none');
		}
		$('#z-timeline-title').text('Create Well Timeline');
		$('.z-estimate-panel').removeClass('z-estimate-panel');
		$('#z-afe-timeline-panel').addClass('z-estimate-panel');
		
	}
	else if(z_panel_text == "AFE Estimation"){
		//$('#z-afe-timeline-panel').click();
		//$('#z-dayInput-check-level2').val("false");
		var days_enter_length;
		var z_day_element_length;
		var well1_length;
	
		if(z_level == "Level1"){
			z_wellEstimate_section(z_Selected_Array);
            if(days_enter != null){
                days_enter_length = days_enter.length;
				if(days_enter_length > 0){
                    var z_day_element = $('.z-level1-day-input');
					z_day_element_length = z_day_element.length;
                    for(var elements1 = 0;elements1 < z_day_element_length;elements1++){
                        z_day_element[elements1].value = days_enter[elements1];
                    }
                    $('#z-totalDays').val(days_enter[days_enter.length-1]);
                }
            }
          
            var well1 = $('.z-res1');
			well1_length = well1.length; 
            if(well1_length > 0){
                var testVal = well1[0].value;
                z_rigCal(well1[0]);
                well1[0].value = testVal;
            }
		}
		else if(z_level == "Level2"){
			z_savewellConfig();
			z_grant_totalKey.sort(function(a,b){
				return a.indexVal - b.indexVal;
			});
			z_wellEstimate_section(z_Selected_Array);
			z_showSeletedDays();
			z_totalCostCalulate($('#z-estimate-lvg-data')[0]);
			if(!$('#z-costTable-level3').hasClass('d-none')){
				$('#z-costTable-level3').addClass('d-none');
			}
		}
		else if(z_level == "Level3"){
			z_savewellConfig();
			z_grant_totalKey.sort(function(a,b){
				return a.indexVal - b.indexVal;
            });
            z_showLevels_selected();
			z_wellEstimate_section(z_Selected_Array);
			z_showSeletedDays();
			z_totalCostCalulate($('#z-estimate-lvg-data')[0]);
			if(!($('#z-days-level3-config1').hasClass('d-none'))){
				$('#z-days-level3-config1').addClass('d-none');
			}
			if(!($('#z-configlevelTable').hasClass('z-rightSection'))){
				$('#z-configlevelTable').addClass('z-rightSection');
			}
			if(($('#z-configlevelTable').hasClass('z-rightSection-active'))){
				$('#z-configlevelTable').removeClass('z-rightSection-active');
			}
			if(!($('#z-estimate-header').hasClass('z-rightSection-active'))){
				$('#z-estimate-header').addClass('z-rightSection-active');
			}
			if($('#z-costTable-level3').hasClass('d-none')){
				$('#z-costTable-level3').removeClass('d-none');
			}
		
		}
		else if(z_level == "Level4"){
			
            z_savewellConfig();
            z_showLevels_selected();
			z_grant_totalKey.sort(function(a,b){
				return a.indexVal - b.indexVal;
			});
			z_wellEstimate_section(z_Selected_Array);
			z_showSeletedDays();
			z_totalCostCalulate($('#z-estimate-lvg-data')[0]);
			if(!($('#z-days-level3-config1').hasClass('d-none'))){
				$('#z-days-level3-config1').addClass('d-none');
			}
			if(!($('#z-days-level4-config1').hasClass('d-none'))){
				$('#z-days-level4-config1').addClass('d-none');
			}
			if(!($('#z-configlevelTable').hasClass('z-rightSection'))){
				$('#z-configlevelTable').addClass('z-rightSection');
			}
			if(($('#z-configlevelTable').hasClass('z-rightSection-active'))){
				$('#z-configlevelTable').removeClass('z-rightSection-active');
			}
			if(!($('#z-estimate-header').hasClass('z-rightSection-active'))){
				$('#z-estimate-header').addClass('z-rightSection-active');
			}
			if(!$('#z-costTable-level3').hasClass('d-none')){
				$('#z-costTable-level3').addClass('d-none');
			}
			if($('#z-costTable-level4').hasClass('d-none')){
				$('#z-costTable-level4').removeClass('d-none');
			}
		
		
		}
		else if(z_level == "Level5"){
			 z_savewellConfig();
			z_showLevels_selected();
			z_wellEstimate_section(z_Selected_Array);
				if(!($('#z-days-level3-config1').hasClass('d-none'))){
				$('#z-days-level3-config1').addClass('d-none');
			}
			if(!($('#z-days-level4-config1').hasClass('d-none'))){
				$('#z-days-level4-config1').addClass('d-none');
			}
			if(!($('#z-configlevelTable').hasClass('z-rightSection'))){
				$('#z-configlevelTable').addClass('z-rightSection');
			}
			if(($('#z-configlevelTable').hasClass('z-rightSection-active'))){
				$('#z-configlevelTable').removeClass('z-rightSection-active');
			}
			if(!($('#z-estimate-header').hasClass('z-rightSection-active'))){
				$('#z-estimate-header').addClass('z-rightSection-active');
			}
			if(!$('#z-costTable-level3').hasClass('d-none')){
				$('#z-costTable-level3').addClass('d-none');
			}
			if(!$('#z-costTable-level4').hasClass('d-none')){
				$('#z-costTable-level4').addClass('d-none');
			}
			
			if($('#z-costTable-level5').hasClass('d-none')){
				$('#z-costTable-level5').removeClass('d-none');
			}
		}
		if(company_image_url != null){
			if(company_image_url != ""){
				$('.image-preview-main').attr('src',company_image_url);
				$('#brand-logo-company-image').attr('src',company_image_url);
			}
		}
		
		$('#z-timeline-title').text('AFE Estimation');
		$('#z-timeline-title').addClass('z-afeEstimation-header');
		if(!($('#print-btn').hasClass('d-none'))){
			$('#print-btn').addClass('d-none');
		}
		$('#z-afe-timeline-panel').removeClass('z-estimate-panel');
		$('#z-estimation-panel').addClass('z-estimate-panel');
		$('#brand-logo-company').removeClass('d-none');
	}
	else if(z_panel_text == "Level Selection"){
		z_EstimateBack($('#z-wi-Estimation-back')[0]);
		z_AfeEstimation();
		$('.z-rig-titledays.z-estimate-panel').removeClass('z-estimate-panel');
		$('#z-afe-estimateLevel-panel').addClass('z-estimate-panel');
		if(!$('#z-afe-Configsection').hasClass('z-rightSection-active')){
			$('#z-afe-Configsection').addClass('z-rightSection-active');
		}
		if($('#z-afe-Estimationsection').hasClass('z-rightSection-active')){
			$('#z-afe-Estimationsection').removeClass('z-rightSection-active');
		}
		if(!$('#z-panel-well').hasClass('z-rightSection-active')){
			$('#z-panel-well').addClass('z-rightSection-active');
		}
		//var select_levels = $('#z-req-wellLevel');
		var budget_selected = document.getElementById('z-well-budget');
		var select_levels = document.getElementById('z-req-wellLevel');
		select_levels.options.remove(5);
		select_levels.options.remove(4);
		select_levels.options.remove(3);
		select_levels.options.remove(2);
		select_levels.options.remove(1);
		if(z_level == "Level4" || z_level == "Level5"){
			var req_level4 = document.createElement("option");
			req_level4.text = "Level 4: Estimates Accuracy Level +20% or -10%";
			req_level4.value = "Level4";
			var req_level5 = document.createElement("option");
			req_level5.text = "Level 5: Estimates Accuracy Level +10% or -5%";
			req_level5.value = "Level5";
			select_levels.options.add(req_level4);
			select_levels.options.add(req_level5);
		}
		else{
			var req_level1 = document.createElement("option");
			req_level1.text = "Level 1: Estimates Accuracy Level +50% or -40%";
			req_level1.value = "Level1";
			var req_level2 = document.createElement("option");
			req_level2.text = "Level 2: Estimates Accuracy Level +40% or -30%";
			req_level2.value = "Level2";
			var req_level3 = document.createElement("option");
			req_level3.text = "Level 3: Estimates Accuracy Level +30% or -20%";
			req_level3.value = "Level3";
			select_levels.options.add(req_level1);
			select_levels.options.add(req_level2);
			select_levels.options.add(req_level3);
		}
		if(z_level == "Level4"){
			select_levels.options.selectedIndex = 1;
			budget_selected.options.selectedIndex = 2
		}
		else if(z_level == "Level5"){
			select_levels.options.selectedIndex = 2;
			budget_selected.options.selectedIndex = 2
		}
		else if(z_level == "Level3"){
			select_levels.options.selectedIndex = 3;
			budget_selected.options.selectedIndex = 1;
		}
		else if(z_level == "Level2"){
			select_levels.options.selectedIndex = 2;
			budget_selected.options.selectedIndex = 1;
		}
		else if(z_level == "Level1"){
			select_levels.options.selectedIndex = 1;
			budget_selected.options.selectedIndex = 1;
		}
	}
	
	//$('#z-loadingWrap').remove();

}
function z_well_summary(el){
	var viewCost = $('.z-viewCost');
	var viewCost_length = viewCost.length;
	for(var view = 0; view < viewCost_length;view++){
		viewCost[view].disabled = true;
	}
}
var total_cost_element_level2;
function z_totalCost_cal(el,total_cost_element){
    total_cost_element_level2 = total_cost_element;
    var z_code,sel_element;
	var a,m1,m2,c1,b,c;
	var n,z_totalUnits,x1,x2;//A
	var z_tot_days;
	var z_class_val;
	var class_index;
    var z_title_name = $(el).attr('title-value');
	z_tot_days = Number($('#z-allDays').text());
	var sum_phase = 0;
	var sub_tot_cost = 0;
	var val0,val1,val2,val3,val4,val5,val6;
	var val7,val8,val9,val10,val11;
	var val12,val13,val4;
	var z_levelcost;
	$(el).val(el.value.replace(/,/g, ''));
	//$(el).val(el.value.replace(/\B(?=(\d{3})+(?!\d))/g, ","));
	//var z_total_currency = $('#z-wellid-estimate').attr('currency');
	var z_total_currency = "$";
	var add_currency = $(el).attr('add-currency');
	var unit_index;
	if($('#z-cost-modal-title').text() == "Rig Rate"){
		unit_index = 1;
	}
	else{
		unit_index = 0;
	}
	var selected_val = Number($(el).attr('title-index'));
	if(!(selected_val == unit_index) || z_title_name == "Total Days"){
//	el.onkeydown = function() {
//	    var key = event.keyCode || event.charCode;
//
//	    if( key == 8 || key == 46 )
//	    	if(add_currency == "true"){
//	    		if(el.value.includes("$")){
//	    			el.value = el.value.replace(/  /g, '');
//	    			el.value = el.value.replace(/[^\w\s]/gi, '');
//	    			//el.value = el.value.substr(0,el.value.length-2);
//	    		}
//	    		el.value = el.value + "  $";
//	    	}
//	    return false;
//	};
	var key_val =  $(el).attr('key');
	if(key_val == "true"){
		if(add_currency == "true" && z_title_name != "Number of Jobs" && !z_title_name.includes("Number") && (z_title_name.includes("Cost") || z_title_name.includes("Rate"))){
			if(el.value.includes(z_total_currency)){
				//el.value = el.value.replace(/  /g, '');
				el.value = el.value.replace(/  [^\w\s]/gi, '');
				el.value = el.value.trim();
				el.value = el.value.substr(0,el.value.length-1);
			}
			el.value = el.value + "  "+z_total_currency;
		}
	}
	else{
		if(add_currency == "true" && z_title_name != "Number of Jobs" && !z_title_name.includes("Number") && (z_title_name.includes("Cost") || z_title_name.includes("Rate"))){
			if(el.value.includes(z_total_currency)){
				el.value = el.value.replace(/  /g, '');
				el.value = el.value.replace(/[^\w\s]/gi, '');
				//el.value = el.value.substr(0,el.value.length-2);
			}
			el.value = el.value + "  "+z_total_currency;
		}
	}
		var m,f,g,h1;
		z_code = $(el).attr('index');
		sel_element = document.getElementsByClassName('z-costTotal-calc'+z_code);
		var z_baseval = $('#z-base-level').attr('base-level');
		//var z_rig = $('#z-cost-modal-title').text();
		var z_cost_itemSelected = $(el).attr('line-item');
		var z_sublevelIndex = Number($(el).attr('phase'));
		var z_baselevelIndex = Number(z_baseval);
		var formula;
		//var cost_item_base = $(el).attr('baseCost-item');
		if(z_level == "Level5"){

			z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].totalCostItem.forEach(function(obj,a){
                if(obj.phase == z_cost_itemSelected){
                    formula = obj.formula;
                    return;
				}
                else if(obj.subPhase != null){
					if(obj.subPhase.length > 0){
						obj.subPhase.forEach(function(ob3,ind3){
                            if(ob3.phase == z_cost_itemSelected){
                                formula = ob3.formula;
                                return;
                            }
                            else if(ob3.subPhase != null){
								ob3.subPhase.forEach(function(level_4,index_4){
									if(level_4.phase == z_cost_itemSelected){
                                        formula = level_4.formula;
                                        return;
									}
									else if(level_4.subPhase != null){
										level_4.subPhase.forEach(function(level_5,index_5){
											if(level_5.phase == z_cost_itemSelected){
                                        formula = level_5.formula;
                                        return;
									}
									else if(level_5.subPhase != null){
										level_5.subPhase.forEach(function(level_6,index_6){
											if(level_6.phase == z_cost_itemSelected){
                                        formula = level_6.formula;
                                        return;
									}
										});
									}
										});
									}
								});
							}
							
						});
					}
				}
				
			});
		
		}
		else if(z_level == "Level4"){

			z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].totalCostItem.forEach(function(obj,a){
                if(obj.phase == z_cost_itemSelected){
                    formula = obj.formula;
                    return;
				}
                else if(obj.subPhase != null){
					if(obj.subPhase.length > 0){
						obj.subPhase.forEach(function(ob3,ind3){
                            if(ob3.phase == z_cost_itemSelected){
                                formula = ob3.formula;
                                return;
                            }
                            else if(ob3.subPhase != null){
								ob3.subPhase.forEach(function(level_4,index_4){
									if(level_4.phase == z_cost_itemSelected){
                                        formula = level_4.formula;
                                        return;
									}
								});
							}
							
						});
					}
				}
				
			});
		
		}
		else if(z_level == "Level3"){
			z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].totalCostItem.forEach(function(obj,a){
				if(obj.subPhase.length != null){
					if(obj.subPhase.length > 0){
						obj.subPhase.forEach(function(a,b){
							if(a.phase == z_cost_itemSelected){
								formula = a.formula;
							}
						});
					}
                }
                if(formula == null){
                    if(obj.phase == z_cost_itemSelected){
                        formula = obj.formula;
                    }
                }
				
			});
		}
		else if(z_level == "Level2"){
			z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].totalCostItem.forEach(function(obj,a){
				if(obj.phase == z_cost_itemSelected){
					formula = obj.formula;
				}
			});
		}
		
		
	
		
		
		//sel_element[4].value = 250 -  (Number(val2) + Number(val3));
		var array,array_to_multiply,array_to_add,array_todivide,x;
		var multi_Array;
		for(var f=0;f<formula.length;f++){
			c=formula[f];
				if(c.includes("((")){
					array = c.split("=");
					array_to_multiply = array[1].split("+");
					for(var mul = 0;mul<array_to_multiply.length;mul++){
						if(array_to_multiply[mul].includes("((")){
							x = array_to_multiply[mul];
							array_todivide = x.split("*")[0].split("((")[1].split(")")[0];
							if(array_todivide.includes("/")){
								array_todivide = array_todivide.split("/");
							}
							val1 = sel_element[Number(array_todivide[0])].value;
							(val1.includes(z_total_currency) ? val1 = val1.replace(/  [^\w\s]/gi, '') : val1 = val1);
							val1 = val1.replace(/,/g, '');
							val1 = val1.trim();
							(!(isNaN(val1)) ? val1 = Number(val1) : val1 = 0);
							
							val2 = Number(array_todivide[1]);
							val3 = (val1/val2);
							val4 = x.split("*")[1].split(")")[0];
							val5 = sel_element[Number(val4)].value;
							(val5.includes(z_total_currency) ? val5 = val5.replace(/  [^\w\s]/gi, '') : val5 = val5);
							val5 = val5.replace(/,/g, '');
							val5 = val5.trim();
							(!(isNaN(val5)) ? val5 = Number(val5) : val5 = 0);
							val6 = val3*val5;
							console.log("dresult"+val6);
							array_to_multiply[mul] = Number(val6.toString().split(".")[0]);
						}
						
						else if(array_to_multiply[mul].includes("*") && !(array_to_multiply[mul].includes("(("))){
							array_to_add = 	array_to_multiply[mul].split("*");
							if(array_to_add.length < 3){
								val3 = sel_element[Number(array_to_add[0])].value;
								val4 = sel_element[Number(array_to_add[1])].value;
								(val3.includes(z_total_currency) ? val3 = val3.replace(/  [^\w\s]/gi, '') : val3 = val3);
								(val4.includes(z_total_currency) ? val4 = val4.replace(/  [^\w\s]/gi, '') : val4 = val4);
								val3 = val3.replace(/,/g, '');
								val4 = val4.replace(/,/g, '');
								val3 = val3.trim();
								val4 = val4.trim();
								(!(isNaN(val3)) ? val3 = Number(val3) : val3 = 0);
								(!(isNaN(val4)) ? val4 = Number(val4) : val4 = 0);
								array_to_multiply[mul] = val3*val4;
							}
							else if(array_to_add.length > 2){
								val5 = sel_element[Number(array_to_add[0])].value;
								val6 = sel_element[Number(array_to_add[1])].value;
								val7 = sel_element[Number(array_to_add[2])].value;
								(val5.includes(z_total_currency) ? val5 = val5.replace(/  [^\w\s]/gi, '') : val5 = val5);
								(val6.includes(z_total_currency) ? val6 = val6.replace(/  [^\w\s]/gi, '') : val6 = val6);
								(val7.includes(z_total_currency) ? val7 = val7.replace(/  [^\w\s]/gi, '') : val7 = val7);
								
								val5 = val5.replace(/,/g, '');
								val6 = val6.replace(/,/g, '');
								val7 = val7.replace(/,/g, '');
								val5 = val5.trim();
								val6 = val6.trim();
								val7 = val7.trim();
								(!(isNaN(val5)) ? val5 = Number(val5) : val5 = 0);
								(!(isNaN(val6)) ? val6 = Number(val6) : val6 = 0);	
								(!(isNaN(val7)) ? val7 = Number(val7) : val7 = 0);
								array_to_multiply[mul] = val5*val6*val7;
							}
							
						}
						else{
							
							val8 = sel_element[Number(array_to_multiply[mul])].value;
							(val8.includes(z_total_currency) ? val8 = val8.replace(/  [^\w\s]/gi, '') : val8 = val8);
							val8 = val8.replace(/,/g, '');
							val8 = val8.trim();
							(!(isNaN(val8)) ? val8 = Number(val8) : val8 = 0);
							array_to_multiply[mul] = val8;
						}
						
					}
					var sum = 0;
					for(var t = 0;t < array_to_multiply.length;t++){
						sum = sum + Number(array_to_multiply[t]);
					}
					var z_sum = sum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
					sel_element[Number(array[0])].value = z_sum + " "+z_total_currency;
				
					}
				else if(c.includes("/")){
				array = c.split("=");
				val1 = sel_element[Number(array[1].split("/")[0])].value;
				val2 = Number(array[1].split("/")[1]);
				(val1.includes(z_total_currency) ? val1 = val1.replace(/  [^\w\s]/gi, '') : val1 = val1);
				val1 = val1.replace(/,/g, '');
				val1 = val1.trim();
				(!(isNaN(val1)) ? val1 = Number(val1) : val1 = 0);
				val3 = (val1/val2);
				sel_element[Number(array[0])].value = val3.toString().split(".")[0];
			}
				else if(c.includes(")*")){
					array = c.split("=");
					array_to_multiply = array[1].split("+");
					var multi_array2 = [];
					var mul_val1,mul_val2,mul_val3,multiply_result;
					var multiply_result = 0;
							mul_val1 = "10";
							mul_val1 = mul_val1.replace(/[()]/g,'');
							mul_val1 = sel_element[Number(mul_val1)].value;
							//array_to_multiply.splice(mul,1);
							//array_to_multiply.splice(mul,1);
							
						
						
							mul_val2 = "11";
							mul_val2 = mul_val2.replace(/[()]/g,'');
							mul_val2 = mul_val2.split("*")[0];
							//mul_val3 = mul_val2.split("*")[1];
							
							mul_val2 = sel_element[Number(mul_val2)].value;
							mul_val3 = sel_element[13].value;
							(mul_val2.includes(z_total_currency) ? mul_val2 = mul_val2.replace(/  [^\w\s]/gi, '') : mul_val2 = mul_val2);
							mul_val2 = mul_val2.replace(/,/g, '');
							mul_val2 = mul_val2.trim();
							(!(isNaN(mul_val2)) ? mul_val2 = Number(mul_val2) : mul_val2 = 0);
							
							(mul_val3.includes(z_total_currency) ? mul_val3 = mul_val3.replace(/  [^\w\s]/gi, '') : mul_val3 = mul_val3);
							mul_val3 = mul_val3.replace(/,/g, '');
							mul_val3 = mul_val3.trim();
							(!(isNaN(mul_val3)) ? mul_val3 = Number(mul_val3) : mul_val3 = 0);
							//array_to_multiply.splice(mul,1);
						
					
//					for(var mul = 0;mul<array_to_multiply.length;mul++){
//						if(!array_to_multiply[mul].includes("(") && !array_to_multiply[mul].includes(")*")){
//							if()
//						}
//					}
					multiply_result = (mul_val1 + mul_val2)*mul_val3;
					array_to_multiply[8] = Number(multiply_result);
					array_to_multiply.splice(9,1);
					for(var mul = 0;mul<array_to_multiply.length;mul++){
						if(array_to_multiply[mul].toString().includes("*")){
							array_to_add = 	array_to_multiply[mul].split("*");
							if(array_to_add.length < 3){
								val3 = sel_element[Number(array_to_add[0])].value;
								val4 = sel_element[Number(array_to_add[1])].value;
								(val3.includes(z_total_currency) ? val3 = val3.replace(/  [^\w\s]/gi, '') : val3 = val3);
								(val4.includes(z_total_currency) ? val4 = val4.replace(/  [^\w\s]/gi, '') : val4 = val4);
								val3 = val3.replace(/,/g, '');
								val4 = val4.replace(/,/g, '');
								val3 = val3.trim();
								val4 = val4.trim();
								(!(isNaN(val3)) ? val3 = Number(val3) : val3 = 0);
								(!(isNaN(val4)) ? val4 = Number(val4) : val4 = 0);
								array_to_multiply[mul] = val3*val4;
							}
							else if(array_to_add.length > 2){
								val5 = sel_element[Number(array_to_add[0])].value;
								val6 = sel_element[Number(array_to_add[1])].value;
								val7 = sel_element[Number(array_to_add[2])].value;
								(val5.includes(z_total_currency) ? val5 = val5.replace(/  [^\w\s]/gi, '') : val5 = val5);
								(val6.includes(z_total_currency) ? val6 = val6.replace(/  [^\w\s]/gi, '') : val6 = val6);
								(val7.includes(z_total_currency) ? val7 = val7.replace(/  [^\w\s]/gi, '') : val7 = val7);
								
								val5 = val5.replace(/,/g, '');
								val6 = val6.replace(/,/g, '');
								val7 = val7.replace(/,/g, '');
								val5 = val5.trim();
								val6 = val6.trim();
								val7 = val7.trim();
								(!(isNaN(val5)) ? val5 = Number(val5) : val5 = 0);
								(!(isNaN(val6)) ? val6 = Number(val6) : val6 = 0);	
								(!(isNaN(val7)) ? val7 = Number(val7) : val7 = 0);
								array_to_multiply[mul] = val5*val6*val7;
							}
							
						}
						else if(typeof(array_to_multiply[mul]) == "string"){
							
							val8 = sel_element[Number(array_to_multiply[mul])].value;
							(val8.includes(z_total_currency) ? val8 = val8.replace(/  [^\w\s]/gi, '') : val8 = val8);
							val8 = val8.replace(/,/g, '');
							val8 = val8.trim();
							(!(isNaN(val8)) ? val8 = Number(val8) : val8 = 0);
							array_to_multiply[mul] = val8;
						}
						
					}
					var sum = 0;
					for(var t = 0;t < array_to_multiply.length;t++){
						sum = sum + Number(array_to_multiply[t]);
					}
					sum = sum + multiply_result;
					var z_sum = sum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
					sel_element[Number(array[0])].value = z_sum + " "+z_total_currency;
					//sel_element[Number(array[0])].value = multiply_result.toString().split(".")[0];
					
				}
				else if(c.includes("-(")){
					array = c.split("=");
					//val1 = sel_element[Number(array[0])].value;
					val2 = sel_element[Number(array[1].split("-")[0])].value;
					val3 = array[1].split("-")[1];
					val3 = val3.replace(/\(|\)/g, "");
					val4 = sel_element[Number(val3.split("+")[0])].value;
					val5 = sel_element[Number(val3.split("+")[1])].value;
					(val2.includes(z_total_currency) ? val2 = val2.replace(/  [^\w\s]/gi, '') : val2 = val2);
					(val4.includes(z_total_currency) ? val4 = val4.replace(/  [^\w\s]/gi, '') : val4 = val4);
					(val5.includes(z_total_currency) ? val5 = val5.replace(/  [^\w\s]/gi, '') : val5 = val5);
					val5 = val5.replace(/,/g, '');
					val4 = val4.replace(/,/g, '');
					val2 = val2.replace(/,/g, '');
					val5 = val5.trim();
					val4 = val4.trim();
					val2 = val2.trim();
					(!(isNaN(val5)) ? val5 = Number(val5) : val5 = 0);
					(!(isNaN(val4)) ? val4 = Number(val4) : val4 = 0);
					(!(isNaN(val2)) ? val2 = Number(val2) : val2 = 0);
					val6 = val4 + val5;
					val1 = val2 - val6;
					sel_element[Number(array[0])].value = val1.toString();
				}
			else if(c.includes("(") && !c.includes(")*")){
				array = c.split("=");
				val1 = sel_element[Number(array[1].split("-")[0])].value;
				val2 = array[1].split("-")[1];
				val3 = val2.split("+")[0];
				val4 = val2.split("+")[1];
				val5 = sel_element[Number(val3.substr(1))].value;
				val6 = sel_element[Number(val4.substr(0,val4.length-1))].value;
				(val5.includes(z_total_currency) ? val5 = val5.replace(/  [^\w\s]/gi, '') : val5 = val5);
				(val6.includes(z_total_currency) ? val6 = val6.replace(/  [^\w\s]/gi, '') : val6 = val6);
				(val1.includes(z_total_currency) ? val1 = val1.replace(/  [^\w\s]/gi, '') : val1 = val1);
				val5 = val5.replace(/,/g, '');
				val6 = val6.replace(/,/g, '');
				val1 = val1.replace(/,/g, '');
				val5 = val5.trim();
				val6 = val6.trim();
				val1 = val1.trim();
				
				(!(isNaN(val5)) ? val5 = Number(val5) : val5 = 0);
				(!(isNaN(val6)) ? val6 = Number(val6) : val6 = 0);
				(!(isNaN(val1)) ? val1 = Number(val1) : val1 = 0);
				val7 = val5 + val6;
				sel_element[Number(array[0])].value = val1 - val7; 
			}
				
			else if(c.includes("-")){
				array = c.split("=");
				val1 = sel_element[Number(array[1].split("-")[0])].value;
				val2 = sel_element[Number(array[1].split("-")[1])].value;
				(val1.includes(z_total_currency) ? val1 = val1.replace(/  [^\w\s]/gi, '') : val1 = val1);
				(val2.includes(z_total_currency) ? val2 = val2.replace(/  [^\w\s]/gi, '') : val2 = val2);

				val1 = val1.replace(/,/g, '');
				val2 = val2.replace(/,/g, '');
				val1 = val1.trim();
				val2 = val2.trim();
				(!(isNaN(val1)) ? val1 = Number(val1) : val1 = 0);
				(!(isNaN(val2)) ? val2 = Number(val2) : val2 = 0);
				sel_element[Number(array[0])].value = val1 - val2;
			}
			else if(c.includes("*")){
				array = c.split("=");
				array_to_multiply = array[1].split("+");
				for(var mul = 0;mul<array_to_multiply.length;mul++){
					if(array_to_multiply[mul].includes("*") && !array_to_multiply[mul].includes("(") && !array_to_multiply[mul].includes(")*")){
						array_to_add = 	array_to_multiply[mul].split("*");
						if(array_to_add.length < 3){
							val3 = sel_element[Number(array_to_add[0])].value;
							val4 = sel_element[Number(array_to_add[1])].value;
							(val3.includes(z_total_currency) ? val3 = val3.replace(/  [^\w\s]/gi, '') : val3 = val3);
							(val4.includes(z_total_currency) ? val4 = val4.replace(/  [^\w\s]/gi, '') : val4 = val4);
							val3 = val3.replace(/,/g, '');
							val4 = val4.replace(/,/g, '');
							val3 = val3.trim();
							val4 = val4.trim();
							(!(isNaN(val3)) ? val3 = Number(val3) : val3 = 0);
							(!(isNaN(val4)) ? val4 = Number(val4) : val4 = 0);
							array_to_multiply[mul] = val3*val4;
						}
						else if(array_to_add.length > 2){
							val5 = sel_element[Number(array_to_add[0])].value;
							val6 = sel_element[Number(array_to_add[1])].value;
							val7 = sel_element[Number(array_to_add[2])].value;
							(val5.includes(z_total_currency) ? val5 = val5.replace(/  [^\w\s]/gi, '') : val5 = val5);
							(val6.includes(z_total_currency) ? val6 = val6.replace(/  [^\w\s]/gi, '') : val6 = val6);
							(val7.includes(z_total_currency) ? val7 = val7.replace(/  [^\w\s]/gi, '') : val7 = val7);
							
							val5 = val5.replace(/,/g, '');
							val6 = val6.replace(/,/g, '');
							val7 = val7.replace(/,/g, '');
							val5 = val5.trim();
							val6 = val6.trim();
							val7 = val7.trim();
							(!(isNaN(val5)) ? val5 = Number(val5) : val5 = 0);
							(!(isNaN(val6)) ? val6 = Number(val6) : val6 = 0);	
							(!(isNaN(val7)) ? val7 = Number(val7) : val7 = 0);
							array_to_multiply[mul] = val5*val6*val7;
						}
						
					}
					else if(!array_to_multiply[mul].includes("(") && !array_to_multiply[mul].includes(")*")){
						
						val8 = sel_element[Number(array_to_multiply[mul])].value;
						(val8.includes(z_total_currency) ? val8 = val8.replace(/  [^\w\s]/gi, '') : val8 = val8);
						val8 = val8.replace(/,/g, '');
						val8 = val8.trim();
						(!(isNaN(val8)) ? val8 = Number(val8) : val8 = 0);
						array_to_multiply[mul] = val8;
					}
					
				}
				var sum = 0;
				for(var t = 0;t < array_to_multiply.length;t++){
					sum = sum + Number(array_to_multiply[t]);
				}
				var z_sum = sum.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
				sel_element[Number(array[0])].value = z_sum + " "+z_total_currency;
			}
			else if(c.includes("+")){
				array = c.split("=");
				val1 = array[1].split("+")[0];
				val2 = array[1].split("+")[1];
				val3 = sel_element[Number(val1)].value;
				val4 = sel_element[Number(val2)].value;
				(val3.includes(z_total_currency) ? val3 = val3.replace(/  [^\w\s]/gi, '') : val3 = val3);
				val3 = val3.replace(/,/g, '');
				val3 = val3.trim();
				(!(isNaN(val3)) ? val3 = Number(val3) : val3 = 0);
				(val4.includes(z_total_currency) ? val4 = val4.replace(/  [^\w\s]/gi, '') : val4 = val4);
				val4 = val4.replace(/,/g, '');
				val4 = val4.trim();
				(!(isNaN(val4)) ? val4 = Number(val4) : val4 = 0);
				sel_element[Number(array[0])].value = val3+val4;
            }
            else if(c.length == 3){
                array = c.split("=");
                val1 = array[0];//4
                val2 = array[1];//3
                val3 = sel_element[Number(val2)].value;
                sel_element[Number(val1)].value =  val3;
            }
				
		}
	
	var all_total_cost = document.getElementsByClassName('z-totalCost-sum');
	var element_add = 0;
	var sum_Ele;
	sub_tot_cost = 0;
	for(var z_sum = 0; z_sum < all_total_cost.length; z_sum++){
		sum_Ele = all_total_cost[z_sum].value.replace(/ [^\w\s]/gi, '');
		sum_Ele = sum_Ele.replace(/,/g, '');
		if(sum_Ele == ""){
			element_add	= 0;
		}
		else{
			element_add = sum_Ele;	
		}
		//element_add = sum_Ele.replace(/,/g, '');
		if(!isNaN(element_add)){
			sum_phase = Number(element_add);
		}
		sub_tot_cost = sub_tot_cost + sum_phase;
	}
	var sub_tot_cost1 = sub_tot_cost.toString().replace(/,/g, '');
	sub_tot_cost = sub_tot_cost1.replace(/\B(?=(\d{3})+(?!\d))/g, ",");
    $('#grant-value-cost').text(sub_tot_cost+" " + z_total_currency);
		z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].totalCost = [$('#grant-value-cost').text()];

	var phaseText = rig_element.innerText.trim();
	if(z_level == "Level2"){
		z_selected_leveldata[z_baselevelIndex].subLevels.forEach(function(obj,index){
			if(obj.phaseName == phaseText){
				obj.totalCost = [sub_tot_cost+" " + z_total_currency];
			}
		});
	}
    if($(rig_element).attr('current-phase') == "2"){
        $('.'+total_cost_element).val(sub_tot_cost + " "+z_total_currency);

    }
    else if($(rig_element).attr('current-phase') == "3"){
        $('[base-level="'+$(rig_element).attr('base-level')+'"][phase2="'+$(rig_element).attr('level2-name')+'"][level3name="'+$(rig_element).text()+'"]').val(sub_tot_cost + " "+z_total_currency);
    }
    else if($(rig_element).attr('current-phase') == "4"){
        $('[base-level="'+$(rig_element).attr('base-level')+'"][phaseName="'+$(rig_element).text()+'"]').val(sub_tot_cost + " "+z_total_currency);
    }
	var titleName = $('#z-cost-modal-title').text();
	if(z_level == "Level3" && $(rig_element).attr('current-phase') == "2"){
        var z_subcost_elements;
        if(!$(rig_element).attr('current-phase') == "2"){
            z_subcost_elements = $('[base-level="'+$(rig_element).attr('base-level')+'"][phase2="'+$(rig_element).attr('level2-name')+'"]');
        }
        else{
            z_subcost_elements = $('[base-level="'+$(rig_element).attr('base-level')+'"][phase2="'+titleName+'"]');

        }
        var z_subelements,cost_item;
        var z_baseElements;
        var base_test_index = 0;
        var x1,x2,x3;
        var sum3 = 0;
        var cost_level;
        var z_grant_sum = 0;
		if(z_subcost_elements.length > 0){
            // if(titleName == "Rig Rate"){
            //     cost_item = z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].totalCostItem;
            //     cost_level = z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].subLevels;
            //     for(var k=0;k<z_subcost_elements.length;k++){
            //         z_subcost_elements[k].value = 0 + " "+z_total_currency;
            //         cost_level[k].totalCost = 0 + " "+z_total_currency;
            //     }
                
            // }
            //else{
                cost_item = z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].totalCostItem;
                cost_level = z_selected_leveldata[z_baselevelIndex].subLevels[z_sublevelIndex].subLevels;
                for(var k=0;k<z_subcost_elements.length;k++){
                    if(cost_item[k].subPhase != null){
                        if(cost_item[k].subPhase.length > 0){
                            z_subelements = $('[level1-title="'+ k +'"]');
                            sum3 = 0;
                            for(var x=0;x<z_subelements.length;x++){
                                x1 = z_subelements[x].value;
                                (x1.includes(z_total_currency) ? x1 = x1.replace(/ [^\w\s]/gi, '') : x1 = x1);
                                    x1 = x1.replace(/,/g, '');
                                    x1 = x1.trim();
                                    (!(isNaN(x1)) ? x1 = Number(x1) : x1 = 0);
                                    sum3 = sum3 + x1;
                            }
                            //base_test_index = base_test_index + 1;
                        }
                        else{
                            z_baseElements = $('[level1-base-title="'+ k +'"]');
                            sum3 = 0;
                            for(var x=0;x<z_baseElements.length;x++){
                                x1 = z_baseElements[x].value;
                                (x1.includes(z_total_currency) ? x1 = x1.replace(/ [^\w\s]/gi, '') : x1 = x1);
                                    x1 = x1.replace(/,/g, '');
                                    x1 = x1.trim();
                                    (!(isNaN(x1)) ? x1 = Number(x1) : x1 = 0);
                                    sum3 = sum3 + x1;
                            }
                            //base_test_index = base_test_index + 1;
                        }
                    }
                    else{
                        
                            z_baseElements = $('[level1-base-title="'+ base_test_index +'"]');
                            sum3 = 0;
                            for(var x=0;x<z_baseElements.length;x++){
                                x1 = z_baseElements[x].value;
                                (x1.includes(z_total_currency) ? x1 = x1.replace(/ [^\w\s]/gi, '') : x1 = x1);
                                    x1 = x1.replace(/,/g, '');
                                    x1 = x1.trim();
                                    (!(isNaN(x1)) ? x1 = Number(x1) : x1 = 0);
                                    sum3 = sum3 + x1;
                            }
                            //base_test_index = base_test_index + 1;
                        
                    }
                   
                    z_grant_sum = z_grant_sum + sum3;
                    z_subcost_elements[k].value = sum3.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency;
                    cost_level[k].totalCost = [sum3.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency];
                    
                }
            
            //}
		}
	}
	$(el).val(el.value.replace(/\B(?=(\d{3})+(?!\d))/g, ","));
}
	
	//z_sel_config[class_index].subLevels[phase_index].totalCostItem[line_index].rateValue[array_length+1] = z_rateArray[z_rateArray.length-1];
	//z_selected_leveldata[class_index].subLevels[phase_index].totalCostItem[line_index].rateValue[array_length+1] = z_rateArray[z_rateArray.length-1];
	
}
function z_wellEstimate_section(){
//	var totcheckarray = [];
//	var z_total_check = document.getElementsByClassName('z-total-check');
//	$('.z-total-error').remove();
//	for(var validate_check = 0 ;validate_check < z_total_check.length;validate_check++){
//		if(z_total_check[validate_check].innerText == ""){
//			$(z_total_check[validate_check]).parent().append('<div id="z-errorday" class="error z-total-error z-grant-total-sec z-error-totalcost">This Field is required</div>');
//			totcheckarray.push("false");
//		}
//	}
	//if(!(totcheckarray.length > 0) && $('#z-wellSection-AfeEstimate-btn').text() == "next"){
	var z_m_inclinedays;
		if(z_level == "Level2"){
			z_AfeEstimation(z_Selected_Array);
			$('.z-level2-active').removeClass('d-none');
			$('#z-days-level2-config1').addClass('d-none');
			$('#z-estimate-header').addClass('z-rightSection-active')
			if($('#z-wellSection-AfeEstimate-btn').text() == "save"){
				z_savewellConfig();	
			}
			$('#z-configlevelTable').removeClass('z-rightSection');
			$('#z-costTable-level2').removeClass('d-none');
			if(!($('#z-configlevelTable').hasClass('d-none'))){
				$('#z-configlevelTable').addClass('d-none');
			}
			
			$('#z-wellSection-AfeEstimate-btn').text('save');
			$('#z-wi-Estimation-back').text('prev');
			//z_level2_day(z_grant_total);
			
			var z_tot_currency = document.getElementsByClassName('z-total-Currency');
			var z_tot_currency_length = z_tot_currency.length;
			for(var currency = 0; currency < z_tot_currency_length;currency++){
				z_tot_currency[currency].innerText = $('#z-wellid-estimate').attr('currency');
			}
			/* var z_incline_level2 = $('.z-incline-data-level2');
			var z_incline_level2_length = z_incline_level2.length;
			var z_configJson_data_length = z_configJson_data.length;
			if(z_configJson_data_length > 1){
				z_m_inclinedays = JSON.parse(z_configJson_data[3].wellInclineDays);

			}
			else{
		z_m_inclinedays = JSON.parse(z_configJson_data[0].wellInclineDays);
			}
			for(var c=0;c<z_incline_level2_length;c++){
				z_incline_level2[c].value = z_m_inclinedays[c];
			} */
		}
		else{
			
			z_AfeEstimation(z_Selected_Array);
			if(!($('#z-costTable').hasClass('z-rightSection-active'))){
				$('#z-costTable').addClass('z-rightSection-active');
			}
			if(!$('#z-estimate-header').hasClass('z-rightSection-active')){
				$('#z-estimate-header').addClass('z-rightSection-active');
			}
			if(!($('#z-configlevelTable').hasClass('z-rightSection'))){
				$('#z-configlevelTable').addClass('z-rightSection');
			}
			var z_tot_currency_level1 = document.getElementsByClassName('z-level1-currency');
			var z_tot_currency_level1_length = z_tot_currency_level1.length;
			for(var currency = 0; currency < z_tot_currency_level1_length;currency++){
				z_tot_currency_level1[currency].innerText = $('#z-wellid-estimate').attr('currency');
			}
		}
		$(window).scrollTop(0);
	//}
//	else{
//		alertPopup('alert','Please Enter Days Information');
//	}
}


function z_level2_day(array){
	var z_total_elements = document.getElementsByClassName('z-wellDayLevel2');
	
	var z_finaldays = 0;
	var z_finaldays1 = 0;
	var z_finaldays2 = 0;
	var z_finaldays10 = 0;
	var z_finaldays12 = 0;
	var z_finaldays14 = 0;
	var z_element10 = $('.z-totalEstimate-days11');
	var z_element12 = $('.z-totalEstimate-days16');
	if(!(z_element10[1].innerText == null || z_element10[1].innerText == "")){
		z_finaldays10 = z_element10[1].innerText;
	}
	if(!(z_element12[1].innerText == null || z_element12[1].innerText == "")){
		z_finaldays12 = z_element12[1].innerText;
	}
	if(!(array[1] == null)){
		z_finaldays1 = array[1];
	}
	if(!(array[2] == null)){
		z_finaldays2 = array[2];
	}
	z_total_elements[1].value = z_finaldays1 + z_finaldays2;
	z_total_elements[10].value = z_finaldays10;
	
	z_total_elements[12].value = z_finaldays12;
	if(!(array[14] == null)){
		z_finaldays14 = array[14];
	}
	z_total_elements[11].value = z_finaldays14;
	var z_finaldays17 = 0;
	if(!(array[17] == null)){
		z_finaldays17 = array[17];
	}
	z_total_elements[13].value = z_finaldays17;
	var z_finaldays18 = 0;
	if(!(array[18] == null)){
		z_finaldays18 = array[18];
	}
	z_total_elements[14].value = z_finaldays18;
	var z_finaldays19 = 0;
	if(!(array[19] == null)){
		z_finaldays19 = array[19];
	}
	z_total_elements[15].value = z_finaldays19;
	var z_finaldays20 = 0;
	if(!(array[20] == null)){
		z_finaldays20 = array[20];
	}
	z_total_elements[16].value = z_finaldays20;
	for(var k = 0;k < z_total_elements.length;k++){
		if(k==0 || (k > 1 && k < 10)){
			if(array[k+1] == null || array[k+1] == ""){
				z_finaldays = 0;
			}
			else{
				z_finaldays = array[k+1];
			}
			z_total_elements[k].value = z_finaldays;
		}
	}

}
var z_data;
function z_savewellConfig(el){
	//for level1
	var z_customday1 = [];
	var selectedComponents = $('.z-estimate-panel').text();
	var configuration_selected = z_config.substr(z_config.length-1);
	var level_select = z_level.substr(z_level.length-1);
	var budget = $('#z-well-budget').val();
	var z_days_select = $('.z-wellDay');
	var z_wellCostEstimateDay = [];
	var z_wellCostsubDay1 = [];
	var z_wellCostsubDay2 = [];
	var z_select_wellconfiguration;
	var z_getcontigency = $('.z-contigency');
	
	var z_get_levy = $('.z-levy');
	var z_get_total_levy = $('#z-total-levy').text();
	var z_levy_data = [];
	var line_items_input = [];
	var z_contigency_data = [];
	var z_incline_data = [];
	var z_taxAndLevyData = []
	var lineItemsName = {};
	var lockTimeline = false;
	var lockComponents = false;
	if($('#z-component-lock').val() == "true"){
		lockComponents = true;
	}
	if($('#z-timeline-lock').val() == "true"){
		lockTimeline = true;
	}
	//for level 2
	
		
	
	z_data = z_selected_leveldata;
	var z_days_data;
	//end
	
	if(level_select == "1"){
		if(configuration_selected == "1"){
			//z_data = JSON.parse(z_configJson_data[0].wellConfig);
			var z_total_contigency = $('#z-contigencyresult').text();
			z_levy_data.push(z_get_levy[0].value);
			//z_levy_data.push(z_get_levy[1].value);
			z_levy_data.push(z_get_total_levy);
			z_contigency_data.push(z_getcontigency[0].value);
			//z_contigency_data.push(z_getcontigency[1].value);
			z_contigency_data.push(z_total_contigency);
			//common for level 1 and 2
			z_taxAndLevyData.push(z_levy_data);
			z_taxAndLevyData.push(z_contigency_data);
			z_taxAndLevyData.push($('#z-grantTotal').text());
			var z_level1_remark = $('.tax-remark');
			z_taxAndLevyData.push(z_level1_remark[0].value);
			z_taxAndLevyData.push(z_level1_remark[1].value);
			z_days_select = $('.z-level1-day-input');
			for(var days = 0;days < 7;days++){
				z_wellCostEstimateDay.push(z_days_select[days].value);	
			}
			z_wellCostEstimateDay.push($('#z-totalDays').val()); // total days for level1
			
			var z_snum=1;
			var phaseName;
			z_data = z_sel_config;
			z_data.forEach(function (obj_el,z){
                if(obj_el.isSelected){
                    obj_el.lineItems.forEach(function (obj,l){
                        phaseName = obj_el.phaseName;
                        if(phaseName.includes("Time Dependent Costs - Drilling Support Services")){
                            phaseName = phaseName.split("-")[0].trim();
                        }
                        
                        if(z_Selected_Array.includes(phaseName) || z_Selected_Array.length < 1){
                            if(obj.hasOwnProperty("isSelected")){
                                if(obj.isSelected){
                                    var z_lineclass_name= ".z-res"+z_snum;
                                    var z_lineclass = $(z_lineclass_name);
                                    line_items_input.push(z_lineclass[0].value);
                                    line_items_input.push(z_lineclass[1].value);
                                    line_items_input.push(z_lineclass[2].innerText);
                                    if(l != obj_el.lineItems.length-1){
                                        line_items_input.push(z_lineclass[3].value);
                                    }
                                    if(l == obj_el.lineItems.length-1){
                                        line_items_input.push(z_lineclass[3].value);
                                        line_items_input.push(z_lineclass[4].innerText);
                                    }
                                    obj.lineInput = line_items_input; 
                                    line_items_input = [];
                                    z_snum = z_snum + 1;
                                }
                            }
                            else{
                                var z_lineclass_name= ".z-res"+z_snum;
                                var z_lineclass = $(z_lineclass_name);
                                line_items_input.push(z_lineclass[0].value);
                                line_items_input.push(z_lineclass[1].value);
                                line_items_input.push(z_lineclass[2].innerText);
                                if(l != obj_el.lineItems.length-1){
                                    line_items_input.push(z_lineclass[3].value);
                                }
                                if(l == obj_el.lineItems.length-1){
                                    line_items_input.push(z_lineclass[3].value);
                                    line_items_input.push(z_lineclass[4].innerText);
                                }
                                obj.lineInput = line_items_input; 
                                line_items_input = [];
                                z_snum = z_snum + 1;
                            }
                          
                        }
                });
                }
             
			});
			console.log("lineItems"+z_data.lineItems);
			var z_incline = $('.z-incline-data-level1');
			for(var incline = 0; incline < z_incline.length; incline++){
				z_incline_data.push(z_incline[incline].value);
			}
			var data = {
					wellConfig: JSON.stringify(z_data),
					wellId: $('#z-wellid-estimate').attr('wellId'),
					level: "1",
					configNo: "1",
					configSubmitted: false,
					configSaved: true,
					selectedComponents: selectedComponents,
					wellTimelineLocked: lockTimeline,
					afeComponentsLocked: lockComponents,
					averageComponents: average_select,
					wellEstimateDays: JSON.stringify(z_wellCostEstimateDay), 
					wellInclineDays:JSON.stringify(z_incline_data), 
					taxAndLevyData: JSON.stringify(z_taxAndLevyData)

					};
			
			$.ajax({
				url: "/api/submitWellConfiguration",
				type: "POST",
				data: JSON.stringify(data),
				dataType: 'text',
				contentType: 'application/json;charset=UTF-8',
				success: function (result) {
				console.log("success");
					//alertPopup('success','Well Estimation Saved Successfully');
				}
                });
                $.ajax({
			        url: "/api/getWellConfiguration",
			        type: "GET",
			        data: {wellId: $('#z-wellid-estimate').attr('wellId'),level: z_level.split("Level")[1],config: z_config.substr(z_config.length-1)},
			        async: false,
			        dataType: 'text',
			        //contentType: 'application/json;charset=UTF-8',
			        success: function (result) {
			        	z_data = JSON.parse(result);
			        	average_select = z_data[0].averageComponents;
			        	z_configJson_data = z_data;
			        	days_enter = JSON.parse(z_configJson_data[0].wellEstimateDays);
			        	days_enter = days_enter[1];
			        	z_selected_leveldata = JSON.parse(z_configJson_data[0].wellConfig);
			        }
				});

				
        }
        else if(configuration_selected == "2" || configuration_selected == "3"){
            var z_total_contigency = $('#z-contigencyresult').text();
			z_levy_data.push(z_get_levy[0].value);
			//z_levy_data.push(z_get_levy[1].value);
			z_levy_data.push(z_get_total_levy);
			z_contigency_data.push(z_getcontigency[0].value);
			//z_contigency_data.push(z_getcontigency[1].value);
			z_contigency_data.push(z_total_contigency);
			//common for level 1 and 2
			z_taxAndLevyData.push(z_levy_data);
			z_taxAndLevyData.push(z_contigency_data);
			z_taxAndLevyData.push($('#z-grantTotal').text());
			var z_level1_remark = $('.tax-remark');
			z_taxAndLevyData.push(z_level1_remark[0].value);
			z_taxAndLevyData.push(z_level1_remark[1].value);
			z_days_select = $('.z-level1-day-input');
			for(var days = 0;days < z_days_select.length;days++){
				z_wellCostEstimateDay.push(z_days_select[days].value);	
			}
			z_wellCostEstimateDay.push($('#z-totalDays').val()); // total days for level1
			
			var z_snum=1;
			var phaseName;
			z_data = z_sel_config;
			z_data.forEach(function (obj_el,z){
                if(obj_el.isSelected){
                    obj_el.lineItems.forEach(function (obj,l){
                        phaseName = obj_el.phaseName;
                        if(z_Selected_Array.includes(phaseName) || z_Selected_Array.length < 1){
                            if(obj.hasOwnProperty("isSelected")){
                                if(obj.isSelected){
                                    var z_lineclass_name= ".z-res"+z_snum;
                                    var z_lineclass = $(z_lineclass_name);
                                    line_items_input.push(z_lineclass[0].value);
                                    line_items_input.push(z_lineclass[1].value);
                                    line_items_input.push(z_lineclass[2].innerText);
                                    if(l != obj_el.lineItems.length-1){
                                        line_items_input.push(z_lineclass[3].value);
                                    }
                                    if(l == obj_el.lineItems.length-1){
                                        line_items_input.push(z_lineclass[3].value);
                                        line_items_input.push(z_lineclass[4].innerText);
                                    }
                                    obj.lineInput = line_items_input; 
                                    line_items_input = [];
                                    z_snum = z_snum + 1;
                                }
                            }
                            else{
                                var z_lineclass_name= ".z-res"+z_snum;
                                var z_lineclass = $(z_lineclass_name);
                                line_items_input.push(z_lineclass[0].value);
                                line_items_input.push(z_lineclass[1].value);
                                line_items_input.push(z_lineclass[2].innerText);
                                if(l != obj_el.lineItems.length-1){
                                    line_items_input.push(z_lineclass[3].value);
                                }
                                if(l == obj_el.lineItems.length-1){
                                    line_items_input.push(z_lineclass[3].value);
                                    line_items_input.push(z_lineclass[4].innerText);
                                }
                                obj.lineInput = line_items_input; 
                                line_items_input = [];
                                z_snum = z_snum + 1;
                            }
                          
                        }
                });
                }
             
			});
			console.log("lineItems"+z_data.lineItems);
			var z_incline = $('.z-incline-data-level1');
			for(var incline = 0; incline < z_incline.length; incline++){
				z_incline_data.push(z_incline[incline].value);
			}
			var data = {
					wellConfig: JSON.stringify(z_data),
					wellId: $('#z-wellid-estimate').attr('wellId'),
					level: "1",
					configNo: configuration_selected,
					configSubmitted: false,
					configSaved: true,
					selectedComponents: selectedComponents,
					wellTimelineLocked: lockTimeline,
					afeComponentsLocked: lockComponents,
					averageComponents: average_select,
					wellEstimateDays: JSON.stringify(z_wellCostEstimateDay), 
					wellInclineDays:JSON.stringify(z_incline_data), 
					taxAndLevyData: JSON.stringify(z_taxAndLevyData)

					};
			
			$.ajax({
				url: "/api/submitWellConfiguration",
				type: "POST",
				data: JSON.stringify(data),
				dataType: 'text',
				contentType: 'application/json;charset=UTF-8',
				success: function (result) {
				console.log("success");
					//alertPopup('success','Well Estimation Saved Successfully');
				}
                });
                $.ajax({
			        url: "/api/getWellConfiguration",
			        type: "GET",
			        data: {wellId: $('#z-wellid-estimate').attr('wellId'),level: z_level.split("Level")[1],config: z_config.substr(z_config.length-1)},
			        async: false,
			        dataType: 'text',
			        //contentType: 'application/json;charset=UTF-8',
			        success: function (result) {
			        	z_data = JSON.parse(result);
			        	average_select = z_data[0].averageComponents;
			        	z_configJson_data = z_data;
			        	days_enter = JSON.parse(z_configJson_data[0].wellEstimateDays);
			        	days_enter = days_enter[1];
			        	z_selected_leveldata = JSON.parse(z_configJson_data[0].wellConfig);
			        }
				});
        }
		
	}
	else if(level_select == "2"){
		if(configuration_selected == "1"){
			z_showLevels_selected();
//			if($('#z-check-previous-btn').attr('previous') == "true"){
//				$('.z-sublevels-hide').addClass('z-sublevels-hide');
//				$('.z-level2-del-btn').addClass('d-none');
//				$('#z-level21-prevphase').addClass('d-none');
//			}
			var z_level2_days = $('.z-wellDayLevel2');
			//z_data = JSON.parse(z_configJson_data[3].wellConfig);
	/* 		for(var lev = 0;lev < z_level2_days.length; lev++){
				z_wellCostsubDay1.push(z_level2_days[lev].value);
			}
			z_wellCostsubDay1.push($('#z-totalDays').val()); */
			//z_wellCostEstimateDay.push(z_wellCostsubDay1);
			var z_days_custom,z_cumulative_days,z_total_custom_day;
			//z_days_data = JSON.parse(z_configJson_data[3].wellEstimateDays);
			z_customday1 = [];
			var total_day = [];
			var z_day_index_val = 0;
			var phase = {};
			var z_phaseobj = {}
			var line_input = [];
			wellDays_data.forEach(function (day_obj,day_index){
				day_obj.subPhase.forEach(function(subphase_day,sub_dayindex){
					if(!(day_obj.phase.includes("Well Testing"))){
					z_days_custom = $('.z-days'+ (day_index+1));
					z_cumulative_days = $('.z-cumulative'+ (day_index+1));
					z_customday1.push(z_days_custom[sub_dayindex].value);
					z_customday1.push(z_cumulative_days[sub_dayindex].innerText);
					subphase_day.lineInput = z_customday1;
					z_day_index_val = day_index;
					z_customday1 = [];
					}
				});
				if(day_obj.phase.includes("Well Testing") || day_obj.subPhase.length < 1){
                    day_obj.subPhase = [];
					z_days_custom = $('.z-days'+ (day_index+1));
                    z_cumulative_days = $('.z-cumulative'+ (day_index+1));
                    z_customday1 = [];
					z_customday1.push(z_days_custom[0].value);
					z_customday1.push(z_cumulative_days[0].innerText);
					day_obj.lineInput = z_customday1;
					z_day_index_val = z_day_index_val+1;
		
				}
				day_obj.totalPhase.forEach(function(tot_phase,tot_index){
						tot_phase.lineInput = [];
					z_total_custom_day = $('.z-totalEstimate-days'+ (day_index+1));
						total_day = z_total_custom_day[tot_index].innerText;
						tot_phase.lineInput.push(total_day);
						total_day = [];
				});
			});
			z_wellCostEstimateDay.push(wellDays_data);
			
			/* var level2_incline = $('.z-incline-data-level2');
			for(var incline = 0; incline < level2_incline.length; incline ++){
				z_incline_data.push(level2_incline[incline].value);
			} */
			//z_contigency_data.push(z_getcontigency[0].value);
			var z_level2contigency = $('#z-estimate-contigencyDays-data').val();
			var z_level2contigency_result = $('#z-contigency-value').text();
			z_contigency_data.push(z_level2contigency);
			z_contigency_data.push(z_level2contigency_result);
			//z_levy_data.push(z_get_levy[0].value);
			var level2_levy = $('#z-estimate-lvg-data').val();
			var level2_levy_result = $('#z-tax-value').text();
			z_levy_data.push(level2_levy);
			z_levy_data.push(level2_levy_result);
			z_taxAndLevyData.push(z_levy_data);
			z_taxAndLevyData.push(z_contigency_data);
			z_taxAndLevyData.push($('#z-grantTotal').text());
			var contigency_remark = $('.z-taxData')[0];
			var tax_remark = $('.z-taxData')[1];
			z_taxAndLevyData.push(contigency_remark.value);
			z_taxAndLevyData.push(tax_remark.value);
			
			var data = {
					wellConfig: JSON.stringify(z_data),
					wellId: $('#z-wellid-estimate').attr('wellId'),
					level: "2",
					configNo: "1",
					selectedComponents: selectedComponents,
					configSubmitted: false,
					configSaved: true,
					averageComponents: average_select,
					wellTimelineLocked: lockTimeline,
					afeComponentsLocked: lockComponents,
					wellEstimateDays: JSON.stringify(wellDays_data), 
					wellInclineDays:JSON.stringify(z_incline_data), 
					taxAndLevyData: JSON.stringify(z_taxAndLevyData)

					};
			
			$.ajax({
				url: "/api/submitWellConfiguration",
				type: "POST",
				data: JSON.stringify(data),
				dataType: 'text',
				async: false,
				contentType: 'application/json;charset=UTF-8',
				success: function (result) {
				console.log("success");
				if(!($('#z-afe-timeline-panel').hasClass('z-estimate-panel'))){
					//alertPopup('success','Well Estimation Saved Successfully');
				}
				
				}
				});
				$.ajax({
			        url: "/api/getWellConfiguration",
			        type: "GET",
			        data: {wellId: $('#z-wellid-estimate').attr('wellId'),level: z_level.split("Level")[1],config: z_config.substr(z_config.length-1)},
			        async: false,
			        dataType: 'text',
			        //contentType: 'application/json;charset=UTF-8',
			        success: function (result) {
			        	z_data = JSON.parse(result);
			        	average_select = z_data[0].averageComponents;
			        	z_configJson_data = z_data;
			        	wellDays_data = JSON.parse(z_configJson_data[0].wellEstimateDays);
			        	//wellDays_data = wellDays_data[1];
			        	z_selected_leveldata = JSON.parse(z_configJson_data[0].wellConfig);
			        }
				});
			
		}
	}
	else if(level_select == "3"){
		if(configuration_selected == "1"){
//			if(z_configJson_data.length > 1){
//				z_wellCostEstimateDay = z_configJson_data[4].wellEstimateDays;
//			}
//			else{
//				z_wellCostEstimateDay = z_configJson_data[0].wellEstimateDays;	
//			}
			var z_days_custom,z_cumulative_days,z_total_custom_day;
			//z_days_data = JSON.parse(z_configJson_data[3].wellEstimateDays);
			var sub_total_class;
			var sub_total_class_element;
			z_customday1 = [];
			var total_day = [];
			var z_day_index_val = 0;
			var phase = {};
			var z_phaseobj = {}
			var line_input = [];
			var n = 0;
			wellDays_data_level3.forEach(function (day_obj,day_index){
				n = 0;
				day_obj.subPhase.forEach(function(subphase_day,sub_dayindex){
					//level3 input
					subphase_day.subPhase.forEach(function(subphase_day3,sub_dayindex3){
						//if(!(day_obj.phase.includes("Well Testing"))){
							z_days_custom = $('.z-days'+ (day_index+1));
							z_cumulative_days = $('.z-cumulative'+ (day_index+1));
							z_customday1.push(z_days_custom[n].value);
							z_customday1.push(z_cumulative_days[n].innerText);
							subphase_day3.lineInput = z_customday1;
							z_day_index_val = day_index;
							z_customday1 = [];
							n = n + 1;
							//}
						
					});
					sub_total_class = "z-level2-totaldays"+ (day_index+1);
					sub_total_class_element = document.getElementsByClassName(sub_total_class);
					wellDays_data_level3[day_index].subPhase[sub_dayindex].lineInput[0] = sub_total_class_element[sub_dayindex].innerText;
				});
			
				day_obj.totalPhase.forEach(function(tot_phase,tot_index){
						tot_phase.lineInput = [];
					z_total_custom_day = $('.z-totalEstimate-days'+ (day_index+1));
						total_day = z_total_custom_day[tot_index].innerText;
						tot_phase.lineInput.push(total_day);
                        total_day = [];
                        tot_phase = JSON.parse(JSON.stringify(tot_phase));
                });
                if(day_obj.subPhase.length < 1){
                    z_days_custom = $('.z-days'+ (day_index+1));
                    z_customday1.push(z_days_custom[0].value);
                    z_cumulative_days = $('.z-cumulative'+ (day_index+1));
					z_customday1.push(z_cumulative_days[0].innerText);
                    day_obj.lineInput = z_customday1;
                    z_customday1 = [];
                }
			});
			z_wellCostEstimateDay = JSON.stringify(wellDays_data_level3);
			/* var level2_incline = $('.z-incline-data-level2');
			for(var incline = 0; incline < level2_incline.length; incline ++){
				z_incline_data.push(level2_incline[incline].value);
			} */
			//z_contigency_data.push(z_getcontigency[0].value);
			var z_level2contigency = $('#z-estimate-contigencyDays-data').val();
			var z_level2contigency_result = $('#z-contigency-value').text();
			z_contigency_data.push(z_level2contigency);
			z_contigency_data.push(z_level2contigency_result);
			//z_levy_data.push(z_get_levy[0].value);
			var level2_levy = $('#z-estimate-lvg-data').val();
			var level2_levy_result = $('#z-tax-value').text();
			z_levy_data.push(level2_levy);
			z_levy_data.push(level2_levy_result);
			z_taxAndLevyData.push(z_levy_data);
			z_taxAndLevyData.push(z_contigency_data);
			z_taxAndLevyData.push($('#z-grantTotal').text());
			var contigency_remark = $('.z-taxData')[0];
			var tax_remark = $('.z-taxData')[1];
			z_taxAndLevyData.push(contigency_remark.value);
			z_taxAndLevyData.push(tax_remark.value);
			z_showLevels_selected();
			var data = {
					wellConfig: JSON.stringify(z_data),
					wellId: $('#z-wellid-estimate').attr('wellId'),
					level: "3",
					configNo: "1",
					selectedComponents: selectedComponents,
					configSubmitted: false,
					configSaved: true,
					averageComponents: average_select,
					wellTimelineLocked: lockTimeline,
					afeComponentsLocked: lockComponents,
					wellEstimateDays: z_wellCostEstimateDay, 
					wellInclineDays:JSON.stringify(z_incline_data), 
					taxAndLevyData: JSON.stringify(z_taxAndLevyData)

					};
			
			$.ajax({
				url: "/api/submitWellConfiguration",
				type: "POST",
				data: JSON.stringify(data),
				dataType: 'text',
				async: false,
				contentType: 'application/json;charset=UTF-8',
				success: function (result) {
				console.log("success");
				if(!($('#z-afe-timeline-panel').hasClass('z-estimate-panel'))){
					//alertPopup('success','Well Estimation Saved Successfully');
				}
				
				}
				});
				$.ajax({
			        url: "/api/getWellConfiguration",
			        type: "GET",
			        data: {wellId: $('#z-wellid-estimate').attr('wellId'),level: z_level.split("Level")[1],config: z_config.substr(z_config.length-1)},
			        async: false,
			        dataType: 'text',
			        //contentType: 'application/json;charset=UTF-8',
			        success: function (result) {
			        	z_data = JSON.parse(result);
			        	average_select = z_data[0].averageComponents;
			        	z_configJson_data = z_data;
			        	wellDays_data_level3 = z_configJson_data[0].wellEstimateDays;
			        	if(typeof(wellDays_data_level3) == "string"){
							wellDays_data_level3 = JSON.parse(wellDays_data_level3);
							if(typeof(wellDays_data_level3) == "string"){
								wellDays_data_level3 = JSON.parse(wellDays_data_level3);
								if(typeof(wellDays_data_level3) == "string"){
									wellDays_data_level3 = JSON.parse(wellDays_data_level3);
									if(typeof(wellDays_data_level3) == "string"){
										wellDays_data_level3 = JSON.parse(wellDays_data_level3);
									}
								}
							}
						}
			        	//wellDays_data = wellDays_data[1];
			        	z_selected_leveldata = JSON.parse(z_configJson_data[0].wellConfig);
			        }
				});
		}
	}
	else if(level_select == "4"){
		if(configuration_selected == "1"){
			z_showLevels_selected();
			z_customday1 = [];
			wellDays_data_level4.forEach(function (day_obj,day_index){
				n = 0;
				if(day_obj.subPhase != null){
					day_obj.subPhase.forEach(function(subphase_day,sub_dayindex){
						//level3 input
						if(subphase_day.subPhase != null){
							subphase_day.subPhase.forEach(function(subphase_day3,sub_dayindex3){
								if(subphase_day3.subPhase != null){
									subphase_day3.subPhase.forEach(function(level4Obj,level4Index){
										//if(!(day_obj.phase.includes("Well Testing"))){
											z_days_custom = $('.z-days'+ (day_index+1));
											z_cumulative_days = $('.z-cumulative'+ (day_index+1));
											z_customday1.push(z_days_custom[n].value);
											z_customday1.push(z_cumulative_days[n].innerText);
											level4Obj.lineInput = z_customday1;
											//z_day_index_val = day_index;
											z_customday1 = [];
											n = n + 1;
											//}
									});
									//level3 total phase
									var sub_total_class4 = "z-level4-total"+ (day_index+""+sub_dayindex+""+sub_dayindex3);
									var sub_total_class_element4 = document.getElementsByClassName(sub_total_class4);
									wellDays_data_level4[day_index].subPhase[sub_dayindex].subPhase[sub_dayindex3].lineInput[0] = sub_total_class_element4[0].innerText;
								
								}
								else{
									//if(!(day_obj.phase.includes("Well Testing"))){
										z_days_custom = $('.z-days'+ (day_index+1));
										z_cumulative_days = $('.z-cumulative'+ (day_index+1));
										z_customday1.push(z_days_custom[n].value);
										z_customday1.push(z_cumulative_days[n].innerText);
										subphase_day3.lineInput = z_customday1;
										//z_day_index_val = day_index;
										z_customday1 = [];
										n = n + 1;
										//}
								}
								
							});
							sub_total_class = "z-level2-totaldays"+ (day_index+1);
							sub_total_class_element = document.getElementsByClassName(sub_total_class);
							wellDays_data_level4[day_index].subPhase[sub_dayindex].lineInput[0] = sub_total_class_element[sub_dayindex].innerText;
						}
						
					});
				}
				else{
					z_days_custom = $('.z-days'+ (day_index+1));
					z_cumulative_days = $('.z-cumulative'+ (day_index+1));
					z_customday1.push(z_days_custom[n].value);
					z_customday1.push(z_cumulative_days[n].innerText);
					day_obj.lineInput = z_customday1;
					//z_day_index_val = day_index;
					z_customday1 = [];
					n = n + 1;
				}
				
			
				day_obj.totalPhase.forEach(function(tot_phase,tot_index){
						tot_phase.lineInput = [];
					z_total_custom_day = $('.z-totalEstimate-days'+ (day_index+1));
						total_day = z_total_custom_day[tot_index].innerText;
						tot_phase.lineInput.push(total_day);
						total_day = [];
				});
			});
			var level2_incline = $('.z-incline-data-level4');
			for(var incline = 0; incline < level2_incline.length; incline ++){
				z_incline_data.push(level2_incline[incline].value);
			}
			//tax and levy data
			var z_level2contigency = $('#z-estimate-contigencyDays-data').val();
			var z_level2contigency_result = $('#z-contigency-value').text();
			z_contigency_data.push(z_level2contigency);
			z_contigency_data.push(z_level2contigency_result);
			//z_levy_data.push(z_get_levy[0].value);
			var level2_levy = $('#z-estimate-lvg-data').val();
			var level2_levy_result = $('#z-tax-value').text();
			z_levy_data.push(level2_levy);
			z_levy_data.push(level2_levy_result);
			z_taxAndLevyData.push(z_levy_data);
			z_taxAndLevyData.push(z_contigency_data);
			z_taxAndLevyData.push($('#z-grantTotal').text());
			var contigency_remark = $('.z-taxData')[0];
			var tax_remark = $('.z-taxData')[1];
			z_taxAndLevyData.push(contigency_remark.value);
			z_taxAndLevyData.push(tax_remark.value);
			
			var data = {
					wellConfig: JSON.stringify(z_data),
					wellId: $('#z-wellid-estimate').attr('wellId'),
					level: "4",
					configNo: "1",
					selectedComponents: selectedComponents,
					configSubmitted: false,
					configSaved: true,
					wellTimelineLocked: lockTimeline,
					averageComponents: average_select,
					afeComponentsLocked: lockComponents,
					wellEstimateDays: JSON.stringify(wellDays_data_level4), 
					wellInclineDays:JSON.stringify(z_incline_data), 
					taxAndLevyData: JSON.stringify(z_taxAndLevyData)

					};
			
			$.ajax({
				url: "/api/submitWellConfiguration",
				type: "POST",
				data: JSON.stringify(data),
				dataType: 'text',
				async: false,
				contentType: 'application/json;charset=UTF-8',
				success: function (result) {
				console.log("success");
				if(!($('#z-afe-timeline-panel').hasClass('z-estimate-panel'))){
					//alertPopup('success','Well Estimation Saved Successfully');
				}
				
				}
				});
				$.ajax({
			        url: "/api/getWellConfiguration",
			        type: "GET",
			        data: {wellId: $('#z-wellid-estimate').attr('wellId'),level: z_level.split("Level")[1],config: z_config.substr(z_config.length-1)},
			        async: false,
			        dataType: 'text',
			        //contentType: 'application/json;charset=UTF-8',
			        success: function (result) {
			        	z_data = JSON.parse(result);
			        	average_select = z_data[0].averageComponents;
			        	z_configJson_data = z_data;
			        	wellDays_data_level4 = JSON.parse(z_configJson_data[0].wellEstimateDays);
//			        	if(typeof(wellDays_data_level3) == "string"){
//							wellDays_data_level3 = JSON.parse(wellDays_data_level3);
//							if(typeof(wellDays_data_level3) == "string"){
//								wellDays_data_level3 = JSON.parse(wellDays_data_level3);
//								if(typeof(wellDays_data_level3) == "string"){
//									wellDays_data_level3 = JSON.parse(wellDays_data_level3);
//									if(typeof(wellDays_data_level3) == "string"){
//										wellDays_data_level3 = JSON.parse(wellDays_data_level3);
//									}
//								}
//							}
//						}
			        	//wellDays_data = wellDays_data[1];
			        	z_selected_leveldata = JSON.parse(z_configJson_data[0].wellConfig);
			        }
				});
		
		}
	}
	else if(level_select == "5"){
		if(configuration_selected == "1"){
			z_showLevels_selected();
			z_customday1 = [];
			//tax and levy data
			var z_level2contigency = $('#z-estimate-contigencyDays-data').val();
			var z_level2contigency_result = $('#z-contigency-value').text();
			z_contigency_data.push(z_level2contigency);
			z_contigency_data.push(z_level2contigency_result);
			//z_levy_data.push(z_get_levy[0].value);
			var level2_levy = $('#z-estimate-lvg-data').val();
			var level2_levy_result = $('#z-tax-value').text();
			z_levy_data.push(level2_levy);
			z_levy_data.push(level2_levy_result);
			z_taxAndLevyData.push(z_levy_data);
			z_taxAndLevyData.push(z_contigency_data);
			z_taxAndLevyData.push($('#z-grantTotal').text());
			var contigency_remark = $('.z-taxData')[0];
			var tax_remark = $('.z-taxData')[1];
			z_taxAndLevyData.push(contigency_remark.value);
			z_taxAndLevyData.push(tax_remark.value);
			
			var data = {
					wellConfig: JSON.stringify(z_data),
					wellId: $('#z-wellid-estimate').attr('wellId'),
					level: "5",
					configNo: "1",
					selectedComponents: selectedComponents,
					configSubmitted: false,
					configSaved: true,
					wellTimelineLocked: lockTimeline,
					averageComponents: average_select,
					afeComponentsLocked: lockComponents,
					wellEstimateDays: JSON.stringify([]), 
					wellInclineDays:JSON.stringify(z_incline_data), 
					taxAndLevyData: JSON.stringify(z_taxAndLevyData)

					};
			
			$.ajax({
				url: "/api/submitWellConfiguration",
				type: "POST",
				data: JSON.stringify(data),
				dataType: 'text',
				async: false,
				contentType: 'application/json;charset=UTF-8',
				success: function (result) {
				console.log("success");
				if(!($('#z-afe-timeline-panel').hasClass('z-estimate-panel'))){
					//alertPopup('success','Well Estimation Saved Successfully');
				}
				
				}
				});
				$.ajax({
			        url: "/api/getWellConfiguration",
			        type: "GET",
			        data: {wellId: $('#z-wellid-estimate').attr('wellId'),level: z_level.split("Level")[1],config: z_config.substr(z_config.length-1)},
			        async: false,
			        dataType: 'text',
			        //contentType: 'application/json;charset=UTF-8',
			        success: function (result) {
			        	z_data = JSON.parse(result);
			        	average_select = z_data[0].averageComponents;
			        	z_configJson_data = z_data;
			        	wellDays_data_level5 = JSON.parse(z_configJson_data[0].wellEstimateDays);
//			        	if(typeof(wellDays_data_level3) == "string"){
//							wellDays_data_level3 = JSON.parse(wellDays_data_level3);
//							if(typeof(wellDays_data_level3) == "string"){
//								wellDays_data_level3 = JSON.parse(wellDays_data_level3);
//								if(typeof(wellDays_data_level3) == "string"){
//									wellDays_data_level3 = JSON.parse(wellDays_data_level3);
//									if(typeof(wellDays_data_level3) == "string"){
//										wellDays_data_level3 = JSON.parse(wellDays_data_level3);
//									}
//								}
//							}
//						}
			        	//wellDays_data = wellDays_data[1];
			        	z_selected_leveldata = JSON.parse(z_configJson_data[0].wellConfig);
			        }
				});
		
		}
	}
	if(el != null){
		alertPopup('success','Well Estimation Saved Successfully');
    }
    $('#freshEstimate').attr('checkForFreshLevel','false');
}
var z_selected_days_data =[];
var check_for_save = true;
function z_showDaysTable(el,level,add){
	//var z_selected_day = $('#z-level1-days');
	var sel_index_check = -1;
	var z_check_For_duplicate;
	var z_activedays = $('.z-days-active.z-baseDay');
	var z_activedays_length = z_activedays.length;
	var wellDays_data_length = wellDays_data.length;
	var z_baselevel_length;
    var z_days_level_length;
	/* for(var i = 0; i < z_activedays_length;i++){
		if(!(z_selected_days_data.includes($(z_activedays[i]).children().children()[1].innerText))){
			z_selected_days_data.push($(z_activedays[i]).children().children()[1].innerText);
		}
	} */
	if(typeof(el) == "object"){
		z_check_For_duplicate = el.value;
	}
	else{
		z_check_For_duplicate = el;
	}
	if(z_Element_toAdd.length > 0){
		sel_index_check = z_Element_toAdd.findIndex(function(val){
			return el == val.phase;
				
			});
		}
	if(sel_index_check != -1){
		z_savewellConfig();
		wellDays_data.push(z_Element_toAdd[sel_index_check]);
		
		//$('.z-option-days1').remove();
		$('.z-days-datum').remove();
		z_showSubPhaseday(wellDays_data_length-1);
		//$('.z-days-active').removeClass('z-days-active');
		var z_selected_days_data_length = z_selected_days_data.length;
		for(var j=0;j<z_selected_days_data_length;j++){
		
			for(var i = 1 ; i <= wellDays_data_length;i++){
			var z_baselevel = $('.z-level1-day'+ i);
			var z_days_level = $('.z-days-level'+ i);
			z_baselevel_length = z_baselevel.length;
           z_days_level_length = z_days_level.length;
			if(z_baselevel_length > 0 && z_days_level_length > 0){
					if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
						$(z_days_level).removeClass('d-none');
						$(z_days_level).addClass('z-days-active');
						//$(z_days_level[0]).children().children()[0].innerText = j+1;
						break;
						}
			}
			}
		}
	}
	
	else{
		if(!(z_selected_days_data.includes(z_check_For_duplicate))){
	        z_selected_days_data.push(z_check_For_duplicate);
	        wellDays_data.forEach(function(obj,val){
	        	if(add == "add"){
						obj['isSubmitted'] = true;
					}
					else{
						obj['isSubmitted'] = false;
					}
	        });
	    }
		else{
			if(check_for_save){
				//alertPopup('alert','already exists in days table');
				
			}
			check_for_save = true;
			
		}
		
		//$('.z-days-active').removeClass('z-days-active');
		for(var i = 1 ; i <= wellDays_data_length;i++){
		var z_baselevel = $('.z-level1-day'+ i);
		var z_days_level = $('.z-days-level'+ i);
		z_baselevel_length = z_baselevel.length;
          z_days_level_length = z_days_level.length;
		if(z_baselevel_length > 0 && z_days_level_length > 0){
			if((typeof(el) == "string")){
					if(z_baselevel[0].innerText.includes(el)){
					if(add == "remove"){
						//$(z_days_level).remove();
						$('.z-clear-input'+(i)).val('');
						$('.z-clear-text'+(i)).text('');
						$(z_days_level).removeClass('z-days-active');
					$(z_days_level).addClass('d-none');
					     break;
					}
					else{
						$(z_days_level).removeClass('d-none');
					$(z_days_level).addClass('z-days-active');
					break;
					}
					
					}
			}
			else{
				if(z_baselevel[0].innerText.includes(el)){
					//$(z_days_level).remove();
						$(z_days_level).removeClass('z-days-active');
					$(z_days_level).addClass('d-none');
					break;
				}
				if(level != null){
					if(level == "2"){
						var z_days_level_length = z_days_level.length;
						for(var k = 0; k < z_days_level_length;k++){
							if(z_days_level[k].innerText.includes(el)){
								$(z_days_level[k]).remove();
								
							}
						}
					}
				}
				
			}
		}
		}
		//$('.z-option-days1').remove();
/* var m = $("#z-level1-days")[0].options;
		var m_length = m.length;
		for(var opt=1;opt<m_length;opt++){
			if(!(option_array.includes(m[opt].value))){
				option_array.push(m[opt].value);
			}
			
		} */
		/* var z_element;
		wellDays_data.forEach(function(obj,h){
//	    	if(!(z_selected_days_data.includes(obj.phase))){
			if(!(option_array.includes(obj.phase))){
			var z_customItem = document.createElement('option');
	    	z_customItem.setAttribute('value',obj.phase);
	    	z_customItem.innerHTML = obj.phase;
	    	z_customItem.classList.add('z-option-days1');
	    	//$('#z-level1-days').append(z_customItem);
	    	var z_element = option_array.indexOf(wellDays_data[h-1].phase);
	    	m.add(phase1days,z_element+1);
			}
			
	}); */
		/* if(!(typeof(el) == "string")){
			var y = $('#z-level1-days')[0];
			y.options.selectedIndex = "0";
		} */
	}
	$('.hide-data').addClass('d-none');
	z_serialNumberAdjust();
	var addedElement = $('[base-level="'+z_check_For_duplicate+'"]');
	var added_index = Number(addedElement[0].classList[1].split("z-days")[1]);
	var grantObj = {};
	var current_index = z_grant_totalKey.findIndex(function (obj) {
        return (obj['phase'] == z_check_For_duplicate.trim());
    });
	if(current_index == -1){
		grantObj.phase = z_check_For_duplicate;
		grantObj.indexVal = added_index;
		grantObj.day = 0;
		z_grant_totalKey.push(grantObj);
		grantObj = {};
	}
	$('.z-days-font').removeClass('z-levelconfig-color');
	}
function z_showDaysTable_level2(el,level,add){
var z_selected_days_data_length1;
	//var z_selected_day = $('#z-level3-days');
	var sel_index_check = -1;
	var z_check_For_duplicate;
	var z_activedays = $('.z-days-active.z-baseDay');
	var z_activedays_length = z_activedays.length;
	var z_baselevel_length;
	var wellDays_data_level3_length;
		var z_days_level_length;
	/* 	var test_val;
	for(var i = 0; i < z_activedays_length;i++){
		test_val = $(z_activedays[i]).children().children()[1].innerText;
		if(test_val.includes('+')){
			test_val = test_val.substr(0,test_val.length-2);
		}
		if(!(z_selected_days_data.includes(test_val))){
			z_selected_days_data.push(test_val);
		}
	} */
	if(typeof(el) == "object"){
		z_check_For_duplicate = el.value;
	}
	else{
		z_check_For_duplicate = el;
	}
	if(z_Element_toAdd.length > 0){
		sel_index_check = z_Element_toAdd.findIndex(function(val){
			return el.value == val.phase;
				
			});
		}
	if(sel_index_check != -1){
		z_savewellConfig();
		wellDays_data_level3.push(z_Element_toAdd[sel_index_check]);
		
		//$('.z-option-days1').remove();
		$('.z-days-datum').remove();
		wellDays_data_level3_length = wellDays_data_level3.length;
		z_showSubPhaseday_level3(wellDays_data_level3_length-1);
		//$('.z-days-active').removeClass('z-days-active');
		z_selected_days_data_length1 = z_selected_days_data.length;
		
		for(var j=0;j<z_selected_days_data_length1;j++){
			for(var i = 1 ; i <= wellDays_data_level3_length;i++){
			var z_baselevel = $('.z-level1-day'+ i);
			var z_days_level = $('.z-days-level'+ i);
			z_baselevel_length = z_baselevel.length;
			z_days_level_length = z_days_level.length;
			if(z_baselevel_length > 0 && z_days_level_length > 0){
					if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
						$(z_days_level).removeClass('d-none');
						$(z_days_level).addClass('z-days-active');
						//$(z_days_level[0]).children().children()[0].innerText = j+1;
						break;
						}
			}
			}
		}
	}
	
	else{
		if(!(z_selected_days_data.includes(z_check_For_duplicate))){
	        //z_selected_days_data.push(z_check_For_duplicate);
	        wellDays_data_level3.forEach(function(obj,val){
	        	if(obj.phase == el.value || obj.phase == el){
	        		if(add == "add"){
						obj['isSubmitted'] = true;
					}
					else{
						obj['isSubmitted'] = false;
					}
					
	        	}
	        });
	    }
		else{
			if(check_for_save){
				//alertPopup('alert','already exists in days table');
				
			}
			check_for_save = true;
			
		}
		
		//$('.z-days-active').removeClass('z-days-active');
		wellDays_data_level3_length = wellDays_data_level3.length;
		for(var i = 1 ; i <= wellDays_data_level3_length;i++){
		var z_baselevel = $('.z-level1-day'+ i);
		var z_days_level = $('.z-days-level'+ i);
		z_baselevel_length = z_baselevel.length;
			z_days_level_length = z_days_level.length;
		if(z_baselevel_length > 0 && z_days_level_length > 0){
			if((typeof(el) == "string")){
				if(z_baselevel[0].innerText.includes(el)){
					if(add == "remove"){
						//$(z_days_level).remove();
						$('.z-clear-input'+(i)).val('');
						$('.z-clear-text'+(i)).text('');
						$(z_days_level).removeClass('z-days-active');
					$(z_days_level).addClass('d-none');
					     break;
					}
					else{
						$(z_days_level).removeClass('d-none');
					$(z_days_level).addClass('z-days-active');
					break;
					}
					
					}
			}
			else{
				if(z_baselevel[0].innerText.includes(el)){
					//$(z_days_level).remove();
						$(z_days_level).removeClass('z-days-active');
					$(z_days_level).addClass('d-none');
					break;
				}
				if(level != null){
					if(level == "2"){
						var z_days_level_length = z_days_level.length;
						for(var k = 0; k < z_days_level_length;k++){
							if(z_days_level[k].innerText.includes(el)){
								$(z_days_level[k]).remove();
								
							}
						}
					}
				}
				
			}
		}
		}
		
		
	}
	$('.hide-data').addClass('d-none');
	z_serialNumberAdjust();
	var addedElement = $('[base-level="'+z_check_For_duplicate+'"]');
	var added_index = Number(addedElement[0].classList[1].split("z-days")[1]);
	var grantObj = {};
	var current_index = z_grant_totalKey.findIndex(function (obj) {
        return (obj['phase'] == z_check_For_duplicate.trim());
    });
	if(current_index == -1){
		grantObj.phase = z_check_For_duplicate;
		grantObj.indexVal = added_index;
		grantObj.day = 0;
		z_grant_totalKey.push(grantObj);
		grantObj = {};
	}
	$('.z-days-font').removeClass('z-levelconfig-color');
	
}
function z_serialNumberAdjust(){
	//var z_activeDays = $('.z-days-active.z-baseDay');
	var z_activeDays;
	if(z_level == "Level2"){
		z_activeDays = $('.z-days-active .z-borderBottom .z-serial-number-level2[serial-number="true"]');
	}
	else if(z_level == "Level3"){
		z_activeDays = $('.z-days-active .z-borderBottom .z-serial-number[serial-number="true"]');
	}
	else if(z_level == "Level4"){
		z_activeDays = $('.z-days-active .z-borderBottom .z-serial-number-level4[serial-number="true"]');
	}
	
	var z_activeDays_length = z_activeDays.length;
	for(var j=0;j<z_activeDays_length;j++){
		//$(z_activeDays[j]).children().children()[0].innerText = (j+1).toString();
		z_activeDays[j].innerText = (j+1).toString();
	}
}
var z_total_cost_item,z_total_cost_item1;
var z_customdayArray = [];
function z_addcustomItems(el){
	var z_seletedphase = $(el).attr('level');
	var z_rigVal = $(el).attr('levels');
	var sel_index_add1 = 0;
	var base_line = $(el).attr('level2-phase');
	var level_2Subphase = $(el).attr('base-level');
	var level3_Indexval = $(el).attr('level3-index');
     var z_activedays = $('.z-days-active.z-baseDay');
     var component_index1;
     var component_index2;
     var component_index3;
     var component_index4;
     var component_index5;
     var level2Name;
     var level2Obj = {};
     var level4_phaseName;
	 for(var i = 0; i < z_activedays.length;i++){
			if(!(z_selected_days_data.includes($(z_activedays[i]).children().children()[1].innerText))){
				z_selected_days_data.push($(z_activedays[i]).children().children()[1].innerText);
			}
		}
	if(z_seletedphase == "1"){
		$('#z-addcustomItem-modal').remove();
		 
	    $('body').append('<div id="z-addcustomItem-modal" class="modal" tabindex="-1" role="dialog">' +
	        '<div class="modal-dialog" role="document">' +
	        '<div class="modal-content">' +
	        '<div class="modal-header">' +
	        '<h5 class="modal-title">Add Line Items For Level1</h5>' +
	        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
	        '<span aria-hidden="true">&times;</span>' +
	        '</button>' +
	        '</div>' +
	        '<div class="modal-body">' +
	        '<div class="">Select  Lineitems to add after</div>'+
	        '<div id="notSelectedlinePhase_listitem" class="z-viewheight-lineitem"></div>' +
	        '<div id="customlinePhase-insertWrap">' +
	        '<input id="customlinePhaseitem-input" class="z-m-inputS1" placeholder="phase Name">' +
	        '<button id="customlinePhaseitem-addBtn" type="button" class="btn btn-primary" style="margin-left: 15px;">Add</button>' +
	        '</div>' +
	        '<p class="d-none">Select a Line Items to insert</p>' +
	        '</div>' +
	        '<div class="modal-footer">' +
	        '<button id="z-addlinePhaseitem-btn" type="button" class="btn btn-primary">Submit</button>' +
	        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
	        '</div>' +
	        '</div>' +
	        '</div>' +
	        '</div>');
	    //$('#z-addlinePhase-btn').attr('selected-level',z_l_levels);
	    $('#z-addcustomItem-modal').modal('show');
	  
		
	
$('#customlinePhaseitem-addBtn').on('click', function () {
	phase_name = $('#customlinePhaseitem-input').val();
	
	$('#notSelectedlinePhase_listitem').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
			'<div class="z-phaseName-select-level1">'+phase_name+'</div></div>');
	$('#customlinePhaseitem-input').val("");
       });
$('#z-addlinePhaseitem-btn').on('click', function (ele) {
	var z_selectPhase_rig = $('.z-phaseName-select-level1');
	var z_customday = $(el).parent().text();
	var z_phase_rigObj = {};
	var sel_text;
	var prevtotal;
	var selected_serialno;
	if(z_customday.includes("Add Line")){
		var x = $('.z-level2-test')[0];
		if(x.innerText.includes("+")){
			sel_text = x.innerText.substr(0,x.innerText.length-4);
		}
		else{
			sel_text = x.innerText;
		}
		selected_serialno = $(x).parent().children()[0].innerText;
		z_grant_total.splice([Number(selected_serialno)],0,0);
	
	}
	else{
		sel_text = z_customday.substr(0,z_customday.length-2);
		selected_serialno = $(el).parent().parent().children()[0].innerText;
		z_grant_total.splice([Number(selected_serialno)],0,0);
	}
	//var sel_text = z_customday.substr(0,z_customday.length-2);
	if(z_rigVal == "rig"){
		if(z_level == "Level2"){
			z_saveRates($('#z-save-days')[0]);
			
			z_savewellConfig();
//			if($(rig_element).text() == z_selected_leveldata[0].subLevels[0].phaseName){
//				z_total_cost_item = z_selected_leveldata[0].subLevels[0].totalCostItem;
//			}
			z_selected_leveldata[$(rig_element).attr('base-level')].subLevels.forEach(function(obj,index1){
				if($(rig_element).text() == obj.phaseName){
					z_total_cost_item = obj.totalCostItem;
				}	
			});
//			else{
//				z_total_cost_item = z_selected_leveldata[0].subLevels[1].totalCostItem;
//			}
			var rig_index = z_total_cost_item.findIndex(function (obj) {
		        return (obj['phase'] == sel_text.trim());
		    });
				for(var rig = 0;rig < z_selectPhase_rig.length;rig++){
					z_phase_rigObj['phase'] = z_selectPhase_rig[rig].innerText;
					z_phase_rigObj['disableIndex'] = z_total_cost_item[0].disableIndex;
					z_phase_rigObj['rateValue'] = [];
					z_phase_rigObj['formula'] = z_total_cost_item[0].formula;
					if(sel_text.includes("NoDescription")){
						z_total_cost_item.push(z_phase_rigObj);
					}
					else{
						z_total_cost_item.splice(rig_index+1,0,z_phase_rigObj);
					}
					
					z_phase_rigObj = {};
				}
				$('#custom-modal-content').empty();
				z_RigAddition(rig_element);
		}
		else if(z_level == "Level3"){
			z_saveRates($('#z-save-days')[0]);
			
			z_savewellConfig();
//			if($(rig_element).text() == z_selected_leveldata[0].subLevels[0].phaseName){
//				z_total_cost_item = z_selected_leveldata[0].subLevels[0].totalCostItem;
//			}
                        component_index1 = $(rig_element).attr('base-level');
                        if($(rig_element).attr('current-phase') == "2"){
                            z_selected_leveldata[$(rig_element).attr('base-level')].subLevels.forEach(function(obj,index1){
                                if($(rig_element).text() == obj.phaseName){
                                    z_total_cost_item = obj.totalCostItem;
                                }	
                            });
                            component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(valObj){
                                return valObj.phaseName == $(rig_element).text();
                            });
                        }
                        else{
                            z_selected_leveldata[$(rig_element).attr('base-level')].subLevels.forEach(function(obj,index1){
                                if($(rig_element).attr('level2-name') == obj.phaseName){
                                    z_total_cost_item = obj.totalCostItem;
                                }	
                            });
                            component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(valObj){
                                return valObj.phaseName == $(rig_element).attr('level2-name');
                            });
                        }
			
			var rig_index,rig_index1;
			if(z_seletedphase == "1"){
				rig_index = z_total_cost_item.findIndex(function (obj) {
			        return (obj['phase'] == sel_text.trim());
                });
                if($(rig_element).attr('current-phase') == "2"){
                    level2Name = $(rig_element).text();
                }
                else if($(rig_element).attr('current-phase') == "3"){
                    level2Name = $(rig_element).attr('level2-name');
                }
                else if($(rig_element).attr('current-phase') == "4"){
                    level2Name = $(rig_element).attr('level2-name');
                }   
                
                component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(val3){
                    return val3.phaseName == level2Name;
                });
                    component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(val4){
                        return val4.phaseName == sel_text.trim();
                });
				for(var rig = 0;rig < z_selectPhase_rig.length;rig++){
					z_phase_rigObj['phase'] = z_selectPhase_rig[rig].innerText;
					z_phase_rigObj['disableIndex'] = z_total_cost_item[0].disableIndex;
					z_phase_rigObj['rateValue'] = [];
					z_phase_rigObj['subPhase'] = z_total_cost_item[0].subPhase;
                    z_phase_rigObj['formula'] = z_total_cost_item[0].formula;
                    level2Obj.phaseName = z_selectPhase_rig[rig].innerText;
                    level2Obj.levelValue = "";
                    level2Obj.isSelected = true;
                    level2Obj.remark = "";
                    level2Obj.totalCost = [];
                    level2Obj.subPhase = [];
                    
					if(sel_text.includes("NoDescription")){
                        z_total_cost_item.push(z_phase_rigObj);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.push(level2Obj);
                        level2Obj = {};
					}
					else{
                        z_total_cost_item.splice(rig_index+1,0,z_phase_rigObj);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.splice(component_index3+1,0,level2Obj);
                        level2Obj = {};

					}
					
					z_phase_rigObj = {};
                }
                z_configJson_data[0].wellConfig = JSON.stringify(z_selected_leveldata);
                    z_sel_config = z_selected_leveldata;
			}
			else if(z_seletedphase == "2"){
				rig_index = z_total_cost_item.findIndex(function (obj) {
			        return (obj['phase'] == base_line);
			    });
				z_total_cost_item[rig_index].subPhase.forEach(function(level2,index2){
					if(level2.phase == sel_text.trim()){
						rig_index1 = index2;
					}
                });
                                if($(rig_element).attr('current-phase') == "2"){
                                    level2Name = $(rig_element).text();
                                }
                                else if($(rig_element).attr('current-phase') == "3"){
                                    level2Name = $(rig_element).attr('level2-name');
                                }
                                else if($(rig_element).attr('current-phase') == "4"){
                                    level2Name = $(rig_element).attr('level2-name');
                                }
                component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(valObj){
                    return valObj.phaseName == level2Name;
                });
                component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(valObj1){
                    return valObj1.phaseName == base_line;
                });
                component_index4 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.findIndex(function(valObj2){
                    return valObj2.phaseName == sel_text.trim();
                });
				for(var rig = 0;rig < z_selectPhase_rig.length;rig++){
					z_phase_rigObj['phase'] = z_selectPhase_rig[rig].innerText;
					z_phase_rigObj['disableIndex'] = z_total_cost_item[0].disableIndex;
					z_phase_rigObj['rateValue'] = [];
                    z_phase_rigObj['formula'] = z_total_cost_item[0].formula;
                    level2Obj.phaseName = z_selectPhase_rig[rig].innerText;
                    level2Obj.levelValue = "";
                    level2Obj.isSelected = true;
                    level2Obj.remark = "";
                    level2Obj.totalCost = [];
					if(sel_text.includes("NoDescription")){
                        z_total_cost_item[rig_index].subPhase.push(z_phase_rigObj);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.push(level2Obj);
                        level2Obj = {};
					}
					else{
                        z_total_cost_item[rig_index].subPhase[rig_index1].splice(rig_index1+1,0,z_phase_rigObj);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.splice(component_index4+1,0,level2Obj);
                        level2Obj = {};
					}
					
					z_phase_rigObj = {};
				}
				z_configJson_data[0].wellConfig = JSON.stringify(z_selected_leveldata);
                    z_sel_config = z_selected_leveldata;
			}
			
				
				$('#custom-modal-content').empty();
				z_RigAddition(rig_element);
		}
		else if(z_level == "Level4"){

			z_saveRates($('#z-save-days')[0]);
			
			z_savewellConfig();
//			if($(rig_element).text() == z_selected_leveldata[0].subLevels[0].phaseName){
//				z_total_cost_item = z_selected_leveldata[0].subLevels[0].totalCostItem;
//			}
                        component_index1 = $(rig_element).attr('base-level');
                        if($(rig_element).attr('current-phase') == "2"){
                            z_selected_leveldata[$(rig_element).attr('base-level')].subLevels.forEach(function(obj,index1){
                                if($(rig_element).text() == obj.phaseName){
                                    z_total_cost_item = obj.totalCostItem;
                                }	
                            });
                            component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(valObj){
                                return valObj.phaseName == $(rig_element).text();
                            });
                            level2Name  = $(rig_element).text();
                        }
                        else if($(rig_element).attr('current-phase') == "3"){
                            z_selected_leveldata[$(rig_element).attr('base-level')].subLevels.forEach(function(obj,index1){
                                if($(rig_element).attr('level2-name') == obj.phaseName){
                                    z_total_cost_item = obj.totalCostItem;
                                }
                                level2Name = $(rig_element).attr('level2-name');	
                            });
                            component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(valObj){
                                return valObj.phaseName == $(rig_element).attr('level2-name');
                            });
                        }
                        else{
                            z_selected_leveldata[$(rig_element).attr('base-level')].subLevels.forEach(function(obj,index1){
                                if($(rig_element).attr('level2-name') == obj.phaseName){
                                    z_total_cost_item = obj.totalCostItem;
                                }	
                            });
                            component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(valObj){
                                return valObj.phaseName == $(rig_element).attr('level2-name');
                            });
                            level2Name = $(rig_element).attr('level2-name');
                        }
			
			var rig_index,rig_index1;
			if(z_seletedphase == "1"){
				rig_index = z_total_cost_item.findIndex(function (obj) {
			        return (obj['phase'] == sel_text.trim());
                });
                component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(valObj){
                    return valObj.phaseName == sel_text.trim();
                });
				for(var rig = 0;rig < z_selectPhase_rig.length;rig++){
					z_phase_rigObj['phase'] = z_selectPhase_rig[rig].innerText;
					z_phase_rigObj['disableIndex'] = z_total_cost_item[0].disableIndex;
                    z_phase_rigObj['rateValue'] = [];
                    level2Obj.phaseName = z_selectPhase_rig[rig].innerText;
                    level2Obj.levelValue = "";
                    level2Obj.isSelected = true;
                    level2Obj.remark = "";
                    level2Obj.totalCost = [];
					//z_phase_rigObj['subPhase'] = z_total_cost_item[0].subPhase;
					z_phase_rigObj['formula'] = z_total_cost_item[0].formula;
					if(sel_text.includes("NoDescription")){
                        z_total_cost_item.push(z_phase_rigObj);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.push(level2Obj);
                        level2Obj = {};
					}
					else{
                        z_total_cost_item.splice(rig_index+1,0,z_phase_rigObj);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.splice(component_index3+1,0,level2Obj);
                        level2Obj = {};
					}
					
					z_phase_rigObj = {};
                }
                z_configJson_data[0].wellConfig = JSON.stringify(z_selected_leveldata);
                    z_sel_config = z_selected_leveldata;
			}
			else if(z_seletedphase == "2"){
				rig_index = z_total_cost_item.findIndex(function (obj) {
			        return (obj['phase'] == base_line);
			    });
				z_total_cost_item[rig_index].subPhase.forEach(function(level2,index2){
					if(level2.phase == sel_text.trim()){
						rig_index1 = index2;
					}
                });
                component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(valObj){
                    return valObj.phaseName == base_line;
                });
                component_index4 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.findIndex(function(valObj){
                    return valObj.phaseName == sel_text.trim();
                });
				for(var rig = 0;rig < z_selectPhase_rig.length;rig++){
					z_phase_rigObj['phase'] = z_selectPhase_rig[rig].innerText;
					z_phase_rigObj['disableIndex'] = z_total_cost_item[0].disableIndex;
					z_phase_rigObj['rateValue'] = [];
                    z_phase_rigObj['formula'] = z_total_cost_item[0].formula;
                    level2Obj.phaseName = z_selectPhase_rig[rig].innerText;
                    level2Obj.levelValue = "";
                    level2Obj.isSelected = true;
                    level2Obj.remark = "";
                    level2Obj.totalCost = [];
					if(sel_text.includes("NoDescription")){
                        z_total_cost_item[rig_index].subPhase.push(z_phase_rigObj);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.push(level2Obj);
                        level2Obj = {};
					}
					else{
                        z_total_cost_item[rig_index].subPhase[rig_index1].splice(rig_index1+1,0,z_phase_rigObj);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.splice(component_index4+1,0,level2Obj);
                        level2Obj = {};
					}
					
					z_phase_rigObj = {};
				}
				z_configJson_data[0].wellConfig = JSON.stringify(z_selected_leveldata);
                    z_sel_config = z_selected_leveldata;
			}
			else if(z_seletedphase == "3"){
				var level3_index = 0;
				rig_index = z_total_cost_item.findIndex(function (obj) {
			        return (obj['phase'] == base_line);
			    });
//				z_total_cost_item[rig_index].subPhase.forEach(function(level2,index2){
//					if(level2.phase == level_2Subphase){
//						rig_index1 = index2;
//					}
//				});
//				z_total_cost_item[rig_index].subPhase[rig_index1].subPhase.forEach(function(level3,index_3){
//					if(level3.phase == sel_text.trim()){
//						level3_index = index_3;
//					}
//				});
                    level3_index = Number(level3_Indexval);
                    rig_index1 = Number(level_2Subphase);
                level4_phaseName = z_total_cost_item[rig_index].subPhase[rig_index1].phase;
                component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(valObj){
                    return valObj.phaseName == base_line;
                });
                component_index4 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.findIndex(function(valObj){
                    return valObj.phaseName == level4_phaseName;
                });
                component_index5 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels[component_index4].subLevels.findIndex(function(valObj){
                    return valObj.phaseName == sel_text.trim();
                });
			
				for(var rig = 0;rig < z_selectPhase_rig.length;rig++){
					z_phase_rigObj['phase'] = z_selectPhase_rig[rig].innerText;
					z_phase_rigObj['disableIndex'] = z_total_cost_item[0].disableIndex;
					z_phase_rigObj['rateValue'] = [];
                    z_phase_rigObj['formula'] = z_total_cost_item[0].formula;
                    level2Obj.phaseName = z_selectPhase_rig[rig].innerText;
                    level2Obj.levelValue = "";
                    level2Obj.isSelected = true;
                    level2Obj.remark = "";
                    level2Obj.totalCost = [];
					if(sel_text.includes("NoDescription")){
                        z_total_cost_item[rig_index].subPhase.push(z_phase_rigObj);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels[component_index4].subLevels.push(level2Obj);
                        level2Obj = {};

					}
					else{
                        z_total_cost_item[rig_index].subPhase[rig_index1].subPhase.splice(level3_index+1,0,z_phase_rigObj);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels[component_index4].subLevels.splice(component_index5+1,0,level2Obj);
                        level2Obj = {};

					}
					
					z_phase_rigObj = {};
				}
				z_configJson_data[0].wellConfig = JSON.stringify(z_selected_leveldata);
                    z_sel_config = z_selected_leveldata;
			
			}
			
				
				$('#custom-modal-content').empty();
				z_RigAddition(rig_element);
		
		}
			
			
		
	}
	else{
        var z_limit_1;
        var z_limit_2;
        var z_limit_3;
        var z_limit_4;
        if(z_level == "Level2"){
			var sel_index = wellDays_data.findIndex(function (obj4) {
		        return (obj4['phase'] == sel_text.trim());
		    });
			if(sel_index == -1){
			sel_index = 0;
			}
			var z_insert_elementObj = {};
			var z_selected_total_element = {};
			var z_insert_element_totalArray = [];
            var z_data;
            var z_line_input_val;
			z_savewellConfig();
			var lineinputarray=[];
			for(var j = 0;j < z_selectPhase_rig.length;j++){
				if($(z_selectPhase_rig[j]).prev()[0].checked == true){
					z_insert_elementObj['phase'] = z_selectPhase_rig[j].innerText;
					if(!(z_customdayArray.includes(z_selectPhase_rig[j].innerText))){
						z_customdayArray.push(z_selectPhase_rig[j].innerText);
					}
                    z_insert_elementObj['subPhase'] = [];
                    if(wellDays_data[sel_index].subPhase.length > 0){
                        z_line_input_val = wellDays_data[sel_index].subPhase[wellDays_data[sel_index].subPhase.length-1].lineInput[1];
                    }
                    else{
                        z_line_input_val = "";
                    }
                        z_line_input_val = "";
                    z_insert_elementObj['lineInput'] = ["", z_line_input_val];
					z_selected_total_element['phase'] = "Total "+z_selectPhase_rig[j].innerText;
					z_selected_total_element['lineInput'] = [""];
				
					
					z_insert_elementObj['totalPhase'] = [];
					z_insert_elementObj.totalPhase.push(z_selected_total_element);
					
                    wellDays_data.splice(sel_index+1,0,z_insert_elementObj);
                    z_insert_element_totalArray = [];
					z_insert_elementObj = {};
					z_selected_total_element = {};
					//$('.z-option-days1').remove();
					$('.z-days-datum').remove();
					var y = $('#z-level1-days')[0];
					y.selectedIndex = 0;
					check_for_save = false;
					var ox;
					if(option_array.indexOf(wellDays_data[sel_index+1].phase) == -1){
						ox = option_array.indexOf(wellDays_data[sel_index].phase);
						option_array.splice(ox+1,0,wellDays_data[sel_index+1].phase);
						var phase1days = document.createElement('option');
						phase1days.setAttribute('value',wellDays_data[sel_index+1].phase);
						phase1days.classList.add('z-option-days1');
						phase1days.innerHTML = wellDays_data[sel_index+1].phase;
						y.options.add(phase1days,ox+2);
					}
					z_showSubPhaseday(sel_index+2);
					z_showDaysTable(y.options[ox+2]);
					z_showDaysTable(y.options[ox+1]);
					
				}
				
			}
			//$('.z-days-active').removeClass('z-days-active');
			for(var j=0;j<z_selected_days_data.length;j++){
			
				for(var i = 1 ; i <= wellDays_data.length;i++){
				var z_baselevel = $('.z-level1-day'+ i);
				var z_days_level = $('.z-days-level'+ i);
				if(z_baselevel.length > 0 && z_days_level.length > 0){
						if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
							$(z_days_level).removeClass('d-none');
							$(z_days_level).addClass('z-days-active');
							break;
							}
				}
				}
			}
		
		}
		else if(z_level == "Level3"){
			var sel_index = wellDays_data_level3.findIndex(function (obj4) {
		        return (obj4['phase'] == sel_text.trim());
		    });
			if(sel_index == -1){
			sel_index = 0;
			}
			
            var z_data;
            var z_line_input_data;
			z_savewellConfig();
			var z_level1Obj = {};
			var z_level1_total_Arr = [];
			var z_level1_total_Obj = {};
			for(var j = 0;j < z_selectPhase_rig.length;j++){
				if($(z_selectPhase_rig[j]).prev()[0].checked == true){
					if(!(z_customdayArray.includes(z_selectPhase_rig[j].innerText))){
						z_customdayArray.push(z_selectPhase_rig[j].innerText);
                    }
                    z_line_input_data;
					z_level1Obj['phase'] = z_selectPhase_rig[j].innerText;
                    z_level1Obj['isSubmitted'] = true;
                    z_limit_1 = wellDays_data_level3[sel_index].subPhase.length;
                    if(z_limit_1 > 0){
                        z_limit_2 = wellDays_data_level3[sel_index].subPhase[z_limit_1-1].subPhase.length;
                        if(z_limit_2 > 0){
                            z_limit_3 = wellDays_data_level3[sel_index].subPhase[z_limit_1-1].subPhase[z_limit_2-1].lineInput[1];
                        }
                        else{
                            z_limit_3 = wellDays_data_level3[sel_index].subPhase[z_limit_1-1].lineInput[1];
                        }
                    }
                    else{
                        z_limit_3 = wellDays_data_level3[sel_index].lineInput[1];
                    }
					z_level1Obj['lineInput'] = ["",z_limit_3];
					z_level1Obj['subPhase'] = [];
					z_level1_total_Obj['lineInput'] = ["",""];
					z_level1_total_Obj['phase'] = "Total "+z_selectPhase_rig[j].innerText;
                    z_level1Obj['totalPhase'] = [];
                    z_level1Obj.totalPhase.push(z_level1_total_Obj);
					
					wellDays_data_level3.splice(sel_index+1,0,z_level1Obj);
                    z_level1Obj = {};
                    z_level1_total_Obj = {};
					//z_level1_total_Arr = [];
					//$('.z-option-days1').remove();
					$('.z-days-datum').remove();
					var y = $('#z-level3-days')[0];
					y.selectedIndex = 0;
					check_for_save = false;
					var ox;
					if(option_array.indexOf(wellDays_data_level3[sel_index+1].phase) == -1){
						ox = option_array.indexOf(wellDays_data_level3[sel_index].phase);
						option_array.splice(ox+1,0,wellDays_data_level3[sel_index+1].phase);
						var phase1days = document.createElement('option');
						phase1days.setAttribute('value',wellDays_data_level3[sel_index+1].phase);
						phase1days.classList.add('z-option-days1');
						phase1days.innerHTML = wellDays_data_level3[sel_index+1].phase;
						y.options.add(phase1days,ox+2);
					}
					z_showSubPhaseday_level3(sel_index+2);
					z_showDaysTable_level2(y.options[ox+2]);
					z_showDaysTable_level2(y.options[ox+1]);
					
				}
				
			}
			//$('.z-days-active').removeClass('z-days-active');
			for(var j=0;j<z_selected_days_data.length;j++){
			
				for(var i = 1 ; i <= wellDays_data_level3.length;i++){
				var z_baselevel = $('.z-level1-day'+ i);
				var z_days_level = $('.z-days-level'+ i);
				if(z_baselevel.length > 0 && z_days_level.length > 0){
						if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
							$(z_days_level).removeClass('d-none');
							$(z_days_level).addClass('z-days-active');
							break;
							}
				}
				}
			}
		}
		else if(z_level == "Level4"){
			var sel_index = wellDays_data_level4.findIndex(function (obj4) {
		        return (obj4['phase'] == sel_text.trim());
		    });
			if(sel_index == -1){
			sel_index = 0;
			}
			
			var z_data;
			z_savewellConfig();
			var lineinputarray=[];
			var z_level1Obj = {};
			var z_level1_total_Arr = [];
			var z_level1_total_Obj = [];
			for(var j = 0;j < z_selectPhase_rig.length;j++){
				if($(z_selectPhase_rig[j]).prev()[0].checked == true){
					if(!(z_customdayArray.includes(z_selectPhase_rig[j].innerText))){
						z_customdayArray.push(z_selectPhase_rig[j].innerText);
					}
					z_level1Obj['phase'] = z_selectPhase_rig[j].innerText;
                    z_level1Obj['isSubmitted'] = true;
                    z_limit_1 = wellDays_data_level4[sel_index].subPhase.length;
                    if(z_limit_1 > 0){
                        z_limit_2 = wellDays_data_level4[sel_index].subPhase[z_limit_1-1].subPhase.length;
                        if(z_limit_2 > 0){
                            z_limit_3 = wellDays_data_level4[sel_index].subPhase[z_limit_1-1].subPhase[z_limit_2-1].length;
                            if(z_limit_3 > 0){
                                z_limit_4 = wellDays_data_level4[sel_index].subPhase[z_limit_1-1].subPhase[z_limit_2-1].subPhase[z_limit_3-1].lineInput[1];
                            }
                            else{
                                z_limit_4 = wellDays_data_level4[sel_index].subPhase[z_limit_1-1].subPhase[z_limit_2-1].lineInput[1];
                            }
                        }
                        else{
                            z_limit_4 = wellDays_data_level4[sel_index].subPhase[z_limit_1-1].lineInput[1];
                        }
                    }
                    else{
                        z_limit_4 = wellDays_data_level4[sel_index].lineInput[1];
                    }
                    z_level1Obj['lineInput'] = ["",z_limit_4];
					z_level1_total_Obj['lineInput'] = ["",""];
					z_level1_total_Obj['phase'] = "Total "+z_selectPhase_rig[j].innerText;
					z_level1Obj['totalPhase'] = [];
					z_level1Obj.totalPhase.push(z_level1_total_Obj);
                    wellDays_data_level4.splice(sel_index+1,0,z_level1Obj);
                    z_level1_total_Obj = {};
					z_level1Obj = {};
					//$('.z-option-days1').remove();
					$('.z-days-datum').remove();
					var y = $('#z-level4-days')[0];
					y.selectedIndex = 0;
					check_for_save = false;
					var ox;
					if(option_array.indexOf(wellDays_data_level4[sel_index+1].phase) == -1){
						ox = option_array.indexOf(wellDays_data_level4[sel_index].phase);
						option_array.splice(ox+1,0,wellDays_data_level4[sel_index+1].phase);
						var phase1days = document.createElement('option');
						phase1days.setAttribute('value',wellDays_data_level4[sel_index+1].phase);
						phase1days.classList.add('z-option-days1');
						phase1days.innerHTML = wellDays_data_level4[sel_index+1].phase;
						y.options.add(phase1days,ox+2);
					}
					z_showSubPhaseday_level4(sel_index+2);
					z_showDaysTable_level3(y.options[ox+2]);
					z_showDaysTable_level3(y.options[ox+1]);
					
				}
				
			}
			//$('.z-days-active').removeClass('z-days-active');
			for(var j=0;j<z_selected_days_data.length;j++){
			
				for(var i = 1 ; i <= wellDays_data_level4.length;i++){
				var z_baselevel = $('.z-level1-day'+ i);
				var z_days_level = $('.z-days-level'+ i);
				if(z_baselevel.length > 0 && z_days_level.length > 0){
						if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
							$(z_days_level).removeClass('d-none');
							$(z_days_level).addClass('z-days-active');
							break;
							}
				}
				}
			}
		
		}
	}
	
	$('#z-addcustomItem-modal').modal('hide');
	z_serialNumberAdjust();
	cumulativeAdjustment();
	granttotal_calculation();
	});
}
	
	else if(z_seletedphase == "2"){
		$('#z-addcustomItem-modal2').remove();
		var z_customday2 = $(el).parent().text();
		var baseDayEl;
		if(!(z_customday2.includes("Add Line"))){
			baseDayEl = $(el).parent();
		}
		
	    $('body').append('<div id="z-addcustomItem-modal2" class="modal" tabindex="-1" role="dialog">' +
	        '<div class="modal-dialog" role="document">' +
	        '<div class="modal-content">' +
	        '<div class="modal-header">' +
	        '<h5 class="modal-title">Add Line Items For Level2</h5>' +
	        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
	        '<span aria-hidden="true">&times;</span>' +
	        '</button>' +
	        '</div>' +
	        '<div class="modal-body">' +
	        '<h5 class="d-none">Select Lineitems to add after</h5>'+
	        '<div id="notSelectedlinePhase_listitem2" class="z-viewheight-lineitem"></div>' +
	        '<div id="customlinePhase2-insertWrap">' +
	        '<input id="customlinePhaseitem-input2" class="z-m-inputS1" placeholder="phase Name">' +
	        '<button id="customlinePhaseitem-addBtn2" type="button" class="btn btn-primary" style="margin-left: 15px;">Add</button>' +
	        '</div>' +
	        '<p class="d-none">Select a Line Items to insert</p>' +
	        '</div>' +
	        '<div class="modal-footer">' +
	        '<button id="z-addlinePhaseitem-btn2" type="button" class="btn btn-primary">Submit</button>' +
	        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
	        '</div>' +
	        '</div>' +
	        '</div>' +
	        '</div>');
	    //$('#z-addlinePhase-btn').attr('selected-level',z_l_levels);
	    $('#z-addcustomItem-modal2').modal('show');
	    $('.z-custom-lineitem2').remove();
		
		
$('#customlinePhaseitem-addBtn2').on('click', function () {
	phase_name = $('#customlinePhaseitem-input2').val();
	$('#notSelectedlinePhase_listitem2').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
			'<div class="z-phaseName-select-level2">'+phase_name+'</div></div>');
	$('#customlinePhaseitem-input2').val("");
	
	
	$('.z-custom-lineitem2').remove();
       });
$('#z-addlinePhaseitem-btn2').on('click', function (ele) {
	var z_selectPhase2 = $('.z-phaseName-select-level2');
	var sel_text2;
    var z_baseDay;
  
	if(z_customday2.includes("Add Line")){
		var x = $('.z-level2-test')[0];
		//sel_text2 = x.innerText;
		if(x.innerText.includes("+")){
			sel_text2 = x.innerText.substr(0,x.innerText.length-4);
		}
		else{
			sel_text2 = x.innerText;
		}
		z_baseDay = x.getAttribute('baselineItem');
	}
	else{
		sel_text2 = z_customday2.substr(0,z_customday2.length-2);
		z_baseDay = $(baseDayEl).attr('baselineItem');
	}
	
	var sel_index2 = 0; 
	var z_insert_elementObj2 = {};
	var z_data2;
	z_savewellConfig();
	if(z_level == "Level2"){

		for(var j = 0;j<z_selectPhase2.length;j++){

			if($(z_selectPhase2[j]).prev()[0].checked == true){
				wellDays_data.forEach(function(obj1,day_index){
					if(obj1.phase == z_baseDay){
						obj1.subPhase.forEach(function(obj2,day_index2){
							if(obj2.phase == sel_text2.trim()){
								z_insert_elementObj2['phase'] = z_selectPhase2[j].innerText;
								z_insert_elementObj2['lineInput'] = ["",obj2.lineInput[1]];
								obj1.subPhase.splice(day_index2 + 1,0,z_insert_elementObj2);
								//sel_text2 = z_selectPhase2[j].innerText;
//								if(obj2.phase == ""){
//									obj1.subPhase.splice(day_index2,1);
//								}
								sel_index2 = day_index2;
								z_insert_elementObj2 = {};
							}
						});	
					}
					
				});
				//$('.z-option-days1').remove();
				$('.z-days-datum').remove();
				z_showSubPhaseday(sel_index2 + 2);
				var m = $('#z-level1-days')[0];
				m.selectedIndex = sel_index2 + 2;
				check_for_save = false;
				z_showDaysTable($('#z-level1-days')[0]);
				z_insert_elementObj2 = {};
			}
			
		
		}
		for(var j=0;j<z_selected_days_data.length;j++){
			
			for(var i = 1 ; i <= wellDays_data.length;i++){
			var z_baselevel = $('.z-level1-day'+ i);
			var z_days_level = $('.z-days-level'+ i);
			if(z_baselevel.length > 0 && z_days_level.length > 0){
					if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
						$(z_days_level).removeClass('d-none');
						$(z_days_level).addClass('z-days-active');
						break;
						}
			}
			}
		}
	
	}
	else if(z_level == "Level3"){
		if(z_rigVal == "rig"){
			var z_phase_rigObj1 = {};
			z_saveRates($('#z-save-days')[0]);
            z_savewellConfig();
            
            component_index1 = $(rig_element).attr('base-level');
            if($(rig_element).attr('current-phase') == "2"){
                z_selected_leveldata[component_index1].subLevels.forEach(function(obj,index1){
                    if($(rig_element).text() == obj.phaseName){
                        z_total_cost_item = obj.totalCostItem;
                    }	
                });
                component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(valObj){
                    return valObj.phaseName == $(rig_element).text();
                });
            }
            else if($(rig_element).attr('current-phase') == "3"){
                z_selected_leveldata[component_index1].subLevels.forEach(function(obj,index1){
                    if($(rig_element).attr('level2-name') == obj.phaseName){
                        z_total_cost_item = obj.totalCostItem;
                       
                    }	
                });
                component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(valObj){
                    return valObj.phaseName == $(rig_element).attr('level2-name');
                });
            }
            else if($(rig_element).attr('current-phase') == "4"){
                z_selected_leveldata[component_index1].subLevels.forEach(function(obj,index1){
                    if($(rig_element).attr('level2-name') == obj.phaseName){
                        z_total_cost_item = obj.totalCostItem;
                    }	
                });
                component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(valObj){
                    return valObj.phaseName == $(rig_element).attr('level2-name');
                });
            }
			
            var rig_index,rig_index1;
            
			if(z_seletedphase == "1"){
				rig_index = z_total_cost_item.findIndex(function (obj) {
			        return (obj['phase'] == sel_text2.trim());
                });
                component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(val){
                    return val.phaseName == sel_text2.trim();
                });
                
				for(var rig = 0;rig < z_selectPhase2.length;rig++){
					z_phase_rigObj1['phase'] = z_selectPhase2[rig].innerText;
					z_phase_rigObj1['disableIndex'] = z_total_cost_item[0].disableIndex;
					z_phase_rigObj1['rateValue'] = [];
					z_phase_rigObj1['subPhase'] = z_total_cost_item[0].subPhase;
                    z_phase_rigObj1['formula'] = z_total_cost_item[0].formula;
                    level2Obj.phaseName = z_selectPhase2[rig].innerText;
                    level2Obj.levelValue = "";
                    level2Obj.isSelected = true;
                    level2Obj.remark = "";
                    level2Obj.totalCost = [];
                    if(z_selected_leveldata[component_index1].subLevels[component_index2].subLevels != null){
                        if(z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[0].subLevels != null){
                            level2Obj.subLevels = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[0].subLevels;

                        }
                        else{
                            level2Obj.subLevels = [];

                        }

                    }
                    else{
                        level2Obj.subLevels = [];

                    }
					if(sel_text2.includes("NoDescription")){
                        z_total_cost_item.push(z_phase_rigObj1);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.push(level2Obj);
                        level2Obj = {};
					}
					else{
                        z_total_cost_item.splice(rig_index+1,0,z_phase_rigObj1);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.splice(component_index3+1,0,level2Obj);
                        level2Obj = {};
					}
					
					z_phase_rigObj1 = {};
                }
                z_configJson_data[0].wellConfig = JSON.stringify(z_selected_leveldata);
                    z_sel_config = z_selected_leveldata;
			}
			else if(z_seletedphase == "2"){
				rig_index = z_total_cost_item.findIndex(function (obj) {
			        return (obj['phase'] == base_line);
                });
               
                component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(val3){
                    return val3.phaseName == base_line;
                });
                component_index4 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.findIndex(function(val4){
                    return val4.phaseName == sel_text2.trim();
                });
				z_total_cost_item[rig_index].subPhase.forEach(function(level2,index2){
					if(level2.phase == sel_text2.trim()){
						rig_index1 = index2;
					}
				});
				for(var rig = 0;rig < z_selectPhase2.length;rig++){
					z_phase_rigObj1['phase'] = z_selectPhase2[rig].innerText;
					z_phase_rigObj1['disableIndex'] = z_total_cost_item[0].subPhase[0].disableIndex;
					z_phase_rigObj1['rateValue'] = [];
                    z_phase_rigObj1['formula'] = z_total_cost_item[0].subPhase[0].formula;
                    level2Obj.phaseName = z_selectPhase2[rig].innerText;
                    level2Obj.levelValue = "";
                    level2Obj.isSelected = true;
                    level2Obj.remark = "";
                    level2Obj.totalCost = [];
					if(sel_text2.includes("NoDescription")){
                        z_total_cost_item[rig_index].subPhase.push(z_phase_rigObj1);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.push(level2Obj);
                        level2Obj = {};
					}
					else{
                        z_total_cost_item[rig_index].subPhase.splice(rig_index1+1,0,z_phase_rigObj1);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.splice(component_index4+1,0,level2Obj);
                        level2Obj = {};
					}
					
					z_phase_rigObj1 = {};
				}
				z_configJson_data[0].wellConfig = JSON.stringify(z_selected_leveldata);
                    z_sel_config = z_selected_leveldata;
			}
			
				
				$('#custom-modal-content').empty();
				z_RigAddition(rig_element);
		}
		else{
			var level2_ob = {};
			var total_phase2 = {};
			var total_phaseArray2 = [];
			for(var j = 0;j<z_selectPhase2.length;j++){

				if($(z_selectPhase2[j]).prev()[0].checked == true){
					wellDays_data_level3.forEach(function(obj1,day_index){
						if(obj1.phase == z_baseDay){
							obj1.subPhase.forEach(function(obj2,day_index2){
								if(obj2.phase == sel_text2.trim()){
									level2_ob['phase'] = z_selectPhase2[j].innerText;
									level2_ob['lineInput'] = ["",obj2.lineInput[1]];
									
									level2_ob['subPhase'] = [];
									total_phase2['phase'] = "";
									total_phase2['lineInput'] = ["",""];
									level2_ob['totalPhase'] = [];
									level2_ob.totalPhase.push(total_phase2);
                                    obj1.subPhase.splice(day_index2 + 1,0,level2_ob);
                                    total_phaseArray2 = [];
									total_phase2 = {};
									//sel_text2 = z_selectPhase2[j].innerText;
//									if(obj2.phase == ""){
//										obj1.subPhase.splice(day_index2,1);
//									}
									sel_index2 = day_index2;
									level2_ob = {};
								}
							});	
						}
						
					});
					//$('.z-option-days1').remove();
					$('.z-days-datum').remove();
					z_showSubPhaseday_level3(sel_index2 + 2);
					var m = $('#z-level3-days')[0];
					m.selectedIndex = sel_index2 + 2;
					check_for_save = false;
					z_showDaysTable_level2($('#z-level3-days')[0]);
					z_insert_elementObj2 = {};
				}
				
			
			}
			for(var j=0;j<z_selected_days_data.length;j++){
				
				for(var i = 1 ; i <= wellDays_data_level3.length;i++){
				var z_baselevel = $('.z-level1-day'+ i);
				var z_days_level = $('.z-days-level'+ i);
				if(z_baselevel.length > 0 && z_days_level.length > 0){
						if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
							$(z_days_level).removeClass('d-none');
							$(z_days_level).addClass('z-days-active');
							break;
							}
				}
				}
			}
		}
	
	}
	else if(z_level == "Level4"){
		if(z_rigVal == "rig"){
			var z_phase_rigObj1 = {};
			z_saveRates($('#z-save-days')[0]);
            z_savewellConfig();
            component_index1  = $(rig_element).attr('base-level');

			if($(rig_element).attr('current-phase') == "2"){
                z_selected_leveldata[component_index1].subLevels.forEach(function(obj,index1){
                    if($(rig_element).text() == obj.phaseName){
                        z_total_cost_item = obj.totalCostItem;
                    }	
                });
                component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(val2){
                    return val2.phaseName == $(rig_element).text();
                });
            }
            else if($(rig_element).attr('current-phase') == "3"){
                z_selected_leveldata[component_index1].subLevels.forEach(function(obj,index1){
                    if($(rig_element).attr('level2-name') == obj.phaseName){
                        z_total_cost_item = obj.totalCostItem;
                    }	
                });
                component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(val2){
                    return val2.phaseName == $(rig_element).attr('level2-name');
                });
            }
            else if($(rig_element).attr('current-phase') == "4"){
                z_selected_leveldata[component_index1].subLevels.forEach(function(obj,index1){
                    if($(rig_element).attr('level2-name') == obj.phaseName){
                        z_total_cost_item = obj.totalCostItem;
                    }	
                });
                component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(val2){
                    return val2.phaseName == $(rig_element).attr('level2-name');
                });
            }
			var rig_index,rig_index1;
			if(z_seletedphase == "1"){
				rig_index = z_total_cost_item.findIndex(function (obj) {
			        return (obj['phase'] == sel_text2.trim());
                });
                component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(val3){
                    return val3.phaseName == sel_text2.trim();
                });
				for(var rig = 0;rig < z_selectPhase2.length;rig++){
					z_phase_rigObj1['phase'] = z_selectPhase2[rig].innerText;
					z_phase_rigObj1['disableIndex'] = z_total_cost_item[0].subPhase[0].disableIndex;
					z_phase_rigObj1['rateValue'] = [];
					//z_phase_rigObj1['subPhase'] = z_total_cost_item[0].subPhase;
                    z_phase_rigObj1['formula'] = z_total_cost_item[0].subPhase[0].formula;
                    level2Obj.phaseName = z_selectPhase2[rig].innerText;
                    level2Obj.levelValue = "";
                    level2Obj.isSelected = true;
                    level2Obj.remark = "";
                    level2Obj.totalCost = [];
                    if(z_selected_leveldata[component_index1].subLevels[component_index2].subLevels != null){
                        if(z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[0].subLevels != null){
                            level2Obj.subLevels = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[0].subLevels;

                        }
                        else{
                            level2Obj.subLevels = [];

                        }

                    }
                    else{
                        level2Obj.subLevels = [];

                    }
					if(sel_text2.includes("NoDescription")){
                        z_total_cost_item.push(z_phase_rigObj1);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.push(level2Obj);
                        level2Obj = {};
					}
					else{
                        z_total_cost_item.splice(rig_index+1,0,z_phase_rigObj1);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.splice(component_index3+1,0,level2Obj);
                        level2Obj = {};

					}
					
					z_phase_rigObj1 = {};
                }
                z_configJson_data[0].wellConfig = JSON.stringify(z_selected_leveldata);
                    z_sel_config = z_selected_leveldata;
			}
			else if(z_seletedphase == "2"){
				rig_index = z_total_cost_item.findIndex(function (obj) {
			        return (obj['phase'] == base_line);
			    });
//				z_total_cost_item[rig_index].subPhase.forEach(function(level2,index2){
//					if(level2.phase == sel_text2.trim()){
//						rig_index1 = index2;
//					}
//				});
                    component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(val3){
                        return val3.phaseName == base_line;
                    });
                    component_index4 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.findIndex(function(val4){
                        return val4.phaseName == sel_text2.trim();
                    });
                rig_index1 = Number(level_2Subphase);
                var z_disableIndex;
                var z_formula;
                if(z_total_cost_item[0].disableIndex != null){
                    z_disableIndex = z_total_cost_item[0].disableIndex;
                    z_formula =  z_total_cost_item[0].formula;
                }
                else if(z_total_cost_item[0].subPhase[0].disableIndex != null){
                    z_disableIndex = z_total_cost_item[0].subPhase[0].disableIndex;
                    z_formula =  z_total_cost_item[0].subPhase[0].formula;
                }
                else if(z_total_cost_item[0].subPhase[0].subPhase[0].disableIndex != null){
                    z_disableIndex = z_total_cost_item[0].subPhase[0].subPhase[0].disableIndex;
                    z_formula =  z_total_cost_item[0].subPhase[0].subPhase[0].formula;
                }
				for(var rig = 0;rig < z_selectPhase2.length;rig++){
					z_phase_rigObj1['phase'] = z_selectPhase2[rig].innerText;
					z_phase_rigObj1['disableIndex'] = z_disableIndex;
					z_phase_rigObj1['rateValue'] = [];
                    z_phase_rigObj1['formula'] = z_formula;
                    level2Obj.phaseName = z_selectPhase2[rig].innerText;
                    level2Obj.levelValue = "";
                    level2Obj.isSelected = true;
                    level2Obj.remark = "";
                    level2Obj.totalCost = [];
					if(sel_text2.includes("NoDescription")){
                        z_total_cost_item[rig_index].subPhase.push(z_phase_rigObj1);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.push(level2Obj);
                        level2Obj = {};
					}
					else{
                        z_total_cost_item[rig_index].subPhase.splice(rig_index1+1,0,z_phase_rigObj1);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.splice(component_index4+1,0,level2Obj);
                        level2Obj = {};
					}
					
					z_phase_rigObj1 = {};
				}
				z_configJson_data[0].wellConfig = JSON.stringify(z_selected_leveldata);
                    z_sel_config = z_selected_leveldata;
            }
//             else if(z_seletedphase == "3"){
// 				rig_index = z_total_cost_item.findIndex(function (obj) {
// 			        return (obj['phase'] == base_line);
// 			    });
// //				z_total_cost_item[rig_index].subPhase.forEach(function(level2,index2){
// //					if(level2.phase == sel_text2.trim()){
// //						rig_index1 = index2;
// //					}
// //				});
//                     component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(val3){
//                         return val3.phaseName == base_line;
//                     });
//                     component_index4 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.findIndex(function(val4){
//                         return val4.phaseName == sel_text2.trim();
//                     });
//                     component_index5 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels[component_index4].subLevels.findIndex(function(val5){
//                         return val5.phaseName == sel_text2.trim();
//                     });
//                 rig_index1 = Number(level_2Subphase);
//                 var z_disableIndex;
//                 var z_formula;
//                 if(z_total_cost_item[0].disableIndex != null){
//                     z_disableIndex = z_total_cost_item[0].disableIndex;
//                     z_formula =  z_total_cost_item[0].formula;
//                 }
//                 else if(z_total_cost_item[0].subPhase[0].disableIndex != null){
//                     z_disableIndex = z_total_cost_item[0].subPhase[0].disableIndex;
//                     z_formula =  z_total_cost_item[0].subPhase[0].formula;
//                 }
//                 else if(z_total_cost_item[0].subPhase[0].subPhase[0].disableIndex != null){
//                     z_disableIndex = z_total_cost_item[0].subPhase[0].subPhase[0].disableIndex;
//                     z_formula =  z_total_cost_item[0].subPhase[0].subPhase[0].formula;
//                 }
// 				for(var rig = 0;rig < z_selectPhase2.length;rig++){
// 					z_phase_rigObj1['phase'] = z_selectPhase2[rig].innerText;
// 					z_phase_rigObj1['disableIndex'] = z_disableIndex;
// 					z_phase_rigObj1['rateValue'] = [];
//                     z_phase_rigObj1['formula'] = z_formula;
//                     level2Obj.phaseName = z_selectPhase2[rig].innerText;
//                     level2Obj.levelValue = "";
//                     level2Obj.isSelected = true;
//                     level2Obj.remark = "";
//                     level2Obj.totalCost = [];
// 					if(sel_text2.includes("NoDescription")){
//                         z_total_cost_item[rig_index].subPhase.push(z_phase_rigObj1);
//                         z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.push(level2Obj);
//                         level2Obj = {};
// 					}
// 					else{
//                         z_total_cost_item[rig_index].subPhase.splice(rig_index1+1,0,z_phase_rigObj1);
//                         z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.splice(component_index4+1,0,level2Obj);
//                         level2Obj = {};
// 					}
					
// 					z_phase_rigObj1 = {};
// 				}
				
// 			}
			
				
				$('#custom-modal-content').empty();
				z_RigAddition(rig_element);
		}
		else{
			var level2_ob = {};
			var total_phase2 = {};
			var total_phaseArray2 = [];
			for(var j = 0;j<z_selectPhase2.length;j++){

				if($(z_selectPhase2[j]).prev()[0].checked == true){
					wellDays_data_level4.forEach(function(obj1,day_index){
						if(obj1.phase == z_baseDay){
							obj1.subPhase.forEach(function(obj2,day_index2){
								if(obj2.phase == sel_text2.trim()){
									level2_ob['phase'] = z_selectPhase2[j].innerText;
									level2_ob['lineInput'] = ["",obj2.lineInput[1]];
									level2_ob['subPhase'] = [];
									total_phase2['phase'] = "Total "+z_selectPhase2[j].innerText;
									total_phase2['lineInput'] = ["",""];
									level2_ob['totalPhase'] = [];
									level2_ob.totalPhase.push(total_phase2);
                                    obj1.subPhase.splice(day_index2 + 1,0,level2_ob);
                                    total_phaseArray2 = [];
									total_phase2 = {};
									//sel_text2 = z_selectPhase2[j].innerText;
//									if(obj2.phase == ""){
//										obj1.subPhase.splice(day_index2,1);
//									}
									sel_index2 = day_index2;
									level2_ob = {};
								}
							});	
						}
						
					});
					//$('.z-option-days1').remove();
					$('.z-days-datum').remove();
					z_showSubPhaseday_level4(sel_index2 + 2);
					var m = $('#z-level4-days')[0];
					m.selectedIndex = sel_index2 + 2;
					check_for_save = false;
					z_showDaysTable_level3($('#z-level4-days')[0]);
					z_insert_elementObj2 = {};
				}
				
			
			}
			for(var j=0;j<z_selected_days_data.length;j++){
				
				for(var i = 1 ; i <= wellDays_data_level4.length;i++){
				var z_baselevel = $('.z-level1-day'+ i);
				var z_days_level = $('.z-days-level'+ i);
				if(z_baselevel.length > 0 && z_days_level.length > 0){
						if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
							$(z_days_level).removeClass('d-none');
							$(z_days_level).addClass('z-days-active');
							break;
							}
				}
				}
			}
		}
	
	}
	
	//$('.z-days-active').removeClass('z-days-active');
	
	$('#z-addcustomItem-modal').modal('hide');
	$('#z-addcustomItem-modal2').modal('hide');
	z_serialNumberAdjust();
	cumulativeAdjustment();
	granttotal_calculation();
	});
	}
	else if(z_seletedphase == "3"){
		$('#z-addcustomItem-modal3').remove();
		var z_customday2 = $(el).parent().text();
		var baseDayEl;
		if(!(z_customday2.includes("Add Line"))){
			baseDayEl = $(el).parent();
		}
		
	    $('body').append('<div id="z-addcustomItem-modal3" class="modal" tabindex="-1" role="dialog">' +
	        '<div class="modal-dialog" role="document">' +
	        '<div class="modal-content">' +
	        '<div class="modal-header">' +
	        '<h5 class="modal-title">Add Line Items For Level2</h5>' +
	        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
	        '<span aria-hidden="true">&times;</span>' +
	        '</button>' +
	        '</div>' +
	        '<div class="modal-body">' +
	        '<h5 class="d-none">Select Lineitems to add after</h5>'+
	        '<div id="notSelectedlinePhase_listitem3" class="z-viewheight-lineitem"></div>' +
	        '<div id="customlinePhase3-insertWrap">' +
	        '<input id="customlinePhaseitem-input3" class="z-m-inputS1" placeholder="phase Name">' +
	        '<button id="customlinePhaseitem-addBtn3" type="button" class="btn btn-primary" style="margin-left: 15px;">Add</button>' +
	        '</div>' +
	        '<p class="d-none">Select a Line Items to insert</p>' +
	        '</div>' +
	        '<div class="modal-footer">' +
	        '<button id="z-addlinePhaseitem-btn3" type="button" class="btn btn-primary">Submit</button>' +
	        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
	        '</div>' +
	        '</div>' +
	        '</div>' +
	        '</div>');
	    //$('#z-addlinePhase-btn').attr('selected-level',z_l_levels);
	    $('#z-addcustomItem-modal3').modal('show');
	    $('.z-custom-lineitem3').remove();
		
		
$('#customlinePhaseitem-addBtn3').on('click', function () {
	phase_name = $('#customlinePhaseitem-input3').val();
	$('#notSelectedlinePhase_listitem3').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
			'<div class="z-phaseName-select-level3">'+phase_name+'</div></div>');
	$('#customlinePhaseitem-input3').val("");
	
	
	$('.z-custom-lineitem3').remove();
       });
$('#z-addlinePhaseitem-btn3').on('click', function (ele) {
	var z_selectPhase2 = $('.z-phaseName-select-level3');
	var sel_text2;
	var z_baseDay;
	if(z_customday2.includes("Add Line")){
		var x = $('.z-level2-test')[0];
		//sel_text2 = x.innerText;
		if(x.innerText.includes("+")){
			sel_text2 = x.innerText.substr(0,x.innerText.length-4);
		}
		else{
			sel_text2 = x.innerText;
		}
		z_baseDay = x.getAttribute('baselineItem');
	}
	else{
		sel_text2 = z_customday2.substr(0,z_customday2.length-2);
		z_baseDay = $(baseDayEl).attr('baselineItem');
	}
	
	var sel_index2 = 0; 
	var z_insert_elementObj2 = {};
	var z_data2;
	z_savewellConfig();
	
	if(z_level == "Level3"){
		var level3_ob = {};
		for(var j = 0;j<z_selectPhase2.length;j++){
			if($(z_selectPhase2[j]).prev()[0].checked == true){
				wellDays_data_level3.forEach(function(obj1,day_index){
					if(obj1.phase == z_baseDay){
						obj1.subPhase.forEach(function(obj2,day_index2){
							obj2.subPhase.forEach(function(obj3,day_index3){
								if(obj3.phase == sel_text2.trim()){
									level3_ob['phase'] = z_selectPhase2[j].innerText;
									level3_ob['lineInput'] = ["",obj3.lineInput[1]];
									obj1.subPhase[day_index2].subPhase.splice(day_index3 + 1,0,level3_ob);
									sel_index2 = day_index3;
									level3_ob = {};
								}
							});
							
						});	
					}
					
				});
				//$('.z-option-days1').remove();
				$('.z-days-datum').remove();
				z_showSubPhaseday_level3(sel_index2 + 2);
				var m = $('#z-level3-days')[0];
				m.selectedIndex = sel_index2 + 2;
				check_for_save = false;
				z_showDaysTable_level2($('#z-level3-days')[0]);
				z_insert_elementObj2 = {};
			}
			
		
		}
		for(var j=0;j<z_selected_days_data.length;j++){
			for(var i = 1 ; i <= wellDays_data_level3.length;i++){
			var z_baselevel = $('.z-level1-day'+ i);
			var z_days_level = $('.z-days-level'+ i);
			if(z_baselevel.length > 0 && z_days_level.length > 0){
					if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
						$(z_days_level).removeClass('d-none');
						$(z_days_level).addClass('z-days-active');
						break;
						}
			}
			}
		}
	}
	else if(z_level == "Level4"){
		if(z_rigVal == "rig"){
			var z_phase_rigObj4 = {};
			var z_total_cost_item13;
			z_saveRates($('#z-save-days')[0]);
			z_savewellConfig();
			z_selected_leveldata[0].subLevels.forEach(function(obj,index1){
				if($(rig_element).text() == obj.phaseName){
					z_total_cost_item13 = obj.totalCostItem;
				}	
			});
			var rig_index_1,rig_index_2,rig_index_3;
            var z_phase_rigObj13 = {};
            component_index1 = $(rig_element).attr('base-level');
            if($(rig_element).attr('current-phase') == "2"){
                component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(val){
                    return val.phaseName == $(rig_element).text();
                });
            }
            else{
                component_index2 = z_selected_leveldata[component_index1].subLevels.findIndex(function(val){
                    return val.phaseName == $(rig_element).attr('level2-name');
                });
            }
			if(z_seletedphase == "3"){
				rig_index_1 = z_total_cost_item13.findIndex(function (obj) {
			        return (obj['phase'] == base_line);
			    });
//				z_total_cost_item[rig_index].subPhase.forEach(function(level2,index2){
//					if(level2.phase == sel_text2.trim()){
//						rig_index1 = index2;
//					}
//				});
				rig_index_2 = Number(level_2Subphase);
                rig_index_3 = Number(level3_Indexval);
                level4_phaseName = z_total_cost_item13[rig_index_1].subPhase[rig_index_2].phase;
				component_index3 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels.findIndex(function(val){
                    return val.phaseName == base_line;
                });
                component_index4 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels.findIndex(function(val){
                    return val.phaseName == level4_phaseName;
                });
                component_index5 = z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels[component_index4].subLevels.findIndex(function(val){
                    return val.phaseName == sel_text.trim();
                });
				for(var rig = 0;rig < z_selectPhase2.length;rig++){
					z_phase_rigObj13['phase'] = z_selectPhase2[rig].innerText;
					z_phase_rigObj13['disableIndex'] = z_total_cost_item13[0].subPhase[0].subPhase[0].disableIndex;
					z_phase_rigObj13['rateValue'] = [];
                    z_phase_rigObj13['formula'] = z_total_cost_item13[0].subPhase[0].subPhase[0].formula;
                    level2Obj.phaseName = z_selectPhase2[rig].innerText;
                    level2Obj.levelValue = "";
                    level2Obj.isSelected = true;
                    level2Obj.remark = "";
                    level2Obj.totalCost = [];
					if(sel_text2.includes("NoDescription")){
                        z_total_cost_item13[rig_index_1].subPhase[rig_index_2].subPhase.push(z_phase_rigObj13);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels[component_index4].subLevels.push(level2Obj);
                        level2Obj = {};
					}
					else{
                        z_total_cost_item13[rig_index_1].subPhase[rig_index_2].subPhase.splice(rig_index_3+1,0,z_phase_rigObj13);
                        z_selected_leveldata[component_index1].subLevels[component_index2].subLevels[component_index3].subLevels[component_index4].subLevels.splice(component_index5+1,0,level2Obj);
                        level2Obj = {};
					}
					
					z_phase_rigObj13 = {};
				}
				z_configJson_data[0].wellConfig = JSON.stringify(z_selected_leveldata);
                    z_sel_config = z_selected_leveldata;
			}
			$('#custom-modal-content').empty();
			z_RigAddition(rig_element);
		}
		else{
			var level3_ob = {};
			var level3_totalObj = {};
			var level3_totalArray = {};
			for(var j = 0;j<z_selectPhase2.length;j++){
				if($(z_selectPhase2[j]).prev()[0].checked == true){
					wellDays_data_level4.forEach(function(obj1,day_index){
						if(obj1.phase == z_baseDay){
							obj1.subPhase.forEach(function(obj2,day_index2){
								obj2.subPhase.forEach(function(obj3,day_index3){
									if(obj3.phase == sel_text2.trim()){
										level3_ob['phase'] = z_selectPhase2[j].innerText;
                                        level3_ob['lineInput'] = ["",""];
                                        if(obj3.subPhase != null){
                                            if(obj3.subPhase.length > 0){
                                                level3_totalObj['phase'] = "Total "+ obj3.phase;
                                                level3_totalObj['lineInput'] = ["",""];
                                                level3_ob['totalPhase'] = [];
                                                level3_ob.totalPhase.push(level3_totalObj);
                                            }
                                        }
										level3_ob['subPhase'] = [];
										
										obj1.subPhase[day_index2].subPhase.splice(day_index3 + 1,0,level3_ob);
										sel_index2 = day_index3;
                                        level3_ob = {};
										level3_totalObj = {};
                                        level3_totalArray = [];
									}
								});
								
							});	
						}
						
					});
					//$('.z-option-days1').remove();
					$('.z-days-datum').remove();
					z_showSubPhaseday_level4(sel_index2 + 2);
					var m = $('#z-level4-days')[0];
					m.selectedIndex = sel_index2 + 2;
					check_for_save = false;
					z_showDaysTable_level3($('#z-level4-days')[0]);
					z_insert_elementObj2 = {};
				}
				
			
			}
			for(var j=0;j<z_selected_days_data.length;j++){
				for(var i = 1 ; i <= wellDays_data_level4.length;i++){
				var z_baselevel = $('.z-level1-day'+ i);
				var z_days_level = $('.z-days-level'+ i);
				if(z_baselevel.length > 0 && z_days_level.length > 0){
						if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
							$(z_days_level).removeClass('d-none');
							$(z_days_level).addClass('z-days-active');
							break;
							}
				}
				}
			}
		}
		
	
	}
	//$('.z-days-active').removeClass('z-days-active');
	
	$('#z-addcustomItem-modal').modal('hide');
	$('#z-addcustomItem-modal2').modal('hide');
	$('#z-addcustomItem-modal3').modal('hide');
	$('#z-addcustomItem-modal4').modal('hide');
	z_serialNumberAdjust();
	cumulativeAdjustment();
	granttotal_calculation();
	
});
	}
	else if(z_seletedphase == "4"){
		$('#z-addcustomItem-modal4').remove();
		var z_customday2 = $(el).parent().text();
		var baseDayEl;
		if(!(z_customday2.includes("Add Line"))){
			baseDayEl = $(el).parent();
		}
		
	    $('body').append('<div id="z-addcustomItem-modal4" class="modal" tabindex="-1" role="dialog">' +
	        '<div class="modal-dialog" role="document">' +
	        '<div class="modal-content">' +
	        '<div class="modal-header">' +
	        '<h5 class="modal-title">Add Line Items For Level2</h5>' +
	        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
	        '<span aria-hidden="true">&times;</span>' +
	        '</button>' +
	        '</div>' +
	        '<div class="modal-body">' +
	        '<h5 class="d-none">Select Lineitems to add after</h5>'+
	        '<div id="notSelectedlinePhase_listitem4" class="z-viewheight-lineitem"></div>' +
	        '<div id="customlinePhase4-insertWrap">' +
	        '<input id="customlinePhaseitem-input4" class="z-m-inputS1" placeholder="phase Name">' +
	        '<button id="customlinePhaseitem-addBtn4" type="button" class="btn btn-primary" style="margin-left: 15px;">Add</button>' +
	        '</div>' +
	        '<p class="d-none">Select a Line Items to insert</p>' +
	        '</div>' +
	        '<div class="modal-footer">' +
	        '<button id="z-addlinePhaseitem-btn4" type="button" class="btn btn-primary">Submit</button>' +
	        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
	        '</div>' +
	        '</div>' +
	        '</div>' +
	        '</div>');
	    //$('#z-addlinePhase-btn').attr('selected-level',z_l_levels);
	    $('#z-addcustomItem-modal4').modal('show');
	    $('.z-custom-lineitem4').remove();
		
		
$('#customlinePhaseitem-addBtn4').on('click', function () {
	phase_name = $('#customlinePhaseitem-input4').val();
	$('#notSelectedlinePhase_listitem4').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
			'<div class="z-phaseName-select-level4">'+phase_name+'</div></div>');
	$('#customlinePhaseitem-input4').val("");
	
	
	$('.z-custom-lineitem4').remove();
       });
$('#z-addlinePhaseitem-btn4').on('click', function (ele) {

	var z_selectPhase2 = $('.z-phaseName-select-level4');
	var sel_text2;
	var z_baseDay;
	if(z_customday2.includes("Add Line")){
		var x = $('.z-level2-test')[0];
		//sel_text2 = x.innerText;
		if(x.innerText.includes("+")){
			sel_text2 = x.innerText.substr(0,x.innerText.length-4);
		}
		else{
			sel_text2 = x.innerText;
		}
		z_baseDay = x.getAttribute('baselineItem');
	}
	else{
		sel_text2 = z_customday2.substr(0,z_customday2.length-2);
		z_baseDay = $(baseDayEl).attr('baselineItem');
	}
	
	var sel_index2 = 0; 
	var z_insert_elementObj2 = {};
	var z_data2;
	z_savewellConfig();
	
	if(z_level == "Level4"){
		var level4_ob = {};
		for(var j = 0;j<z_selectPhase2.length;j++){
			if($(z_selectPhase2[j]).prev()[0].checked == true){
				wellDays_data_level4.forEach(function(obj1,day_index){
					if(obj1.phase == z_baseDay){
						obj1.subPhase.forEach(function(obj2,day_index2){
							obj2.subPhase.forEach(function(obj3,day_index3){
								if(obj3.subPhase != null){
								obj3.subPhase.forEach(function(obj4,day_index4){
								if(obj4.phase == sel_text2.trim()){
									level4_ob['phase'] = z_selectPhase2[j].innerText;
									level4_ob['lineInput'] = ["",obj4.lineInput[1]];
									obj1.subPhase[day_index2].subPhase[day_index3].subPhase.splice(day_index4 + 1,0,level4_ob);
									sel_index2 = day_index4;
									level3_ob = {};
								}
							});//
							}
							});
							
						});	
					}
				});
				//$('.z-option-days1').remove();
				$('.z-days-datum').remove();
				z_showSubPhaseday_level4(sel_index2 + 2);
				var m = $('#z-level4-days')[0];
				m.selectedIndex = sel_index2 + 2;
				check_for_save = false;
				z_showDaysTable_level3($('#z-level4-days')[0]);
				z_insert_elementObj2 = {};
			}
			
		
		}
		for(var j=0;j<z_selected_days_data.length;j++){
			for(var i = 1 ; i <= wellDays_data_level4.length;i++){
			var z_baselevel = $('.z-level1-day'+ i);
			var z_days_level = $('.z-days-level'+ i);
			if(z_baselevel.length > 0 && z_days_level.length > 0){
					if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
						$(z_days_level).removeClass('d-none');
						$(z_days_level).addClass('z-days-active');
						break;
						}
			}
			}
		}
	}
	
	//$('.z-days-active').removeClass('z-days-active');
	
	$('#z-addcustomItem-modal').modal('hide');
	$('#z-addcustomItem-modal2').modal('hide');
	$('#z-addcustomItem-modal3').modal('hide');
	$('#z-addcustomItem-modal4').modal('hide');
	z_serialNumberAdjust();
	cumulativeAdjustment();
	granttotal_calculation();
});
	
	}
	
}
var z_Element_toAdd = [];
function z_deleteLineItems(el){
	var z_seletedphase = $(el).attr('level');
	var z_delete_Element = "";
	if(z_seletedphase == "1"){
		$('#z-deletecustomItem-modal').remove();
		var x = $(el).parent().parent().parent()[0];
		var z_selected_days_index = Number(x.classList[2].split("z-indexDay")[1]);
		var cumulativeDay = $('.z-cumulative'+z_selected_days_index);
		var dayVal = $('.z-days'+z_selected_days_index);
		var totalVal = $('.z-totalEstimate-days'+z_selected_days_index);
		for(var val1=0;val1 < cumulativeDay.length;val1++){
			cumulativeDay[val1].innerText = "";
		}
		for(var val2=0;val2 < dayVal.length;val2++){
			dayVal[val2].value = "";
		}
		for(var val3=0;val3 < totalVal.length;val3++){
			totalVal[val3].innerText = "";
		}
		 if(z_Selected_DayArray.length > 0 || typeof(el) == "string" || el.innerText.includes("x")){
			 confirmation_Popup("Are you sure want to Delete the Selected Line Items", function () {
				 if(el.innerText.includes("x")){
					 var del_item = $(el).parent().text();
					 var z_del_item	= del_item.substr(0,del_item.length-2).trim();
					 z_savewellConfig();
					 if(z_level == "Level2"){
						 wellDays_data.forEach(function(obj1,m){
							 if(z_del_item == obj1.phase.trim()){
								 z_delete_Element = obj1.phase;
								 console.log("error"+obj1.phase);
								 //z_showDaysTable(z_delete_Element,"1");
								 
								 //wellDays_data.splice(m,1);
								 var valobj = {};
								 valobj.isSubmitted = false;
								 valobj.phase = obj1.phase;
								 obj1.subPhase.forEach(function(val1,index1){
									val1.lineInput = ["",""]; 
								 });
								 obj1.totalPhase.forEach(function(val2,index2){
									if(obj1.totalPhase.length > 1){
										val2.lineInput = ["",""];	
									}
									else{
										val2.lineInput = [""];
									}
									  
									 });
								 valobj.subPhase = obj1.subPhase;
								 valobj.totalPhase = obj1.totalPhase;
								 wellDays_data[m] = valobj;
								 var grant_ind = z_grant_totalKey.findIndex(function(val){
									 return val.phase == obj1.phase;
								 });
								 if(grant_ind != -1){
									 z_grant_totalKey.splice(grant_ind,1);
								 }
								 var grant_sel = z_selected_days_data.findIndex(function(val){
									 return val == obj1.phase;
								 });
								 if(grant_sel != -1){
									 z_selected_days_data.splice(grant_sel,1);
								 }
								 valobj = {};
								 
								 //$('.z-option-days1').remove();
									//$('.z-days-datum').remove();
									//z_showSubPhaseday(m);
							 }
						 });
					 }
					 else if(z_level == "Level3"){
						 wellDays_data_level3.forEach(function(obj1,m){
							 if(z_del_item == obj1.phase.trim()){
								 z_delete_Element = obj1.phase;
								 console.log("error"+obj1.phase);
								 //z_showDaysTable(z_delete_Element,"1");
								 
								 //wellDays_data.splice(m,1);
								 var valobj = {};
								 valobj.isSubmitted = false;
								 valobj.phase = obj1.phase;
								 obj1.subPhase.forEach(function(val1,index1){
									val1.lineInput = ["",""]; 
								 });
								 obj1.totalPhase.forEach(function(val2,index2){
									if(obj1.totalPhase.length > 1){
										val2.lineInput = ["",""];	
									}
									else{
										val2.lineInput = [""];
									}
									  
									 });
								 valobj.subPhase = obj1.subPhase;
								 valobj.totalPhase = obj1.totalPhase;
								 wellDays_data_level3[m] = valobj;
								 var grant_ind = z_grant_totalKey.findIndex(function(val){
									 return val.phase == obj1.phase;
								 });
								 if(grant_ind != -1){
									 z_grant_totalKey.splice(grant_ind,1);
								 }
								 var grant_sel = z_selected_days_data.findIndex(function(val){
									 return val == obj1.phase;
								 });
								 if(grant_sel != -1){
									 z_selected_days_data.splice(grant_sel,1);
								 }
								 valobj = {};
							 }
						 });
					 }
					 else if(z_level == "Level4"){
						 wellDays_data_level4.forEach(function(obj1,m){
							 if(z_del_item == obj1.phase.trim()){
								 z_delete_Element = obj1.phase;
								 console.log("error"+obj1.phase);
								 //z_showDaysTable(z_delete_Element,"1");
								 
								 //wellDays_data.splice(m,1);
								 var valobj = {};
								 valobj = obj1;
								 valobj.isSubmitted = false;
								 valobj.phase = obj1.phase;
//								 obj1.subPhase.forEach(function(val1,index1){
//									val1.lineInput = ["",""]; 
//								 });
//								 obj1.totalPhase.forEach(function(val2,index2){
//									if(obj1.totalPhase.length > 1){
//										val2.lineInput = ["",""];	
//									}
//									else{
//										val2.lineInput = [""];
//									}
//									  
//									 });
//								 valobj.subPhase = obj1.subPhase;
//								 valobj.totalPhase = obj1.totalPhase;
								 wellDays_data_level4[m] = valobj;
								 var grant_ind = z_grant_totalKey.findIndex(function(val){
									 return val.phase == obj1.phase;
								 });
								 if(grant_ind != -1){
									 z_grant_totalKey.splice(grant_ind,1);
								 }
								 var grant_sel = z_selected_days_data.findIndex(function(val){
									 return val == obj1.phase;
								 });
								 if(grant_sel != -1){
									 z_selected_days_data.splice(grant_sel,1);
								 }
								 valobj = {};
							 }
						 });
					 
					 }
					
				 }
				 else{
					
					 z_savewellConfig();
					 if(z_level == "Level2"){

						 for(var delete_index = 0;delete_index < z_Selected_DayArray.length;delete_index++){
						 wellDays_data.forEach(function(obj1,m){
							 if(z_Selected_DayArray[delete_index].trim() == obj1.phase.trim()){
								 z_delete_Element = obj1.phase;
								 console.log("error"+obj1.phase);
								 //z_showDaysTable(z_delete_Element,"1");
								 //wellDays_data.splice(m,1);
								 var valobj = {};
								 valobj.isSubmitted = false;
								 valobj.phase = obj1.phase;
								 valobj.subPhase = obj1.subPhase;
								 valobj.totalPhase = obj1.totalPhase;
								 wellDays_data[m] = valobj;
								 var grant_ind = z_grant_totalKey.findIndex(function(val){
									 return val.phase == obj1.phase;
								 });
								 if(grant_ind != -1){
									 z_grant_totalKey.splice(grant_ind,1);
								 }
								 var grant_sel = z_selected_days_data.findIndex(function(val){
									 return val == obj1.phase;
								 });
								 if(grant_sel != -1){
									 z_selected_days_data.splice(grant_sel,1);
								 }
								 valobj = {};
								 var z_activedays = $('.z-days-active.z-baseDay');
								 var val_day;
								 z_selected_days_data = [];
								 for(var i = 0; i < z_activedays.length;i++){
									 val_day = $(z_activedays[i]).children().children()[1].innerText;
									 if(val_day.includes("+")){
										 val_day = val_day.substr(0,val_day.length-4); 
									 }
									 if(!(z_selected_days_data.includes(val_day))){
											z_selected_days_data.push(val_day);
										}
									}
								 //$('.z-option-days1').remove();
									//$('.z-days-datum').remove();
									//z_showSubPhaseday(m);
								 
							 }
						 });
						 }
					 }
					 else  if(z_level == "Level3"){
						 for(var delete_index = 0;delete_index < z_Selected_DayArray.length;delete_index++){
							 wellDays_data_level3.forEach(function(obj1,m){
								 if(z_Selected_DayArray[delete_index].trim() == obj1.phase.trim()){
									 z_delete_Element = obj1.phase;
									 console.log("error"+obj1.phase);
									 //z_showDaysTable(z_delete_Element,"1");
									 //wellDays_data.splice(m,1);
									 var valobj = {};
									 valobj.isSubmitted = false;
									 valobj.phase = obj1.phase;
									 valobj.subPhase = obj1.subPhase;
									 valobj.totalPhase = obj1.totalPhase;
									 wellDays_data_level3[m] = valobj;
									 var grant_ind = z_grant_totalKey.findIndex(function(val){
										 return val.phase == obj1.phase;
									 });
									 if(grant_ind != -1){
										 z_grant_totalKey.splice(grant_ind,1);
									 }
									 var grant_sel = z_selected_days_data.findIndex(function(val){
										 return val == obj1.phase;
									 });
									 if(grant_sel != -1){
										 z_selected_days_data.splice(grant_sel,1);
									 }
									 valobj = {};
									 var z_activedays = $('.z-days-active.z-baseDay');
									 var val_day;
									 z_selected_days_data = [];
									 for(var i = 0; i < z_activedays.length;i++){
										 val_day = $(z_activedays[i]).children().children()[1].innerText;
										 if(val_day.includes("+")){
											 val_day = val_day.substr(0,val_day.length-4); 
										 }
										 if(!(z_selected_days_data.includes(val_day))){
												z_selected_days_data.push(val_day);
											}
										}
									 //$('.z-option-days1').remove();
										//$('.z-days-datum').remove();
										//z_showSubPhaseday(m);
									 
								 }
							 });
						 }  
					 }
					 else  if(z_level == "Level4"){

						 for(var delete_index = 0;delete_index < z_Selected_DayArray.length;delete_index++){
							 wellDays_data_level4.forEach(function(obj1,m){
								 if(z_Selected_DayArray[delete_index].trim() == obj1.phase.trim()){
									 z_delete_Element = obj1.phase;
									 console.log("error"+obj1.phase);
									 //z_showDaysTable(z_delete_Element,"1");
									 //wellDays_data.splice(m,1);
									 var valobj = {};
									 valobj.isSubmitted = false;
									 valobj.phase = obj1.phase;
									 valobj.subPhase = obj1.subPhase;
									 valobj.totalPhase = obj1.totalPhase;
									 wellDays_data_level4[m] = valobj;
									 var grant_ind = z_grant_totalKey.findIndex(function(val){
										 return val.phase == obj1.phase;
									 });
									 if(grant_ind != -1){
										 z_grant_totalKey.splice(grant_ind,1);
									 }
									 var grant_sel = z_selected_days_data.findIndex(function(val){
										 return val == obj1.phase;
									 });
									 if(grant_sel != -1){
										 z_selected_days_data.splice(grant_sel,1);
									 }
									 valobj = {};
									 var z_activedays = $('.z-days-active.z-baseDay');
									 var val_day;
									 z_selected_days_data = [];
									 for(var i = 0; i < z_activedays.length;i++){
										 val_day = $(z_activedays[i]).children().children()[1].innerText;
										 if(val_day.includes("+")){
											 val_day = val_day.substr(0,val_day.length-4); 
										 }
										 if(!(z_selected_days_data.includes(val_day))){
												z_selected_days_data.push(val_day);
											}
										}
									 //$('.z-option-days1').remove();
										//$('.z-days-datum').remove();
										//z_showSubPhaseday(m);
									 
								 }
							 });
						 }  
					 
					 }
					
				 }
					//$('.z-option-days1').remove();clearConfirmationPopup(); 
				 if(z_level == "Level2"){
					 var z = $("#z-level1-days")[0].options;
						for(var opt=1;opt<z.length;opt++){
							if(!(option_array.includes(z[opt].value))){
								option_array.push(z[opt].value);
							}
							
						}
						
						wellDays_data.forEach(function(obj,i){
							if(!(option_array.includes(obj.phase))){
								var phase1days = document.createElement('option');
								phase1days.setAttribute('value',obj.phase);
								phase1days.classList.add('z-option-days1');
								phase1days.innerHTML = obj.phase;
								var z_elm = option_array.indexOf(wellDays_data[i-1].phase);
								z.add(phase1days,z_elm+1);
								clearConfirmationPopup(); 
								
							}
						});
						 z_selected_days_data = [];
						 var z_activedays = $('.z-days-active.z-baseDay');
						 var level1_val;
						 var level1index;
						 for(var i = 0; i < z_activedays.length;i++){
							 level1_val = $(z_activedays[i]).children().children()[1].innerText;
							 if(level1_val.includes("+")){
								 level1_val = level1_val.substr(0,level1_val.length-4);
							 }
							 if(!(z_selected_days_data.includes(level1_val))){
									z_selected_days_data.push(level1_val);
								}
							 level1index = wellDays_data.findIndex(function(val){
								 return val.phase == level1_val;
							 });
							 var active_index = z_activedays [i].classList[2].split("z-indexDay")[1];
							 var active_index_num = Number(active_index);
							 var z_baselevel = $('.z-level1-day'+ active_index_num);
								var z_days_level = $('.z-days-level'+ active_index_num);
							 if(wellDays_data[level1index].isSubmitted == false){
								 $(z_days_level).removeClass('z-days-active');
									$(z_days_level).addClass('d-none');
									var grant_sel = z_selected_days_data.findIndex(function(val){
										 return val == wellDays_data[level1index].phase;
									 });
									 if(grant_sel != -1){
										 z_selected_days_data.splice(grant_sel,1);
									 }
							 }
							
							}
				 }
				 else if(z_level == "Level3"){
					 var z = $("#z-level3-days")[0].options;
						for(var opt=1;opt<z.length;opt++){
							if(!(option_array.includes(z[opt].value))){
								option_array.push(z[opt].value);
							}
							
						}
						
						wellDays_data_level3.forEach(function(obj,i){
							if(!(option_array.includes(obj.phase))){
								var phase1days = document.createElement('option');
								phase1days.setAttribute('value',obj.phase);
								phase1days.classList.add('z-option-days1');
								phase1days.innerHTML = obj.phase;
								var z_elm = option_array.indexOf(wellDays_data_level3[i-1].phase);
								z.add(phase1days,z_elm+1);
								clearConfirmationPopup(); 
								
							}
						});
					 z_selected_days_data = [];
					 var z_activedays = $('.z-days-active.z-baseDay');
					 var level1_val;
					 var level1index;
					 for(var i = 0; i < z_activedays.length;i++){
						 level1_val = $(z_activedays[i]).children().children()[1].innerText;
						 if(level1_val.includes("+")){
							 level1_val = level1_val.substr(0,level1_val.length-4);
						 }
						 if(!(z_selected_days_data.includes(level1_val))){
								z_selected_days_data.push(level1_val);
							}
						 level1index = wellDays_data_level3.findIndex(function(val){
							 return val.phase == level1_val;
						 });
						 var active_index = z_activedays [i].classList[2].split("z-indexDay")[1];
						 var active_index_num = Number(active_index);
						 var z_baselevel = $('.z-level1-day'+ active_index_num);
							var z_days_level = $('.z-days-level'+ active_index_num);
						 if(wellDays_data_level3[level1index].isSubmitted == false){
							 $(z_days_level).removeClass('z-days-active');
								$(z_days_level).addClass('d-none');
								var grant_sel = z_selected_days_data.findIndex(function(val){
									 return val == wellDays_data_level3[level1index].phase;
								 });
								 if(grant_sel != -1){
									 z_selected_days_data.splice(grant_sel,1);
								 }
						 }
						
						}
				 }
				 else if(z_level == "Level4"){

					 var z = $("#z-level4-days")[0].options;
						for(var opt=1;opt<z.length;opt++){
							if(!(option_array.includes(z[opt].value))){
								option_array.push(z[opt].value);
							}
							
						}
						
						wellDays_data_level4.forEach(function(obj,i){
							if(!(option_array.includes(obj.phase))){
								var phase1days = document.createElement('option');
								phase1days.setAttribute('value',obj.phase);
								phase1days.classList.add('z-option-days1');
								phase1days.innerHTML = obj.phase;
								var z_elm = option_array.indexOf(wellDays_data_level3[i-1].phase);
								z.add(phase1days,z_elm+1);
								clearConfirmationPopup(); 
								
							}
						});
					 z_selected_days_data = [];
					 var z_activedays = $('.z-days-active.z-baseDay');
					 var level1_val;
					 var level1index;
					 for(var i = 0; i < z_activedays.length;i++){
						 level1_val = $(z_activedays[i]).children().children()[1].innerText;
						 if(level1_val.includes("+")){
							 level1_val = level1_val.substr(0,level1_val.length-4);
						 }
						 if(!(z_selected_days_data.includes(level1_val))){
								z_selected_days_data.push(level1_val);
							}
						 level1index = wellDays_data_level4.findIndex(function(val){
							 return val.phase == level1_val;
						 });
						 var active_index = z_activedays [i].classList[2].split("z-indexDay")[1];
						 var active_index_num = Number(active_index);
						 var z_baselevel = $('.z-level1-day'+ active_index_num);
							var z_days_level = $('.z-days-level'+ active_index_num);
						 if(wellDays_data_level4[level1index].isSubmitted == false){
							 $(z_days_level).removeClass('z-days-active');
								$(z_days_level).addClass('d-none');
								var grant_sel = z_selected_days_data.findIndex(function(val){
									 return val == wellDays_data_level4[level1index].phase;
								 });
								 if(grant_sel != -1){
									 z_selected_days_data.splice(grant_sel,1);
								 }
						 }
						
						}
				 
				 }
					
//					for(var data = 0;data < z_Element_toAdd.length;data++){
//						var z_customItem = document.createElement('option');
//				    	z_customItem.setAttribute('value',z_Element_toAdd[data].phase);
//				    	z_customItem.innerHTML = z_Element_toAdd[data].phase;
//				    	z_customItem.classList.add('z-option-days1');
//				    	$('#z-level1-days').append(z_customItem);
//					}
					//$('.z-days-active').removeClass('z-days-active');
				
					
					z_serialNumberAdjust();
					clearConfirmationPopup(); 
					cumulativeAdjustment();
					granttotal_calculation();
					//z_showSubPhaseday();
					
		 });
		 }
		 else{
			 alertPopup('alert','Select Line Items to delete for Level1'); 
		 }
}
	else if(z_seletedphase == "2"){
		$('#z-deletecustomItem-modal2').remove();
		if(z_Selected_DayArray.length > 0 || el.innerText.includes("x")){
			 confirmation_Popup("Are you sure want to Delete the Selected Line Items", function () {
				 if(el.innerText.includes("x")){
					 var del_item2 = $(el).parent().text();
					 var z_del_item2	= del_item2.substr(0,del_item2.length-2).trim();
					 z_savewellConfig();
					 if(z_level == "Level2"){
						 wellDays_data.forEach(function(obj1,m){
							 obj1.subPhase.forEach(function(obj3,l){
								 console.log("error"+obj3.phase);
								 if(z_del_item2 == obj3.phase){
									 z_delete_Element = obj3.phase;
									 
									 //z_showDaysTable(z_delete_Element,"2");
									 obj1.subPhase.splice(l,1);
									 var z_activedays = $('.z-days-active.z-baseDay');
									 var z_base;
									 for(var i = 0; i < z_activedays.length;i++){
										 z_base = $(z_activedays[i]).children().children()[1].innerText;
										 if(z_base.includes("+")){
											 z_base = z_base.substr(0,z_base.length-4);
										 }
										
										 if(!(z_selected_days_data.includes(z_base))){
												z_selected_days_data.push(z_base);
											}
										}
									 //$('.z-option-days1').remove();
										$('.z-days-datum').remove();
										z_showSubPhaseday(l);
									 
								 }
							 });
						 });
					 }
					 else if(z_level == "Level3"){
						 wellDays_data_level3.forEach(function(obj1,m){
							 obj1.subPhase.forEach(function(obj3,l){
								 console.log("error"+obj3.phase);
								 if(z_del_item2 == obj3.phase){
									 z_delete_Element = obj3.phase;
									 
									 //z_showDaysTable(z_delete_Element,"2");
									 obj1.subPhase.splice(l,1);
									 var z_activedays = $('.z-days-active.z-baseDay');
									 var z_base;
									 for(var i = 0; i < z_activedays.length;i++){
										 z_base = $(z_activedays[i]).children().children()[1].innerText;
										 if(z_base.includes("+")){
											 z_base = z_base.substr(0,z_base.length-4);
										 }
										
										 if(!(z_selected_days_data.includes(z_base))){
												z_selected_days_data.push(z_base);
											}
										}
									 //$('.z-option-days1').remove();
										$('.z-days-datum').remove();
										z_showSubPhaseday_level3(l);
									 
								 }
							 });
						 
						 });
					 }
					 else if(z_level == "Level4"){
						 wellDays_data_level4.forEach(function(obj1,m){
							 if(obj1.subPhase != null){
							 obj1.subPhase.forEach(function(obj3,l){
								 console.log("error"+obj3.phase);
								 if(z_del_item2 == obj3.phase){
									 z_delete_Element = obj3.phase;
									 
									 //z_showDaysTable(z_delete_Element,"2");
									 obj1.subPhase.splice(l,1);
									 var z_activedays = $('.z-days-active.z-baseDay');
									 var z_base;
									 for(var i = 0; i < z_activedays.length;i++){
										 z_base = $(z_activedays[i]).children().children()[1].innerText;
										 if(z_base.includes("+")){
											 z_base = z_base.substr(0,z_base.length-4);
										 }
										
										 if(!(z_selected_days_data.includes(z_base))){
												z_selected_days_data.push(z_base);
											}
										}
									 //$('.z-option-days1').remove();
										$('.z-days-datum').remove();
										z_showSubPhaseday_level4(l);
									 
								 }
							 });
							 }
						 
						 });
					 
					 }
				 }
				 else{
					 z_savewellConfig();
					 if(z_level == "Level2"){
						 for(var delete_index = 0;delete_index < z_Selected_DayArray.length;delete_index++){

							 wellDays_data.forEach(function(obj1,m){
								 obj1.subPhase.forEach(function(obj2,n){
									 if(z_Selected_DayArray[delete_index] == obj2.phase){
										 z_delete_Element = obj2.phase;
										 console.log("error"+obj2.phase);
										 //z_showDaysTable(z_delete_Element,"2");
										 obj1.subPhase.splice(n,1);
										 var z_activedays = $('.z-days-active.z-baseDay');
										 var z_base1;
										 for(var i = 0; i < z_activedays.length;i++){
											 z_base1 = 	$(z_activedays[i]).children().children()[1].innerText;
											 if(z_base1.includes("+")){
												 z_base1 = z_base1.substr(0,z_base1.length-4);
											 }
											 if(!(z_selected_days_data.includes(z_base1))){
													z_selected_days_data.push(z_base1);
												}
											}
										 //$('.z-option-days1').remove();
											$('.z-days-datum').remove();
											z_showSubPhaseday(n);
										 
									 }
								 });
							
							 });
						 
						 }
					 }
					 else if(z_level == "Level3"){
						 for(var delete_index = 0;delete_index < z_Selected_DayArray.length;delete_index++){

							 wellDays_data_level3.forEach(function(obj1,m){
								 obj1.subPhase.forEach(function(obj2,n){
									 if(z_Selected_DayArray[delete_index] == obj2.phase){
										 z_delete_Element = obj2.phase;
										 console.log("error"+obj2.phase);
										 //z_showDaysTable(z_delete_Element,"2");
										 obj1.subPhase.splice(n,1);
										 var z_activedays = $('.z-days-active.z-baseDay');
										 var z_base1;
										 for(var i = 0; i < z_activedays.length;i++){
											 z_base1 = 	$(z_activedays[i]).children().children()[1].innerText;
											 if(z_base1.includes("+")){
												 z_base1 = z_base1.substr(0,z_base1.length-4);
											 }
											 if(!(z_selected_days_data.includes(z_base1))){
													z_selected_days_data.push(z_base1);
												}
											}
										 //$('.z-option-days1').remove();
											$('.z-days-datum').remove();
											wellDays_data_level3(n);
										 
									 }
								 });
							
							 });
						 
						 }
					 }
					 else if(z_level == "Level4"){

						 for(var delete_index = 0;delete_index < z_Selected_DayArray.length;delete_index++){

							 wellDays_data_level4.forEach(function(obj1,m){
								 if(obj1.subPhase != null){
								 obj1.subPhase.forEach(function(obj2,n){
									 if(z_Selected_DayArray[delete_index] == obj2.phase){
										 z_delete_Element = obj2.phase;
										 console.log("error"+obj2.phase);
										 //z_showDaysTable(z_delete_Element,"2");
										 obj1.subPhase.splice(n,1);
										 var z_activedays = $('.z-days-active.z-baseDay');
										 var z_base1;
										 for(var i = 0; i < z_activedays.length;i++){
											 z_base1 = 	$(z_activedays[i]).children().children()[1].innerText;
											 if(z_base1.includes("+")){
												 z_base1 = z_base1.substr(0,z_base1.length-4);
											 }
											 if(!(z_selected_days_data.includes(z_base1))){
													z_selected_days_data.push(z_base1);
												}
											}
										 //$('.z-option-days1').remove();
											$('.z-days-datum').remove();
											wellDays_data_level(n);
										 
									 }
								 });
							 }
							
							 });
						 
						 }
					 
					 }
					 
				 }
					//$('.z-option-days1').remove();
				 if(z_level == "Level2"){
					 var x = $("#z-level1-days")[0].options;
						
						for(var opt=1;opt<x.length;opt++){
							if(!(option_array.includes(x[opt].value))){
								option_array.push(x[opt].value);
							}
							
						}
						
						wellDays_data.forEach(function(obj,i){
							if(!(option_array.includes(obj.phase))){
								var phase1days = document.createElement('option');
								phase1days.setAttribute('value',obj.phase);
								phase1days.classList.add('z-option-days1');
								phase1days.innerHTML = obj.phase;
								var z_element = option_array.indexOf(wellDays_data[i-1].phase);
								x.add(phase1days,z_element+1);
								clearConfirmationPopup(); 
							}
						});
						//$('.z-days-active').removeClass('z-days-active');
						for(var j=0;j<z_selected_days_data.length;j++){
						
							for(var i = 1 ; i <= wellDays_data.length;i++){
							var z_baselevel = $('.z-level1-day'+ i);
							var z_days_level = $('.z-days-level'+ i);
							if(z_baselevel.length > 0 && z_days_level.length > 0){
									if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
										$(z_days_level).removeClass('d-none');
										$(z_days_level).addClass('z-days-active');
										break;
										}
							}
							}
						}
				 }
				 else if(z_level == "Level3"){
					 var x = $("#z-level3-days")[0].options;
						
						for(var opt=1;opt<x.length;opt++){
							if(!(option_array.includes(x[opt].value))){
								option_array.push(x[opt].value);
							}
							
						}
						
						wellDays_data_level3.forEach(function(obj,i){
							if(!(option_array.includes(obj.phase))){
								var phase1days = document.createElement('option');
								phase1days.setAttribute('value',obj.phase);
								phase1days.classList.add('z-option-days1');
								phase1days.innerHTML = obj.phase;
								var z_element = option_array.indexOf(wellDays_data_level3[i-1].phase);
								x.add(phase1days,z_element+1);
								clearConfirmationPopup(); 
							}
						});
						//$('.z-days-active').removeClass('z-days-active');
						for(var j=0;j<z_selected_days_data.length;j++){
						
							for(var i = 1 ; i <= wellDays_data_level3.length;i++){
							var z_baselevel = $('.z-level1-day'+ i);
							var z_days_level = $('.z-days-level'+ i);
							if(z_baselevel.length > 0 && z_days_level.length > 0){
									if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
										$(z_days_level).removeClass('d-none');
										$(z_days_level).addClass('z-days-active');
										break;
										}
							}
							}
						}
				 }
				 else if(z_level == "Level4"){

					 var x = $("#z-level4-days")[0].options;
						
						for(var opt=1;opt<x.length;opt++){
							if(!(option_array.includes(x[opt].value))){
								option_array.push(x[opt].value);
							}
							
						}
						
						wellDays_data_level4.forEach(function(obj,i){
							if(!(option_array.includes(obj.phase))){
								var phase1days = document.createElement('option');
								phase1days.setAttribute('value',obj.phase);
								phase1days.classList.add('z-option-days1');
								phase1days.innerHTML = obj.phase;
								var z_element = option_array.indexOf(wellDays_data_level4[i-1].phase);
								x.add(phase1days,z_element+1);
								clearConfirmationPopup(); 
							}
						});
						//$('.z-days-active').removeClass('z-days-active');
						for(var j=0;j<z_selected_days_data.length;j++){
						
							for(var i = 1 ; i <= wellDays_data_level4.length;i++){
							var z_baselevel = $('.z-level1-day'+ i);
							var z_days_level = $('.z-days-level'+ i);
							if(z_baselevel.length > 0 && z_days_level.length > 0){
									if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
										$(z_days_level).removeClass('d-none');
										$(z_days_level).addClass('z-days-active');
										break;
										}
							}
							}
						}
				 
				 }
			
					cumulativeAdjustment();
					granttotal_calculation();
					clearConfirmationPopup();
		 });
		 }
		else{
			alertPopup('alert','Select Line Items to delete for Level 2');
		}
		}
	else if(z_seletedphase == "3"){

		$('#z-deletecustomItem-modal2').remove();
		if(z_Selected_DayArray.length > 0 || el.innerText.includes("x")){
			 confirmation_Popup("Are you sure want to Delete the Selected Line Items", function () {
				 if(el.innerText.includes("x")){
					 var del_item2 = $(el).parent().text();
					 var z_del_item2	= del_item2.substr(0,del_item2.length-2).trim();
					 z_savewellConfig();
					 
					 if(z_level == "Level3"){
						 wellDays_data_level3.forEach(function(obj1,m){
							 obj1.subPhase.forEach(function(obj3,l){
								 console.log("error"+obj3.phase);
								 obj3.subPhase.forEach(function(obj4,m3){
									 if(z_del_item2 == obj4.phase){
										 z_delete_Element = obj4.phase;
										 
										 //z_showDaysTable(z_delete_Element,"2");
										 obj3.subPhase.splice(l,1);
										 var z_activedays = $('.z-days-active.z-baseDay');
										 var z_base;
										 for(var i = 0; i < z_activedays.length;i++){
											 z_base = $(z_activedays[i]).children().children()[1].innerText;
											 if(z_base.includes("+")){
												 z_base = z_base.substr(0,z_base.length-4);
											 }
											
											 if(!(z_selected_days_data.includes(z_base))){
													z_selected_days_data.push(z_base);
												}
											}
										 //$('.z-option-days1').remove();
											$('.z-days-datum').remove();
											z_showSubPhaseday_level3(l);
										 
									 }
								 });
								
							 });
						 
						 });
					 }
					 else if(z_level == "Level4"){
						 wellDays_data_level4.forEach(function(obj1,m){
							 if(obj1.subPhase != null){
							 obj1.subPhase.forEach(function(obj3,l){
								 console.log("error"+obj3.phase);
								 if(obj3.subPhase != null){
								 obj3.subPhase.forEach(function(obj4,m3){
									 if(z_del_item2 == obj4.phase){
										 z_delete_Element = obj4.phase;
										 
										 //z_showDaysTable(z_delete_Element,"2");
										 obj3.subPhase.splice(m3,1);
										 var z_activedays = $('.z-days-active.z-baseDay');
										 var z_base;
										 for(var i = 0; i < z_activedays.length;i++){
											 z_base = $(z_activedays[i]).children().children()[1].innerText;
											 if(z_base.includes("+")){
												 z_base = z_base.substr(0,z_base.length-4);
											 }
											
											 if(!(z_selected_days_data.includes(z_base))){
													z_selected_days_data.push(z_base);
												}
											}
										 //$('.z-option-days1').remove();
											$('.z-days-datum').remove();
											z_showSubPhaseday_level4(m);
										 
									 }
								 });
							 }
							 });
						 }
						 
						 });
					 
					 }
				 }
				 else{
					 z_savewellConfig();
					 
					 if(z_level == "Level3"){
						 for(var delete_index = 0;delete_index < z_Selected_DayArray.length;delete_index++){

							 wellDays_data_level3.forEach(function(obj1,m){
								 obj1.subPhase.forEach(function(obj2,n){
									 obj2.subPhase.forEach(function(obj3,n1){
										 if(z_Selected_DayArray[delete_index] == obj3.phase){
											 z_delete_Element = obj3.phase;
											 //console.log("error"+obj2.phase);
											 //z_showDaysTable(z_delete_Element,"2");
											 obj2.subPhase.splice(n1,1);
											 var z_activedays = $('.z-days-active.z-baseDay');
											 var z_base1;
											 for(var i = 0; i < z_activedays.length;i++){
												 z_base1 = 	$(z_activedays[i]).children().children()[1].innerText;
												 if(z_base1.includes("+")){
													 z_base1 = z_base1.substr(0,z_base1.length-4);
												 }
												 if(!(z_selected_days_data.includes(z_base1))){
														z_selected_days_data.push(z_base1);
													}
												}
											 //$('.z-option-days1').remove();
												$('.z-days-datum').remove();
												wellDays_data_level3(n);
											 
										 
										 }
									 });
									 
								 });
							
							 });
						 
						 }
					 }
					 else if(z_level == "Level4"){

						 for(var delete_index = 0;delete_index < z_Selected_DayArray.length;delete_index++){

							 wellDays_data_level4.forEach(function(obj1,m){
								 if(obj1.subPhase != null){
								 obj1.subPhase.forEach(function(obj2,n){
									 if(obj2.subPhase != null){
									 obj2.subPhase.forEach(function(obj3,n1){
										 if(z_Selected_DayArray[delete_index] == obj3.phase){
											 z_delete_Element = obj3.phase;
											 //console.log("error"+obj2.phase);
											 //z_showDaysTable(z_delete_Element,"2");
											 obj2.subPhase.splice(n1,1);
											 var z_activedays = $('.z-days-active.z-baseDay');
											 var z_base1;
											 for(var i = 0; i < z_activedays.length;i++){
												 z_base1 = 	$(z_activedays[i]).children().children()[1].innerText;
												 if(z_base1.includes("+")){
													 z_base1 = z_base1.substr(0,z_base1.length-4);
												 }
												 if(!(z_selected_days_data.includes(z_base1))){
														z_selected_days_data.push(z_base1);
													}
												}
											 //$('.z-option-days1').remove();
												$('.z-days-datum').remove();
												wellDays_data_level4(n);
											 
										 
										 }
									 });
								 }
								 });
							 }
							 });
						 
						 }
					 
					 }
					 
				 }
					//$('.z-option-days1').remove();
				 if(z_level == "Level3"){
					 var x = $("#z-level3-days")[0].options;
						
						for(var opt=1;opt<x.length;opt++){
							if(!(option_array.includes(x[opt].value))){
								option_array.push(x[opt].value);
							}
							
						}
						
						wellDays_data_level3.forEach(function(obj,i){
							if(!(option_array.includes(obj.phase))){
								var phase1days = document.createElement('option');
								phase1days.setAttribute('value',obj.phase);
								phase1days.classList.add('z-option-days1');
								phase1days.innerHTML = obj.phase;
								var z_element = option_array.indexOf(wellDays_data_level3[i-1].phase);
								x.add(phase1days,z_element+1);
								clearConfirmationPopup(); 
							}
						});
						//$('.z-days-active').removeClass('z-days-active');
						for(var j=0;j<z_selected_days_data.length;j++){
						
							for(var i = 1 ; i <= wellDays_data_level3.length;i++){
							var z_baselevel = $('.z-level1-day'+ i);
							var z_days_level = $('.z-days-level'+ i);
							if(z_baselevel.length > 0 && z_days_level.length > 0){
									if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
										$(z_days_level).removeClass('d-none');
										$(z_days_level).addClass('z-days-active');
										break;
										}
							}
							}
						}
				 }
				 else if(z_level == "Level4"){

					 var x = $("#z-level4-days")[0].options;
						
						for(var opt=1;opt<x.length;opt++){
							if(!(option_array.includes(x[opt].value))){
								option_array.push(x[opt].value);
							}
							
						}
						
						wellDays_data_level4.forEach(function(obj,i){
							if(!(option_array.includes(obj.phase))){
								var phase1days = document.createElement('option');
								phase1days.setAttribute('value',obj.phase);
								phase1days.classList.add('z-option-days1');
								phase1days.innerHTML = obj.phase;
								var z_element = option_array.indexOf(wellDays_data_level4[i-1].phase);
								x.add(phase1days,z_element+1);
								clearConfirmationPopup(); 
							}
						});
						//$('.z-days-active').removeClass('z-days-active');
						for(var j=0;j<z_selected_days_data.length;j++){
						
							for(var i = 1 ; i <= wellDays_data_level4.length;i++){
							var z_baselevel = $('.z-level1-day'+ i);
							var z_days_level = $('.z-days-level'+ i);
							if(z_baselevel.length > 0 && z_days_level.length > 0){
									if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
										$(z_days_level).removeClass('d-none');
										$(z_days_level).addClass('z-days-active');
										break;
										}
							}
							}
						}
				 
				 }
			
					cumulativeAdjustment();
					granttotal_calculation();
					clearConfirmationPopup();
		 });
		 }
		else{
			alertPopup('alert','Select Line Items to delete for Level 2');
		}
		
	}
	else if(z_seletedphase == "4"){
		$('#z-deletecustomItem-modal2').remove();
		if(z_Selected_DayArray.length > 0 || el.innerText.includes("x")){
			 confirmation_Popup("Are you sure want to Delete the Selected Line Items", function () {
				 if(el.innerText.includes("x")){
					 var del_item2 = $(el).parent().text();
					 var z_del_item2	= del_item2.substr(0,del_item2.length-2).trim();
					 z_savewellConfig();
					 if(z_level == "Level4"){
						 wellDays_data_level4.forEach(function(obj1,m){
							 if(obj1.subPhase != null){
							 obj1.subPhase.forEach(function(obj3,l){
								 console.log("error"+obj3.phase);
								 if(obj3.subPhase != null){
								 obj3.subPhase.forEach(function(obj4,m3){
									 if(obj4.subPhase != null){
										 obj4.subPhase.forEach(function(obj5,m5){
									 if(z_del_item2 == obj5.phase){
										 z_delete_Element = obj5.phase;
										 
										 //z_showDaysTable(z_delete_Element,"2");
										 obj4.subPhase.splice(m5,1);
										 var z_activedays = $('.z-days-active.z-baseDay');
										 var z_base;
										 for(var i = 0; i < z_activedays.length;i++){
											 z_base = $(z_activedays[i]).children().children()[1].innerText;
											 if(z_base.includes("+")){
												 z_base = z_base.substr(0,z_base.length-4);
											 }
											
											 if(!(z_selected_days_data.includes(z_base))){
													z_selected_days_data.push(z_base);
												}
											}
										 //$('.z-option-days1').remove();
											$('.z-days-datum').remove();
											z_showSubPhaseday_level4(l);
										 
									 }
									 });
								 }
								 });
							 }
							 });
						 }
						 
						 });
					 
					 }
				 }
				 else{
					 z_savewellConfig();
					 
					 
					 if(z_level == "Level4"){

						 for(var delete_index = 0;delete_index < z_Selected_DayArray.length;delete_index++){

							 wellDays_data_level4.forEach(function(obj1,m){
								 if(obj1.subPhase != null){
								 obj1.subPhase.forEach(function(obj2,n){
									 if(obj2.subPhase != null){
									 obj2.subPhase.forEach(function(obj3,n1){
										 if(obj3.subPhase != null){
											 obj3.subPhase.forEach(function(obj4,n3){
												 if(z_Selected_DayArray[delete_index] == obj4.phase){
													 z_delete_Element = obj4.phase;
													 //console.log("error"+obj2.phase);
													 //z_showDaysTable(z_delete_Element,"2");
													 obj3.subPhase.splice(n3,1);
													 var z_activedays = $('.z-days-active.z-baseDay');
													 var z_base1;
													 for(var i = 0; i < z_activedays.length;i++){
														 z_base1 = 	$(z_activedays[i]).children().children()[1].innerText;
														 if(z_base1.includes("+")){
															 z_base1 = z_base1.substr(0,z_base1.length-4);
														 }
														 if(!(z_selected_days_data.includes(z_base1))){
																z_selected_days_data.push(z_base1);
															}
														}
													 //$('.z-option-days1').remove();
														$('.z-days-datum').remove();
														wellDays_data_level4(m);
												 
												 }
											 });
											 
										 
										 }
									 });
								 }
								 });
							 }
							 });
						 
						 }
					 
					 }
					 
				 }
					//$('.z-option-days1').remove();
				 if(z_level == "Level3"){
					 var x = $("#z-level3-days")[0].options;
						
						for(var opt=1;opt<x.length;opt++){
							if(!(option_array.includes(x[opt].value))){
								option_array.push(x[opt].value);
							}
							
						}
						
						wellDays_data_level3.forEach(function(obj,i){
							if(!(option_array.includes(obj.phase))){
								var phase1days = document.createElement('option');
								phase1days.setAttribute('value',obj.phase);
								phase1days.classList.add('z-option-days1');
								phase1days.innerHTML = obj.phase;
								var z_element = option_array.indexOf(wellDays_data_level3[i-1].phase);
								x.add(phase1days,z_element+1);
								clearConfirmationPopup(); 
							}
						});
						//$('.z-days-active').removeClass('z-days-active');
						for(var j=0;j<z_selected_days_data.length;j++){
						
							for(var i = 1 ; i <= wellDays_data_level3.length;i++){
							var z_baselevel = $('.z-level1-day'+ i);
							var z_days_level = $('.z-days-level'+ i);
							if(z_baselevel.length > 0 && z_days_level.length > 0){
									if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
										$(z_days_level).removeClass('d-none');
										$(z_days_level).addClass('z-days-active');
										break;
										}
							}
							}
						}
				 }
				 else if(z_level == "Level4"){

					 var x = $("#z-level4-days")[0].options;
						
						for(var opt=1;opt<x.length;opt++){
							if(!(option_array.includes(x[opt].value))){
								option_array.push(x[opt].value);
							}
							
						}
						
						wellDays_data_level4.forEach(function(obj,i){
							if(!(option_array.includes(obj.phase))){
								var phase1days = document.createElement('option');
								phase1days.setAttribute('value',obj.phase);
								phase1days.classList.add('z-option-days1');
								phase1days.innerHTML = obj.phase;
								var z_element = option_array.indexOf(wellDays_data_level4[i-1].phase);
								x.add(phase1days,z_element+1);
								clearConfirmationPopup(); 
							}
						});
						//$('.z-days-active').removeClass('z-days-active');
						for(var j=0;j<z_selected_days_data.length;j++){
						
							for(var i = 1 ; i <= wellDays_data_level4.length;i++){
							var z_baselevel = $('.z-level1-day'+ i);
							var z_days_level = $('.z-days-level'+ i);
							if(z_baselevel.length > 0 && z_days_level.length > 0){
									if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
										$(z_days_level).removeClass('d-none');
										$(z_days_level).addClass('z-days-active');
										break;
										}
							}
							}
						}
				 
				 }
			
					cumulativeAdjustment();
					granttotal_calculation();
					clearConfirmationPopup();
		 });
		 }
		else{
			alertPopup('alert','Select Line Items to delete for Level 2');
		}
		
	}
	//z_serialNumberAdjust();
	
}
function z_showSubPhaseday(sel_index){
	//$('.z-days-datum').remove();
	var z_line_input1 = "";
	var z_line_input2 = "";
	var z_line_input3 = "";
	var z_line_input4 = "";
	
	wellDays_data.forEach(function(obj,i){
		if(obj.subPhase.length > 0){
			$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData-row z-indexDay'+ (i+1) + ' z-baseDay z-days-datum z-days-level'+ (i+1) +' z-level1-day'+ (i+1) + ' hide-data">'+
		            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
		            '<div class="col-1 z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
		            '<div class="col-5 z-l-configbottom z-l-grey-color z-config-content z-days-font" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)"><b>'+obj.phase+'</b><div class="z-l-closeBtn z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
		            '<div class="col-3 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
		               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
		}
		else{
			if(obj.lineInput != null){
				z_line_input1 = obj.lineInput[0];
				//z_line_input2 = obj.lineInput[1];
				if(obj.lineInput.length > 1){
					z_line_input2 = obj.lineInput[1];
				}
			}
			
		$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData z-days-datum z-indexDay'+ (i+1) + ' z-baseDay z-days-level'+ (i+1) + ' z-level1-day'+ (i+1) + ' hide-data">'+
		            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
		            '<div class="col-1 z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
		            '<div class="col-5 z-l-configbottom z-l-grey-color z-config-content z-days-font" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)">'+obj.phase+'<div class="z-l-closeBtn z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
		            '<div class="col-3 z-l-configbottom z-l-grey-color d-none"></div>'+
		            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-wellTesting" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+'" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
	               '<div class="col-2 z-l-configbottom z-l-grey-color z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
		}
		
		obj.subPhase.forEach(function(obj1,j){
			if(obj1.lineInput != null){
				if(obj1.lineInput.length > 0 ){
					z_line_input1 = obj1.lineInput[0];
					if(obj1.lineInput.length > 1){
						z_line_input2 = obj1.lineInput[1];
					}
				}
			}
			
		
			if(j == 0){
				$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) + '">'+
		            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
	            '<div class="col-1 z-l-configbottom z-l-grey-color z-serial-number-level2" serial-number="true">'+(i+1)+'</div>'+
		            '<div class="col-5 z-l-configbottom z-l-grey-color d-none"></div>'+
		            '<div class="col-5 z-l-configbottom z-l-grey-color z-config-content z-days-font" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj1.phase+'<div class="z-l-closeBtn z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
		            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +'" type="text" code="'+ (i+1) +'" name="" base-level="'+obj.phase+'" select-input="0" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
		               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
		
			}
			else{
				$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData z-days-datum z-days-level'+ (i+1) + '">'+
		            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
	            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="col-5 z-l-configbottom z-l-grey-color d-none"></div>'+
		            '<div class="col-5 z-l-configbottom z-l-grey-color z-tableData-row z-days-font" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj1.phase+'<div class="z-l-closeBtn z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
		            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +'" type="text" code="'+ (i+1) +'" name="" base-level="'+obj.phase+'" select-input="0" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
		               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
		
			}
			});
		obj.totalPhase.forEach(function(obj2,k){
			if(obj2.lineInput.length > 0){
				z_line_input1 = obj2.lineInput[0];
			}
			if(obj2.lineInput.length > 1 && k==1){
				$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) +'">'+
			            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
				            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
				            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue z-days-font">'+obj2.phase+'</div>'+
				            '<div class="col-2 z-l-configbottom z-totaldayscal z-l-grey-color z-total-check z-clear-text'+(i+1)+' z-totalEstimate-days'+ (i+1) +'">'+ z_line_input1 + '</div>'+
				               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
			}
			else if(obj2.lineInput.length > 1 && k==0){
				$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) +'">'+
			            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
				            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
				            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue z-days-font">'+obj2.phase+'</div>'+
				            '<div class="col-2 z-l-configbottom z-l-grey-color z-total-check z-clear-text'+(i+1)+' z-totalEstimate-days'+ (i+1) +'">'+ z_line_input1 + '</div>'+
				               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
			}
			else{
				$('#z-estimateDay21').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) +'">'+
			            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
				            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
				            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue z-days-font">'+obj2.phase+'</div>'+
				            '<div class="col-2 z-l-configbottom z-totaldayscal z-l-grey-color z-total-check z-clear-text'+(i+1)+' z-totalEstimate-days'+ (i+1) +'">'+ z_line_input1 + '</div>'+
				               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
			}
		});
            	
	});
	$('#z-estimateDay21').append('<div class="col-12 z-tableData-row z-days-datum">'+
            '<div id="z-totalcost3" class="row z-borderBottom">'+
            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue"><b>TOTAL DAYS</b></div>'+
            '<div id="z-costGrant-total" class="col-2 z-l-configbottom z-l-grey-color"></div>'+
            '<div id="z-estimate-grantTotal" class="col-1 z-l-configbottom z-l-grey-color"></div>'+
               '<div id="z-allDays1" class="col-2 font-weight-bold z-l-configbottom z-total-colorBlue z-l-grey-color"></div></div></div>');
	$('#z-estimateDay21').append('<div class="col-12 z-tableData-row z-days-datum">'+
            '<div id="z-totalcost3" class="row">'+
            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
            '<div class="col-5 z-l-configbottom"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_deleteLineItems(this)">Delete Line Items</div></div>'+
            '<div id="z-costGrant-total" class="col-4 z-l-configbottom z-l-grey-color"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_deleteLineItems(this)">Delete Line Items</div></div>'+
            '<div id="z-costGrant-total-level2" class="col-4 z-l-configbottom z-l-grey-color"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="3" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="3" onclick="z_deleteLineItems(this)">Delete Line Items</div><div class="btn btn-link" onclick="z_activities_fn(this)">Back to Phases</div></div>'+
            '<div id="z-estimate-grantTotal" class="col-1 z-l-configbottom z-l-grey-color"></div>'+
               '<div id="z-all" class="col-1 z-l-configbottom z-l-grey-color"></div></div></div>');
}
//for level3
function z_showSubPhaseday_level3(sel_index){

	//$('.z-days-datum').remove();
	var z_line_input1 = "";
	var z_line_input2 = "";
	var z_line_input3 = "";
	var z_line_input4 = "";

	//z_day_select[0].options.selectedIndex = sel_index+1;
	var subPhase_length1;
	var subPhase_lineInput_length1;
	var totalPhase_lineInput_length1;
	var subPhase_length2;
	var subPhase_lineInput_length2;
	wellDays_data_level3.forEach(function(obj,i){
		//for level1
		subPhase_length1 = obj.subPhase.length;
		if(subPhase_length1 > 0){
			$('#z-estimateDay31').append('<div class="col-12 z-tableData z-indexDay'+(i+1)+' z-days-datum d-none z-baseDay z-days-level'+ (i+1) +' z-level1-day'+ (i+1) + ' hide-data">'+
		            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
		            '<div class="col-1 z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
		            '<div class="d-flex col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)"><b>'+obj.phase+'</b><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
		            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
		}
		else{
			if(obj.lineInput != null){
				z_line_input1 = obj.lineInput[0];
				z_line_input2 = obj.lineInput[1];
			}
		$('#z-estimateDay31').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' d-none z-baseDay z-days-datum z-days-level'+ (i+1) + ' z-level1-day'+ (i+1) + ' hide-data">'+
		            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
		            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
		            '<div class="d-flex z-daysWidth1 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)">'+obj.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
		            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-wellTesting" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+'" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
	               '<div class="z-codeWidth z-l-configbottom z-l-grey-color z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
	
		}
		//for level2
		obj.subPhase.forEach(function(obj1,j){
			//for level2 -- it has total phase value for level 2
			subPhase_lineInput_length1 = obj1.lineInput.length;
			if(subPhase_lineInput_length1 > 0 ){
				z_line_input1 = obj1.lineInput[0];
				if(obj1.lineInput.length > 1){
					z_line_input2 = obj1.lineInput[1];	
				}
				
			}
			//it has level 2 entry
			$('#z-estimateDay31').append('<div class="col-12 z-tableData-row d-none z-days-datum z-days-level'+ (i+1) + ' hide-data">'+
		            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
	            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth1 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="d-flex z-daysWidth2 z-l-configbottom z-l-grey-color z-config-content z-cost-content d-flex" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj1.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
		            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');
			//for level 3 
			subPhase_length2 = obj1.subPhase.length;
			if(subPhase_length2 > 0){
				obj1.subPhase.forEach(function(obj2,k){
							subPhase_lineInput_length2 = obj2.lineInput.length;
							if(subPhase_lineInput_length2 > 0 ){
								z_line_input_level31 = obj2.lineInput[0];
								if(obj2.lineInput.length > 1){
									z_line_input_level32 = obj2.lineInput[1];	
								}
								
							}
							if(j == 0 && k == 0){
								$('#z-estimateDay31').append('<div class="col-12 d-none z-tableData z-days-datum z-days-level'+ (i+1) + '">'+
						            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
					            '<div class="col-1 z-l-configbottom z-l-grey-color z-serial-number" serial-number="true">'+(i+1)+'</div>'+
						            '<div class="z-daysWidth1 z-l-configbottom z-l-grey-color d-none"></div>'+
						            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color d-none"></div>'+
						            '<div class="d-flex col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content d-flex" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
						            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level31 + '"></div>'+
						               '<div class="col-2 z-l-configbottom z-l-grey-color z-clear-text'+(i+1)+' text-center z-cumulative'+ (i+1) +'">'+ z_line_input_level32 + '</div></div></div>');
				
							}
							else{
								$('#z-estimateDay31').append('<div class="col-12 d-none z-tableData z-days-datum z-days-level'+ (i+1) + '">'+
						            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
					            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
						            '<div class="z-daysWidth1 z-l-configbottom z-l-grey-color d-none"></div>'+
						            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color d-none"></div>'+
						            '<div class="d-flex col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content d-flex" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
						            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level31 + '"></div>'+
						               '<div class="col-2 z-l-configbottom z-l-grey-color z-clear-text'+(i+1)+' text-center z-cumulative'+ (i+1) +'">'+ z_line_input_level32 + '</div></div></div>');
				
							}
							
						
				});
			}
			//level2 total phase
			$('#z-estimateDay31').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) + ' hide-data">'+
		            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
	            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth1 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color">Total Days</div>'+
		            '<div class="z-daysWidth2 z-l-configbottom z-l-grey-color z-config-content z-clear-text'+(i+1)+' z-level2-totaldays'+ (i+1) +' z-cost-content">'+ z_line_input1 +'</div>'+
		            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');

		});
		//level1 total days
		obj.totalPhase.forEach(function(obj4,m){
			totalPhase_lineInput_length1 = obj4.lineInput.length;
			if(totalPhase_lineInput_length1 > 0){
				z_line_total_input1 = obj4.lineInput[0];
			}
			$('#z-estimateDay31').append('<div class="col-12 d-none z-tableData-row z-days-datum z-days-level'+ (i+1) +'">'+
		            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
			            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue z-cost-content">'+obj4.phase+'</div>'+
			            '<div class="col-2 z-l-configbottom z-total-colorBlue z-days-font d-none"></div>'+
			            '<div class="col-2 z-l-configbottom text-right z-total-colorBlue z-cost-content d-none"></div>'+
			            '<div class="col-2 z-l-configbottom z-totaldayscal z-l-grey-color z-total-check z-cost-content z-clear-text'+(i+1)+' z-totalEstimate-days'+ (i+1) +'">'+ z_line_total_input1 + '</div>'+
			               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
		});
	});
	$('#z-estimateDay31').append('<div class="col-12 z-tableData-row z-days-datum">'+
            '<div id="z-totalcost3" class="row z-borderBottom">'+
            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
            '<div class="z-daysWidth1 z-l-configbottom text-right z-total-colorBlue"><b>TOTAL DAYS</b></div>'+
            '<div id="z-costGrant-total" class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
            '<div id="z-estimate-grantTotal" class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
               '<div id="z-allDays1" class="z-daysWidth2 font-weight-bold z-l-configbottom z-total-colorBlue z-l-grey-color"></div></div></div>');
	$('#z-estimateDay31').append('<div class="col-12 z-tableData-row z-days-datum">'+
            '<div id="z-totalcost3" class="row">'+
            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
            '<div class="z-daysWidth1 z-l-configbottom"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_deleteLineItems(this)">Delete Line Items</div></div>'+
            '<div id="z-costGrant-total" class="z-daysWidth1 z-l-configbottom z-l-grey-color"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_deleteLineItems(this)">Delete Line Items</div></div>'+
            '<div id="z-costGrant-total-level2" class="z-daysWidth1 z-l-configbottom z-l-grey-color"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="3" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="3" onclick="z_deleteLineItems(this)">Delete Line Items</div><div class="btn btn-link" onclick="z_activities_fn(this)">Back to Phases</div></div>'+
            '<div id="z-estimate-grantTotal" class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
               '<div id="z-all" class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
	

}
function z_costTitle(el){
	$('.z-cw-wellPage').removeClass('z-cw-wellPage');
	$(el).addClass('z-cw-wellPage');
	if($(el).text() == "Rates"){
		$('.z-cost-contentday2').removeClass('d-none');
		$('.z-cost-contentday1').addClass('d-none');
	}
	else{
		$('.z-cost-contentday1').removeClass('d-none');
		$('.z-cost-contentday2').addClass('d-none');
	}
}
function z_afeEstimationPage(el){
	z_wellEstimate_section();
}
function z_lockComponents(el){
	var z_component_text = $(el).text();
	if(z_component_text.includes("Well Timeline")){
		 confirmation_Popup("Are  you sure want to lock wellTimeline..?By Doing this other user cannot be able to Edit", function () {
			 $('#z-timeline-lock').val('true');
				z_savewellConfig();
				alertPopup('success','Well Timeline is Locked'); 
		 clearConfirmationPopup();
	        });
		
	}
	else if(z_component_text.includes("AFE Components")){
		 confirmation_Popup("Are  you sure want to lock AFE Components..?By Doing this other user cannot be able to Edit", function () {
			 $('#z-component-lock').val('true');
				z_savewellConfig();
				alertPopup('success','AFE Components is Locked');
		 clearConfirmationPopup();
	        });
		
	}
}
var z_array_day = [];
function z_showSeletedDays(){
    if(z_level != "Level4"){
		z_array_day = [];
	}	
	var z_array_dayObj = {};
	var selectedDay;
	if(z_level == "Level3"){
		selectedDay = wellDays_data_level3;
	}
	else if(z_level == "Level2"){
		selectedDay = wellDays_data;
	}
	else if(z_level == "Level4"){
		selectedDay = wellDays_data_level4;
	}
	var selectedDay_length = selectedDay.length;
	for(var i=0;i<selectedDay_length;i++){
		if(!(selectedDay[i].isSubmitted === undefined)){
			if(selectedDay[i].isSubmitted == true){
				//for(var j=0;j < z_days_col.length;j++){
				z_array_dayObj.phase = 	selectedDay[i].phase;
				z_array_dayObj.totalPhase = selectedDay[i].totalPhase;
				var z_index_day = z_array_day.findIndex(function(val){
					return val.phase == z_array_dayObj.phase;
				});
				if(z_index_day == -1){
					z_array_day.push(z_array_dayObj);
				}
				
				z_array_dayObj = {};
					//z_days_col[j].innerText = wellDays_data[i].phase;
			//}
			}
	
}
	}
	var z_array_day_length = z_array_day.length;
	if(z_array_day_length > 7){
		var total_day = $('.z-check-total-level2');//total day
		$('.z-check-total-level2').remove();
		$('.test').remove();
		for(var z_ele = 7;z_ele < z_array_day_length;z_ele++){
            if(z_level == "Level4"){
                $('#level2-day-result').append('<div class="col-12 z-tableData-row z-level2-active test">'+
                '<div class="row z-borderBottom">'+
                '<div id="z-wellTvd" class="col-2 z-cost-content z-l-configbottom z-l-grey-color"></div>'+
                '<div id="z-wellMdDate" class="col-3 z-cost-content z-l-configbottom z-l-grey-color"></div><div id="z-completion-estimate" class="col-5 z-l-configbottom z-l-grey-color z-cost-content z-level4 z-day-select-level2"></div>'+
                '<div id="z-suspenseDate-estimate" class="col-2 z-cost-content z-l-configbottom z-l-grey-color"><input id="z-estimate-suspense-date" class="w-100 z-wellDay z-cost-content z-level4 z-wellDayLevel2" type="text" name="" value="" oninput="z_totalDays(this)" disabled="true"></div></div></div>');

            }
            else{
                $('#level2-day-result').append('<div class="col-12 z-tableData-row z-level2-active test">'+
                '<div class="row z-borderBottom">'+
                '<div id="z-wellTvd" class="col-2 z-cost-content z-l-configbottom z-l-grey-color"></div>'+
                '<div id="z-wellMdDate" class="col-3 z-cost-content z-l-configbottom z-l-grey-color"></div><div id="z-completion-estimate" class="col-5 z-l-configbottom z-l-grey-color z-cost-content z-level2 z-day-select-level2"></div>'+
                '<div id="z-suspenseDate-estimate" class="col-2 z-cost-content z-l-configbottom z-l-grey-color"><input id="z-estimate-suspense-date" class="w-100 z-wellDay z-cost-content z-level2 z-wellDayLevel2" type="text" name="" value="" oninput="z_totalDays(this)" disabled="true"></div></div></div>');

            }
            		}
		$('#level2-day-result').append('<div id="z-check-total-level2" class="col-12 z-tableData-row test">'+
             '<div class="row z-borderBottom">'+
            '<div id="z-wellTotal" class="col-2 z-l-configbottom"></div>'+
            '<div id="z-wellTotalSec" class="col-3 z-l-configbottom"></div>'+
            '<div id="z-TotalDays-estimate" class="col-5 z-l-configbottom z-total-colorBlue z-l-grey-color"><b>Total Days</b></div>'+
            '<div id="z-totalDaysSection-estimate" class="col-2 z-l-configbottom"><input id="z-totalDays" class="w-100 z-total-colorBlue font-weight-bold" type="text" name="" disabled=true value=""></div>'+
            '</div></div>');
	}
	else{
		$('.test').remove();
		$('#level2-day-result').append('<div id="z-check-total-level2" class="col-12 z-tableData-row test">'+
	             '<div class="row z-borderBottom">'+
	            '<div id="z-wellTotal" class="col-2 z-l-configbottom"></div>'+
	            '<div id="z-wellTotalSec" class="col-3 z-l-configbottom"></div>'+
	            '<div id="z-TotalDays-estimate" class="col-5 z-total-colorBlue z-l-configbottom z-l-grey-color"><b>Total Days</b></div>'+
	            '<div id="z-totalDaysSection-estimate" class="col-2 z-l-configbottom"><input id="z-totalDays" class="w-100 z-total-colorBlue font-weight-bold" type="text" name="" disabled=true value=""></div>'+
	            '</div></div>');
	}
	var x_total_val,z_days_col;
	if(z_level == "Level4"){
		z_days_col = $('.z-level4.z-day-select-level2');
		x_total_val =  $('.z-level4.z-wellDayLevel2');
	}
	else{
        z_days_col = $('.z-level2.z-day-select-level2');
		x_total_val =  $('.z-level2.z-wellDayLevel2');
	}
	
	
	var y;
    var z_day_text;
    var z_day_val;
	var z_val1;
    var sub_day_element;
    var subDay_val;
    var level1_index;
    var level2_index;
    var z_level_3_index;
    var z_test_index;
	var x_total_val_length = x_total_val.length;
	var z_days_col_length = z_days_col.length;
	for(var r=0;r < x_total_val_length;r++){
		x_total_val[r].value = "";
	}
	for(var p=0;p < z_days_col_length;p++){
		z_days_col[p].innerText = "";
	}
	$('#z-totalDays').val('');
	var z_grant_totalKey_length = z_grant_totalKey.length;
	if(z_grant_totalKey_length > 0){
        var limit = 0;
        var z_limit2 = 0;
        for(var k=0;k < z_grant_totalKey_length;k++){
            z_days_col[limit].innerText = z_grant_totalKey[k].phase;
            //$(z_days_col[limit]).attr('select-level','1');
//			if(z_grant_totalKey.length > 0){
//				var b_index = z_grant_totalKey.findIndex(function(val){
//					return val.phase == z_array_day[k].phase;
//				});
//				z_val1 = z_grant_totalKey[b_index].day;
//			}
			z_val1 = z_grant_totalKey[k].day;
                x_total_val[limit].value = z_val1+" Days";
                limit = limit + 1;
			}
	}
	else{
        var z_test = 0;
		var z_tot_phase_length;
		z_array_day_length = z_array_day.length;
        if(z_array_day_length > 0){
		for(var j=0;j < z_days_col_length;j++){
                if(z_array_day[z_test] != null){
					z_days_col[j].innerText = z_array_day[z_test].phase;
				var z_tot_phase = z_array_day[z_test].totalPhase;
				z_tot_phase_length = z_tot_phase.length;
				if(z_tot_phase_length > 1){
					x_total_val[j].value = z_tot_phase[1].lineInput[0];
					y = z_tot_phase[1].lineInput[0];
					y = y.split("Days")[0];
					z_grant_total[z_test] = Number(y);
					var b_val = {};
					b_val.phase = z_array_day[z_test].phase;
					b_val.day = Number(y);
					z_grant_totalKey_length = z_grant_totalKey.length;
					if(z_grant_totalKey_length > 0){
						var grant_index = z_grant_totalKey.findIndex(function(val){
							return val.phase == z_array_day[z_test].phase;
						});
						if(grant_index == -1){
							z_grant_totalKey.push(b_val);
						}
						else{
							z_grant_totalKey[z_test] = b_val;
						}
					}
					else{
						z_grant_totalKey.push(b_val);
					}
					b_val = {};
				}
				else if(z_tot_phase_length > 0){
					x_total_val[j].value = z_tot_phase[0].lineInput[0];
					y = z_tot_phase[0].lineInput[0];
					y = y.split("Days")[0];
					z_grant_total[z_test] = Number(y);
					var b_val = {};
					b_val.phase = z_array_day[z_test].phase;
					b_val.day = Number(y);
					if(z_grant_totalKey_length > 0){
						var grant_index = z_grant_totalKey.findIndex(function(val){
							return val.phase == z_array_day[z_test].phase;
						});
						if(grant_index == -1){
							z_grant_totalKey.push(b_val);
						}
						else{
							z_grant_totalKey[grant_index] = b_val;
						}
					}
					else{
						z_grant_totalKey.push(b_val);
					}
					b_val = {};
                }
                z_test = z_test + 1;
				}
				
            }
		
    }
}
	
		var sum1 = 0;
		var val1 = 0;
		var z_val;
		x_total_val_length = x_total_val.length;
		for(var m=0;m < x_total_val_length;m++){
                z_val = x_total_val[m].value;
                if(z_val.includes("Days")){
                    z_val = z_val.split("Days")[0];
                }
                ((z_val == "") ? val1 = 0 : val1 = Number(z_val));
                
                sum1 = sum1+val1;
           
		}
		$('#z-totalDays').val(sum1);
		$('#z-total-days').text(sum1+" Days");
		$('#z-allDays1').text("");
		$('#z-allDays1').text(sum1+" Days");
		
	
}
function z_getSelected_days(){
	//$('.z-days-active').removeClass('z-days-active');
	var wellDays_data_length;
	var z_selected_days_data_length = z_selected_days_data.length;
		var z_days_level_length;
		var z_baselevel_length;
	if(z_level == "Level2"){
		//selected_Days_Val = wellDays_data;
		
for(var j=0;j<z_selected_days_data_length;j++){
			wellDays_data_length = wellDays_data.length;
			for(var i = 1 ; i <= wellDays_data_length;i++){
			var z_baselevel = $('.z-level1-day'+ i);
			var z_days_level = $('.z-days-level'+ i);
			z_days_level_length = z_days_level.length;
			z_baselevel_length = z_baselevel.length;
			if(z_baselevel_length > 0 && z_days_level_length > 0){
					if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
						$(z_days_level).removeClass('d-none');
						$(z_days_level).addClass('z-days-active');
						break;
						}
			}
			}
		}
	wellDays_data_length = wellDays_data.length;
		for(var i = 0 ; i < wellDays_data_length;i++){
			var z_baselevel = $('.z-level1-day'+ (i+1));
			var z_days_level = $('.z-days-level'+ (i+1));
			z_days_level_length = z_days_level.length;
			z_baselevel_length = z_baselevel.length;
			if(z_baselevel_length > 0 && z_days_level_length > 0){
					if(!(wellDays_data[i].isSubmitted === undefined)){
						if(wellDays_data[i].isSubmitted == true){
							$(z_days_level).removeClass('d-none');
							$(z_days_level).addClass('z-days-active');
						}
						}
			}
			}
	}
	else if(z_level == "Level3"){
		//selected_Days_Val = wellDays_data_level3;
for(var j=0;j<z_selected_days_data_length;j++){
			wellDays_data_length = wellDays_data_level3.length;
			for(var i = 1 ; i <= wellDays_data_length;i++){
			var z_baselevel = $('.z-level1-day'+ i);
			var z_days_level = $('.z-days-level'+ i);
			z_days_level_length = z_days_level.length;
			z_baselevel_length = z_baselevel.length;
			if(z_baselevel_length > 0 && z_days_level_length > 0){
					if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
						$(z_days_level).removeClass('d-none');
						$(z_days_level).addClass('z-days-active');
						break;
						}
			}
			}
		}
	wellDays_data_length = wellDays_data_level3.length;
		for(var i = 0 ; i < wellDays_data_length;i++){
			var z_baselevel = $('.z-level1-day'+ (i+1));
			var z_days_level = $('.z-days-level'+ (i+1));
			z_days_level_length = z_days_level.length;
			z_baselevel_length = z_baselevel.length;
			if(z_baselevel_length > 0 && z_days_level_length > 0){
					if(!(wellDays_data_level3[i].isSubmitted === undefined)){
						if(wellDays_data_level3[i].isSubmitted == true){
							$(z_days_level).removeClass('d-none');
							$(z_days_level).addClass('z-days-active');
						}
						}
			}
			}
	}
	else if(z_level == "Level4"){
		//selected_Days_Val = wellDays_data_level4;
		wellDays_data_length = wellDays_data_level4.length;
		for(var i = 0 ; i < wellDays_data_length;i++){
			var z_baselevel = $('.z-level1-day'+ (i+1));
			var z_days_level = $('.z-days-level'+ (i+1));
			z_days_level_length = z_days_level.length;
			z_baselevel_length = z_baselevel.length;
			if(z_baselevel_length > 0 && z_days_level_length > 0){
					if(!(wellDays_data_level4[i].isSubmitted === undefined)){
						if(wellDays_data_level4[i].isSubmitted == true){
							$(z_days_level).removeClass('d-none');
							$(z_days_level).addClass('z-days-active');
						}
						}
						if(z_selected_days_data.includes(z_baselevel[0].innerText)){
							$(z_days_level).removeClass('d-none');
							$(z_days_level).addClass('z-days-active');
						}
					
			}
			}
	}
		
	
	
}
var select_textArray = [];
function z_deleteRigItems(el){
	var level1Index,level2Index,level3Index,base_name,parent_index,child_index;
	var level1Index = $(el).attr('level2-phase');//level1 name
	var level2Index = Number($(el).attr('base-level'));//level2index
	var level3Index = Number($(el).attr('level3-index'));//level3index
	confirmation_Popup("Are you sure want to Delete the Selected Line Items", function () {
        var select_text,z_total_cost_items;
        if(!(z_level == "Level4")){
            z_saveRates($('#z-save-days')[0]);
        z_savewellConfig();
        }
		
        if(z_level == "Level2"){
            if($(rig_element).text() == z_selected_leveldata[0].subLevels[0].phaseName){
                z_total_cost_items = z_selected_leveldata[0].subLevels[0].totalCostItem;
            }
            else{
                z_selected_leveldata[rig_element.getAttribute("base-level")].subLevels.forEach(function(val){
                    if(val.phaseName == $(rig_element).text()){
                        z_total_cost_items = val.totalCostItem;
                        return;
                    }
                });
            }
            if(select_textArray.length > 0){
                for(var arr = 0;arr < select_textArray.length;arr++){
                    var rigCost_index1 = z_total_cost_items.findIndex(function (obj) {
                        return (obj['phase'] == select_textArray[arr]);
                    });
                    z_total_cost_items.splice(rigCost_index1,1);
                    $('#custom-modal-content').empty();
                    z_RigAddition(rig_element);
                }
                }
                else{
                select_text = $(el).parent().text();
                if(select_text.includes("+")){
                    select_text = select_text.substr(0,select_text.length-2);
                }
                var rigCost_index = z_total_cost_items.findIndex(function (obj) {
                    return (obj['phase'] == select_text.trim());
                });
                z_total_cost_items.splice(rigCost_index,1);
                $('#custom-modal-content').empty();
                z_sel_config = z_selected_leveldata;
                z_RigAddition(rig_element);
                }
            
        }
        else if(z_level == "Level3"){
            z_saveRates($('#z-save-days')[0]);
        z_savewellConfig();
            if($(rig_element).text() == z_selected_leveldata[0].subLevels[0].phaseName){
                z_total_cost_items = z_selected_leveldata[0].subLevels[0].totalCostItem;
            }
            else{
                z_selected_leveldata[rig_element.getAttribute("base-level")].subLevels.forEach(function(val){
                    if(val.phaseName == $(rig_element).text()){
                        z_total_cost_items = val.totalCostItem;
                        return;
                    }
                });
            }
            if(select_textArray.length > 0){
                for(var arr = 0;arr < select_textArray.length;arr++){
                    z_total_cost_items.forEach(function(level1,index_1){
                        if(level1.phase == select_textArray[arr]){
                            z_total_cost_items.splice(index_1,1);
                            return;
                        }
                        else{
                            if(level1.subPhase != null){
                                if(level1.subPhase.length > 0){
                                    level1.subPhase.forEach(function(level2,index_2){
                                        if(level2.phase == select_textArray[arr]){
                                            z_total_cost_items[index_1].subPhase.splice(index_2,1);
                                            return;
                                        }
                                    });
                                }
                            }
                        }
                    });
                    $('#custom-modal-content').empty();
                    //z_selected_leveldata[0].subLevels[0].totalCostItem = z_total_cost_items;
                    z_sel_config = z_selected_leveldata;
                    z_RigAddition(rig_element);
                }
                }
                else{
                var rigCost_index2,base_rigCost_index2;
                    select_text = $(el).parent().text();
                if(select_text.includes("+")){
                    select_text = select_text.substr(0,select_text.length-2);
                }
                if($(el).attr('level') == "1"){
                    base_rigCost_index2 = z_total_cost_items.findIndex(function (obj) {
                        return (obj['phase'] == select_text.trim());
                    });
                    z_total_cost_items.splice(base_rigCost_index2,1);
                }
                else if($(el).attr('level') == "2"){
                    base_rigCost_index2 = z_total_cost_items.findIndex(function (obj) {
                        return (obj['phase'] == $(el).attr('level2-phase'));
                    });
                    
                    z_total_cost_items[base_rigCost_index2].subPhase.forEach(function(level2,index2){
                        if(level2.phase == select_text.trim()){
                            rigCost_index2 = index2;
                        }
                    });
                    z_total_cost_items[base_rigCost_index2].subPhase.splice(rigCost_index2,1);
                }
                
                
                $('#custom-modal-content').empty();
                //z_selected_leveldata[0].subLevels[0].totalCostItem = z_total_cost_items;
                z_sel_config = z_selected_leveldata;
                z_RigAddition(rig_element);
                }
        }
        else if(z_level == "Level4"){

            if($(rig_element).text() == z_selected_leveldata[0].subLevels[0].phaseName){
                z_total_cost_items = z_selected_leveldata[0].subLevels[0].totalCostItem;
            }
            else{
                 z_selected_leveldata[rig_element.getAttribute("base-level")].subLevels.forEach(function(val){
                    if(val.phaseName == $(rig_element).text()){
                        z_total_cost_items = val.totalCostItem;
                        return;
                    }
                });
            }
            // if(select_textArray.length > 0){
            //     for(var arr = 0;arr < select_textArray.length;arr++){
        
            //         var rigCost_index1 = z_total_cost_items.findIndex(function (obj) {
            //             if(obj.subPhase != null){
            //                 if(obj.subPhase.length > 0){
            //                     obj.subPhase.forEach(function(obj1){
            //                         return (obj1['phase'] == select_textArray[arr]);
            //                     });
            //                 }
                            
            //             else{
            //                 return (obj['phase'] == select_textArray[arr]);
            //             }
            //             }
            //             else{
            //                 return (obj['phase'] == select_textArray[arr]);
            //             }
                        
            //         });
                   
            //         z_total_cost_items.splice(rigCost_index1,1);
            //         $('#custom-modal-content').empty();
            //         z_RigAddition(rig_element);
            //     }
            //     }
                //else{
                select_text = $(el).parent().text();
                if(select_text.includes("+")){
                    select_text = select_text.substr(0,select_text.length-2);
                }
                if($(el).attr('level') == "1"){
                    var rigCost_index = z_total_cost_items.findIndex(function (obj) {
                        return (obj['phase'] == select_text.trim());
                    });
                    z_total_cost_items.splice(rigCost_index,1);
                }
                else if($(el).attr('level') == "2"){
                    var rigCost_index11 = z_total_cost_items.findIndex(function (obj) {
                        return (obj['phase'] == $(el).attr('level2-phase'));
                    });
                    var rigCost_index21;
//                    z_total_cost_item[rigCost_index].subPhase.forEach(function(level2,index2){
//                        if(level2.phase == select_text.trim()){
//                        	rigCost_index21 = index2;
//                        }
//                    });
                    rigCost_index21 = Number($(el).attr('base-level'));
                    z_total_cost_items[rigCost_index11].subPhase.splice(rigCost_index21,1);
                }
                else if($(el).attr('level') == "3"){
                  var rigindex1,rigindex2,rigindex3;
                  var rigindex1 = z_total_cost_items.findIndex(function (obj) {
                      return (obj['phase'] == $(el).attr('level2-phase'));
                  });
                  //rigindex2 = Number(level2Index);
                  //rigindex3 = Number(level3Index);
                  
                    z_total_cost_items[rigindex1].subPhase[level2Index].subPhase.splice(level3Index,1);
                
                }
                
                
                $('#custom-modal-content').empty();
                z_sel_config = z_selected_leveldata;
                z_RigAddition(rig_element);
                //}
        
        }
	
		select_textArray = [];
		clearConfirmationPopup();
	});
}
function z_selectRigItems(el){
	if($(el).hasClass('z-levelconfig-color')){
        $(el).removeClass('z-levelconfig-color');
	}
	else{
		el.classList.add("z-levelconfig-color");
		el.classList.remove("z-l-grey-color");
}
		
		$('.z-level2-test').removeClass('z-level2-test');
		el.classList.add("z-level2-test");
        if($(el).hasClass('z-delete')){
            $(el).removeClass('z-delete');
        }
        else{
            $(el).addClass('z-delete');
        }
	var selected_text = $(el).text();
	if(selected_text.includes("+")){
		selected_text = selected_text.substr(0,selected_text.length-2);
	}
	if(!(select_textArray.includes(selected_text))){
		select_textArray.push(selected_text);
    }
    else{
        var deleteIndex = select_textArray.findIndex(function(val_1){
            return val_1 == selected_text;
        });
        select_textArray.splice(deleteIndex,1);
    }
	
}
var prevArray = [];
var i = 0;
var z_data_Selected;
var prevData;
var checkData;
function z_prevPhase(){
    
    var check_for_levelIndex;
	if(!($('#z-level21-prevphase').hasClass('d-none'))){
		$('#z-level21-prevphase').addClass('d-none');
	}
	var z_configJson_data_length = z_configJson_data.length;
	if(z_configJson_data_length > 1){
		if(z_level == "Level2"){
            check_for_levelIndex = z_configJson_data.findIndex(function(obj){
                return obj.levelValue == "2" && obj.configNumber == "1" && obj.wellId == "";
            });
            prevData = JSON.parse(z_configJson_data[check_for_levelIndex].wellConfig);
        }
    	else if(z_level == "Level3"){
    		check_for_levelIndex = z_configJson_data.findIndex(function(obj){
                return obj.levelValue == "3" && obj.configNumber == "1" && obj.wellId == "";
            });
            prevData = JSON.parse(z_configJson_data[check_for_levelIndex].wellConfig);
    	}
    	else if(z_level == "Level4"){
    		check_for_levelIndex = z_configJson_data.findIndex(function(obj){
                return obj.levelValue == "4" && obj.configNumber == "1" && obj.wellId == "";
            });
            prevData = JSON.parse(z_configJson_data[check_for_levelIndex].wellConfig);
    	}
	}
	else{
        
		$.ajax({
	        url: "/api/getWellConfiguration",
	        type: "GET",
	        async: false,
	        data: {wellId: "",level:"",config: ""},
	        dataType: 'text',
	        //contentType: 'application/json;charset=UTF-8',
	        success: function (result) {
	        	checkData = JSON.parse(result);
                
                if(z_level == "Level2"){
                    check_for_levelIndex = checkData.findIndex(function(obj){
                        return obj.levelValue == "2" && obj.configNumber == "1" && obj.wellId == "";
                    });
                    prevData = JSON.parse(checkData[check_for_levelIndex].wellConfig);
	        	}
	        	else if(z_level == "Level3"){
                    check_for_levelIndex = checkData.findIndex(function(obj){
                        return obj.levelValue == "3" && obj.configNumber == "1" && obj.wellId == "";
                    });
                    prevData = JSON.parse(checkData[check_for_levelIndex].wellConfig);	        	}
	        	else if(z_level == "Level4"){
                    check_for_levelIndex = checkData.findIndex(function(obj){
                        return obj.levelValue == "4" && obj.configNumber == "1" && obj.wellId == "";
                    });
                    prevData = JSON.parse(checkData[check_for_levelIndex].wellConfig);	        	
					}
					else if(z_level == "Level5"){
                    check_for_levelIndex = checkData.findIndex(function(obj){
                        return obj.levelValue == "5" && obj.configNumber == "1" && obj.wellId == "";
                    });
                    prevData = JSON.parse(checkData[check_for_levelIndex].wellConfig);	        	
					}
	        	
	        }});
		}
	if(z_level == "Level2"){
		z_selected_leveldata.forEach(function(obj,index){
    		var uncommonObj = prevData.findIndex(function(val){
    		return val.phaseName == obj.phaseName;
    		});
    		if(uncommonObj == -1){
    			prevData.push(obj);
    		}
    		else{
    			prevData[uncommonObj] = z_selected_leveldata[index];
    		}
    		if(!(prevArray.includes(obj.phaseName)) && i == 0){
    			prevArray.push(obj.phaseName);
    			
    		}
    		if(!(z_Selected_Array.includes(obj.phaseName))){
    			z_Selected_Array.push(obj.phaseName);
    		}
    		
    	});
    	addLevel(prevData,"2",true);
	}
	else if(z_level == "Level3"){
		z_selected_leveldata.forEach(function(obj,index){
			var uncommonObj = prevData.findIndex(function(val){
    		return val.phaseName == obj.phaseName;
    		});
    		if(uncommonObj == -1){
    			prevData.push(obj);
    		}
    		else{
    			z_selected_leveldata[index].subLevels.forEach(function(level2,level2_index){
    				var uncommonObj2 = prevData[uncommonObj].subLevels.findIndex(function(val){
        				return val.phaseName == level2.phaseName;
        			});
    				if(uncommonObj2 == -1){
    					prevData[uncommonObj].subLevels.push(level2);
    				}
    				else{
    					//prevData[uncommonObj].subLevels[uncommonObj2] = z_selected_leveldata[index].subLevels[level2_index];
    					if(level2.subLevels != null){
    						level2.subLevels.forEach(function(z_level3,z_index3){
    							var uncommonObj_3 = prevData[uncommonObj].subLevels[uncommonObj2].subLevels.findIndex(function(val_Obj){
									return val_Obj.phaseName == z_level3.phaseName;
								});
    							if(uncommonObj_3 == -1){
									prevData[uncommonObj].subLevels[uncommonObj2].subLevels.push(z_level3);
								}
								else{
									prevData[uncommonObj].subLevels[uncommonObj2].subLevels[uncommonObj_3] = z_level3;
								}
    						});
    					}
    					prevData[uncommonObj].subLevels[uncommonObj2] = z_selected_leveldata[index].subLevels[level2_index];
    				}
    			});
    		
    			prevData[uncommonObj] = z_selected_leveldata[index];
    		}
    		if(!(prevArray.includes(obj.phaseName)) && i == 0){
    			prevArray.push(obj.phaseName);
    			
    		}
    		if(!(z_Selected_Array.includes(obj.phaseName))){
    			z_Selected_Array.push(obj.phaseName);
    		}
    		
    	});
    	addLevel(prevData,"3",true);
	}
	else if(z_level == "Level4"){
		z_selected_leveldata.forEach(function(obj,index){
			var uncommonObj = prevData.findIndex(function(val){
    		return val.phaseName == obj.phaseName;
    		});
    		if(uncommonObj == -1){
    			prevData.push(obj);
    		}
    		else{
    			z_selected_leveldata[index].subLevels.forEach(function(level2,level2_index){
    				var uncommonObj2 = prevData[uncommonObj].subLevels.findIndex(function(val){
        				return val.phaseName == level2.phaseName;
        			});
    				if(uncommonObj2 == -1){
    					prevData[uncommonObj].subLevels.push(level2);
    				}
    				else{
    					//prevData[uncommonObj].subLevels[uncommonObj2] = z_selected_leveldata[index].subLevels[level2_index];
    					if(level2.subLevels != null){
    						level2.subLevels.forEach(function(z_level3,z_index3){
    							var uncommonObj_3 = prevData[uncommonObj].subLevels[uncommonObj2].subLevels.findIndex(function(val_Obj){
									return val_Obj.phaseName == z_level3.phaseName;
								});
    							if(uncommonObj_3 == -1){
									prevData[uncommonObj].subLevels[uncommonObj2].subLevels.push(z_level3);
								}
								else{
									prevData[uncommonObj].subLevels[uncommonObj2].subLevels[uncommonObj_3] = z_level3;
								}
    						});
    					}
    					prevData[uncommonObj].subLevels[uncommonObj2] = z_selected_leveldata[index].subLevels[level2_index];
    				}
    			});
    		
    			prevData[uncommonObj] = z_selected_leveldata[index];
    		}
    		if(!(prevArray.includes(obj.phaseName)) && i == 0){
    			prevArray.push(obj.phaseName);
    			
    		}
    		if(!(z_Selected_Array.includes(obj.phaseName))){
    			z_Selected_Array.push(obj.phaseName);
    		}
    		
    	});
    	addLevel(prevData,"4",true);
	}
	else if(z_level == "Level5"){
		z_selected_leveldata.forEach(function(obj,index){
			var uncommonObj = prevData.findIndex(function(val){
    		return val.phaseName == obj.phaseName;
    		});
    		if(uncommonObj == -1){
    			prevData.push(obj);
    		}
    		else{
    			z_selected_leveldata[index].subLevels.forEach(function(level2,level2_index){
    				var uncommonObj2 = prevData[uncommonObj].subLevels.findIndex(function(val){
        				return val.phaseName == level2.phaseName;
        			});
    				if(uncommonObj2 == -1){
    					prevData[uncommonObj].subLevels.push(level2);
    				}
    				else{
    					//prevData[uncommonObj].subLevels[uncommonObj2] = z_selected_leveldata[index].subLevels[level2_index];
    					if(level2.subLevels != null){
    						level2.subLevels.forEach(function(z_level3,z_index3){
    							var uncommonObj_3 = prevData[uncommonObj].subLevels[uncommonObj2].subLevels.findIndex(function(val_Obj){
									return val_Obj.phaseName == z_level3.phaseName;
								});
    							if(uncommonObj_3 == -1){
									prevData[uncommonObj].subLevels[uncommonObj2].subLevels.push(z_level3);
								}
								else{
									prevData[uncommonObj].subLevels[uncommonObj2].subLevels[uncommonObj_3] = z_level3;
								}
    						});
    					}
    					prevData[uncommonObj].subLevels[uncommonObj2] = z_selected_leveldata[index].subLevels[level2_index];
    				}
    			});
    		
    			prevData[uncommonObj] = z_selected_leveldata[index];
    		}
    		if(!(prevArray.includes(obj.phaseName)) && i == 0){
    			prevArray.push(obj.phaseName);
    			
    		}
    		if(!(z_Selected_Array.includes(obj.phaseName))){
    			z_Selected_Array.push(obj.phaseName);
    		}
    		
    	});
    	addLevel(prevData,"5",true);
	}
				
	        	z_data_Selected = z_selected_leveldata;
	        	z_selected_leveldata = prevData;
                z_sel_config = prevData;
                if(z_configJson_data_length < 2){
                    z_configJson_data[0].wellConfig = JSON.stringify(prevData);

                }
                else{
                    z_configJson_data[check_for_levelIndex].wellConfig = JSON.stringify(prevData);
                }
		i++;
		if(i > 0){
			var z_Selected_testArray_length = z_Selected_testArray.length;
			for(var a = 0;a < z_Selected_testArray_length;a++){
				if(!(prevArray.includes(z_Selected_testArray[a])))
				prevArray.push(z_Selected_testArray[a]);
			}
			
		}
}
var z_Aray_val = [];
var z_Aray_val2 = [];
var z_Aray_val3 = [];
var z_Aray_val5 = [];
//proceed to level2
function z_showLevels_selected(){
	var showObj = {};
	var showSubObj = {};
	var data_Select;
	var level1_phase = 0;
	var level2_phase = 0;
	var level3_phase = 0;
	var level4_phase = 0;
	var level5_phase = 0;
	var phase2 = 0;
	var phase3 = 0;
	var phase4 = 0;
	var phase5 = 0;
	var z_select_levels = $('.z-level-selection');
	z_Aray_val = [];
	z_Aray_val2 = [];
	z_Aray_val3 = [];
	z_Aray_val4 = [];
	//z_Aray_val1 = [];
	var level2Obj = {};
	var level3Obj = {};
	var level4Obj = {};
	var level5Obj = {};
	var z_select_levels_length = z_select_levels.length;
	for(var z_ar = 0;z_ar < z_select_levels_length;z_ar++){
		if(z_select_levels[z_ar].innerText.includes("+")){
			//select_phaseName = select_phaseName.substr(0,select_phaseName.length-4);
			data_Select = z_select_levels[z_ar].innerText.substr(0,z_select_levels[z_ar].innerText.length-2);
			data_Select = data_Select.replace('✓','');
			data_Select = data_Select.trim();
			if(data_Select.includes("\n")){
				data_Select = data_Select.substr(0,data_Select.length-2);
			}
			if(z_select_levels[z_ar].getAttribute("selectlevel") == "1"){
				z_Aray_val.push(data_Select.trim());
				//z_Aray_val1.push(data_Select.trim());
			}
			else if(z_select_levels[z_ar].getAttribute("selectlevel") == "2"){
				//z_Aray_val2.push(data_Select.trim());
				level2Obj['level1Phase'] = z_select_levels [z_ar].getAttribute('baselevel');
				level2Obj['level2Phase'] = data_Select.trim();
				if(z_Aray_val.includes(level2Obj['level1Phase'])){
					z_Aray_val2.push(level2Obj);
				}
				
				level2Obj = {};
			}
			else if(z_select_levels[z_ar].getAttribute("selectlevel") == "3"){
				//z_Aray_val3.push(data_Select.trim());
                if(data_Select.substr(data_Select.length-1) == "x"){
                    data_Select = data_Select.substr(0,data_Select.length-1);
                }
                level3Obj['level1Phase'] = z_select_levels [z_ar].getAttribute('baselevel');
				level3Obj['level2Phase'] = z_select_levels [z_ar].getAttribute('baselevel2');
				level3Obj['level3Phase'] = data_Select.trim();
				z_Aray_val3.push(level3Obj);
				level3Obj = {};
			}
			else if(z_select_levels[z_ar].getAttribute("selectlevel") == "4"){
				level4Obj['level1Phase'] = z_select_levels [z_ar].getAttribute('baselevel');
				level4Obj['level2Phase'] = z_select_levels [z_ar].getAttribute('baselevel2');
				level4Obj['level3Phase'] = z_select_levels [z_ar].getAttribute('baselevel3');
				level4Obj['level4Phase'] = data_Select.trim();
				z_Aray_val4.push(level4Obj);
				level4Obj = {};
			}
			else if(z_select_levels[z_ar].getAttribute("selectlevel") == "5"){
				level5Obj['level1Phase'] = z_select_levels [z_ar].getAttribute('baselevel');
				level5Obj['level2Phase'] = z_select_levels [z_ar].getAttribute('baselevel2');
				level5Obj['level3Phase'] = z_select_levels [z_ar].getAttribute('baselevel3');
				level5Obj['level4Phase'] = z_select_levels [z_ar].getAttribute('baselevel4');
				level5Obj['level5Phase'] = data_Select.trim();
				z_Aray_val5.push(level5Obj);
				level5Obj = {};
			}
			
		}
		else{
			if(z_select_levels[z_ar].getAttribute("selectlevel") == "1"){
				z_Aray_val.push(z_select_levels[z_ar].innerText.replace('✓','').trim());
			}
			else if(z_select_levels[z_ar].getAttribute("selectlevel") == "2"){
				//z_Aray_val2.push(z_select_levels[z_ar].innerText);
				level2Obj['level1Phase'] = z_select_levels [z_ar].getAttribute('baselevel');
				level2Obj['level2Phase'] = z_select_levels[z_ar].innerText.replace('✓','').trim();
				if(z_Aray_val.includes(level2Obj['level1Phase'])){
					z_Aray_val2.push(level2Obj);
				}
				level2Obj = {};
			}
			else if(z_select_levels[z_ar].getAttribute("selectlevel") == "3"){
				//z_Aray_val3.push(z_select_levels[z_ar].innerText);
				level3Obj['level1Phase'] = z_select_levels [z_ar].getAttribute('baselevel');
				level3Obj['level2Phase'] = z_select_levels [z_ar].getAttribute('baselevel2');
				level3Obj['level3Phase'] = z_select_levels[z_ar].innerText.replace('✓','').trim();
				z_Aray_val3.push(level3Obj);
				level3Obj = {};
			}
			else if(z_select_levels[z_ar].getAttribute("selectlevel") == "4"){
				level4Obj['level1Phase'] = z_select_levels [z_ar].getAttribute('baselevel');
				level4Obj['level2Phase'] = z_select_levels [z_ar].getAttribute('baselevel2');
				level4Obj['level3Phase'] = z_select_levels [z_ar].getAttribute('baselevel3');
				level4Obj['level4Phase'] = z_select_levels[z_ar].innerText.replace('✓','').trim();
				z_Aray_val4.push(level4Obj);
				level4Obj = {};
			}
			else if(z_select_levels[z_ar].getAttribute("selectlevel") == "5"){
				level5Obj['level1Phase'] = z_select_levels [z_ar].getAttribute('baselevel');
				level5Obj['level2Phase'] = z_select_levels [z_ar].getAttribute('baselevel2');
				level5Obj['level3Phase'] = z_select_levels [z_ar].getAttribute('baselevel3');
				level5Obj['level4Phase'] = z_select_levels [z_ar].getAttribute('baselevel4');
				level5Obj['level5Phase'] =	z_select_levels[z_ar].innerText.replace('✓','').trim();
				z_Aray_val5.push(level5Obj);
				level5Obj = {};
			}
			
		}
		
	}
	z_data_to_show = [];
	prevArray = z_Aray_val;
	z_Selected_Array = z_Aray_val;
	if(z_select_levels_length > 0){
		if(z_level == "Level2"){
			//if(z_selected_leveldata.length == 0){
				z_selected_leveldata = z_sel_config;
			//}
			z_selected_leveldata.forEach(function (ele,index1){
				
				if(z_Aray_val.includes(ele.phaseName.trim())){
					level1_phase = z_Aray_val2.findIndex(function(val){
						return val.level1Phase == ele.phaseName.trim();
					});
					//to check atleast one level is selected from level2 using its baselevel attribute
					if(level1_phase != -1 && level1_phase !== ""){
						ele.subLevels.forEach(function (ele2,index2){
							level2_phase = z_Aray_val2.findIndex(function(val2){
								return val2.level2Phase == ele2.phaseName.trim();
							});
							if(level2_phase != -1){
								z_selected_leveldata[index1].subLevels[index2].isSelected = true;	
							}
							else{
								z_selected_leveldata[index1].subLevels[index2].isSelected = false;
							}
						});
					}
					else{
						ele.subLevels.forEach(function (ele2,index2){
								z_selected_leveldata[index1].subLevels[index2].isSelected = false;	
						});
					}
				
					showObj['levelValue'] = ele.levelValue;
					showObj['phaseName'] = ele.phaseName;
					showObj['subLevels'] = ele.subLevels;
					showObj['isSelected'] = true;
					z_selected_leveldata[index1] = showObj;
					z_data_to_show.push(z_selected_leveldata[index1]);
					showObj = {};
				}
				else{
					z_selected_leveldata[index1].isSelected = false;
					z_selected_leveldata[index1].subLevels.forEach(function(f1,i1){
						z_selected_leveldata[index1].subLevels[i1].isSelected = false;
					});
					z_data_to_show.push(z_selected_leveldata[index1]);
				}
			});
			
			if($('#z-level21-prevphase').hasClass('d-none')){
				addLevel(z_data_to_show,"2",true);
				$('#z-check-previous-btn').attr('previous','true');
			}
			else{
				addLevel(z_data_to_show,"2");
				$('#z-check-previous-btn').attr('previous','false');
			}
				
				z_sel_config = z_selected_leveldata;
				z_data = z_selected_leveldata;
//		z_sel_config.forEach(function(val,index1){
//		var z_indexval = z_data_to_show.findIndex(function(val1){
//			return val1.phaseName == val.phaseName;
//		});
//			if(z_indexval == -1){
//				z_sel_config[index1].isSelected = false;
//			}
//			else{
//				z_sel_config[index1].isSelected = z_data_to_show;
//			}
//		});
		
			}
			else if(z_level == "Level3"){
                z_selected_leveldata = z_sel_config;
				z_selected_leveldata.forEach(function (ele,index1){
					if(z_Aray_val.includes(ele.phaseName.trim())){
						//to check level2 is selected or not
						level1_phase = z_Aray_val2.findIndex(function(level_val){
										return level_val.level1Phase == ele.phaseName.trim();
										});
				//To check level3 is selected or not using its level1 attribute value
					level2_phase = z_Aray_val3.findIndex(function(val3){
					return val3.level1Phase == ele.phaseName.trim();
				});
					if(level1_phase != -1){
						ele.subLevels.forEach(function(element1,base_index){
							phase2 = z_Aray_val2.findIndex(function(level_val2){
								return level_val2.level2Phase == element1.phaseName.trim();
							});
							phase3 = z_Aray_val3.findIndex(function(level_val3){
								return level_val3.level2Phase == element1.phaseName.trim();
							});
							if(phase2 != -1 && phase3 != -1){
								if(element1.subLevels != null){
									element1.subLevels.forEach(function(element3,index_el3){
										var check_level3 = z_Aray_val3.findIndex(function(levelVal3){
											return levelVal3.level3Phase == element3.phaseName.trim();
										});
										if(check_level3 != -1){
											z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].isSelected = true;
										}
										else{
											z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].isSelected = false;
										}
									});
								}
								z_selected_leveldata[index1].subLevels[base_index].isSelected = true;
							}
							else if(phase2 != -1 && phase3 == -1){
								if(element1.subLevels != null){
									element1.subLevels.forEach(function(element4,index_el4){
										z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el4].isSelected = false;
									});
								
							}
								z_selected_leveldata[index1].subLevels[base_index].isSelected = true;
						}
							else{
								if(element1.subLevels != null){
									element1.subLevels.forEach(function(element5,index_el5){
										z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el5].isSelected = false;
									});
								
							}
								z_selected_leveldata[index1].subLevels[base_index].isSelected = false;
							}
							
					});
					}
					else{
						z_selected_leveldata[index1].subLevels.forEach(function(f1,i1){
							if(f1.subLevels != null){
								f1.subLevels.forEach(function(e1,index_4){
									z_selected_leveldata[index1].subLevels[i1].subLevels[index_4].isSelected = false;
								});
							}
							z_selected_leveldata[index1].subLevels[i1].isSelected = false;
						});
					}
						showObj['levelValue'] = ele.levelValue;
						showObj['phaseName'] = ele.phaseName;
						showObj['subLevels'] = ele.subLevels;
						showObj['isSelected'] = true;
						z_selected_leveldata[index1] = showObj;
						z_data_to_show.push(z_selected_leveldata[index1]);
						showObj = {};
					}
					else{
						z_selected_leveldata[index1].isSelected = false;
						z_selected_leveldata[index1].subLevels.forEach(function(sub2,sub_index2){
							z_selected_leveldata[index1].subLevels[sub_index2].isSelected = false;
							if(sub2.subLevels != null){
								sub2.subLevels.forEach(function(level3,index3){
									z_selected_leveldata[index1].subLevels[sub_index2].subLevels[index3].isSelected = false;	
								});	
							}
						});
						z_data_to_show.push(z_selected_leveldata[index1]);
					}
				});
			addLevel(z_data_to_show,"3");
			z_sel_config = z_selected_leveldata;
			z_data = z_selected_leveldata;
			
			}
			else if(z_level == "Level4"){
				z_selected_leveldata = z_sel_config;
				z_selected_leveldata.forEach(function (ele,index1){
					if(z_Aray_val.includes(ele.phaseName.trim())){
						//to check level2 is selected or not
						level1_phase = z_Aray_val2.findIndex(function(level_val){
										return level_val.level1Phase == ele.phaseName.trim();
										});
				//To check level3 is selected or not using its level1 attribute value
					level2_phase = z_Aray_val3.findIndex(function(val3){
					return val3.level1Phase == ele.phaseName.trim();
				});
					level4_phase = z_Aray_val4.findIndex(function(val4){
						return val4.level1Phase == ele.phaseName.trim();
					});
					if(level1_phase != -1){
						ele.subLevels.forEach(function(element1,base_index){
							phase2 = z_Aray_val2.findIndex(function(level_val2){
								return level_val2.level2Phase == element1.phaseName.trim();
							});
							phase3 = z_Aray_val3.findIndex(function(level_val3){
								return level_val3.level2Phase == element1.phaseName.trim();
							});
							phase4 = z_Aray_val4.findIndex(function(level_val4){
								return level_val4.level2Phase == element1.phaseName.trim();
							});
							if(phase2 != -1 && phase3 != -1){
								if(element1.subLevels != null){
									element1.subLevels.forEach(function(element3,index_el3){
										var check_level3 = z_Aray_val3.findIndex(function(levelVal3){
											return levelVal3.level3Phase == element3.phaseName.trim();
										});
										if(check_level3 != -1){
											z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].isSelected = true;
											if(element3.subLevels != null){
												element3.subLevels.forEach(function(element_4,level_index4){
													var check_level4 = z_Aray_val4.findIndex(function(levelVal4){
														return levelVal4.level4Phase == element_4.phaseName.trim();
													});
													if(check_level4 != -1){
														z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].subLevels[level_index4].isSelected = true;
													}
													else{
														z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].subLevels[level_index4].isSelected = false;
													}
												});
											}
											
										}
										else{
											z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].isSelected = false;
											if(element3.subLevels != null){
												element3.subLevels.forEach(function(element_4,level_index4){
													z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].subLevels[level_index4].isSelected = false;
												});
											}
										}
									});
								}
								z_selected_leveldata[index1].subLevels[base_index].isSelected = true;
							}
							else if(phase2 != -1 && phase3 == -1){
								if(element1.subLevels != null){
									element1.subLevels.forEach(function(elementObj_3,indexValue_3){
										z_selected_leveldata[index1].subLevels[base_index].subLevels[indexValue_3].isSelected = false;
										if(elementObj_3.subLevels != null){
											elementObj_3.subLevels.forEach(function(eleObj_4,eleIndex_4){
												z_selected_leveldata[index1].subLevels[base_index].subLevels[indexValue_3].subLevels[eleIndex_4].isSelected = false;
											});
										}
									});
								
							}
								z_selected_leveldata[index1].subLevels[base_index].isSelected = true;
						}
							else{
								if(element1.subLevels != null){
									element1.subLevels.forEach(function(el3,index_El3){
										z_selected_leveldata[index1].subLevels[base_index].subLevels[index_El3].isSelected = false;
										if(el3.subLevels != null){
											el3.subLevels.forEach(function(a4,i4){
												z_selected_leveldata[index1].subLevels[base_index].subLevels[index_El3].subLevels[i4].isSelected = false;
											});
										}
									});
								
							}
								z_selected_leveldata[index1].subLevels[base_index].isSelected = false;
							}
							
					});
					}
					else{
						z_selected_leveldata[index1].subLevels.forEach(function(f1,i1){
							if(f1.subLevels != null){
								f1.subLevels.forEach(function(obj_4,index_4){
									z_selected_leveldata[index1].subLevels[i1].subLevels[index_4].isSelected = false;
									if(obj_4.subLevels != null){
										obj_4.subLevels.forEach(function(level4_phase,inDex4){
											z_selected_leveldata[index1].subLevels[i1].subLevels[index_4].subLevels[inDex4].isSelected = false;
										});
									}
								});
							}
							z_selected_leveldata[index1].subLevels[i1].isSelected = false;
						});
					}
					///
//					if(level1_phase != -1 && level2_phase != -1){}
//					else if(level1_phase != -1 && level2_phase == -1){}
//					else{}
						showObj['levelValue'] = ele.levelValue;
						showObj['phaseName'] = ele.phaseName;
						showObj['subLevels'] = ele.subLevels;
						showObj['isSelected'] = true;
						z_selected_leveldata[index1] = showObj;
						z_data_to_show.push(z_selected_leveldata[index1]);
						showObj = {};
					}
					else{
						z_selected_leveldata[index1].isSelected = false;
						z_selected_leveldata[index1].subLevels.forEach(function(sub2,sub_index2){
							z_selected_leveldata[index1].subLevels[sub_index2].isSelected = false;
							if(sub2.subLevels != null){
								sub2.subLevels.forEach(function(level3,index3){
									z_selected_leveldata[index1].subLevels[sub_index2].subLevels[index3].isSelected = false;
									if(level3.subLevels != null){
										level3.subLevels.forEach(function (level4,index4){
											z_selected_leveldata[index1].subLevels[sub_index2].subLevels[index3].subLevels[index4].isSelected = false;
										});
									}
								});	
							}
						});
						z_data_to_show.push(z_selected_leveldata[index1]);
					}
				});
			addLevel(z_data_to_show,"4");
			z_sel_config = z_selected_leveldata;
			z_data = z_selected_leveldata;
			}
			else if(z_level == "Level5"){
				z_selected_leveldata = z_sel_config;
				z_selected_leveldata.forEach(function (ele,index1){
					if(z_Aray_val.includes(ele.phaseName.trim())){
						//to check level2 is selected or not
						level1_phase = z_Aray_val2.findIndex(function(level_val){
										return level_val.level1Phase == ele.phaseName.trim();
										});
				//To check level3 is selected or not using its level1 attribute value
					level2_phase = z_Aray_val3.findIndex(function(val3){
					return val3.level1Phase == ele.phaseName.trim();
				});
					level4_phase = z_Aray_val4.findIndex(function(val4){
						return val4.level1Phase == ele.phaseName.trim();
					});
					level5_phase = z_Aray_val5.findIndex(function(val5){
						return val5.level1Phase == ele.phaseName.trim();
					});
					if(level1_phase != -1){
						ele.subLevels.forEach(function(element1,base_index){
							phase2 = z_Aray_val2.findIndex(function(level_val2){
								return level_val2.level2Phase == element1.phaseName.trim();
							});
							phase3 = z_Aray_val3.findIndex(function(level_val3){
								return level_val3.level2Phase == element1.phaseName.trim();
							});
							phase4 = z_Aray_val4.findIndex(function(level_val4){
								return level_val4.level2Phase == element1.phaseName.trim();
							});
							phase5 = z_Aray_val5.findIndex(function(level_val4){
								return level_val4.level2Phase == element1.phaseName.trim();
							});
							if(phase2 != -1 && phase3 != -1){
								if(element1.subLevels != null){
									element1.subLevels.forEach(function(element3,index_el3){
										var check_level3 = z_Aray_val3.findIndex(function(levelVal3){
											return levelVal3.level3Phase == element3.phaseName.trim();
										});
										if(check_level3 != -1){
											z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].isSelected = true;
											if(element3.subLevels != null){
												element3.subLevels.forEach(function(element_4,level_index4){
													var check_level4 = z_Aray_val4.findIndex(function(levelVal4){
														return levelVal4.level4Phase == element_4.phaseName.trim();
													});
													if(check_level4 != -1){
														z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].subLevels[level_index4].isSelected = true;
														if(element_4.subLevels != null){
															element_4.subLevels.forEach(function(element_5,level_index5){
																var check_level5 = z_Aray_val5.findIndex(function(levelVal5){
														return levelVal5.level5Phase == element_5.phaseName.trim();
															});
															if(check_level5 != -1){
								                               z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].subLevels[level_index4].subLevels[level_index5].isSelected = true;

															}
															else{
										                       z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].subLevels[level_index4].subLevels[level_index5].isSelected = false;

															}
														});
														
													}
													}
													else{
														z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].subLevels[level_index4].isSelected = false;
														if(element_4.subLevels != null){
															element_4.subLevels.forEach(function(element_5,level_index5){
													z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].subLevels[level_index4].subLevels[level_index5].isSelected = false;

															});
													}
												}
											});
											
										}
										}
										else{
											z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].isSelected = false;
											if(element3.subLevels != null){
												element3.subLevels.forEach(function(element_4,level_index4){
													z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].subLevels[level_index4].isSelected = false;
													if(element_4.subLevels != null){
															element_4.subLevels.forEach(function(element_5,level_index5){
													z_selected_leveldata[index1].subLevels[base_index].subLevels[index_el3].subLevels[level_index4].subLevels[level_index5].isSelected = false;

															});
													}
												});
											}
										}
									});
								}
								z_selected_leveldata[index1].subLevels[base_index].isSelected = true;
							}
							else if(phase2 != -1 && phase3 == -1){
								if(element1.subLevels != null){
									element1.subLevels.forEach(function(elementObj_3,indexValue_3){
										z_selected_leveldata[index1].subLevels[base_index].subLevels[indexValue_3].isSelected = false;
										if(elementObj_3.subLevels != null){
											elementObj_3.subLevels.forEach(function(eleObj_4,eleIndex_4){
												if(eleObj_4.subLevels != null){
													eleObj_4.subLevels.forEach(function(eleObj_5,eleIndex_5){
													z_selected_leveldata[index1].subLevels[base_index].subLevels[indexValue_3].subLevels[eleIndex_4].subLevels[eleIndex_5].isSelected = false;

													});
												}
												z_selected_leveldata[index1].subLevels[base_index].subLevels[indexValue_3].subLevels[eleIndex_4].isSelected = false;
											});
										}
									});
								
							}
								z_selected_leveldata[index1].subLevels[base_index].isSelected = true;
						}
							else{
								if(element1.subLevels != null){
									element1.subLevels.forEach(function(el3,index_El3){
										z_selected_leveldata[index1].subLevels[base_index].subLevels[index_El3].isSelected = false;
										if(el3.subLevels != null){
											el3.subLevels.forEach(function(a4,i4){
												if(a4.subLevels != null){
													a4.subLevels.forEach(function(a5,i5){
												z_selected_leveldata[index1].subLevels[base_index].subLevels[index_El3].subLevels[i4].subLevels[i5].isSelected = false;

													});
												}
												z_selected_leveldata[index1].subLevels[base_index].subLevels[index_El3].subLevels[i4].isSelected = false;
											});
										}
									});
								
							}
								z_selected_leveldata[index1].subLevels[base_index].isSelected = false;
							}
							
					});
					}
					else{
						z_selected_leveldata[index1].subLevels.forEach(function(f1,i1){
							if(f1.subLevels != null){
								f1.subLevels.forEach(function(obj_4,index_4){
									z_selected_leveldata[index1].subLevels[i1].subLevels[index_4].isSelected = false;
									if(obj_4.subLevels != null){
										obj_4.subLevels.forEach(function(level4_phase,inDex4){
											z_selected_leveldata[index1].subLevels[i1].subLevels[index_4].subLevels[inDex4].isSelected = false;
											if(level4_phase.subLevels != null){
												level4_phase.subLevels.forEach(function(level5_phase,inDex5){
													level5_phase.isSelected = false;
												});
											}
										});
									}
								});
							}
							z_selected_leveldata[index1].subLevels[i1].isSelected = true;
						});
					}
					///
//					if(level1_phase != -1 && level2_phase != -1){}
//					else if(level1_phase != -1 && level2_phase == -1){}
//					else{}
						showObj['levelValue'] = ele.levelValue;
						showObj['phaseName'] = ele.phaseName;
						showObj['subLevels'] = ele.subLevels;
						showObj['isSelected'] = true;
						z_selected_leveldata[index1] = showObj;
						z_data_to_show.push(z_selected_leveldata[index1]);
						showObj = {};
					}
					else{
						z_selected_leveldata[index1].isSelected = false;
						z_selected_leveldata[index1].subLevels.forEach(function(sub2,sub_index2){
							z_selected_leveldata[index1].subLevels[sub_index2].isSelected = false;
							if(sub2.subLevels != null){
								sub2.subLevels.forEach(function(level3,index3){
									z_selected_leveldata[index1].subLevels[sub_index2].subLevels[index3].isSelected = false;
									if(level3.subLevels != null){
										level3.subLevels.forEach(function (level4,index4){
											if(level4.subLevels != null){
												level4.subLevels.forEach(function(level5,index5){
											z_selected_leveldata[index1].subLevels[sub_index2].subLevels[index3].subLevels[index4].subLevels[index5].isSelected = false;

												});
											}
											z_selected_leveldata[index1].subLevels[sub_index2].subLevels[index3].subLevels[index4].isSelected = false;
										});
									}
								});	
							}
						});
						z_data_to_show.push(z_selected_leveldata[index1]);
					}
				});
			addLevel(z_data_to_show,"5");
			z_sel_config = z_selected_leveldata;
			z_data = z_selected_leveldata;
			
			}
	}
	else{
			if(z_level == "Level2"){
                z_selected_leveldata = z_sel_config;
                if($('#z-level21-prevphase').hasClass('d-none')){
                    
                    addLevel(z_selected_leveldata,"2",true);
					$('#z-check-previous-btn').attr('previous','true');
				}
				else{
					addLevel(z_selected_leveldata,"2");
					$('#z-check-previous-btn').attr('previous','false');
				}
				
				z_data = z_selected_leveldata;
			}
			else if(z_level == "Level3"){
				z_selected_leveldata = z_sel_config;
				addLevel(z_selected_leveldata,"3");
			}
//	z_selected_leveldata.forEach(function(val,ind){
//		z_Aray_val.push(val.phaseName);
//	});
	}
		
//	$('.z-sublevels-hide').removeClass('z-sublevels-hide');
//	$('.z-level2-del-btn').removeClass('d-none');
//	$('#z-level21-prevphase').removeClass('d-none');
}
function z_showNextLevel(el){
	z_showLevels_selected();
	var levelVal;
	if(typeof(el) == "string"){
		levelVal = el;
	}
	else if(typeof(el) == "object"){
		levelVal = el.getAttribute("level");
	}
	if(z_level == "Level2"){
		$('.z-sublevels-hide').addClass('z-sublevels-test');
		$('.z-sublevels-hide').removeClass('z-levelconfig-color');
		$('.z-sublevels-hide').removeClass('z-sublevels-hide');
		$('.z-level2-del-btn').removeClass('d-none');
		$('#z-level21-prevphase').removeClass('d-none');
		$('#ws-level2-proceed').addClass('d-none');
		var y = $('.z-sublevels-test');
		var selection_phase;
		var sublevels_length = y.length;
		for(var x_level = 0;x_level < sublevels_length-1;x_level++){
			if(!y[x_level].innerText.includes('Level') && !y[x_level].innerText.includes('Add Phase') && !y[x_level].innerText.includes('Save and Proceed to Well Timeline')){
				selection_phase = y[x_level].children[0].children[3].innerText;
			selection_phase = selection_phase.replace('✓','').trim();
			if(selection_phase.includes("+")){
				//selection_phase = y[x_level].innerText.substr(0,y[x_level].innerText.length-2);
				if(selection_phase.includes("\n")){
					selection_phase = selection_phase.substr(0,selection_phase.length-2);
				}
				if(z_Aray_val.includes(y[x_level].children[0].children[3].getAttribute('baselevel'))){
                    if(z_Aray_val2.length > 0){
                        var level_2 = z_Aray_val2.findIndex(function(val6){
                            return val6.level2Phase == selection_phase;
                        });
                        if(level_2 != -1){
                            $(y[x_level].children[0].children[3]).addClass('z-level-selection'); 
                        }
                    }
                    // else{
                        // $(y[x_level].children[0].children[3]).addClass('z-level-selection');
                    // }
                    
				}
			}
			else{
				if(selection_phase.includes("\n")){
					selection_phase = selection_phase.substr(0,selection_phase.length-2);
				}
                if(z_Aray_val.includes(y[x_level].children[0].children[3].getAttribute('baselevel'))){
                
                if(z_Aray_val2.length > 0){
                    var level2 = z_Aray_val2.findIndex(function(val7){
                        return val7.level2Phase == selection_phase;
                    });
                    if(level2 != -1){
                        $(y[x_level].children[0].children[3]).addClass('z-level-selection'); 
                    }
                }
                // else{
                    // $(y[x_level].children[0].children[3]).addClass('z-level-selection');
                // }
            }
			}
			}
			
		}
	}
	else if(z_level == "Level3"){
		if(levelVal == "2"){
			$('.z-sublevels-hide').removeClass('z-sublevels-hide');
			$('.z-level2-del-btn').removeClass('d-none');
			$('#z-level21-prevphase').removeClass('d-none');
			$('#ws-level2-proceed').addClass('d-none');
		}
		else if(levelVal == "3"){
			$('.z-sublevels-hide').removeClass('z-sublevels-hide');
			$('.z-sublevels3-hide').removeClass('z-sublevels3-hide');
			$('.z-level2-del-btn').removeClass('d-none');
			$('#z-level21-prevphase').removeClass('d-none');
			$('#ws-level2-proceed').addClass('d-none');
			$('#ws-level3-proceed').addClass('d-none');
        }
        else if(levelVal == "4"){
        	$('.z-sublevels-hide').removeClass('z-sublevels-hide');
			$('.z-sublevels3-hide').removeClass('z-sublevels3-hide');
			$('.z-sublevels4-hide').removeClass('z-sublevels4-hide');
        }
	}
	else if(z_level == "Level4"){
		if(levelVal == "2"){
			$('.z-sublevels-hide').removeClass('z-sublevels-hide');
		}
		else if(levelVal == "3"){
			$('.z-sublevels-hide').removeClass('z-sublevels-hide');
			$('.z-sublevels3-hide').removeClass('z-sublevels3-hide');
		}
		else if(levelVal == "4"){
			$('.z-sublevels-hide').removeClass('z-sublevels-hide');
			$('.z-sublevels3-hide').removeClass('z-sublevels3-hide');
			$('.z-sublevels4-hide').removeClass('z-sublevels4-hide');
		}
	}
	else if(z_level == "Level5"){

		if(levelVal == "2"){
			$('.z-sublevels-hide').removeClass('z-sublevels-hide');
		}
		else if(levelVal == "3"){
			$('.z-sublevels-hide').removeClass('z-sublevels-hide');
			$('.z-sublevels3-hide').removeClass('z-sublevels3-hide');
		}
		else if(levelVal == "4"){
			$('.z-sublevels-hide').removeClass('z-sublevels-hide');
			$('.z-sublevels3-hide').removeClass('z-sublevels3-hide');
			$('.z-sublevels4-hide').removeClass('z-sublevels4-hide');
		}
		else if(levelVal == "5"){
			$('.z-sublevels-hide').removeClass('z-sublevels-hide');
			$('.z-sublevels3-hide').removeClass('z-sublevels3-hide');
			$('.z-sublevels4-hide').removeClass('z-sublevels4-hide');
			$('.z-sublevels5-hide').removeClass('z-sublevels5-hide');
		}
	
	}
	
}
var baseConfig,well_config;
function getBasewellConfig(){
	$.ajax({
        url: "/api/getWellConfiguration",
        type: "GET",
        async: false,
        data: {wellId: $('#z-wellid-estimate').attr('wellId'),level:"",config:""},
        dataType: 'text',
        //contentType: 'application/json;charset=UTF-8',
        success: function (result) {
        	well_config = JSON.parse(result);
        	//baseConfig = JSON.parse(well_config[3].wellConfig);
        }});
}
//function downloadAspdf(){
//	var x = document.getElementById('z-days-level2-config1');
//	
//	html2canvas(x,{
//		   onrendered:function(canvas){
//
//		   var img=canvas.toDataURL('image/jpeg');
//		   
//		   var doc = new jsPDF();
//		   doc.addImage(img,'JPEG', 0, 0, 411, 498);
//		   doc.save('test.pdf');
//		   }
//
//		   });
//
//		  }
//var form = $('#z-days-level2-config1'),
//cache_width = form.width(),    
//cache_height = form.height(),
//a4 = [595.28, 841.89];
//function downloadAspdf(){
//        // Define variables
//        // for a5 size paper width and height
//            // Scroll screen
//            $('body').scrollTop(0);
//            // Call function createPDF
//        //create pdf
//    
//            if (cache_height > 600)
//                cache_height = 600;
//
//            // Call create canvas function
//            getCanvas().then(function (canvas) {
//                var
//                 img = canvas.toDataURL("image/png"),
//                 doc = new jsPDF({
//                     unit: 'px',
//                     format: 'a4'
//                 });
//                doc.addImage(img, 'JPEG', 10, 10, 420, cache_height);
//                doc.save('techumber-html-to-pdf.pdf');
//                form.width(cache_width);
//            });
//        
//            getCanvas();
//        // create canvas object
//      
//}
//
//function getCanvas() {
//    
//    form.width((a4[0] * 1.33333)).css('max-width', 'none');
//    return html2canvas(form, {
//        imageTimeout: 3000,
//        removeContainer: true
//    });
//}
function downloadAspdf(){
	//sketch = document.querySelector('#sketch');
	var tmp_canvas = document.getElementById("h2canvas");
	window.scrollTo(0,0);
	var canvas_element;
	//if(tmp_canvas && tmp_canvas.parentElement) tmp_canvas.parentElement.removeChild(tmp_canvas);
	if($('#z-estimation-panel').hasClass('z-estimate-panel')){
		canvas_element = document.getElementById("z-pdf");
	}
	else{
		canvas_element = document.getElementById("z-days-level2-config1");
	}
	html2canvas(canvas_element, {
		background :'#FFFFFF',
		font:20,
		onrendered: function(canvas1) {
			  canvas1.id = "h2canvas";
			  //sketch.appendChild(canvas1);
			  var img=canvas1.toDataURL('image/jpeg',1.0);
			   var doc = new jsPDF();
			   doc.addImage(img, 'JPEG', 1,1,doc.internal.pageSize.width, doc.internal.pageSize.height);
			   doc.save('test.pdf');
			  canvas = canvas1;
		}
	});
	//sketch.style.display="block";
	//document.getElementById("z-days-level2-config1").style.display="none";
}
function saveRemarks(el){
	var base = Number($(el).attr('base-level'));
	var sub = Number($(el).attr('sub-level'));
	var obj = {};
	var subobj = {};
	var baseObj = z_selected_leveldata[base].subLevels[sub];
	obj.isSelected = baseObj.isSelected;
	obj.levelValue = baseObj.levelValue;
	if(baseObj.subLevels != null){
		obj.subLevels = baseObj.subLevels;
	}
	
	obj.phaseName = baseObj.phaseName;
	obj.totalCostItem = baseObj.totalCostItem;
	obj.totalCostItemTitle = baseObj.totalCostItemTitle;
	obj.remark = el.value;
	z_selected_leveldata[base].subLevels[sub] = obj;
	z_sel_config = z_selected_leveldata;
	obj = {};
	
}
function saveRemarks_level3(el){
	var level3 = Number($(el).attr('level3-index'));
	var base = Number($(el).attr('base-level'));
	var sub = Number($(el).attr('sub-level'));
	var obj = {};
	var subobj = {};
	var baseObj = z_selected_leveldata[base].subLevels[sub].subLevels[level3];
	obj.isSelected = baseObj.isSelected;
	obj.levelValue = baseObj.levelValue;
	obj.phaseName = baseObj.phaseName;
	if(baseObj.subLevels != null){
		obj.subLevels = baseObj.subLevels;
	}
	obj.remark = el.value;
	z_selected_leveldata[base].subLevels[sub].subLevels[level3] = obj;
	z_sel_config = z_selected_leveldata;
	obj = {};
}
function saveRemarks_level4(el){
	var level4 = Number($(el).attr('level4-index'));
	var level3 = Number($(el).attr('level3-index'));
	var base = Number($(el).attr('base-level'));
	var sub = Number($(el).attr('sub-level'));
	var obj = {};
	var subobj = {};
	var baseObj = z_selected_leveldata[base].subLevels[sub].subLevels[level3].subLevels[level4];
	obj.isSelected = baseObj.isSelected;
	obj.levelValue = baseObj.levelValue;
	obj.phaseName = baseObj.phaseName;
	if(baseObj.subLevels != null){
		obj.subLevels = baseObj.subLevels;
	}
	obj.remark = el.value;
	z_selected_leveldata[base].subLevels[sub].subLevels[level3].subLevels[level4] = obj;
	z_sel_config = z_selected_leveldata;
	obj = {};

}
function z_totalCostCalulate(el){
//	var z_percentval = el.value;
//	z_percentval = z_percentval.replace(/ %/g,'');
//	z_percentval = z_percentval+" %";
//	el.value = z_percentval;
	var taxData = $('.z-calCost');
	var cont1 = taxData[0].value;
	cont1 = cont1.replace(/ %/g,'');
	var cont = Number(cont1);
	var tax1 = taxData[1].value;
	tax1 = tax1.replace(/ %/g,'');
	var tax = Number(tax1);
	
	if(cont == ""){
		cont = 0;
	}
	if(tax == ""){
		tax = 0;
	}
	var subtotal = $('.z-subCost-total');
	var sum2 = 0;
	var x,grant_totals,con_per,tax_per;
	var grant_totals1;
	var enter_val = 0;
	var subtotal_length = subtotal.length;
	for(var r =0 ;r < subtotal_length;r++){
		if(subtotal[r].getAttribute('phase2') == null){
			x = subtotal[r].value;
			x = x.replace(/,/g, '');
			x=x.split("$")[0].trim();
			if(x == ""){
				x=0;
			}
			sum2 = sum2 + Number(x);
		}
		
	}
	con_per = Math.round((sum2*cont)/100);
	tax_per = (sum2+con_per)*tax;
	tax_per = Math.round(tax_per/100);
	grant_totals = sum2+con_per+tax_per;
	grant_totals1 = grant_totals.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
	grant_totals1 = grant_totals1.split(".")[0].trim();
	$('#z-grantTotal').text(grant_totals1+" $");
	$('#z-total-costs').text(grant_totals1+" $");
	var z_tax,z_cont;
	z_tax = tax_per.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
	z_tax = z_tax.split(".")[0].trim();
	$('#z-tax-value').text(z_tax);
	z_cont = con_per.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
	z_cont = z_cont.split(".")[0].trim();
	$('#z-contigency-value').text(z_cont);
}
function cumulativeAdjustment(){
	var active_levels = $('.z-days-active.z-baseDay');
	var active_levels_length = active_levels.length;
			for(var active=0;active < active_levels_length;active++){
					var z_activeday = active_levels[active].classList[2];
					z_activeday = z_activeday.split('z-indexDay')[1];
					var active_val = Number(z_activeday);
					var z_day_active = $('.z-days'+active_val);
					//$('.z-days'+active_val).click();
					z_daysCal(z_day_active[0]);
			}
}
function granttotal_calculation(){
			$('#z-allDays1').text("");
			var result = 0;
			var z_grant_totalKey_length = z_grant_totalKey.length;
				for(a=0;a<z_grant_totalKey_length;a++){
					result = result + z_grant_totalKey[a].day;
				}
			$('#z-allDays1').text(result.toString()+" Days");
}
var cost_obj={};
function updateWellCost(){
	var data = {
					wellConfig: z_configJson_data[3].wellConfig,
					wellId: "2wer22d2d2d2d2",
					level: "2",
					configNo: "1",
					configSubmitted: false,
					configSaved: false,
					wellTimelineLocked: false,
					afeComponentsLocked: false,
					wellEstimateDays: z_configJson_data[3].wellEstimateDays, 
					wellInclineDays:JSON.stringify([]), 
					taxAndLevyData: JSON.stringify([])
					};
$.ajax({
				url: "/api/submitWellConfiguration",
				type: "POST",
				data: JSON.stringify(data),
				dataType: 'text',
				async: false,
				contentType: 'application/json;charset=UTF-8',
				success: function (result) {
				console.log("success");
				if(!($('#z-afe-timeline-panel').hasClass('z-estimate-panel'))){
					//alertPopup('success','Well Estimation Saved Successfully');
				}
				
				}
				});
	
}
function totalCostCalculate(el){
	var z_total_currency = "$";
	var level_index = $(el).attr('cost-index');
	var level_cost;
	var result = 0;
	var prev,cost;
	var rateVal,costTitle;
	var val1,val2,val3,baseLevel;
	var z_code = $(el).attr('code');
	var totalCostElement = $('.z-subtotal'+z_code);
	var finalCostElement = $('.z-final-subcost'+z_code);
	var selectedElement;
	var costArray = [];
	if(level_index.includes("-")){
		level_cost = $('.level2-cost'+level_index);
		baseLevel = level_cost[2].getAttribute('phase2');
		selectedElement = $(el).parent().parent()[0].children[2].innerText.trim();	
		z_selected_leveldata[Number(z_code)-1].subLevels.forEach(function(obj2,index2){
			if(obj2.phaseName == baseLevel){
				costTitle = obj2.totalCostItemTitle;
				if(obj2.totalCostItem[0].rateValue != null){
					rateVal = obj2.totalCostItem[0].rateValue;
				}
				else if(obj2.totalCostItem[0].subPhase[0].rateValue != null){
					rateVal = obj2.totalCostItem[0].subPhase[0].rateValue;
				}
				else if(obj2.totalCostItem[0].subPhase[0].subPhase[0].rateValue != null){
					rateVal = obj2.totalCostItem[0].subPhase[0].subPhase[0].rateValue;
				}
				
			}
		});
		
		if(rateVal.length > 0){
			if(rateVal.length == costTitle.length+1){
				cost = rateVal[rateVal.length-1];
			}
			else{
				cost = rateVal[rateVal.length-2];
			}
		}
		if(cost == null){
			cost = "0";
		}
		if(level_cost.length > 3){
			if($(el).attr('indexselect') == "1"){
				val1 = el.value;
				val2 = $(el).parent().parent().children()[4].children[0].value;
			}
			else{
				val1 = $(el).parent().parent().children()[3].children[0].value;
				val2 = el.value;
			}
			val3 = $(el).parent().parent().children()[5].children[0].value;
		}
		else{
			val1 = level_cost[0].value;
			val2 = level_cost[1].value;
			val3 = level_cost[2].value;
		}
		if(event.inputType == "deleteContentBackward"){
			if($(el).attr('indexselect') == "1"){
				val1 = val1.trim();
				prev = val1;
				val1 = val1.substr(0,val1.length-1);
			}
			else{
				val2 = val2.trim();
				prev = val2;
				val2 = val2.substr(0,val2.length-1);
			}
			(prev.includes(z_total_currency) ? prev = prev.replace(/[^\w\s]/gi, '') : prev = prev);
			prev = prev.replace(/,/g, '');
			prev = prev.trim();
			(!(isNaN(prev)) ? prev = Number(prev) : prev = 0);
		}
		
		(val1.includes(z_total_currency) ? val1 = val1.replace(/[^\w\s]/gi, '') : val1 = val1);
		(val2.includes(z_total_currency) ? val2 = val2.replace(/[^\w\s]/gi, '') : val2 = val2);
		(val3.includes(z_total_currency) ? val3 = val3.replace(/[^\w\s]/gi, '') : val3 = val3);
		(cost.includes(z_total_currency) ? cost = cost.replace(/[^\w\s]/gi, '') : cost = cost);

		
		
		val1 = val1.replace(/,/g, '');
		val2 = val2.replace(/,/g, '');
		val3 = val3.replace(/,/g, '');
		cost = cost.replace(/,/g, '');
		
		val1 = val1.trim();
		val2 = val2.trim();
		val3 = val3.trim();
		cost = cost.trim();
		
		(!(isNaN(val1)) ? val1 = Number(val1) : val1 = 0);
		(!(isNaN(val2)) ? val2 = Number(val2) : val2 = 0);
		(!(isNaN(val3)) ? val3 = Number(val3) : val3 = 0);
		(!(isNaN(cost)) ? cost = Number(cost) : cost = 0);
		
		
		if(event.inputType == "deleteContentBackward"){
				//result = Math.abs(val3 - prev);
				result = val1 + val2;
				if($(el).attr('indexselect') == "1"){
					el.value = val1 + ""+ z_total_currency;
				}
				else{
					el.value = val2 + ""+ z_total_currency;
				}
				
		}
		else{
			if($(el).attr('indexselect') == "1"){
				result = val1 + val2;
				el.value = val1 + ""+ z_total_currency;
			}
			else{
				result = val2 + val1;
				el.value = val2 + ""+ z_total_currency;
			}
		}
		result = result + cost;
		costArray[0] = val1 + " "+ z_total_currency;
		costArray[1] = val2 + " "+ z_total_currency;
		costArray[2] = result + " "+ z_total_currency;
		//level_cost[2].value = result + " "+ z_total_currency;
		z_selected_leveldata[Number(z_code)-1].subLevels.forEach(function(obj2,index2){
			if(obj2.phaseName == baseLevel){
				if(obj2.subLevels != null){
					if(obj2.subLevels.length > 0){
						obj2.subLevels.forEach(function(obj3,index3){
							if(obj3.subLevels != null){
								if(obj3.subLevels.length > 0){
									obj3.subLevels.forEach(function(obj4,index4){
										if(obj4.phaseName == selectedElement){
											obj4.totalCost = costArray;
										}
									});
								}
							}
							if(obj3.phaseName == selectedElement){
								obj3.totalCost = costArray;
							}
						});
					}
				}
				
			}
		});
	}
	else{
		var z_baselevel = $(el).parent().parent().children()[2].getAttribute('base-level');
		baseLevel = $(el).parent().parent().children()[2].innerText;
		var cost_total = 0;
		level_cost = $('.level1-cost'+level_index);
		z_selected_leveldata[Number(z_code)-1].subLevels.forEach(function(obj2,index2){
			if(obj2.phaseName == baseLevel){
				costTitle = obj2.totalCostItemTitle;
				if(obj2.totalCostItem[0].rateValue != null){
					rateVal = obj2.totalCostItem[0].rateValue;
				}
				else if(obj2.totalCostItem[0].subPhase[0].rateValue != null){
					rateVal = obj2.totalCostItem[0].subPhase[0].rateValue;
				}
				else if(obj2.totalCostItem[0].subPhase[0].subPhase[0].rateValue != null){
					rateVal = obj2.totalCostItem[0].subPhase[0].subPhase[0].rateValue;
				}
				
			}
		});
		if(rateVal.length > 0){
			if(rateVal.length == costTitle.length+1){
				cost = rateVal[rateVal.length-1];
			}
			else{
				cost = rateVal[rateVal.length-2];
			}
		}
			else{
				cost = "0";
			}
		val1 = level_cost[0].value;
		val2 = level_cost[1].value;
		val3 = level_cost[2].value;
		if(event.inputType == "deleteContentBackward"){
			if($(el).attr('indexselect') == "1"){
				val1 = val1.trim();
				val1 = val1.substr(0,val1.length-1);
			}
			else{
				val2 = val2.trim();
				val2 = val2.substr(0,val2.length-1);
			}
		}
		(val1.includes(z_total_currency) ? val1 = val1.replace(/[^\w\s]/gi, '') : val1 = val1);
		(val2.includes(z_total_currency) ? val2 = val2.replace(/[^\w\s]/gi, '') : val2 = val2);
		(val3.includes(z_total_currency) ? val3 = val3.replace(/[^\w\s]/gi, '') : val3 = val3);
		(cost.includes(z_total_currency) ? cost = cost.replace(/[^\w\s]/gi, '') : cost = cost);

		
		val1 = val1.replace(/,/g, '');
		val2 = val2.replace(/,/g, '');
		val3 = val3.replace(/,/g, '');
		cost = cost.replace(/,/g, '');
		val1 = val1.trim();
		val2 = val2.trim();
		val3 = val3.trim();
		cost = cost.trim();
		(!(isNaN(val1)) ? val1 = Number(val1) : val1 = 0);
		(!(isNaN(val2)) ? val2 = Number(val2) : val2 = 0);
		(!(isNaN(val3)) ? val3 = Number(val3) : val3 = 0);
		(!(isNaN(cost)) ? cost = Number(cost) : cost = 0);
		//result = val1 + val2 + val3;
		if(event.inputType == "deleteContentBackward"){
			result = val1 + val2;
			if($(el).attr('indexselect') == "1"){
				el.value = val1 + ""+ z_total_currency;
			}
			else{
				el.value = val2 + ""+ z_total_currency;
			}
	}
	else{
		result = val1 + val2;
		if($(el).attr('indexselect') == "1"){
			el.value = val1 + "" + z_total_currency;
		}
		else{
			el.value = val2 + "" + z_total_currency;
		}
	}
		result = cost + result;
		costArray[0] = val1 + " "+ z_total_currency;
		costArray[1] = val2 + " "+ z_total_currency;
		costArray[2] = result + " "+ z_total_currency;
		//level_cost[2].value = result + " "+ z_total_currency;
		z_selected_leveldata[Number(z_code)-1].subLevels.forEach(function(obj2,index2){
			if(obj2.phaseName == baseLevel){
				obj2.totalCost = costArray;
			}
		});
	}
	var sum1,sum2;
	sum2 = 0;
	for(var m =0;m<totalCostElement.length;m++){
		if(totalCostElement[m].getAttribute('phase2') == null){
			sum1 = totalCostElement[m].value;
			(sum1.includes(z_total_currency) ? sum1 = sum1.replace(/[^\w\s]/gi, '') : sum1 = sum1);
			sum1 = sum1.replace(/,/g, '');
			sum1 = sum1.trim();
			(!(isNaN(sum1)) ? sum1 = Number(sum1) : sum1 = 0);
			sum2 = sum2 + sum1;
		}
		
	}
	finalCostElement[0].value = sum2 + " "+ z_total_currency;
	z_totalCostCalulate();
}
var totalCostItem,totalCostTitle;
function z_daysToggle(el){
	var indexVal = $(el).attr('index');
	var totalDaysElements = $("[title-index="+indexVal+"]");
	var base_index = $('#z-base-level').attr('base-level');
	var sub_index = Number(totalDaysElements[0].getAttribute('phase')); 
	var disable_index;
	totalCostItem = z_selected_leveldata[Number(base_index)].subLevels[sub_index].totalCostItem;
	totalCostTitle = z_selected_leveldata[Number(base_index)].subLevels[sub_index].totalCostItemTitle;
	//find the total length of cost popup
	var counter = 1;
    var count=0;
	totalCostItem.forEach(function(level1,index1){
        if(level1.subPhase != null){
            if(level1.subPhase.length > 0){
                level1.subPhase.forEach(function(level2,index2){
                    if(level2.subPhase != null){
                        if(level2.subPhase.length > 0){
                            count = count + level2.subPhase.length;
                        }
                        else{
                            count = count+1;
                        }
                    }
                    else{
                        count = count+1;
                    }
                });
            }
            else{
                count = count+1;
            }
        }
        else{
            count = count+1;
        }
    });
	if(el.value.includes("Manual")){
		for(var i=0;i<totalDaysElements.length;i++){
			totalDaysElements[i].disabled = false;
			totalDaysElements[i].value = "";
		}
		totalCostItem.forEach(function(obj,index){
			if(obj.subPhase != null){
				if(obj.subPhase.length > 0){
					obj.subPhase.forEach(function(subobj,subIndex){
                        if(subobj.subPhase != null){
                            if(subobj.subPhase.length > 0){
                                subobj.subPhase.forEach(function(level3,index3){
                                    if(level3.disableIndex != null){
                                        if(level3.disableIndex.includes(indexVal)){
                                            disable_index = level3.disableIndex.indexOf(indexVal);
                                            level3.disableIndex.splice(disable_index,1);
                                        }
                                    }
                                    
                                });
                            }
                            else{
                                if(subobj.disableIndex != null){
                                    if(subobj.disableIndex.includes(indexVal)){
                                        disable_index = subobj.disableIndex.indexOf(indexVal);
                                        subobj.disableIndex.splice(disable_index,1);
                                    }
                                }
                                
                            }
                        }
                        else{
                            if(subobj.disableIndex != null){
                                if(subobj.disableIndex.includes(indexVal)){
                                    disable_index = subobj.disableIndex.indexOf(indexVal);
                                    subobj.disableIndex.splice(disable_index,1);
                                }
                            }
                            
                        }
                      
					});
				}
			}
			if(obj.disableIndex != null){
				if(obj.disableIndex.includes(indexVal)){
					disable_index = obj.disableIndex.indexOf(indexVal);
					obj.disableIndex.splice(disable_index,1);
				}
			}
		});
	}
	else{
		for(var i=0;i<totalDaysElements.length;i++){
			totalDaysElements[i].disabled = true;
			totalDaysElements[i].value = $('#z-totalDays').val();
		}
		totalCostItem.forEach(function(obj,index){
			if(obj.subPhase != null){
				if(obj.subPhase.length > 0){
					obj.subPhase.forEach(function(subobj,subIndex){
                        if(subobj.subPhase != null){
                            if(subobj.subPhase.length >0){
                                subobj.subPhase.forEach(function(level3,index3){
                                    if(level3.disableIndex != null){
                                        if(!(level3.disableIndex.includes(indexVal))){
                                            level3.disableIndex.push(indexVal);
                                        }
                                    }
                                   
                                });
                            }
                            else{
                                if(subobj.disableIndex != null){
                                    if(!(subobj.disableIndex.includes(indexVal))){
                                        subobj.disableIndex.push(indexVal);
                                    }
                                }
                               
                            }
                        }
                        if(subobj.disableIndex != null){
                            if(!(subobj.disableIndex.includes(indexVal))){
                                subobj.disableIndex.push(indexVal);
                            }
                        }
                        
					});
				}
			}
			if(obj.disableIndex != null){
				if(!(obj.disableIndex.includes(indexVal))){
					obj.disableIndex.push(indexVal);
				}
			}
		});
    }
    z_save_auto_toggle();
	z_sel_config = z_selected_leveldata;
	var cost_element = $('.z-viewCost')[1];
	var grant_total_class = 'z-grantTotal-element'+cost_element.getAttribute('phase');
	//console.log("counter"+counter);
	z_totalCost_cal(cost_element,grant_total_class);
    if(!(z_level == "Level4")){
        for(j =0;j<count;j++){
            cost_element = $('.z-viewCost')[counter];
            grant_total_class = 'z-grantTotal-element'+cost_element.getAttribute('phase');
            //console.log("counter"+counter);
            z_totalCost_cal(cost_element,grant_total_class);
            counter = counter + totalCostTitle.length;
        }
    }
  
	z_sel_config = z_selected_leveldata;
}
function z_showDaysTable_level3(el,level,add){
	var z_selected_day = $('#z-level4-days');
	var sel_index_check = -1;
	var z_check_For_duplicate;
	var z_activedays = $('.z-days-active.z-baseDay');
	var z_activedays_length = z_activedays.length;
	var wellDays_data_level4_length = wellDays_data_level4.length;
	var z_baselevel_length;
    var z_days_level_length;
/* 	for(var i = 0; i < z_activedays_length;i++){
		if(!(z_selected_days_data.includes($(z_activedays[i]).children().children()[1].innerText))){
			z_selected_days_data.push($(z_activedays[i]).children().children()[1].innerText);
		}
	} */
	if(typeof(el) == "object"){
		z_check_For_duplicate = el.value;
	}
	else{
		z_check_For_duplicate = el;
	}
	if(z_Element_toAdd.length > 0){
		sel_index_check = z_Element_toAdd.findIndex(function(val){
			return el.value == val.phase;
				
			});
		}
	if(sel_index_check != -1){
		z_savewellConfig();
		wellDays_data_level4.push(z_Element_toAdd[sel_index_check]);
		
		//$('.z-option-days1').remove();
		$('.z-days-datum').remove();
		z_showSubPhaseday_level4(wellDays_data_level4_length-1);
		//$('.z-days-active').removeClass('z-days-active');
		var z_selected_days_data_length = z_selected_days_data.length;
		for(var j=0;j<z_selected_days_data_length;j++){
		
			for(var i = 1 ; i <= wellDays_data_level4_length;i++){
			var z_baselevel = $('.z-level1-day'+ i);
			var z_days_level = $('.z-days-level'+ i);
			z_baselevel_length = z_baselevel.length;
            z_days_level_length = z_days_level.length;
			if(z_baselevel_length > 0 && z_days_level_length > 0){
					if(z_baselevel[0].innerText.includes(z_selected_days_data[j])){
						$(z_days_level).removeClass('d-none');
						$(z_days_level).addClass('z-days-active');
						//$(z_days_level[0]).children().children()[0].innerText = j+1;
						break;
						}
			}
			}
		}
	}
	
	else{
		if(!(z_selected_days_data.includes(z_check_For_duplicate))){
	        //z_selected_days_data.push(z_check_For_duplicate);
	        wellDays_data_level4.forEach(function(obj,val){
	        	if(obj.phase == el.value || obj.phase == el){
	        		if(add == "add"){
						obj['isSubmitted'] = true;
					}
					else{
						obj['isSubmitted'] = false;
					}
	        	}
	        });
	    }
		else{
			if(check_for_save){
				//alertPopup('alert','already exists in days table');
				
			}
			check_for_save = true;
			
		}
		
		//$('.z-days-active').removeClass('z-days-active');
		for(var i = 1 ; i <= wellDays_data_level4_length;i++){
		var z_baselevel = $('.z-level1-day'+ i);
		var z_days_level = $('.z-days-level'+ i);
		z_baselevel_length = z_baselevel.length;
z_days_level_length = z_days_level.length;
		if(z_baselevel_length > 0 && z_days_level_length > 0){
			if((typeof(el) == "string")){
					if(z_baselevel[0].innerText.includes(el)){
						if(add == "remove"){
						//$(z_days_level).remove();
						$('.z-clear-input'+(i)).val('');
						$('.z-clear-text'+(i)).text('');
						$(z_days_level).removeClass('z-days-active');
					$(z_days_level).addClass('d-none');
					     break;
					}
					else{
						$(z_days_level).removeClass('d-none');
					$(z_days_level).addClass('z-days-active');
					break;
					}
					}
					
			}
			else{
				if(z_baselevel[0].innerText.includes(el)){
					//$(z_days_level).remove();
					$(z_days_level).removeClass('z-days-active');
					$(z_days_level).addClass('d-none');
					break;
				}
				if(level != null){
					if(level == "2"){
						var z_days_level_length = z_days_level.length;
						for(var k = 0; k < z_days_level_length;k++){
							if(z_days_level[k].innerText.includes(el)){
								$(z_days_level[k]).remove();
							}
						}
					}
				}
				
			}
		}
		}
		//$('.z-option-days1').remove();
/* var m = $("#z-level4-days")[0].options;
		var m_length = m.length;
		for(var opt=1;opt<m_length;opt++){
			if(!(option_array.includes(m[opt].value))){
				option_array.push(m[opt].value);
			}
			
		} */
		/* var z_element;
		wellDays_data_level4.forEach(function(obj,h){
//	    	if(!(z_selected_days_data.includes(obj.phase))){
			if(!(option_array.includes(obj.phase))){
			var z_customItem = document.createElement('option');
	    	z_customItem.setAttribute('value',obj.phase);
	    	z_customItem.innerHTML = obj.phase;
	    	z_customItem.classList.add('z-option-days1');
	    	//$('#z-level1-days').append(z_customItem);
	    	var z_element = option_array.indexOf(wellDays_data_level4[h-1].phase);
	    	m.add(z_customItem,z_element+1);
			}
			
	}); */
		/* if(!(typeof(el) == "string")){
			var y = $('#z-level1-days')[0];
			y.options.selectedIndex = "0";
		} */
	}
	$('.hide-data').addClass('d-none');
	z_serialNumberAdjust();
	var addedElement = $('[base-level="'+z_check_For_duplicate+'"]');
	var added_index = Number(addedElement[0].classList[1].split("z-days")[1]);
	var grantObj = {};
	var current_index = z_grant_totalKey.findIndex(function (obj) {
        return (obj['phase'] == z_check_For_duplicate.trim());
    });
	if(current_index == -1){
		grantObj.phase = z_check_For_duplicate;
		grantObj.indexVal = added_index;
		grantObj.day = 0;
		z_grant_totalKey.push(grantObj);
		grantObj = {};
	}
	$('.z-days-font').removeClass('z-levelconfig-color');
	//cumulativeAdjustment();
}
//for level4
function z_showSubPhaseday_level4(sel_index){


	//$('.z-days-datum').remove();
	var z_line_input1 = "";
	var z_line_input2 = "";
	var z_line_input3 = "";
	var z_line_input4 = "";
	var z_totalline_input4 = "";
/* 	var y = $("#z-level4-days")[0].options;
	var y_length = y.length;
	for(var opt=1;opt<y_length;opt++){
		if(!(option_array.includes(y[opt].value))){
			option_array.push(y[opt].value);
		}
		
	} */
	
/* 	wellDays_data_level4.forEach(function(obj,i){
		if(!(option_array.includes(obj.phase))){
			var phase1days = document.createElement('option');
			phase1days.setAttribute('value',obj.phase);
			phase1days.classList.add('z-option-days1');
			phase1days.innerHTML = obj.phase;
			var z_element_y = option_array.indexOf(wellDays_data[i-1].phase);
			y.add(phase1days,z_element_y);
			
		}
	}); */
	/* var z_day_select = $('#z-level4-days');
	z_day_select[0].options.selectedIndex = sel_index+1; */
	var level4_no = 0;
	var level4_code;
	var subPhase_length1;
	var subPhase_lineInput_length1;
	var subPhase_length2;
	var subPhase_lineInput_length2;
	var subPhase_length3;
	var subPhase_lineInput_length3;
	wellDays_data_level4.forEach(function(obj,i){
		//for level1
		if(obj.subPhase !=null){
		subPhase_length1 = obj.subPhase.length;
		if(subPhase_length1 > 0){
			$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' z-days-datum z-baseDay z-days-level'+ (i+1) +' z-level1-day'+ (i+1) + ' d-none hide-data">'+
		            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
		            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
		            '<div class="d-flex z-daysWidth1-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)"><b>'+obj.phase+'</b><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
		}
		else{
			if(obj.lineInput != null){
				z_line_input1 = obj.lineInput[0];
				z_line_input2 = obj.lineInput[1];
			}
		$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' z-baseDay z-days-datum z-days-level'+ (i+1) + ' z-level1-day'+ (i+1) + ' d-none hide-data">'+
		            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
		            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
		            '<div class="d-flex z-daysWidth1-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)">'+obj.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-wellTesting" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+'" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
	               '<div class="z-codeWidth z-l-configbottom z-l-grey-color z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
	
		}
		}
		else{
			if(obj.lineInput != null){
				z_line_input1 = obj.lineInput[0];
				z_line_input2 = obj.lineInput[1];
			}
		$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-indexDay'+(i+1)+' z-baseDay z-days-datum z-days-level'+ (i+1) + ' z-level1-day'+ (i+1) + ' d-none hide-data">'+
		            '<div id="z-Estimaterig-level1cost" class="row z-borderBottom">'+
		            '<div class="z-noWidth z-l-configbottom z-l-grey-color">'+(i+1)+'</div>'+
		            '<div class="d-flex z-daysWidth1-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)">'+obj.phase+'<div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level3 flex-row" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="1" level="1">+</div></div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-wellTesting" type="text" code="'+ (i+1) +'" name="" select-input="0" base-level="'+obj.phase+'" oninput = "z_daysCal(this)" value="'+ z_line_input1 + '"></div>'+
	               '<div class="z-codeWidth z-l-configbottom z-clear-text'+(i+1)+' z-l-grey-color z-cumulative'+ (i+1) +'">'+ z_line_input2 + '</div></div></div>');
	
		}
		//for level2
		if(obj.subPhase != null){
		obj.subPhase.forEach(function(obj1,j){
			//for level2 -- it has total phase value for level 2
			subPhase_lineInput_length1 = obj1.lineInput.length;
			if(subPhase_lineInput_length1 > 0 ){
				z_line_input1 = obj1.lineInput[0];
				if(subPhase_lineInput_length1 > 1){
					z_line_input2 = obj1.lineInput[1];	
				}
				
			}
			//it has level 2 entry
			$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none hide-data">'+
		            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
	            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj1.phase+'<div class="z-l-closeBtn-level4-days2 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="2" level="2" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level4-days2" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="2" level="2">+</div></div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');
			//for level 3 
			if(obj1.subPhase != null){
			subPhase_length2 = obj1.subPhase.length;
			if(subPhase_length2 > 0){
				obj1.subPhase.forEach(function(obj2,k){
							subPhase_lineInput_length2 = obj2.lineInput.length;
							if(subPhase_lineInput_length2 > 0 ){
								z_line_input_level31 = obj2.lineInput[0];
								if(subPhase_lineInput_length2 > 1){
									z_line_input_level32 = obj2.lineInput[1];	
								}
								
							}
							if(obj2.subPhase != null){
								$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none hide-data">'+
							            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
						            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-closeBtn-level4-days3 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days3" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
							               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+'">'+ z_line_input_level32 + '</div></div></div>');
							
							}
							else{
								if(j == 0 && k == 0){
									$('#z-estimateDay41').append('<div class="col-12 z-tableData z-days-datum z-days-level'+ (i+1) + ' d-none">'+
							            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
						            '<div class="col-1 z-l-configbottom z-l-grey-color z-serial-number-level4" serial-number="true">'+ (i+1) + '</div>'+
							            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
							            '<div class="col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-closeBtn-level4-days3 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days3" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
							            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level31 + '"></div>'+
							               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input_level32 + '</div></div></div>');
							
								}
								else{
									$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none">'+
							            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
						            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
							            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
							            '<div class="col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj2.phase+'<div class="z-l-closeBtn-level4-days3 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="3" level="3" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days3" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="3" level="3">+</div></div>'+
							            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
							            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level31 + '"></div>'+
							               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input_level32 + '</div></div></div>');
							
								}
								
							}
								//for level 4
							if(obj2.subPhase != null){
							subPhase_length3 = obj2.subPhase.length;
							if(subPhase_length3 > 0){
								obj2.subPhase.forEach(function(obj4,k4){
									subPhase_lineInput_length3 = obj4.lineInput.length;
									if(subPhase_lineInput_length3 > 0 ){
										z_line_input_level41 = obj4.lineInput[0];
										if(subPhase_lineInput_length3 > 1){
											z_line_input_level42 = obj4.lineInput[1];	
										}
										
									}
									level4_code = i + ""+ j + ""+ k;
									if(j == 0 && k == 0 && k4 == 0){
										$('#z-estimateDay41').append('<div class="col-12 z-tableData z-days-datum z-days-level'+ (i+1) + ' d-none">'+
								            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
							            '<div class="col-1 z-l-configbottom z-l-grey-color z-serial-number-level4" serial-number="true">'+(i+1)+'</div>'+
								            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj4.phase+'<div class="z-l-closeBtn-level4-days4 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days4" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="4" level="4">+</div></div>'+
								            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +' z-level4'+level4_code+'" level4-code="'+level4_code+'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level41 + '"></div>'+
								               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input_level42 + '</div></div></div>');
							
									}
									else{
										$('#z-estimateDay41').append('<div class="col-12 z-tableData z-days-datum z-days-level'+ (i+1) + ' d-none">'+
								            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
							            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
								            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color d-none"></div>'+
								            '<div class="col-5 z-l-configbottom z-l-grey-color z-tableData-row z-cost-content" onclick="z_configActive(this)" onmouseover="z_levels_hover(this)" baseLineItem="'+ obj.phase + '">'+obj4.phase+'<div class="z-l-closeBtn-level4-days4 z-l-phasebtn z-addconfig" data-toggle="tooltip" onclick="z_deleteLineItems(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-level4-days4" data-toggle="tooltip" onclick="z_addcustomItems(this)" title="Add Phase" levels="4" level="4">+</div></div>'+
								            '<div class="col-2 z-l-configbottom z-l-grey-color"><input id="z-rigcost" class="w-100 z-clear-input'+(i+1)+' z-days'+ (i+1) +' z-level2-Indexday'+ j +' z-level4'+level4_code+'" level4-code="'+level4_code+'" type="text" code="'+ (i+1) +'" level2-code="'+ j +'" name="" select-input="0" base-level="'+obj.phase+ '" oninput = "z_daysCal(this)" value="'+ z_line_input_level41 + '"></div>'+
								               '<div class="col-2 z-l-configbottom z-l-grey-color text-center z-clear-text'+(i+1)+' z-cumulative'+ (i+1) +'">'+ z_line_input_level42 + '</div></div></div>');
							
									}
									
								});
							}
							//level3 total phase
							if(obj2.lineInput != null){
								z_totalline_input4 = obj2.lineInput[0];
							}
							$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none hide-data">'+
						            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
					            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
						            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
						            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color"></div>'+
						            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color">Total Days</div>'+
						            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-clear-text'+(i+1)+' z-config-content z-level4-totaldays'+ (i+1) +' z-cost-content z-level4-total'+level4_code+'" level4-code="'+level4_code+'">'+ z_totalline_input4 +'</div>'+
						            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
						               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');
							}
							

				
						
				});
			}
		}
			//level2 total phase
			$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) + ' d-none hide-data">'+
		            '<div id="z-Estimaterig-level2cost" class="row z-borderBottom">'+
	            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"></div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color">Total Days</div>'+
		            '<div class="z-daysWidth2-level4 z-l-configbottom z-l-grey-color z-config-content z-clear-text'+(i+1)+' z-level2-totaldays'+ (i+1) +' z-cost-content">'+ z_line_input1 +'</div>'+
		            '<div class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
		               '<div class="z-codeWidth z-l-configbottom z-l-grey-color text-center"></div></div></div>');

		});
	}
		//level1 total days
		var totalPhase_lineInput_length2; 
		obj.totalPhase.forEach(function(obj4,m){
			totalPhase_lineInput_length2 = obj4.lineInput.length;
			if(totalPhase_lineInput_length2 > 0){
				z_line_total_input1 = obj4.lineInput[0];
			}
			$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum z-days-level'+ (i+1) +' d-none">'+
		            '<div id="z-Estimaterig-level3cost" class="row z-borderBottom">'+
			            '<div class="col-1 z-l-configbottom z-l-grey-color"></div>'+
			            '<div class="col-5 z-l-configbottom text-right z-total-colorBlue z-cost-content">'+obj4.phase+'</div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom z-total-colorBlue z-days-font d-none"></div>'+
			            '<div class="z-daysWidth2-level4 z-l-configbottom text-right z-total-colorBlue z-cost-content d-none"></div>'+
			            '<div class="col-2 z-l-configbottom z-totaldayscal z-l-grey-color z-total-check z-cost-content z-clear-text'+(i+1)+' z-totalEstimate-days'+ (i+1) +'">'+ z_line_total_input1 + '</div>'+
			               '<div class="col-2 z-l-configbottom z-l-grey-color"></div></div></div>');
		});
	});
	$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum">'+
            '<div id="z-totalcost3" class="row z-borderBottom">'+
            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
            '<div class="z-daysWidth1-level4 z-l-configbottom text-right z-total-colorBlue"><b>TOTAL DAYS</b></div>'+
            '<div id="z-costGrant-total" class="z-daysWidth2 z-l-configbottom z-l-grey-color"></div>'+
            '<div id="z-estimate-grantTotal" class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
               '<div id="z-allDays1" class="z-codeWidth font-weight-bold z-l-configbottom z-total-colorBlue z-l-grey-color"></div></div></div>');
	$('#z-estimateDay41').append('<div class="col-12 z-tableData-row z-days-datum">'+
            '<div id="z-totalcost3" class="row">'+
            '<div class="z-noWidth z-l-configbottom z-l-grey-color"></div>'+
            '<div class="z-daysWidth1-level4 z-l-configbottom"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_deleteLineItems(this)">Delete Line Items</div></div>'+
            '<div id="z-costGrant-total" class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="2" onclick="z_deleteLineItems(this)">Delete Line Items</div></div>'+
            '<div id="z-costGrant-total-level2" class="z-daysWidth1-level4 z-l-configbottom z-l-grey-color"><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="3" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="3" onclick="z_deleteLineItems(this)">Delete Line Items</div><div class="btn btn-link" onclick="z_activities_fn(this)">Back to Phases</div></div>'+
            '<div id="z-estimate-grantTotal" class="z-codeWidth z-l-configbottom z-l-grey-color"></div>'+
               '<div id="z-all" class="z-codeWidth z-l-configbottom z-l-grey-color"></div></div></div>');
	/* var z_days_index_lev_2 = $('#z-level4-days');
	z_days_index_lev_2[0].options.selectedIndex = 0; */

}
//Average Model selection
var average_select;
function change_Average(el){
	average_select = el.value;
}
//Average Model for cost component
function z_costModel(el){
	var subCost_element = el;
    var z_total_currency = "$";
    var z_phase_name_val;
	if(average_select == "Fresh Entry"){
        if($(el).attr('current-phase') == "2"){
            z_phase_name_val = el.innerText.trim();
        }
        else if($(el).attr('current-phase') == "3"){
            z_phase_name_val = $(el).attr('level2-name');
        }
        else if($(el).attr('current-phase') == "4"){
            z_phase_name_val = $(el).attr('level2-name');
        }
       
		 z_selected_leveldata[Number(el.getAttribute('base-level'))].subLevels.forEach(function(testObj,testIndex){
				if(z_phase_name_val.trim() == testObj.phaseName){
					if(testObj.totalCostItem != null){
						if(testObj.totalCostItem.length >0){
							totalCostCheck = true;
						}
						else{
							totalCostCheck = false;
						}
					}
					else{
						totalCostCheck = false;
					}
					
				}
			 });
			 if(totalCostCheck){
				z_cost_popup(el);
		        var cost_element = $('.z-viewCost')[1];
		            var grant_total_class = 'z-grantTotal-element'+cost_element.getAttribute('phase');
				
		            z_totalCost_cal(cost_element,grant_total_class);
		        
				
				var subIndex = Number(cost_element.getAttribute('phase'));
				var baseIndex = Number(el.getAttribute('base-level'));
				var z_totalCostItem = z_selected_leveldata[Number(baseIndex)].subLevels[subIndex].totalCostItem;
		        var z_totalCostTitle = z_selected_leveldata[Number(baseIndex)].subLevels[subIndex].totalCostItemTitle;
		        totalCostTitle = z_totalCostTitle;
				var z_counter = 1;
				var z_count=0;
		        z_totalCostItem.forEach(function(level1,index1){
		            if(level1.subPhase != null){
		                if(level1.subPhase.length > 0){
		                    level1.subPhase.forEach(function(level2,index2){
		                        if(level2.subPhase != null){
		                            if(level2.subPhase.length > 0){
		                                z_count = z_count + level2.subPhase.length;
		                            }
		                            else{
		                                z_count = z_count+1;
		                            }
		                        }
		                        else{
		                            z_count = z_count+1;
		                        }
		                    });
		                }
		                else{
		                    z_count = z_count+1;
		                }
		            }
		            else{
		                z_count = z_count+1;
		            }
		        });
				var totalDay_index = z_totalCostTitle.indexOf("Total Days");
				var selectDays = $('.z-toggleClass')[0];
				if(z_totalCostItem[0].subPhase != null){
					if(z_totalCostItem[0].subPhase.length > 0){
		                if(z_totalCostItem[0].subPhase[0].subPhase != null){
		                    if(z_totalCostItem[0].subPhase[0].subPhase.length >0){
								if(z_totalCostItem[0].subPhase[0].subPhase[0].subPhase != null){
									 if(!(z_totalCostItem[0].subPhase[0].subPhase[0].subPhase[0].disableIndex.includes(totalDay_index.toString()))){
		                            selectDays.options.selectedIndex = 1;
		                        }
		                        else{
		                            selectDays.options.selectedIndex = 0;
		                        }
								}
								else{
									 if(!(z_totalCostItem[0].subPhase[0].subPhase[0].disableIndex.includes(totalDay_index.toString()))){
		                            selectDays.options.selectedIndex = 1;
		                        }
		                        else{
		                            selectDays.options.selectedIndex = 0;
		                        }
								}
		                               
		                    }
		                    else{
		                        if(!(z_totalCostItem[0].subPhase[0].disableIndex.includes(totalDay_index.toString()))){
		                            selectDays.options.selectedIndex = 1;
		                        }
		                        else{
		                            selectDays.options.selectedIndex = 0;
		                        } 
		                    }
		                }
		                else{
		                    if(!(z_totalCostItem[0].subPhase[0].disableIndex.includes(totalDay_index.toString()))){
		                        selectDays.options.selectedIndex = 1;
		                    }
		                    else{
		                        selectDays.options.selectedIndex = 0;
		                    }
		                }
		               
					}
					else{
						if(!(z_totalCostItem[0].disableIndex.includes(totalDay_index.toString()))){
							selectDays.options.selectedIndex = 1;
						}
						else{
							selectDays.options.selectedIndex = 0;
						}
					}
				}
				else{
					if(!(z_totalCostItem[0].disableIndex.includes(totalDay_index.toString()))){
						selectDays.options.selectedIndex = 1;
					}
					else{
						selectDays.options.selectedIndex = 0;
					}
				}
		        if(!(z_level == "Level4")){
		            for(j =0;j<z_count;j++){
		                cost_element = $('.z-viewCost')[z_counter];
		                grant_total_class = 'z-grantTotal-element'+cost_element.getAttribute('phase');
		                //console.log("counter"+counter);
		                z_totalCost_cal(cost_element,grant_total_class);
		                z_counter = z_counter + z_totalCostTitle.length;
		            }
		        }
		        else if(z_level == "Level4"){
		            totalCostItem = z_totalCostItem;
		            z_save_auto_toggle();
		        }
								console.log("totalCostItem"+z_totalCostItem);

			 }
			 else{
				 alertPopup('alert','Calculation sheet has not been Added');
			 }
				
		        
			}
	else{
		var phase_name = el.innerText.split("choose")[0];
		var ratevalue = 0;
		var result_rateVal;
		var sum_of_ratevalue = 0;
        var avg_of_ratevalue,level,configuration_data,rateValueData;
        phase_name = phase_name.trim();
        var z_totalCost_Item;
        var rateValueArray = [];
        var z_selectedWell = [];
        var oldwell,selectWells;
        var z_selected_WellsArray = [];
        var wellId = $('#z-wellid-estimate').attr('wellid');
        popup();
        for(var k in z_new_WellId){
            if(z_new_WellId[k].wellId != wellId){
            	var index_Val = z_allWell_Data.findIndex(function(val,index){
                    return val.id == z_new_WellId[k].wellId;
                });
            	if(index_Val != -1){
            		var well_Name = z_allWell_Data[index_Val].name;
                    if(z_allWell_Data[index_Val].oldWell == "true"){
                    	oldwell = "oldWell"
                    }
                    else{
                    	oldwell = "NewWell"
                    }
                    $('#notSelectedwell_list').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
                    '<div class="z-phaseName-average-select">'+well_Name+' ('+oldwell+')'+'</div></div>');
            	}
                
            }
        	
        }
        $('#z-averagePhase-Submitbtn').on('click', function (el) {
            var z_selected_average_phase = document.getElementsByClassName('z-phaseName-average-select');
            for(var m = 0; m < z_selected_average_phase.length;m++){
                if(z_selected_average_phase[m].previousElementSibling.checked){
                	selectWells = z_selected_average_phase[m].innerText.split(" (")[0].trim();
                	z_selected_WellsArray.push(selectWells);
                	var well_index = z_allWell_Data.findIndex(function(val_1,index_1){
                        return val_1.name == selectWells;
                    });
                    var config_index = z_new_WellId.findIndex(function(val_2,index_2){
                        return val_2.wellId == z_allWell_Data[well_index].id;
                    });
                    z_selectedWell.push(z_new_WellId[config_index]);
                }
            }
        	for(var i in z_selectedWell){
                if(z_selectedWell[i].wellConfig != null){
                    configuration_data = JSON.parse(z_selectedWell[i].wellConfig);

                    if(z_selectedWell[i].levelValue == "4"){
                        configuration_data.forEach(function(val1,index1){
                            if(val1.subLevels != null){
                                val1.subLevels.forEach(function(val2,index2){
                                    if(val2.phaseName == phase_name){
                                        z_totalCost_Item = val2.totalCostItem;
                                        if(z_totalCost_Item[0].subPhase != null){
                                            z_totalCost_Item[0].subPhase.forEach(function(item2,index2){
                                                if(item2.subPhase != null){
                                                    item2.subPhase.forEach(function(item3,index3){
                                                        if(item3.rateValue.length > 0){
                                                            rateValueData = item3.rateValue[item3.rateValue.length-1];
                                                        }
                                                        else{
                                                            rateValueData = "0";
                                                        }
                                                        
                                                    });
                                                }
                                                else{
                                                    if(item2.rateValue.length > 0){
                                                        rateValueData = item2.rateValue[item2.rateValue.length-1];
                                                    }
                                                    else{
                                                        rateValueData = "0";
                                                    }
                                                    
                                                }
                                                
                                            });
                                        }
                                        else{
                                            if(val2.totalCostItem[0].rateValue.length > 0){
                                                rateValueData = val2.totalCostItem[0].rateValue[val2.totalCostItem[0].rateValue.length-1];
                                            }
                                            else{
                                                rateValueData = "0";
                                            }
                                            
                                        }
                                        
                                        console.log("ratevalue"+rateValueData);
                                    }
                                });
                            }
                        });
                    }
                    else if(z_selectedWell[i].levelValue == "3"){
                       
                        configuration_data.forEach(function(val1,index1){
                            if(val1.subLevels != null){
                                val1.subLevels.forEach(function(val2,index2){
                                    if(val2.phaseName == phase_name){
                                        z_totalCost_Item = val2.totalCostItem;
                                        if(z_totalCost_Item[0].subPhase != null){
                                            z_totalCost_Item[0].subPhase.forEach(function(item2,index2){
                                                if(item2.subPhase != null){
                                                    item2.subPhase.forEach(function(item3,index3){
                                                        if(item3.rateValue.length > 0){
                                                            rateValueData = item3.rateValue[item3.rateValue.length-1];
                                                        }
                                                        else{
                                                            rateValueData = "0";
                                                        }
                                                        
                                                    });
                                                }
                                                else{
                                                    if(item2.rateValue.length > 0){
                                                        rateValueData = item2.rateValue[item2.rateValue.length-1];
                                                    }
                                                    else{
                                                        rateValueData = "0";
                                                    }
                                                    
                                                }
                                                
                                            });
                                        }
                                        else{
                                            if(val2.totalCostItem[0].rateValue.length > 0){
                                                rateValueData = val2.totalCostItem[0].rateValue[val2.totalCostItem[0].rateValue.length-1];
                                            }
                                            else{
                                                rateValueData = "0";
                                            }
                                            
                                        }
                                        
                                        console.log("ratevalue"+rateValueData);
                                    }
                                });
                            }
                        });
                    }
                    else if(z_selectedWell[i].levelValue == "2"){
                        configuration_data.forEach(function(val1,index1){
                            if(val1.subLevels != null){
                                val1.subLevels.forEach(function(val2,index2){
                                    if(val2.phaseName == phase_name){
                                        if(val2.totalCostItem[0].rateValue.length > 0){
                                            rateValueData = val2.totalCostItem[0].rateValue[val2.totalCostItem[0].rateValue.length-1];
                                        }
                                        else{
                                            rateValueData = "0";
                                        }
                                        
                                        
                                    }
                                });
                            }
                        });
                    }
                    else{
                        rateValueData = "0";
                    }
                    if(rateValueData != null){
                    	  rateValueData = rateValueData.split("$")[0].trim();
                          rateValueArray.push(Number(rateValueData));
                    }
                  
                }
                
                else{
                    rateValueData = "0";
                    rateValueArray.push(Number(rateValueData));
                }
                if(rateValueData == null){
                	rateValueData = "0";
                	rateValueData = rateValueData.split("$")[0].trim();
                    rateValueArray.push(Number(rateValueData));
                }
            }
            for(var j in rateValueArray){
                sum_of_ratevalue = sum_of_ratevalue + rateValueArray[j];
            }
            sum_of_ratevalue = sum_of_ratevalue/z_selected_WellsArray.length;
    		console.log("ratevalueArray"+z_selected_WellsArray);
    		var result_cost = sum_of_ratevalue.toString();
    		if(result_cost.split(".").length > 1){
    			result_cost = result_cost.split(".")[0]+ "." +result_cost.split(".")[1].substr(0,2);
    		}
    		else{
    			result_cost = result_cost;
    		}
    		$(subCost_element).next().next().next().next().children()[0].value = result_cost+" $";
            $('#z-averageModel').modal('hide');
            z_totalCostCalulate();
            var x=$(subCost_element).next().next().next().next().children()[0];
            var z_class_val1 = x.classList[x.classList.length-1].split("z-subtotal")[1];
        	var class_index1 = Number(z_class_val1);
        	var z_levelcost1 = $('.z-final-subcost'+class_index1);
        	var z_subtotalCost1 = $('.z-subtotal'+class_index1);
        	var x_total1 = 0;
        	var sum1 = 0;
        	for(var sum = 0;sum < z_subtotalCost1.length;sum++){
        		if(z_subtotalCost1[sum].value == ""){
        			x_total1 = 0;	
        		}
        		else{
        			var z_filter = z_subtotalCost1[sum].value;
        			
        			z_filter = z_filter.replace(/,/g, '');
        			z_filter = z_filter.split(z_total_currency)[0].trim();
        				
        			x_total1 = Number(z_filter);
        		}
        		sum1 = sum1 + x_total1;
        	}
        	var result1 = sum1.toString();
        	if(result1.split(".").length > 1){
        		result1 = result1.split(".")[0] + "."+result1.split(".")[1].substr(0,2);
        	}
        	else{
        		result1 = result1;
        	}
        	
        	z_levelcost1[0].value = result1.replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency;
        	//save total cost of selected line item in ratevalue array levelwise
        	result_rateVal = result1.replace(/\B(?=(\d{3})+(?!\d))/g, ",") + " "+z_total_currency;
        	if(z_selectedWell[i].levelValue == "4"){
        		z_selected_leveldata.forEach(function(val1,index1){
                    if(val1.subLevels != null){
                        val1.subLevels.forEach(function(val2,index2){
                            if(val2.phaseName == phase_name){
                                z_totalCost_Item = val2.totalCostItem;
                                if(z_totalCost_Item[0].subPhase != null){
                                    z_totalCost_Item[0].subPhase.forEach(function(item2,index2){
                                        if(item2.subPhase != null){
                                            item2.subPhase.forEach(function(item3,index3){
                                                if(item3.rateValue.length > 0){
                                                    item3.rateValue[item3.rateValue.length-1] = result_rateVal;
                                                }
                                                else{
                                                	item3.rateValue[item3.rateValue.length-1] = "0 $";
                                                }
                                                
                                            });
                                        }
                                        else{
                                            if(item2.rateValue.length > 0){
                                                item2.rateValue[item2.rateValue.length-1] = result_rateVal;
                                            }
                                            else{
                                            	item2.rateValue[item2.rateValue.length-1] = "0 $";
                                            }
                                            
                                        }
                                        
                                    });
                                }
                                else{
                                    if(val2.totalCostItem[0].rateValue.length > 0){
                                        val2.totalCostItem[0].rateValue[val2.totalCostItem[0].rateValue.length-1] = result_rateVal;
                                    }
                                    else{
                                    	val2.totalCostItem[0].rateValue[val2.totalCostItem[0].rateValue.length-1] = "0 $";
                                    }
                                    
                                }
                            }
                        });
                    }
                });
            
        	}
        	else if(z_selectedWell[i].levelValue == "3"){
        		z_selected_leveldata.forEach(function(val1,index1){
                    if(val1.subLevels != null){
                        val1.subLevels.forEach(function(val2,index2){
                            if(val2.phaseName == phase_name){
                                z_totalCost_Item = val2.totalCostItem;
                                if(z_totalCost_Item[0].subPhase != null){
                                    z_totalCost_Item[0].subPhase.forEach(function(item2,index2){
                                        if(item2.subPhase != null){
                                            item2.subPhase.forEach(function(item3,index3){
                                                if(item3.rateValue.length > 0){
                                                    item3.rateValue[item3.rateValue.length-1] = result_rateVal;
                                                }
                                                else{
                                                	item3.rateValue[item3.rateValue.length-1] = "0 $";
                                                }
                                                
                                            });
                                        }
                                        else{
                                            if(item2.rateValue.length > 0){
                                               item2.rateValue[item2.rateValue.length-1] = result_rateVal;
                                            }
                                            else{
                                            	item2.rateValue[item2.rateValue.length-1] = "0 $";
                                            }
                                            
                                        }
                                        
                                    });
                                }
                                else{
                                    if(val2.totalCostItem[0].rateValue.length > 0){
                                        val2.totalCostItem[0].rateValue[val2.totalCostItem[0].rateValue.length-1] = result_rateVal;
                                    }
                                    else{
                                    	val2.totalCostItem[0].rateValue[val2.totalCostItem[0].rateValue.length-1] = "0 $";
                                    }
                                    
                                }
                            }
                        });
                    }
                });
            
        	}
        	else if(z_selectedWell[i].levelValue == "2"){
        		z_selected_leveldata.forEach(function(val1,index1){
                    if(val1.subLevels != null){
                        val1.subLevels.forEach(function(val2,index2){
                            if(val2.phaseName == phase_name){
                                if(val2.totalCostItem[0].rateValue.length > 0){
                                    val2.totalCostItem[0].rateValue[val2.totalCostItem[0].rateValue.length-1] = result_rateVal;
                                }
                                else{
                                	val2.totalCostItem[0].rateValue[val2.totalCostItem[0].rateValue.length-1] = "0 $";
                                }
                                
                                
                            }
                        });
                    }
                });
            
        	}        	
        });
//
     
	}
}
function z_save_auto_toggle(){
    var x,y,z;
    var cost_index1,cost_index2,cost_index3;
    var totdalday_index = totalCostTitle.indexOf("Total Days");
    if(totdalday_index == 6){
        x=$("[title-index=6]");
        y=$("[title-index=7]");
        z=$("[title-index=8]");
        cost_index1 = 6;
        cost_index2 = 7;
        cost_index3 = 8;
    }
    else if(totdalday_index == 7){
        x=$("[title-index=7]");
        y=$("[title-index=8]");
        z=$("[title-index=9]");
        cost_index1 = 7;
        cost_index2 = 8;
        cost_index3 = 9;
    }
    else{
    	 x=$('[title-index="'+totdalday_index+'"]');
    	 cost_index1 = totdalday_index;
    }
 
    var limit = 0;
    var value1,value2,value3;
    value1 = 0;
    value2 = 0;
    value3 = 0;
    var operatingDay,totalDay;
    var level_2Index;
    var level3_index;
    var level4_index;
    var level1 = $(rig_element).attr('base-level');
    var level2;
    
    var z_subLevels;
    if($(rig_element).attr('current-phase') == "2"){
        level2 = z_sel_config[level1].subLevels.findIndex(function(val2){
            return val2.phaseName == $(rig_element).text();
                });
                z_subLevels = z_sel_config[level1].subLevels[level2].subLevels;
        if(totdalday_index == 6 || totdalday_index == 7){
            totalCostItem.forEach(function(val1,index1){
                level3_index = z_subLevels.findIndex(function(level3_obj){
                    return level3_obj.phaseName == val1.phase;
                });
                if(level3_index != -1){
                    if(z_subLevels[level3_index].isSelected){
                        if(val1.subPhase != null){
                            if(val1.subPhase.length > 0){
                                val1.subPhase.forEach(function(val2,index2){
                                    level4_index = z_subLevels[level3_index].subLevels.findIndex(function(level4_obj){
                                        return level4_obj.phaseName == val2.phase;
                                    }); 
                                    if(level4_index != -1){
                                        if(z_subLevels[level3_index].subLevels[level4_index].isSelected){
                                            if(val2.subPhase != null){
                                                if(val2.subPhase.length > 0){
                                                    val2.subPhase.forEach(function(val3,index3){
                                                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                            (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                                                (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                                                    value3 = value1 - value2;
                                                                    z[limit].value = value3.toString();
                                                                    val3.rateValue[cost_index1] = value1.toString();
                                                                    if(value2 == 0){
                                                                        operatingDay = "";
                                                                    }
                                                                    else{
                                                                        operatingDay = value2.toString();
                                                                    }
                                                                    val3.rateValue[cost_index2] = operatingDay;
                                                                    val3.rateValue[cost_index3] = value3.toString();
                                                                    limit = limit +1;
                                
                                                    });
                                                }
                                                else{
                                                    (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                    (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                                        (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                                            value3 = value1 - value2;
                                                            z[limit].value = value3.toString();
                                                            val2.rateValue[cost_index1] = value1.toString();
                                                            if(value2 == 0){
                                                                operatingDay = "";
                                                            }
                                                            else{
                                                                operatingDay = value2.toString();
                                                            }
                                                                    val2.rateValue[cost_index2] = operatingDay;
                                                                    val2.rateValue[cost_index3] = value3.toString();
                                                            limit = limit +1;
                                                }
                                            }
                                            else{
                                                (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                                    (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                                        value3 = value1 - value2;
                                                        z[limit].value = value3.toString();
                                                        val2.rateValue[cost_index1] = value1.toString();
                                                        if(value2 == 0){
                                                            operatingDay = "";
                                                        }
                                                        else{
                                                            operatingDay = value2.toString();
                                                        }
                                                                    val2.rateValue[cost_index2] = operatingDay;
                                                                    val2.rateValue[cost_index3] = value3.toString();
                                                        limit = limit +1;
                                            }
                                        }
                                    } 
                                   
                                });
                            }
                            else{
                                (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                    (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                        value3 = value1 - value2;
                                        z[limit].value = value3.toString();
                                        val1.rateValue[cost_index1] = value1.toString();
                                        if(value2 == 0){
                                            operatingDay = "";
                                        }
                                        else{
                                            operatingDay = value2.toString();
                                        }
                                                            val1.rateValue[cost_index2] = operatingDay;
                                                            val1.rateValue[cost_index3] = value3.toString();
                                        limit = limit +1;
                            }
                        }
                        else{
                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                            (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                    value3 = value1 - value2;
                                    z[limit].value = value3.toString();
                                    val1.rateValue[cost_index1] = value1.toString();
                                    if(value2 == 0){
                                        operatingDay = "";
                                    }
                                    else{
                                        operatingDay = value2.toString();
                                    }
                                                            val1.rateValue[cost_index2] = operatingDay;
                                                            val1.rateValue[cost_index3] = value3.toString();
                                    limit = limit +1;
                        }
                    } 
                }
                  
               
                   });
       }
       else{
       

        totalCostItem.forEach(function(val1,index1){
            level3_index = z_subLevels.findIndex(function(level3_obj){
                return level3_obj.phaseName == val1.phase;
            });
            if(level3_index != -1){
                if(z_subLevels[level3_index].isSelected){
                    if(val1.subPhase != null){
                        if(val1.subPhase.length > 0){
                            val1.subPhase.forEach(function(val2,index2){
                                if(val2.subPhase != null){
                                    if(val2.subPhase.length > 0){
                                        val2.subPhase.forEach(function(val3,index3){
                                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                        if(value1 == 0){
                                                            totalDay = "";
                                                        }
                                                        else{
                                                            totalDay = value1.toString();
                                                        }
                                                        x[limit].value = totalDay;
                                                        val3.rateValue[cost_index1] = totalDay;
                                                        limit = limit +1;
                    
                                        });
                                    }
                                    else{
                                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                if(value1 == 0){
                                                    totalDay = "";
                                                }
                                                else{
                                                    totalDay = value1.toString();
                                                }
                                                x[limit].value = totalDay;
                                                val2.rateValue[cost_index1] = totalDay;
                                                limit = limit +1;
                                    }
                                }
                                else{
                                    (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                            if(value1 == 0){
                                                totalDay = "";
                                            }
                                            else{
                                                totalDay = value1.toString();
                                            }
                                            x[limit].value = totalDay;
                                            val2.rateValue[cost_index1] = totalDay;
                                            limit = limit +1;
                                }
                            });
                        }
                        else{
                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                    if(value1 == 0){
                                        totalDay = "";
                                    }
                                    else{
                                        totalDay = value1.toString();
                                    }
                                    x[limit].value = totalDay;
                                    val1.rateValue[cost_index1] = totalDay;
                                    limit = limit +1;
                        }
                    }
                    else{
                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                if(value1 == 0){
                                    totalDay = "";
                                }
                                else{
                                    totalDay = value1.toString();
                                }
                                x[limit].value = totalDay;
                                val1.rateValue[cost_index1] = totalDay;
                                limit = limit +1;
                    }
                }
            }       
            
                   });
       }
    }
    else if($(rig_element).attr('current-phase') == "3"){
        level2 = z_sel_config[level1].subLevels.findIndex(function(val2){
            return val2.phaseName == $(rig_element).attr('level2-name');
                });
                z_subLevels = z_sel_config[level1].subLevels[level2].subLevels;
        if(totdalday_index == 6 || totdalday_index == 7){
            totalCostItem.forEach(function(val1,index1){
                if(val1.phase == $(rig_element).text()){
                    if(val1.subPhase != null){
                        if(val1.subPhase.length > 0){
                            val1.subPhase.forEach(function(val2,index2){
                                if(val2.subPhase != null){
                                    if(val2.subPhase.length > 0){
                                        val2.subPhase.forEach(function(val3,index3){
                                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                                    (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                                        value3 = value1 - value2;
                                                        z[limit].value = value3.toString();
                                                        val3.rateValue[cost_index1] = value1.toString();
                                                        if(value2 == 0){
                                                            operatingDay = "";
                                                        }
                                                        else{
                                                            operatingDay = value2.toString();
                                                        }
                                                        val3.rateValue[cost_index2] = operatingDay;
                                                        val3.rateValue[cost_index3] = value3.toString();
                                                        limit = limit +1;
                    
                                        });
                                    }
                                    else{
                                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                        (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                            (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                                value3 = value1 - value2;
                                                z[limit].value = value3.toString();
                                                val2.rateValue[cost_index1] = value1.toString();
                                                if(value2 == 0){
                                                    operatingDay = "";
                                                }
                                                else{
                                                    operatingDay = value2.toString();
                                                }
                                                        val2.rateValue[cost_index2] = operatingDay;
                                                        val2.rateValue[cost_index3] = value3.toString();
                                                limit = limit +1;
                                    }
                                }
                                else{
                                    (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                    (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                        (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                            value3 = value1 - value2;
                                            z[limit].value = value3.toString();
                                            val2.rateValue[cost_index1] = value1.toString();
                                            if(value2 == 0){
                                                operatingDay = "";
                                            }
                                            else{
                                                operatingDay = value2.toString();
                                            }
                                                        val2.rateValue[cost_index2] = operatingDay;
                                                        val2.rateValue[cost_index3] = value3.toString();
                                            limit = limit +1;
                                }
                            });
                        }
                        else{
                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                            (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                    value3 = value1 - value2;
                                    z[limit].value = value3.toString();
                                    val1.rateValue[cost_index1] = value1.toString();
                                    if(value2 == 0){
                                        operatingDay = "";
                                    }
                                    else{
                                        operatingDay = value2.toString();
                                    }
                                                        val1.rateValue[cost_index2] = operatingDay;
                                                        val1.rateValue[cost_index3] = value3.toString();
                                    limit = limit +1;
                        }
                    }
                    else{
                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                        (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                            (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                value3 = value1 - value2;
                                z[limit].value = value3.toString();
                                val1.rateValue[cost_index1] = value1.toString();
                                if(value2 == 0){
                                    operatingDay = "";
                                }
                                else{
                                    operatingDay = value2.toString();
                                }
                                                        val1.rateValue[cost_index2] = operatingDay;
                                                        val1.rateValue[cost_index3] = value3.toString();
                                limit = limit +1;
                    }
                }   
                
                   });
       }
       else{
            totalCostItem.forEach(function(val1,index1){
                if(val1.phase == $(rig_element).text()){
                    if(val1.subPhase != null){
                        if(val1.subPhase.length > 0){
                            val1.subPhase.forEach(function(val2,index2){
                                if(val2.subPhase != null){
                                    if(val2.subPhase.length > 0){
                                        val2.subPhase.forEach(function(val3,index3){
                                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                        if(value1 == 0){
                                                            totalDay = "";
                                                        }
                                                        else{
                                                            totalDay = value1.toString();
                                                        }
                                                        x[limit].value = totalDay;
                                                        val3.rateValue[cost_index1] = totalDay;
                                                        limit = limit +1;
                    
                                        });
                                    }
                                    else{
                                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                if(value1 == 0){
                                                    totalDay = "";
                                                }
                                                else{
                                                    totalDay = value1.toString();
                                                }
                                                x[limit].value = totalDay;
                                                val2.rateValue[cost_index1] = totalDay;
                                                limit = limit +1;
                                    }
                                }
                                else{
                                    (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                            if(value1 == 0){
                                                totalDay = "";
                                            }
                                            else{
                                                totalDay = value1.toString();
                                            }
                                            x[limit].value = totalDay;
                                            val2.rateValue[cost_index1] = totalDay;
                                            limit = limit +1;
                                }
                            });
                        }
                        else{
                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                    if(value1 == 0){
                                        totalDay = "";
                                    }
                                    else{
                                        totalDay = value1.toString();
                                    }
                                    x[limit].value = totalDay;
                                    val1.rateValue[cost_index1] = totalDay;
                                    limit = limit +1;
                        }
                    }
                    else{
                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                if(value1 == 0){
                                    totalDay = "";
                                }
                                else{
                                    totalDay = value1.toString();
                                }
                                x[limit].value = totalDay;
                                val1.rateValue[cost_index1] = totalDay;
                                limit = limit +1;
                    }
                }   
                
                   });
       }
    }
    else if($(rig_element).attr('current-phase') == "4"){
        level2 = z_sel_config[level1].subLevels.findIndex(function(val2){
            return val2.phaseName == $(rig_element).attr('level2-name');
                });
                z_subLevels = z_sel_config[level1].subLevels[level2].subLevels;
        if(totdalday_index == 6 || totdalday_index == 7){
            totalCostItem.forEach(function(val1,index1){
                if(val1.phase == $(rig_element).attr('level3-name')){
                    if(val1.subPhase != null){
                        if(val1.subPhase.length > 0){
                            val1.subPhase.forEach(function(val2,index2){
                                if(val2.phase == $(rig_element).text()){
                                    if(val2.subPhase != null){
                                        if(val2.subPhase.length > 0){
                                            val2.subPhase.forEach(function(val3,index3){
                                                (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                    (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                                        (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                                            value3 = value1 - value2;
                                                            z[limit].value = value3.toString();
                                                            val3.rateValue[cost_index1] = value1.toString();
                                                            if(value2 == 0){
                                                                operatingDay = "";
                                                            }
                                                            else{
                                                                operatingDay = value2.toString();
                                                            }
                                                            val3.rateValue[cost_index2] = operatingDay;
                                                            val3.rateValue[cost_index3] = value3.toString();
                                                            limit = limit +1;
                        
                                            });
                                        }
                                        else{
                                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                            (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                                (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                                    value3 = value1 - value2;
                                                    z[limit].value = value3.toString();
                                                    val2.rateValue[cost_index1] = value1.toString();
                                                    if(value2 == 0){
                                                        operatingDay = "";
                                                    }
                                                    else{
                                                        operatingDay = value2.toString();
                                                    }
                                                            val2.rateValue[cost_index2] = operatingDay;
                                                            val2.rateValue[cost_index3] = value3.toString();
                                                    limit = limit +1;
                                        }
                                    }
                                    else{
                                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                        (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                            (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                                value3 = value1 - value2;
                                                z[limit].value = value3.toString();
                                                val2.rateValue[cost_index1] = value1.toString();
                                                if(value2 == 0){
                                                    operatingDay = "";
                                                }
                                                else{
                                                    operatingDay = value2.toString();
                                                }
                                                            val2.rateValue[cost_index2] = operatingDay;
                                                            val2.rateValue[cost_index3] = value3.toString();
                                                limit = limit +1;
                                    }
                                }
                               
                            });
                        }
                        else{
                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                            (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                                (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                    value3 = value1 - value2;
                                    z[limit].value = value3.toString();
                                    val1.rateValue[cost_index1] = value1.toString();
                                    if(value2 == 0){
                                        operatingDay = "";
                                    }
                                    else{
                                        operatingDay = value2.toString();
                                    }
                                                        val1.rateValue[cost_index2] = operatingDay;
                                                        val1.rateValue[cost_index3] = value3.toString();
                                    limit = limit +1;
                        }
                    }
                    else{
                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                        (y[limit] == "" ? value2 = 0 : value2 = Number(y[limit].value));
                            (z[limit] == "" ? value3 = 0 : value3 = Number(z[limit].value));
                                value3 = value1 - value2;
                                z[limit].value = value3.toString();
                                val1.rateValue[cost_index1] = value1.toString();
                                if(value2 == 0){
                                    operatingDay = "";
                                }
                                else{
                                    operatingDay = value2.toString();
                                }
                                                        val1.rateValue[cost_index2] = operatingDay;
                                                        val1.rateValue[cost_index3] = value3.toString();
                                limit = limit +1;
                    }
                }   
             
                   });
       }
       else{
            totalCostItem.forEach(function(val1,index1){
                if(val1.phase == $(rig_element).attr('level3-name')){
                    if(val1.subPhase != null){
                        if(val1.subPhase.length > 0){
                            val1.subPhase.forEach(function(val2,index2){
                                if(val2.phase == $(rig_element).text()){
                                    if(val2.subPhase != null){
                                        if(val2.subPhase.length > 0){
                                            val2.subPhase.forEach(function(val3,index3){
                                                (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                            if(value1 == 0){
                                                                totalDay = "";
                                                            }
                                                            else{
                                                                totalDay = value1.toString();
                                                            }
                                                            x[limit].value = totalDay;
                                                            val3.rateValue[cost_index1] = totalDay;
                                                            limit = limit +1;
                        
                                            });
                                        }
                                        else{
                                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                    if(value1 == 0){
                                                        totalDay = "";
                                                    }
                                                    else{
                                                        totalDay = value1.toString();
                                                    }
                                                    x[limit].value = totalDay;
                                                    val2.rateValue[cost_index1] = totalDay;
                                                    limit = limit +1;
                                        }
                                    }
                                    else{
                                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                                if(value1 == 0){
                                                    totalDay = "";
                                                }
                                                else{
                                                    totalDay = value1.toString();
                                                }
                                                x[limit].value = totalDay;
                                                val2.rateValue[cost_index1] = totalDay;
                                                limit = limit +1;
                                    }
                                }

                              
                            });
                        }
                        else{
                            (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                    if(value1 == 0){
                                        totalDay = "";
                                    }
                                    else{
                                        totalDay = value1.toString();
                                    }
                                    x[limit].value = totalDay;
                                    val1.rateValue[cost_index1] = totalDay;
                                    limit = limit +1;
                        }
                    }
                    else{
                        (x[limit] == "" ? value1 = 0 : value1 = Number(x[limit].value));
                                if(value1 == 0){
                                    totalDay = "";
                                }
                                else{
                                    totalDay = value1.toString();
                                }
                                x[limit].value = totalDay;
                                val1.rateValue[cost_index1] = totalDay;
                                limit = limit +1;
                    }
                }   
              
                   });
       }
    }
  
   
}
function popup(){
    $('#z-averageModel').remove();
$('body').append('<div id="z-averageModel" class="modal" tabindex="-1" role="dialog" style="display: block;">'+
'<div class="modal-dialog" role="document"><div class="modal-content"><div class="modal-header"><h5 class="modal-title">Average Cost Modal</h5>'+
'<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>'+
'</div><div class="modal-body"><p class="">Select required wells to Find Average Cost</p><div id="notSelectedwell_list"></div></div>'+
'<div class="modal-footer"><button id="z-averagePhase-Submitbtn" type="button" class="btn btn-primary">Submit</button>'+
'<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button></div></div></div></div>');
            $('#z-averageModel').modal('show');
}
var x_wellId;
var company_image_url = "";
function well_information(wellId,project_name,well_manager){
	company_image_url = "";
	viewWell(wellId,project_name,well_manager);
	sideNavbar_toggle_afe();
	$('#z-navbar-overlay').removeClass('z-navbar-overlay-active');
	x_wellId = wellId;
	var z_afe_navbar = $('.z-mn-menuBtn');
	$('.d-inline-block.z-mn-menuBtn').removeClass('d-inline-block');
	$(z_afe_navbar[0]).removeClass('d-none');
	$(z_afe_navbar[1]).removeClass('d-none');
	$(z_afe_navbar[0]).addClass('d-none');
	$(z_afe_navbar[1]).addClass('d-inline-block');
}
function z_Estimation(el){
	well_estimatePopup("true","true",x_wellId);
	sideNavbar_toggle_afe();
	$('#z-afe-estimateLevel-panel').click();
	if(z_configJson_data.length > 0){
        //z_level = "Level"+z_configJson_data[0].levelValue;
        //z_config = "Configuration "+ z_configJson_data[0].configNumber;
		var budget_selected = document.getElementById('z-well-budget');
		var select_levels = document.getElementById('z-req-wellLevel');
		select_levels.options.remove(5);
		select_levels.options.remove(4);
		select_levels.options.remove(3);
		select_levels.options.remove(2);
		select_levels.options.remove(1);
		if(z_level == "Level4" || z_level == "Level5"){
			var req_level4 = document.createElement("option");
			req_level4.text = "Level 4: Estimates Accuracy Level +20% or -10%";
			req_level4.value = "Level4";
			var req_level5 = document.createElement("option");
			req_level5.text = "Level 5: Estimates Accuracy Level +10% or -5%";
			req_level5.value = "Level5";
			select_levels.options.add(req_level4);
			select_levels.options.add(req_level5);
		}
		else{
			var req_level1 = document.createElement("option");
			req_level1.text = "Level 1: Estimates Accuracy Level +50% or -40%";
			req_level1.value = "Level1";
			var req_level2 = document.createElement("option");
			req_level2.text = "Level 2: Estimates Accuracy Level +40% or -30%";
			req_level2.value = "Level2";
			var req_level3 = document.createElement("option");
			req_level3.text = "Level 3: Estimates Accuracy Level +30% or -20%";
			req_level3.value = "Level3";
			select_levels.options.add(req_level1);
			select_levels.options.add(req_level2);
			select_levels.options.add(req_level3);
		}
		if(z_level == "Level4"){
			select_levels.options.selectedIndex = 1;
			budget_selected.options.selectedIndex = 2
		}
		else if(z_level == "Level5"){
			select_levels.options.selectedIndex = 2;
			budget_selected.options.selectedIndex = 2
		}
		else if(z_level == "Level3"){
			select_levels.options.selectedIndex = 3;
			budget_selected.options.selectedIndex = 1;
		}
		else if(z_level == "Level2"){
			select_levels.options.selectedIndex = 2;
			budget_selected.options.selectedIndex = 1;
		}
		else if(z_level == "Level1"){
			select_levels.options.selectedIndex = 1;
			budget_selected.options.selectedIndex = 1;
		}
	}
    $('.z-level4.z-wellDayLevel2').val('');
    $('.z-level4.z-day-select-level2').text('');
    z_AfeEstimation();
    if(!$('#z-afe-Configsection').hasClass('z-rightSection-active')){
        $('#z-afe-Configsection').addClass('z-rightSection-active');
    }
    $('#z-afe-Estimationsection').removeClass('z-rightSection-active');
}
function z_Estimation_back(){
	z_wellsSection_active(false,false,$('#z-m-backWell-btn')[0]);
	 if($('#z-sideNavbar-afe').hasClass('z-sideNavbar-active')){
     	sideNavbar_toggle_afe();
     }
}
function z_select_Levels(){
	var budget_selected = document.getElementById('z-well-budget');
	var select_levels = document.getElementById('z-req-wellLevel');
	select_levels.options.remove(5);
	select_levels.options.remove(4);
	select_levels.options.remove(3);
	select_levels.options.remove(2);
	select_levels.options.remove(1);
	if(z_level == "Level4" || z_level == "Level5"){
		var req_level4 = document.createElement("option");
		req_level4.text = "Level 4: Estimates Accuracy Level +20% or -10%";
		req_level4.value = "Level4";
		var req_level5 = document.createElement("option");
		req_level5.text = "Level 5: Estimates Accuracy Level +10% or -5%";
		req_level5.value = "Level5";
		select_levels.options.add(req_level4);
		select_levels.options.add(req_level5);
	}
	else{
		var req_level1 = document.createElement("option");
		req_level1.text = "Level 1: Estimates Accuracy Level +50% or -40%";
		req_level1.value = "Level1";
		var req_level2 = document.createElement("option");
		req_level2.text = "Level 2: Estimates Accuracy Level +40% or -30%";
		req_level2.value = "Level2";
		var req_level3 = document.createElement("option");
		req_level3.text = "Level 3: Estimates Accuracy Level +30% or -20%";
		req_level3.value = "Level3";
		select_levels.options.add(req_level1);
		select_levels.options.add(req_level2);
		select_levels.options.add(req_level3);
	}
	if(z_level == "Level4"){
		select_levels.options.selectedIndex = 1;
		budget_selected.options.selectedIndex = 2
	}
	else if(z_level == "Level5"){
		select_levels.options.selectedIndex = 2;
		budget_selected.options.selectedIndex = 2
	}
	else if(z_level == "Level3"){
		select_levels.options.selectedIndex = 3;
		budget_selected.options.selectedIndex = 1;
	}
	else if(z_level == "Level2"){
		select_levels.options.selectedIndex = 2;
		budget_selected.options.selectedIndex = 1;
	}
	else if(z_level == "Level1"){
		select_levels.options.selectedIndex = 1;
		budget_selected.options.selectedIndex = 1;
	}
}
function z_addNextLevel(el){
    var previousPhase = el.parentElement.innerText.split('\n')[0];
    var baselevel = el.parentElement.getAttribute('baselevel');
    var baselevel2 = el.parentElement.getAttribute('baselevel2');
    $(el).parent().removeClass('z-levelconfig-color');
    var checkforsubLevels = false;
    z_selected_leveldata.forEach(function(val1,index1){
        if(val1.phaseName == baselevel){
            val1.subLevels.forEach(function(val2,index2){
                if(val2.phaseName == baselevel2){
                    val2.subLevels.forEach(function(val3,index3){
                        if(val3.phaseName == previousPhase){
                            if(val3.subLevels != null){
                                checkforsubLevels = true; 
                            }
                            else{
                                checkforsubLevels = false; 
                            }
                            return;
                        }
                    });
                }
            });
        }
    });
    if(checkforsubLevels == true){
        alertPopup('alert','subLevels for the selected components has been added');
    }
    else{
        el.offsetParent.insertAdjacentHTML('afterend', '<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 z-level4-test z-customLevel4"><div class="row z-l-phaserow z-borderBottom z-tableData-row"><div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">001-01-01</div><div class="z-descWidth-level4 z-l-configbottom"><div></div></div><div class="z-level4-width z-l-configbottom z-config-content" level="3"><div class="z-well-content"></div></div><div class="z-level4-width z-l-configbottom z-config-content" level="3"><div class="z-well-content"></div></div><div class="z-level4-width d-flex z-l-configbottom z-config-content z-levelconfig-color" level="3" onclick="z_configActive(this)" selectlevel="3" onmouseover="z_levels_hover(this)" baselevel="'+baselevel+'" baselevel2="'+baselevel2+'"><div class="z-well-content z-wellComponentWidth" contentEditable="true" index="0" level3-element="'+previousPhase+'" onclick="saveLevel(this)" onfocusout="saveLevel(this)">Enter the Phase</div><div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deletePhase(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" index="0" onclick="z_addNextPhase(this)" title="Add Phase" levels="4" level="4">+</div></div></div><div></div></div>');

    }
}
function z_expandLevel(el){
    if($(el).text() == "Proceed to Level4"){
        $('.z-sublevels-hide').removeClass('z-sublevels-hide');
        $('.z-sublevels3-hide').removeClass('z-sublevels3-hide');
        $('.z-sublevels4-hide').addClass('z-level4-test');
        $('.z-sublevels4-hide').removeClass('z-sublevels4-hide');
        $(el).addClass('z-sublevels3-hide');
        //z_showNextLevel("4");
    }
    else{
        $('.z-sublevels3-hide').removeClass('z-sublevels3-hide');
        $('.z-level4-test').addClass('z-sublevels4-hide');
        $('.z-customLevel4').addClass('z-sublevels4-hide');
        $(el).addClass('z-sublevels4-hide');
    }
 
}
function z_addNextPhase(el){
    
    var level3Name = $(el).prev().prev().attr('level3-element');
    var previousPhase = el.parentElement.innerText.split('\n')[0];
    var baselevel = el.parentElement.getAttribute('baselevel');
    var baselevel2 = el.parentElement.getAttribute('baselevel2');
    var index = Number(el.getAttribute('index'))+1;
    el.offsetParent.insertAdjacentHTML('afterend', '<div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 z-customLevel4"><div class="row z-l-phaserow z-borderBottom z-tableData-row"><div class="z-codeWidth-level4 z-l-configbottom z-l-grey-color z-well-content">001-01-01</div><div class="z-descWidth-level4 z-l-configbottom"><div></div></div><div class="z-level4-width z-l-configbottom z-config-content" level="3"><div class="z-well-content"></div></div><div class="z-level4-width z-l-configbottom z-config-content" level="3"><div class="z-well-content"></div></div><div class="z-level4-width d-flex z-l-configbottom z-config-content z-levelconfig-color" level="3" onclick="z_configActive(this)" selectlevel="3" onmouseover="z_levels_hover(this)" baselevel="'+baselevel+'" baselevel2="'+baselevel2+'"><div class="z-well-content z-wellComponentWidth" contentEditable="true" index="'+index+'" previous-element="'+previousPhase+'" level3-element="'+level3Name+'" onclick="saveLevel(this)" index="0" onfocusout="saveLevel(this)">Enter the Phase</div><div class="z-l-closeBtn-level1 z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deletePhase(this)" levels="4" level="4" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left-level1 d-none" data-toggle="tooltip" onclick="z_addNextPhase(this)" title="Add Phase" index="'+index+'" levels="4" level="4">+</div></div></div><div></div></div>');
    $(el).parent().removeClass('z-levelconfig-color');
}
function saveLevel(el){
    var beforePhase = el.getAttribute('level3-element');
    var baselevel = $(el).parent().attr('baselevel');
    var baselevel2 = $(el).parent().attr('baselevel2');
    var currentPhase;
    if(el.getAttribute('previous-element') != null){
        currentPhase = el.getAttribute('previous-element');
    }
    else{
        currentPhase = "";
    }
    var level_index = Number($(el).attr('index'));
    $(el).parent().addClass('z-levelconfig-color');
    var insertObject = {};
    var insertObject1 = {};
    var insertCostObject = {};
    var insertArray = [];
    var insertCostArray = [];
    var totalCostItem;
    var check_level;
    var check_level_index;
    if(el.contentEditable == "false"){
        el.contentEditable = "true";
    }
    
    el.onkeydown = function() {
        var key = event.keyCode || event.charCode;
    
        if( key == 8 || key == 46 ){
            console.log("erased");
            if(el.innerText.length == 0){
                $(el).css('width','275px');
            }
            return true;
        }
        if(event.keyCode == 13 || event.type == "focusout"){
            console.log("enter key");
            el.contentEditable = "false";
            z_selected_leveldata.forEach(function(val1,index1){
                if(val1.phaseName == baselevel){
                    val1.subLevels.forEach(function(val2,index2){
                        if(val2.phaseName == baselevel2){
                            totalCostItem = val2.totalCostItem;
                            val2.subLevels.forEach(function(val3,index3){
                                if(val3.phaseName == beforePhase){
                                    insertObject.phaseName = el.innerText;
                                    insertObject.levelValue = "";
                                    insertObject.remark = "";
                                    insertObject.totalCost = [];
                                    insertObject.isSelected = true;
                                    insertObject1 = val3;
                                  
                                        if(val3.subLevels != null){
                                            if(val3.subLevels.length < 2 && level_index == 0){
                                                check_level = val3.subLevels[level_index].phaseName;
                                            }
                                            else if(val3.subLevels.length > 1){
                                                check_level = val3.subLevels[level_index].phaseName;
                                            }
                                            else{
                                                check_level = "";
                                            }

                                            
                                        }
                                        else{
                                            check_level = "";
                                        }
                                        check_level_index = totalCostItem[index3].subPhase.findIndex(function(val){
                                            return val.phase == check_level;
                                        });
                                        insertArray.push(insertObject);
                                        if(val3.subLevels != null){
                                            if(insertObject1.subLevels[level_index] != null){
                                                insertObject1.subLevels[level_index] = insertObject;
                                            }
                                            else{
                                                insertObject1.subLevels.push(insertObject);
                                            }
                                            
                                        }
                                        else{
                                            insertObject1['subLevels'] = insertArray;
                                        }
                                        
                                        insertObject = {};
                                        insertArray = [];
                                       
                                        if(totalCostItem[index3].subPhase[level_index] == null){
                                            insertCostObject.phase = el.innerText;
                                            insertCostObject.disableIndex = totalCostItem[index3].disableIndex;
                                            insertCostObject.formula = totalCostItem[index3].formula;
                                            insertCostObject.rateValue = totalCostItem[index3].rateValue;
                                            insertCostObject.subPhase = [];
                                            insertCostArray = totalCostItem[index3].subPhase;
                                          
                                            insertCostArray.push(insertCostObject);
                                            totalCostItem[index3].subPhase = insertCostArray;
                                            insertCostArray = [];
                                            insertCostObject = {};
                                        }
                                        else{
                                            insertCostObject.phase = el.innerText;
                                            insertCostObject.disableIndex = totalCostItem[index3].disableIndex;
                                            insertCostObject.formula = totalCostItem[index3].formula;
                                            insertCostObject.rateValue = totalCostItem[index3].rateValue;
                                            insertCostObject.subPhase = [];
                                            insertCostArray = totalCostItem[index3].subPhase;
                                            insertCostArray[level_index] = insertCostObject;
                                            totalCostItem[index3].subPhase = insertCostArray;
                                            insertCostArray = [];
                                            insertCostObject = {};
                                        }
                                   
                                    return;
                                }
                            });
                        }
                    });
                }
            });
    
        }
            
    };
    if(event.type == "focusout"){
        var key = event.keyCode || event.charCode;
            console.log("enter key");
            el.contentEditable = "false";
            z_selected_leveldata.forEach(function(val1,index1){
                if(val1.phaseName == baselevel){
                    val1.subLevels.forEach(function(val2,index2){
                        if(val2.phaseName == baselevel2){
                            totalCostItem = val2.totalCostItem;
                            val2.subLevels.forEach(function(val3,index3){
                                if(val3.phaseName == beforePhase){
                                    insertObject.phaseName = el.innerText;
                                    insertObject.levelValue = "";
                                    insertObject.remark = "";
                                    insertObject.totalCost = [];
                                    insertObject.isSelected = true;
                                    insertObject1 = val3;
                                  
                                        if(val3.subLevels != null){
                                            if(val3.subLevels[level_index] != null){
                                                check_level = val3.subLevels[level_index].phaseName;
                                            }
                                            else{
                                                check_level = "";
                                            }

                                            
                                        }
                                        else{
                                            check_level = "";
                                        }
                                        check_level_index = totalCostItem[index3].subPhase.findIndex(function(val){
                                            return val.phase == check_level;
                                        });
                                        insertArray.push(insertObject);
                                        if(val3.subLevels != null){
                                            if(insertObject1.subLevels[level_index] != null){
                                                insertObject1.subLevels[level_index] = insertObject;
                                            }
                                            else{
                                                insertObject1.subLevels.push(insertObject);
                                            }
                                            
                                        }
                                        else{
                                            insertObject1['subLevels'] = insertArray;
                                        }
                                        
                                        insertObject = {};
                                        insertArray = [];
                                       
                                        if(totalCostItem[index3].subPhase[level_index] == null){
                                            insertCostObject.phase = el.innerText;
                                            insertCostObject.disableIndex = totalCostItem[index3].disableIndex;
                                            insertCostObject.formula = totalCostItem[index3].formula;
                                            insertCostObject.rateValue = totalCostItem[index3].rateValue;
                                            insertCostObject.subPhase = [];
                                            insertCostArray = totalCostItem[index3].subPhase;
                                          
                                            insertCostArray.push(insertCostObject);
                                            totalCostItem[index3].subPhase = insertCostArray;
                                            insertCostArray = [];
                                            insertCostObject = {};
                                        }
                                        else{
                                            insertCostObject.phase = el.innerText;
                                            insertCostObject.disableIndex = totalCostItem[index3].disableIndex;
                                            insertCostObject.formula = totalCostItem[index3].formula;
                                            insertCostObject.rateValue = totalCostItem[index3].rateValue;
                                            insertCostObject.subPhase = [];
                                            insertCostArray = totalCostItem[index3].subPhase;
                                            insertCostArray[level_index] = insertCostObject;
                                            totalCostItem[index3].subPhase = insertCostArray;
                                            insertCostArray = [];
                                            insertCostObject = {};
                                        }
                                   
                                    return;
                                }
                            });
                        }
                    });
                }
            });
    }
    
}
function z_LevelSelectionSummary(){
    $('.z-rightSection-active').removeClass('z-rightSection-active');
    $('#wellSummary-tab').addClass('z-rightSection-active');
	$('#z-rt-wellOperation-heading').addClass('d-none');
	$('#z-rt-costModel-heading').addClass('d-none');
	$('#costModalRealTime').attr('costModal','false');
    sideNavbar_toggle_afe();
}
function z_showEstimate(){
    var dataVal;
    var z_status;
    var z_Lastdate;
    var z_lock;
    var date_value;
    var date_As_Text;
	$('#projectName-summary').text(z_projectName_val);
	$('#wellName-summary').text(z_wellName_val);
        if($('#freshEstimate').attr('checkForFreshLevel') == "true"){

        }
        else{
            $('#well-summary-container').addClass('z-rightSection-active');
        }
        $('#freshEstimate').attr('checkForFreshLevel','false');
        z_status = $('.z-status');
        z_Lastdate = $('.z-Lastdate');
        z_lock = $('.z-lock');
        $.ajax({
            url: "/api/getWellConfiguration",
            type: "GET",
            data: {wellId: x_wellId,level: "",config:""},
            async: false,
            dataType: 'text',
            //contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                dataVal = JSON.parse(result);
                dataVal.sort(function(a,b){
                    return a.levelValue-b.levelValue;
                });
                dataVal.sort(function(a,b){
                    return a.configNumber-b.configNumber;
                });
              
                dataVal.forEach(function(val,indexVal){
                    if(indexVal < 5){
                        if(val.levelValue == z_status[indexVal].getAttribute('level') && val.configNumber == "1"){
                            if(val.wellId == ""){
                                z_status[indexVal].innerText = "No Data";
                                z_Lastdate[indexVal].innerText = "--";
                                z_lock[indexVal].innerText = "No";
                            }
                            else{
                                z_status[indexVal].innerText = "Estimate Updated";
                                date_value = dataVal[indexVal].lastModifiedDate.split(" ");
                                date_As_Text = date_value[2]+"th"+" "+date_value[1]+" "+date_value[date_value.length-1];
                                z_Lastdate[indexVal].innerText = date_As_Text;
                            }
                            if(dataVal[indexVal].isAfeComponentsLocked){
                                z_lock[indexVal].innerText = "Yes";
                            }
                            else{
                                z_lock[indexVal].innerText = "No";
                            }
                        }
                    }
                  
                });

            }
        });
    
}
function z_showEstimate_back(){
    $('#freshEstimate').attr('checkForFreshLevel',"false");
    $('.z-rightSection-active').removeClass('z-rightSection-active');
    $('#z-viewWell-wrap').addClass('z-rightSection-active');
}
function z_Estimation_edit_fn(el,callback){
	 z_level = "Level"+$(el).attr('level');
    z_config = "Configuration 1";
    z_Estimation();
    
    var levels_select = $(el).attr('level');
    var levels = $('#z-req-wellLevel');
    var budget = $('#z-well-budget');
    if(levels_select < 4){
        budget [0].selectedIndex = 1;
        if(levels_select == "1"){
            levels [0].selectedIndex = 1;
        }
        if(levels_select == "2"){
            levels [0].selectedIndex = 2;
        }
        if(levels_select == "3"){
            levels [0].selectedIndex = 3;
        }
    }
    else{
        budget [0].selectedIndex = 2;
        if(levels_select == "4"){
            levels [0].selectedIndex = 1;
        }
        if(levels_select == "5"){
            levels [0].selectedIndex = 2;
        }
    }
    z_configTable($('#z-req-wellLevel')[0]);
    sideNavbar_toggle_afe();
	callback();
}
var z_current_element;
function z_Estimation_edit(el){
	z_current_element = el;
	loading_gif();
	z_Estimation_edit_fn(el,remove_gif); 
}
function remove_gif(){
	
	$('#z-loadingWrap-id').remove();
}
function z_showFreshEstimate(el){
    z_level = "Level1";
    z_config = "Configuration 1";
    $('#freshEstimate').attr('checkForFreshLevel',"true");
    z_Estimation();
    
    //$('#freshEstimate').attr('checkForFreshLevel',"false");

}
function deleteLevels(el){
    var select_levelValue;
    var newConfigData;
    var newConfigIndex;
    if(el != null){
        select_levelValue = $(el).attr('level');
        z_config = $(el).attr('config');
    }
    else{
        select_levelValue = z_level.substr(z_level.length-1);
    }
    confirmationPopupAfeEstimation("Are  you sure want to delete the Data for the selected Level"+select_levelValue+" Components..?", function () {
        $.ajax({
            url: "/api/deleteWellConfiguration",
            type: "GET",
            data: {wellId: x_wellId,level: select_levelValue,config: z_config.substr(z_config.length-1)},
            async: false,
            dataType: 'text',
            //contentType: 'application/json;charset=UTF-8',
            success: function (result) {
                newConfigData = JSON.parse(result);
                if(z_configJson_data != null){
                    if(z_configJson_data.length > 0){
                        newConfigIndex = z_configJson_data.findIndex(function(valObj){
                            return valObj.levelValue == select_levelValue;
                        });
                        if(newConfigIndex != -1 && newConfigIndex != null && newConfigData.length > 0){
                            z_configJson_data.splice(newConfigIndex,1);
                        z_configJson_data.push(newConfigData[0]);
                        z_sel_config = JSON.parse(newConfigData[0].wellConfig);
                        z_selected_leveldata = JSON.parse(newConfigData[0].wellConfig);
                        z_sel_config = JSON.parse(newConfigData[0].wellConfig);
                        contigencyVal = "";
                        contigencyPercent = "";
                        taxPercent = "";
                        taxValue = "";
                        days_enter = [];
                        if(select_levelValue == "1"){
                            addLevel(z_selected_leveldata,"1");
                            $('.z-level1-day-input').val('');
                            $('.z-incline-data-level1').val('');
                            $('#z-totalDays').val('');
                            $('.z-contigency').val('');
                            $('.z-levy-end').text('');
                            $('#z-contigencyresult').text('');
                            $('#z-totalDays').val('');
                            alertPopup('success','Data for Level 1 has been deleted');
                        }
                        if(select_levelValue == "2"){
                            wellDays_data = JSON.parse(newConfigData[0].wellEstimateDays);
                            addLevel(z_selected_leveldata,"2");
                            alertPopup('success','Data for Level 2 has been deleted');
                        }
                        else if(select_levelValue == "3"){
                            wellDays_data_level3 = JSON.parse(newConfigData[0].wellEstimateDays);
                            addLevel(z_selected_leveldata,"3");
                            alertPopup('success','Data for Level 3 has been deleted');

                        }
                        else if(select_levelValue == "4"){
                            wellDays_data_level4 = JSON.parse(newConfigData[0].wellEstimateDays);
                            addLevel(z_selected_leveldata,"4");
                            alertPopup('success','Data for Level 4 has been deleted');


                        }
                        else if(select_levelValue == "5"){
                            wellDays_data_level5 = JSON.parse(newConfigData[0].wellEstimateDays);
                            addLevel(z_selected_leveldata,"5");
                            alertPopup('success','Data for Level 5 has been deleted');

                        }
                        z_showEstimate();
                        }
                        else{
                            alertPopup('alert','No Data is found');
                        }
                        
                    }
                }
            }
        });
        $("#confirmation_PopupAfeEstimation").modal("hide");
    confirmation_PopupAfeEstimation.remove();
    });
   
}
var actual_start_date = "";
function wellStartDate(){
    var data = {wellId: x_wellId};
var wellOperationData;
    call_ajax("/api/getWellOperation", "GET", data, 'json', 'application/json;charset=UTF-8', true, function (result) {
		if(result.status == "success"){
			wellOperationData = result.data;
		}
		if(wellOperationData.length > 0){
			rt_WellOperation_Data = JSON.parse(wellOperationData[0].wellDaysInput);
			actual_start_date = wellOperationData[0].wellStartDate;

			z_RealTime_cost_Monitoring();
			$('.z-sideNavbar-active').removeClass('z-sideNavbar-active');
			overlay_close();

		}
		else{
			$('#z-wellPhase-modal').remove();
    $('body').append('<div id="z-wellPhase-modal" class="modal" tabindex="-1" role="dialog">' +
    '<div class="modal-dialog" role="document">' +
    '<div class="modal-content">' +
    '<div class="modal-header">' +
    '<h5 class="modal-title">Enter Actual Start Date of the well</h5>' +
    '<button type="button" class="close z-close-date" data-dismiss="modal" aria-label="Close">' +
    '<span aria-hidden="true">&times;</span>' +
    '</button>' +
    '</div>' +
    '<div class="modal-body">' +
    '<div id="notSelectedPhase_list"></div>' +
    '<div id="customPhase-insertWrap">' +
    '<input id="customPhase-Date-input" class="z-m-inputS1" oninput="markDateInputasSelected(this)" flag="false" value = "" placeholder="">' +
    '</div>' +
    '</div>' +
    '<div class="modal-footer">' +
    '<button id="z-wellPhase-btn" type="button" class="btn btn-primary">Submit</button>' +
    '<button type="button" class="btn btn-secondary z-close-date" data-dismiss="modal">Cancel</button>' +
    '</div>' +
    '</div>' +
    '</div>' +
    '</div>');
    $('#z-wellPhase-btn').on('click', function (el) {
        if($('#customPhase-Date-input').val() == ""){
            alertPopup('alert','Please Select Actual Starting Date of the Well');
		}
		else{
			$('#z-wellPhase-modal').modal('hide');
			z_RealTime_cost_Monitoring();
			actual_start_date = $('#customPhase-Date-input').val();
		}
		
    });
	$('.z-close-date').on('click', function (el) {
		//z_RealTime_cost_Monitoring();
		$('.z-rightSection-active').removeClass('z-rightSection-active');
		sideNavbar_toggle_realtime_section();
	});
	$('#z-wellPhase-modal').modal('show');
	  $("#customPhase-Date-input").datetimepicker({
                    format: 'd-M-Y',
                    timepicker: false,
					scrollMonth : false,
	                scrollInput : false
                });
		}
	});
	
}
function markDateInputasSelected(el){
	$(el).attr('flag','true');
	
}
function z_RealTime_cost_Monitoring(){
        $('.z-rightSection-active').removeClass('z-rightSection-active');
		$('#costModalRealTime').attr('costModal','true');
        rearTimeMonitorPopup("Do you want to Import cost components from AFE Estimation for "+$('#z-wellName-afe').text()+"?", function () {
            alertPopup('alert','cost components from the AFE Estimation are added');
            $("#realtime_Monitoring_Popup").modal("hide");
            realtime_Monitoring_Popup.remove();
            sideNavbar_toggle_realtime_section();
        });
        

}
var phase_count = 0;
function z_add_next_row(el){
	   $('#z-realtime-wellOperation-table').append('<div class="col-12 z-tableData-row z-well">'+
                '<div class="row">'+
                    '<div class="z-noWidth z-welloperate-sno">'+(phase_count+1)+'</div>'+
                    '<div class="z-codeWidth-realtime"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 well-Actual-date z-time'+phase_count+'" row-index = "'+phase_count+'" onchange="z_time_calculate(this)" time-index="'+phase_count+'" time = "startingtime" type="text" value=""></div></div>'+
                    '<div class="z-codeWidth-realtime"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 well-Actual-date z-time'+phase_count+'" type="text" row-index = "'+phase_count+'" onchange="z_time_calculate(this)" time-index="'+phase_count+'" time = "finishingtime" value=""></div></div>'+
                    '<div class="z-phaseWidth-realtimeCost z-cost-content"><div class="z-l-grey-color"></div><div class="d-flex"><div class="z-Phase-realtimeWidth z-l-configbottom z-l-grey-color w-100"><select class="w-100" id="z-show-phases" onchange="z_Showactivity(this)" row-index = "'+phase_count+'" stage="phase">'+
                '<option disabled="disabled" selected="selected" value="-1">choose</option>'+
                '<option value="Break">Break</option>'+
				'<option value="Rig Move">Rig Move</option>'+
                '<option value="Preparations to Drill">Preparations to Drill</option>'+
                '<option value="Surface Casing Phase">Surface Casing Phase</option>'+
                '<option value="Intermediate Casing Phase">Intermediate Casing Phase</option>'+
				                '<option value="Intermediate Liner Phase">Intermediate Liner Phase</option>'+
                '<option value="Production Casing Phase">Production Casing Phase</option>'+
                '<option value="Production Liner Phase">Production Liner Phase</option>'+
				                '<option value="Well Testing Zone - 1">Well Testing Zone - 1</option>'+
				                '<option value="Well Testing Zone - 2">Well Testing Zone - 2</option>'+
				                '<option value="Well Testing Zone - 3">Well Testing Zone - 3</option>'+
				                '<option value="Lower Completions (Screens)">Lower Completions (Screens)</option>'+
				                '<option value="Lower Completions (Gravel Pack)">Lower Completions (Gravel Pack)</option>'+
				                '<option value="Upper Completions">Upper Completions</option>'+
				                '<option value="Well Suspension">Well Suspension</option>'+
				                '<option value="Plug and Abandon">Plug and Abandon</option>'+
				                '<option value="Rig Demobilization">Rig Demobilization</option>'+
												                '<option value="Pilot Hole">Pilot Hole</option>'+
												                '<option value="Well Killing">Well Killing</option>'+
                                                                 '<option value="De-Completions">De-Completions</option>'+
																 '<option value="Re-Entry">Re-Entry</option>'+
            '</select></div><div class="z-Phase-realtimeWidth z-l-configbottom z-l-grey-color"><select id="z-activity" onchange="z_Showactivity(this)" row-index = "'+phase_count+'" stage="activity">'+
                '<option disabled="disabled" selected="selected" value="-1">choose</option>'+
                '<option value="Casing">Casing</option>'+
                '<option value="Rig Repair">Rig Repair</option>'+
                '<option value="Wait on Weather">Wait on Weather</option>'+
                '<option value="Cementing">Cementing</option>'+
				                '<option value="OH Wireline Logging">OH Wireline Logging</option>'+
				                '<option value="CH Wireline Logging">CH Wireline Logging</option>'+
				                '<option value="Drilling">Drilling</option>'+
				                '<option value="Tripping BHA">Tripping BHA</option>'+
						                '<option value="Tripping Pipe">Tripping Pipe</option>'+
						                '<option value="BOP / Riser Handling">BOP / Riser Handling</option>'+
						                '<option value="Wellhead Handling">Wellhead Handling</option>'+
						                '<option value="Fishing">Fishing</option>'+
						                '<option value="Service Company Downtime">Service Company Downtime</option>'+
						                '<option value="Operational NPT">Operational NPT</option>'+
						                '<option value="Losses">Losses</option>'+
						                '<option value="Other Flat Time">Other Flat Time</option>'+

            '</select></div></div></div>'+
					'<div class="z-wellDuration">'+
                    '<div class="d-flex"><div class="z-durationWidth"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 z-time'+phase_count+'" type="text" disabled=true time-index="'+phase_count+'" value=""></div></div>'+
                        '<div class="z-durationWidth"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 z-time'+phase_count+'" type="text" disabled=true time-index="'+phase_count+'" value=""></div></div>'+
                        '<div class="z-durationWidth"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 z-time'+phase_count+'" type="text" disabled=true time-index="'+phase_count+'" value=""></div></div>'+
                        '</div></div>'+
						                    '<div class="z-depthWidth-realtime"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1" row-index = "'+phase_count+'" oninput = "addDepth(this)" type="text" value=""></div></div>'+
                    '<div class="z-wellActivity d-flex"><div id="z-rigcost-result" class="z-days-content z-padding-cell result1"><input id="z-rigcost1" class="w-100 z-remarkBorder z-time'+phase_count+'" time-index="'+phase_count+'" oninput = "addActivity(this)" type="text" name="" value=""></div><div class="fa fa-plus z-deleteactivity-row" row-index = "'+phase_count+'" onclick="deleterow_wellOperation(this)"></div><div class="fa fa-minus z-deleteactivity-row" row-index = "'+phase_count+'" onclick="deleterow_wellOperation(this)"></div></div>'+
                '</div></div>');
				var phaseObj = {};
			phaseObj.phase = "";
			phaseObj.activity = "";
			phaseObj.depth = "";
			phaseObj.fromTime = "";
			phaseObj.toTime = "";
			phaseObj.timeInHours = "";
			phaseObj.timeInDays = "";
			phaseObj.cumulativeDays = "";
			phaseObj.activityDescription = "";
			phaseObj.rowIndex = phase_count;
			phaseObj.actualStartDate = actual_start_date;
			phaseObj.days = "";
			rt_WellOperation_Data.push(phaseObj);
			phaseObj = {};
				phase_count = phase_count + 1;
				 $(".well-Actual-date").datetimepicker({
                    //format: 'd-M-Y',
                    timepicker: true,
					scrollMonth : false,
	                scrollInput : false,
	                controlType: 'select',
                    format:'d/m/Y H:i:s',
                    step: 5 
					
                });
				/* $('.well-Actual-date').on('input', function(el) {
					z_time_calculate(el.target);
				}); */
				rt_wellOperation_cumulativeAdjust();
				
				
}
//var wellOperation_phase = [{'phase':'Rig Move','isSelected':false},{'phase':'Preparations to Drill','isSelected':false},{'phase':'Surface Casing Phase','isSelected':false},{'phase':'Intermediate Casing Phase','isSelected':false}];
//var wellOperation_activity = [{'activity':'Casing','isSelected':false},{'activity':'Rig Repair','isSelected':false},{'activity':'Wait on Weather','isSelected':false},{'activity':'Cementing','isSelected':false}];
var rt_WellOperation_Data = [];
function z_Showactivity(el){
   
		var row_index = $(el).attr('row-index');
		var phase = $('[row-index="'+row_index+'"][stage="phase"]').val();
        var activity = $('[row-index="'+row_index+'"][stage="activity"]').val();
			var phaseObj = {};
			if(rt_WellOperation_Data.length > 0){
				phaseObj = rt_WellOperation_Data[row_index];
				phaseObj.phase = phase;
			phaseObj.activity = activity;
			}
			else{
				phaseObj.phase = phase;
			phaseObj.activity = activity;
			phaseObj.depth = "";
			phaseObj.fromTime = "";
			phaseObj.toTime = "";
			phaseObj.timeInHours = "";
			phaseObj.timeInDays = "";
			phaseObj.cumulativeDays = "";
			phaseObj.activityDescription = "";
			phaseObj.days = "";
			phaseObj.actualStartDate = actual_start_date;
			phaseObj.rowIndex = Number(row_index);
				rt_WellOperation_Data.push(phaseObj);

			}
			phaseObj = {};
       
    }

function z_real_timePanel(el){
    $('.z-rightSection-active').removeClass('z-rightSection-active');
	var phaseObj;
	var z_well_config;
	if(actual_start_date == ""){
		alertPopup('alert','Please Select Actula Start Date of the well');
	}
	else{
		   if(el.innerText == "Real Time Well Operation" || el.innerText == "Back to Well Operation"){
        $('#realtime-wellOperation').addClass('z-rightSection-active');
		$('#z-rt-wellOperation-heading').removeClass('d-none');
		$('#z-rt-costModel-heading').addClass('d-none');
		$('.z-well').remove();
		var z_length;
		var welloperationdata_length = 0;
		if(rt_WellOperation_Data.length > 0){
			z_length = rt_WellOperation_Data.length;
			
		}
		else{
			z_length = 10;
		}
		welloperationdata_length = rt_WellOperation_Data.length;
		phase_count = 0;
		var fromTime;
		var toTime;
		var fromTimeString;
		var toTimeString;
		for(var i=0;i<z_length;i++){
			if(welloperationdata_length > 0){
			if(rt_WellOperation_Data[phase_count].fromTime == ""){
				fromTime = "";
			}
			else{
				//fromTime = new Date(rt_WellOperation_Data[phase_count].fromTime.getYear()+1900,rt_WellOperation_Data[phase_count].fromTime.getMonth(),rt_WellOperation_Data[phase_count].fromTime.getDate(),rt_WellOperation_Data[phase_count].fromTime.getHours(),rt_WellOperation_Data[phase_count].fromTime.getMinutes(),rt_WellOperation_Data[phase_count].fromTime.getSeconds());
								fromTime = new Date(rt_WellOperation_Data[phase_count].fromTime);

			}
			if(rt_WellOperation_Data[phase_count].toTime == ""){
				toTime = "";
			}
			else{
			//toTime = new Date(rt_WellOperation_Data[phase_count].toTime.getYear()+1900,rt_WellOperation_Data[phase_count].toTime.getMonth(),rt_WellOperation_Data[phase_count].toTime.getDate(),rt_WellOperation_Data[phase_count].toTime.getHours(),rt_WellOperation_Data[phase_count].toTime.getMinutes(),rt_WellOperation_Data[phase_count].toTime.getSeconds());
			toTime = new Date(rt_WellOperation_Data[phase_count].toTime);

			}

			$('#z-realtime-wellOperation-table').append('<div class="col-12 z-tableData-row z-well">'+
                '<div class="row">'+
                    '<div class="z-noWidth z-welloperate-sno">'+(phase_count+1)+'</div>'+
                    '<div class="z-codeWidth-realtime"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 well-Actual-date z-time'+phase_count+'" row-index = "'+phase_count+'" onchange="z_time_calculate(this)" time-index="'+phase_count+'" time = "startingtime" type="text" value=""></div></div>'+
                    '<div class="z-codeWidth-realtime"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 well-Actual-date z-time'+phase_count+'" type="text" row-index = "'+phase_count+'" onchange="z_time_calculate(this)" time-index="'+phase_count+'" time = "finishingtime" value=""></div></div>'+
                    '<div class="z-phaseWidth-realtimeCost z-cost-content"><div class="z-l-grey-color"></div><div class="d-flex"><div class="z-Phase-realtimeWidth z-l-configbottom z-l-grey-color w-100"><select class="w-100" id="z-show-phases" onchange="z_Showactivity(this)" row-index = "'+phase_count+'" stage="phase">'+
                '<option disabled="disabled" selected="selected" value="-1">choose</option>'+
                '<option value="Break">Break</option>'+
				'<option value="Rig Move">Rig Move</option>'+
                '<option value="Preparations to Drill">Preparations to Drill</option>'+
                '<option value="Surface Casing Phase">Surface Casing Phase</option>'+
                '<option value="Intermediate Casing Phase">Intermediate Casing Phase</option>'+
				                '<option value="Intermediate Liner Phase">Intermediate Liner Phase</option>'+
                '<option value="Production Casing Phase">Production Casing Phase</option>'+
                '<option value="Production Liner Phase">Production Liner Phase</option>'+
				                '<option value="Well Testing Zone - 1">Well Testing Zone - 1</option>'+
				                '<option value="Well Testing Zone - 2">Well Testing Zone - 2</option>'+
				                '<option value="Well Testing Zone - 3">Well Testing Zone - 3</option>'+
				                '<option value="Lower Completions (Screens)">Lower Completions (Screens)</option>'+
				                '<option value="Lower Completions (Gravel Pack)">Lower Completions (Gravel Pack)</option>'+
				                '<option value="Upper Completions">Upper Completions</option>'+
				                '<option value="Well Suspension">Well Suspension</option>'+
				                '<option value="Plug and Abandon">Plug and Abandon</option>'+
				                '<option value="Rig Demobilization">Rig Demobilization</option>'+
												                '<option value="Pilot Hole">Pilot Hole</option>'+
												                '<option value="Well Killing">Well Killing</option>'+
                                                                 '<option value="De-Completions">De-Completions</option>'+
																 '<option value="Re-Entry">Re-Entry</option>'+
            '</select></div><div class="z-Phase-realtimeWidth z-l-configbottom z-l-grey-color"><select id="z-activity" onchange="z_Showactivity(this)" row-index = "'+phase_count+'" stage="activity">'+
                '<option disabled="disabled" selected="selected" value="-1">choose</option>'+
                '<option value="Casing">Casing</option>'+
                '<option value="Rig Repair">Rig Repair</option>'+
                '<option value="Wait on Weather">Wait on Weather</option>'+
                '<option value="Cementing">Cementing</option>'+
				                '<option value="OH Wireline Logging">OH Wireline Logging</option>'+
				                '<option value="CH Wireline Logging">CH Wireline Logging</option>'+
				                '<option value="Drilling">Drilling</option>'+
				                '<option value="Tripping BHA">Tripping BHA</option>'+
						                '<option value="Tripping Pipe">Tripping Pipe</option>'+
						                '<option value="BOP / Riser Handling">BOP / Riser Handling</option>'+
						                '<option value="Wellhead Handling">Wellhead Handling</option>'+
						                '<option value="Fishing">Fishing</option>'+
						                '<option value="Service Company Downtime">Service Company Downtime</option>'+
						                '<option value="Operational NPT">Operational NPT</option>'+
						                '<option value="Losses">Losses</option>'+
						                '<option value="Other Flat Time">Other Flat Time</option>'+

            '</select></div></div></div>'+
					'<div class="z-wellDuration">'+
                    '<div class="d-flex"><div class="z-durationWidth"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 z-time'+phase_count+'" type="text" disabled=true time-index="'+phase_count+'" value="'+rt_WellOperation_Data[phase_count].timeInHours+'"></div></div>'+
                        '<div class="z-durationWidth"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 z-time'+phase_count+'" type="text" disabled=true time-index="'+phase_count+'" value="'+rt_WellOperation_Data[phase_count].timeInDays+'"></div></div>'+
                        '<div class="z-durationWidth"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 z-time'+phase_count+'" type="text" disabled=true time-index="'+phase_count+'" value="'+rt_WellOperation_Data[phase_count].cumulativeDays+'"></div></div>'+
                        '</div></div>'+
						                    '<div class="z-depthWidth-realtime"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1" row-index = "'+phase_count+'" oninput = "addDepth(this)" type="text" value="'+rt_WellOperation_Data[phase_count].depth+'"></div></div>'+
                    '<div class="z-wellActivity d-flex"><div id="z-rigcost-result" class="z-days-content z-padding-cell result1"><input id="z-rigcost1" class="w-100 z-remarkBorder z-time'+phase_count+'" time-index="'+phase_count+'" oninput = "addActivity(this)" type="text" name="" value="'+rt_WellOperation_Data[phase_count].activityDescription+'"></div><div class="fa fa-plus z-deleteactivity-row" row-index = "'+phase_count+'" onclick="deleterow_wellOperation(this)"></div><div class="fa fa-minus z-deleteactivity-row" row-index = "'+phase_count+'" onclick="deleterow_wellOperation(this)"></div></div>'+
                '</div></div>');
				$(".well-Actual-date").datetimepicker({
                    //format: 'd-M-Y',
                    timepicker: true,
					scrollMonth : false,
	                scrollInput : false,
	                controlType: 'select',
                    format:'d/m/Y H:i:s',
                    step: 5 
					
                });
				$('[row-index="'+phase_count+'"][stage="phase"]').val(rt_WellOperation_Data[phase_count].phase);
								$('[row-index="'+phase_count+'"][stage="activity"]').val(rt_WellOperation_Data[phase_count].activity);
								if(toTime != ""){
									$('[time-index="'+phase_count+'"][time="finishingtime"]').datetimepicker('setOptions', {'value':toTime});

								}
								if(fromTime != ""){
									$('[time-index="'+phase_count+'"][time="startingtime"]').datetimepicker('setOptions', {'value':fromTime});

								}
		}
		else{
			$('#z-realtime-wellOperation-table').append('<div class="col-12 z-tableData-row z-well">'+
                '<div class="row">'+
                    '<div class="z-noWidth z-welloperate-sno">'+(phase_count+1)+'</div>'+
                    '<div class="z-codeWidth-realtime"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 well-Actual-date z-time'+phase_count+'" row-index = "'+phase_count+'" onchange="z_time_calculate(this)" time-index="'+phase_count+'" time = "startingtime" type="text" value=""></div></div>'+
                    '<div class="z-codeWidth-realtime"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 well-Actual-date z-time'+phase_count+'" type="text" row-index = "'+phase_count+'" onchange="z_time_calculate(this)" time-index="'+phase_count+'" time = "finishingtime" value=""></div></div>'+
                    '<div class="z-phaseWidth-realtimeCost z-cost-content"><div class="z-l-grey-color"></div><div class="d-flex"><div class="z-Phase-realtimeWidth z-l-configbottom z-l-grey-color w-100"><select class="w-100" id="z-show-phases" onchange="z_Showactivity(this)" row-index = "'+phase_count+'" stage="phase">'+
                '<option disabled="disabled" selected="selected" value="-1">choose</option>'+
                '<option value="Break">Break</option>'+
				'<option value="Rig Move">Rig Move</option>'+
                '<option value="Preparations to Drill">Preparations to Drill</option>'+
                '<option value="Surface Casing Phase">Surface Casing Phase</option>'+
                '<option value="Intermediate Casing Phase">Intermediate Casing Phase</option>'+
				                '<option value="Intermediate Liner Phase">Intermediate Liner Phase</option>'+
                '<option value="Production Casing Phase">Production Casing Phase</option>'+
                '<option value="Production Liner Phase">Production Liner Phase</option>'+
				                '<option value="Well Testing Zone - 1">Well Testing Zone - 1</option>'+
				                '<option value="Well Testing Zone - 2">Well Testing Zone - 2</option>'+
				                '<option value="Well Testing Zone - 3">Well Testing Zone - 3</option>'+
				                '<option value="Lower Completions (Screens)">Lower Completions (Screens)</option>'+
				                '<option value="Lower Completions (Gravel Pack)">Lower Completions (Gravel Pack)</option>'+
				                '<option value="Upper Completions">Upper Completions</option>'+
				                '<option value="Well Suspension">Well Suspension</option>'+
				                '<option value="Plug and Abandon">Plug and Abandon</option>'+
				                '<option value="Rig Demobilization">Rig Demobilization</option>'+
												                '<option value="Pilot Hole">Pilot Hole</option>'+
												                '<option value="Well Killing">Well Killing</option>'+
                                                                 '<option value="De-Completions">De-Completions</option>'+
																 '<option value="Re-Entry">Re-Entry</option>'+
            '</select></div><div class="z-Phase-realtimeWidth z-l-configbottom z-l-grey-color"><select id="z-activity" onchange="z_Showactivity(this)" row-index = "'+phase_count+'" stage="activity">'+
                '<option disabled="disabled" selected="selected" value="-1">choose</option>'+
                '<option value="Casing">Casing</option>'+
                '<option value="Rig Repair">Rig Repair</option>'+
                '<option value="Wait on Weather">Wait on Weather</option>'+
                '<option value="Cementing">Cementing</option>'+
				                '<option value="OH Wireline Logging">OH Wireline Logging</option>'+
				                '<option value="CH Wireline Logging">CH Wireline Logging</option>'+
				                '<option value="Drilling">Drilling</option>'+
				                '<option value="Tripping BHA">Tripping BHA</option>'+
						                '<option value="Tripping Pipe">Tripping Pipe</option>'+
						                '<option value="BOP / Riser Handling">BOP / Riser Handling</option>'+
						                '<option value="Wellhead Handling">Wellhead Handling</option>'+
						                '<option value="Fishing">Fishing</option>'+
						                '<option value="Service Company Downtime">Service Company Downtime</option>'+
						                '<option value="Operational NPT">Operational NPT</option>'+
						                '<option value="Losses">Losses</option>'+
						                '<option value="Other Flat Time">Other Flat Time</option>'+

            '</select></div></div></div>'+
					'<div class="z-wellDuration">'+
                    '<div class="d-flex"><div class="z-durationWidth"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 z-time'+phase_count+'" type="text" disabled=true time-index="'+phase_count+'" value=""></div></div>'+
                        '<div class="z-durationWidth"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 z-time'+phase_count+'" type="text" disabled=true time-index="'+phase_count+'" value=""></div></div>'+
                        '<div class="z-durationWidth"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1 z-time'+phase_count+'" type="text" disabled=true time-index="'+phase_count+'" value=""></div></div>'+
                        '</div></div>'+
						                    '<div class="z-depthWidth-realtime"><div class="z-days-content z-padding-cell"><input id="z-rigcost1" class="w-100 level1-cost1" row-index = "'+phase_count+'" oninput = "addDepth(this)" type="text" value=""></div></div>'+
                    '<div class="z-wellActivity d-flex"><div id="z-rigcost-result" class="z-days-content z-padding-cell result1"><input id="z-rigcost1" class="w-100 z-remarkBorder z-time'+phase_count+'" time-index="'+phase_count+'" oninput = "addActivity(this)" type="text" name="" value=""></div><div class="fa fa-plus z-deleteactivity-row" row-index = "'+phase_count+'" onclick="deleterow_wellOperation(this)"></div><div class="fa fa-minus z-deleteactivity-row" row-index = "'+phase_count+'" onclick="deleterow_wellOperation(this)"></div></div>'+
                '</div></div>');
					phaseObj = {};
			phaseObj.phase = "";
			phaseObj.activity = "";
			phaseObj.depth = "";
			phaseObj.fromTime = "";
			phaseObj.toTime = "";
			phaseObj.timeInHours = "";
			phaseObj.timeInDays = "";
			phaseObj.cumulativeDays = "";
			phaseObj.activityDescription = "";
			phaseObj.rowIndex = phase_count;
			phaseObj.actualStartDate = actual_start_date;
			phaseObj.days = "";
			rt_WellOperation_Data.push(phaseObj);
			phaseObj = {};
			$(".well-Actual-date").datetimepicker({
                    //format: 'd-M-Y',
                    timepicker: true,
					scrollMonth : false,
	                scrollInput : false,
	                controlType: 'select',
                    format:'d/m/Y H:i:s',
                    step: 5 
					
                });
		}
		 
				phase_count  = phase_count + 1;
		}

    }
    else{
        $('#realtime-costMonitoring').addClass('z-rightSection-active');
		$('#z-rt-costModel-heading').removeClass('d-none');
		$('#z-rt-wellOperation-heading').addClass('d-none');
	$.ajax({
        url: "/api/getWellConfiguration",
        type: "GET",
        async: false,
        data: {wellId: x_wellId,level:"",config:""},
        dataType: 'text',
        //contentType: 'application/json;charset=UTF-8',
        success: function (result) {
        	z_well_config = JSON.parse(result);
			z_well_config.sort(function(a,b){return b.levelValue-a.levelValue});
        	z_sel_config = JSON.parse(z_well_config[0].wellConfig);
			average_select = z_well_config[0].averageComponents;
			z_level = "Level"+z_well_config[0].levelValue;
			$('.z-level1-rows').remove();
			$('.z-level2-rows').remove();
			display_costModel();
        }});
    }
	
	}
 //sideNavbar_toggle_realtime_section();
}
function startDateFunction(el){
	var row_index = $(el).attr('row-index');
	rt_WellOperation_Data[row_index].actualStartDate = $(el).val();
}
function addDepth(el){
		var row_index = $(el).attr('row-index');
	rt_WellOperation_Data[row_index].depth = $(el).val();
}
function addActivity(el){
	var row_index = $(el).attr('time-index');
	rt_WellOperation_Data[row_index].activityDescription = $(el).val();
}
function rt_savePhase(el){
	var content = $(el).attr('content');
	var row_index;
	if(content == 'phase'){
		row_index = $(el).attr('phase-index');
	}
	else{
		row_index = $(el).attr('activity-index');
	}
	var index_toFind_row = rt_WellOperation_Data.findIndex(function(val1){
		return val1.rowIndex == row_index;
	});
	if(index_toFind_row != -1){
		if(content == 'phase'){
			rt_WellOperation_Data[index_toFind_row].phase = $(el).text();
		}
		else{
			rt_WellOperation_Data[index_toFind_row].activity = $(el).text();
		}
	}
}
function deleterow_wellOperation(el){
	 confirmation_Popup("Are  you sure want to delete this row?", function () {
			if(rt_WellOperation_Data.length > 0){
				var row_index = $(el).attr('row-index');
					rt_WellOperation_Data.splice(row_index,1);
				
			}
			$(el).offsetParent().remove();
			phase_count = 0;
				var x= $('.z-well');
				var text_sno;
				var z_well_class;
				for(var limit = 0;limit < x.length;limit++){
					text_sno = $(x[limit]).children().children()[0].innerText;
					if(text_sno == limit+1){
						
					}
					else{
						$(x[limit]).children().children()[0].innerText = limit+1;
						z_well_class = 'z-time'+limit;
						$('.z-time'+(text_sno-1)).addClass(z_well_class);
						$('[time-index="'+ (text_sno-1) +'"]').attr('time-index',limit);
						$('.z-time'+(text_sno-1)).removeClass('z-time'+(text_sno-1));
					}
					
					phase_count = phase_count + 1;
					console.log("phase count"+phase_count);
				}
				rt_wellOperation_cumulativeAdjust();
	alertPopup('success','selected rows has been deleted');
		 clearConfirmationPopup();
	        });
	
}

function z_time_calculate(el){
	var time_index = $(el).attr('time-index');
	var start_time_input = $('.z-time'+time_index)[0];
	var completed_time_input = $('.z-time'+time_index)[1];
	var time_in_hrs = $('.z-time'+time_index)[2];
	var time_in_days = $('.z-time'+time_index)[3];
	var cummulative_days = $('.z-time'+time_index)[4];
	var start_time_val = start_time_input.value;
	var end_time_val = completed_time_input.value;
	var date1;
	var date2;
	var result_time_in_hr;
	var result_time_in_min;
	var start_time1;
	var end_time1;
	var time1;
	var time2;
	var fromDate;
	var endDate;
	var timeDiffInHours;
	var timeDiffInDays;
	date1 = start_time_val.split(' ');
	date2 = end_time_val.split(' ');
	if(date1.length > 1 && date2.length > 1){
		time1 = date1[0].split("/");
		time2 = date1[1].split(":");
		fromDate = new Date(Number(time1[2]),Number(time1[1]),Number(time1[0]),Number(time2[0]),Number(time2[1]),Number(time2[2]));
		time1 = date2[0].split("/");
		time2 = date2[1].split(":");
		endDate = new Date(Number(time1[2]),Number(time1[1]),Number(time1[0]),Number(time2[0]),Number(time2[1]),Number(time2[2]));
	      timeDiffInMinutes = (endDate.getTime() - fromDate.getTime())/1000;
		  //timeDiffInMinutes /= 60;
		  timeDiffInHours = (timeDiffInMinutes/3600).toPrecision(4);
		  timeDiffInDays = (timeDiffInHours/24).toPrecision(3);
	}
	else{
		timeDiffInHours = "0";
		timeDiffInDays = "0";
	}
time_in_hrs.value = timeDiffInHours;
time_in_days.value = timeDiffInDays;
	rt_WellOperation_Data[time_index].timeInHours = timeDiffInHours;
		rt_WellOperation_Data[time_index].timeInDays = timeDiffInDays;
				rt_WellOperation_Data[time_index].fromTime = fromDate;
		rt_WellOperation_Data[time_index].toTime = endDate;
		if(time_index == "0"){
			rt_WellOperation_Data[time_index].days = "Day 1";
		}
		


	
	/* if(time1.length > 1 && time2.length > 1){
		if(time1[0] > time2[0]){
			result_time_in_hr = time1[0] - time2[0];
		}
		
	else{
		result_time_in_hr = time2[0] - time1[0];
	}
		
	if(time1[1] > time2[1]){
		result_time_in_min = time1[1] - time2[1];
	}
		
	else{
		result_time_in_min = time2[1] - time1[1];
	}
		
	}
	else if(time1.length > 1 && time2.length < 2){
		if(time1[0] > time2[0]){
			result_time_in_hr = time1[0] - time2[0];
		}
		else{
			result_time_in_hr = time2[0] - time1[0];
		}
		result_time_in_min = time1[1];
	}
	else if(time1.length < 2 && time2.length < 2){
		if(time1[0] > time2[0]){
			result_time_in_hr = time1[0] - time2[0];
		}
		else{
			result_time_in_hr = time2[0] - time1[0];
		}
		
	}
	else if(time2.length > 1 && time1.length < 2){
		if(time1[0] > time2[0]){
			result_time_in_hr = time1[0] - time2[0];
		}
		else{
			result_time_in_hr = time2[0] - time1[0];
		}
		
		result_time_in_min = time2[1];
	}
	result_time_in_hr != null ? result_time_in_hr = result_time_in_hr : result_time_in_hr = "00";
	result_time_in_min != null ? result_time_in_min = result_time_in_min : result_time_in_min = "00";
	time_in_hrs.value = result_time_in_hr + "."+result_time_in_min;
	time_in_days.value = ((result_time_in_hr + "."+result_time_in_min)/24).toPrecision(1); */
	//cumulative calculation
	rt_wellOperation_cumulativeAdjust();
}
function rt_wellOperation_cumulativeAdjust(){
	var x= $('.z-well');
	var x_length = x.length;
				var text_sno;
				var z_well_class;
				var z_previous_day;
				var sum = 0;
				var day_1 = 0;
				var day_2 = 0;
				for(var limit = 0;limit < x_length;limit++){
						z_well_class = $('.z-time'+limit);
					    if(limit == 0){
							z_well_class[4].value = z_well_class[3].value;
							day_1 = z_well_class[3].value;
							rt_WellOperation_Data[limit].cumulativeDays = z_well_class[3].value;
						}
						else{
							day_2 = z_well_class[3].value;
							z_previous_day = $('.z-time'+(limit-1));
							day_1 = z_previous_day[4].value;
							day_2 == "" ? day_2 = 0 : day_2 = Number(day_2);
							day_1 == "" ? day_1 = 0 : day_1 = Number(day_1);
						    sum = day_1 + day_2;
							z_well_class[4].value = sum.toPrecision(2);
							rt_WellOperation_Data[limit].cumulativeDays = z_well_class[4].value;

						}
				}
}
var wellOperationJsonData = [];
function z_rtwellOperate_save(el){
	var z_well_config;
$.ajax({
        url: "/api/getWellConfiguration",
        type: "GET",
        async: false,
        data: {wellId: x_wellId,level:"",config:""},
        dataType: 'text',
        //contentType: 'application/json;charset=UTF-8',
        success: function (result) {
        	z_well_config = JSON.parse(result);
			z_well_config.sort(function(a,b){return b.levelValue-a.levelValue});
        	//baseConfig = JSON.parse(well_config[3].wellConfig);
        }});
		var wellStartDate;
		if(typeof(actual_start_date) == "string"){
			wellStartDate = new Date(actual_start_date).getTime();
		}
		else{
			if(typeof(actual_start_date) == "number"){
				wellStartDate = actual_start_date;
			}
			else{
				wellStartDate = actual_start_date.getTime();
			}
			

		}
	var data = {
					wellDaysInput: JSON.stringify(rt_WellOperation_Data),
					wellId: x_wellId,
					level: z_well_config[0].levelValue,
					isLocked: false,
					wellStartDate: wellStartDate
					//wellStartDate: actual_start_date.replace(/-/g,'/').replace('May','05')
					};
			
			$.ajax({
				url: "/api/submitWellOperation",
				type: "POST",
				data: JSON.stringify(data),
				async: false,
				dataType: 'text',
				contentType: 'application/json;charset=UTF-8',
				success: function (result) {
				wellOperationJsonData = JSON.parse(result);
						if(wellOperationJsonData.length > 0){
							rt_WellOperation_Data = wellOperationJsonData[0].wellDaysInput;
							actual_start_date = new Date(wellOperationJsonData[0].wellStartDate);
						}
						alertPopup('success','Real Time Well Operation Data Saved Successfully');
				 /* $.ajax({
			        url: "/api/getWellOperation",
			        type: "GET",
			        data: {wellId: x_wellId},
			        async: false,
			        dataType: 'text',
			        //contentType: 'application/json;charset=UTF-8',
			        success: function (result) {
			        	wellOperationJsonData = JSON.parse(result);
						if(wellOperationJsonData.length > 0){
							rt_WellOperation_Data = wellOperationJsonData[0].wellDaysInput;
						}
			        }
				}); */
					//alertPopup('success','Well Estimation Saved Successfully');
				}
                });
               
}
var realTimeDailyCost = [];
function display_costModel(el){
	$('.z-realtimeDays-Column').remove();
	var rt_length = rt_WellOperation_Data.length;
	var startdate;
	var Previousdate;
	var dateString;
	var timeInHrs;
	var DaysValue;
	var test_count = 1;
	var count;
	
	realTimeDailyCost = JSON.parse(JSON.stringify(z_sel_config));
	var totalCostItem;
	 realTimeDailyCost.forEach(function(val1,index1){
		if(val1.isSelected){
			val1.subLevels.forEach(function(val2,index2){
				if(val2.isSelected){
					val2.totalCostItem.forEach(function(level1,i1){
						if(level1.subPhase != null){
							level1.subPhase.forEach(function(level2,i2){
								if(level2.subPhase != null){
									level2.subPhase.forEach(function(level3,i3){
										if(level3.subPhase != null){
										level3.subPhase.forEach(function(level4,i4){
											if(level4.hasOwnProperty('rateValue')){
												level4.rateValue = [];
											}
										});	
										}
										if(level3.hasOwnProperty('rateValue')){
												level3.rateValue = [];
											}
									});
								}
								if(level2.hasOwnProperty('rateValue')){
												level2.rateValue = [];
											}
							});
						}
						if(level1.hasOwnProperty('rateValue')){
												level1.rateValue = [];
											}
					});
				}
			});
		}
	});
z_sel_config = 	realTimeDailyCost;
z_selected_leveldata = realTimeDailyCost;
	for(var i=0;i<rt_length;i++){
			if(rt_WellOperation_Data[i].phase != ""){
			 startdate = new Date(rt_WellOperation_Data[i].fromTime);
			 if(i != 0){
              Previousdate = new Date(rt_WellOperation_Data[i-1].fromTime);
			  if(startdate.getDate() == Previousdate.getDate()){
				  DaysValue = Number(test_count);
			  }
			  else{
				  test_count = test_count + 1;
				  DaysValue = Number(test_count);
				  
			  }
			 }
			 else if(i == 0){
				 DaysValue = 1;
			 }
			 
			 dateString = startdate.getDate()+"-"+startdate.getMonth()+"-"+startdate.getFullYear();
			 timeInHrs = rt_WellOperation_Data[i].timeInHours;
			 if(i == rt_length-1){
				 			 $('#z-realtime-daysData').append('<div class="col-3 z-realtimeDays-Column z-active-days-column"><div class="d-flex"><div class="z-text-underline">Day '+DaysValue+'</div><div class="fa fa-plus z-addconfig-left-level3"></div><div class="fa fa-minus z-addconfig-left-level3"></div></div><div>'+timeInHrs+' Hrs</div><div class="z-l-title">Phases</div><div class="z-cost-content">'+rt_WellOperation_Data[i].phase+'</div><div class="btn z-m-addPhasebtn" style="font-size: 14px;" day="'+DaysValue+'" onclick="copy_from_previous_column(this)">Copy From Previous</div><div>'+dateString+'</div><div class="z-l-title">Daily Cost</div></div>');

			 }
			 else{
			 $('#z-realtime-daysData').append('<div class="col-3 z-realtimeDays-Column"><div class="d-flex"><div class="z-text-underline">Day '+DaysValue+'</div><div class="fa fa-plus z-addconfig-left-level3"></div><div class="fa fa-minus z-addconfig-left-level3"></div></div><div>'+timeInHrs+' Hrs</div><div class="z-l-title">Phases</div><div class="z-cost-content">'+rt_WellOperation_Data[i].phase+'</div><div class="btn z-m-addPhasebtn" style="font-size: 14px;" day="'+DaysValue+'" onclick="edit_cost_column(this)">Edit</div><div>'+dateString+'</div><div class="z-l-title">Daily Cost</div></div>');

			 }

			}

	}

	var z_no = 0;
	var serial_no = ['A','B','C','D','E','F','G','H'];
	var footerData = ["Adhoc Costs (%)","Taxes (%)","Government Levy (%)","TOTAL DAILY WELL COST","CUMULATIVE WELL COST"];
	realTimeDailyCost.forEach(function(level1,index1){
		z_no = 0;
		level1.subLevels.forEach(function(level2,index2){
			$('#z-test-sublevels').append('<div class="col-12 z-level2-rows z-tableData-row"><div class="row z-borderBottom"><div class="col-4 d-flex">'+
		'<div class="col-2">'+(serial_no[index1]+(z_no+1))+'</div>'+
		'<div class="col-11 font-weight-bold" current-phase="2" current-level="'+ index2 +'"  base-level="'+ index1 + '" active-day-index = "'+DaysValue+'" onclick="z_costModel_realTime(this)">'+level2.phaseName+'</div></div>'+
		'<div class="col-6 d-flex z-days-overflow-realtime-costComponent" phase1="'+level1.phaseName+'" phase2="'+level2.phaseName+'">'+
	'</div>'+
		'<div class="col-2">'+
        '<div class="font-weight-bold z-padding-cell"><input class="w-100" disabled="true" level1-totalCost="'+level1.phaseName+'" level2-totalCost="'+level2.phaseName+'" type="text" value=""></div></div>'+
		'</div></div>');
		for(count=0;count<DaysValue;count++){
			if(count == DaysValue-1){
							$('[phase1="'+level1.phaseName+'"][phase2="'+level2.phaseName+'"]').append('<div class="col-3 z-padding-cell z-column'+(count+1)+' z-active-days-column"><input class="w-100" disabled="true" days-input="'+(count+1)+'" level1="'+level1.phaseName+'" level2="'+level2.phaseName+'" type="text" value=""></div>');

			}
			else{
							$('[phase1="'+level1.phaseName+'"][phase2="'+level2.phaseName+'"]').append('<div class="col-3 z-padding-cell z-column'+(count+1)+'"><input class="w-100" disabled="true" days-input="'+(count+1)+'" level1="'+level1.phaseName+'" level2="'+level2.phaseName+'" type="text" value=""></div>');

			}
		}
		z_no = z_no + 1;
		});
		$('#z-realtime-wellCost-table').append('<div class="col-12 z-level1-rows z-tableData-row"><div class="row z-borderBottom"><div class="col-4 d-flex">'+
		'<div class="col-2">'+serial_no[index1]+'</div>'+
		'<div class="col-11 font-weight-bold">'+level1.phaseName+'</div></div>'+
		'<div class="col-6 d-flex" level1-Phase-Name="'+level1.phaseName+'">'+
	    '</div>'+
		'<div class="col-2">'+
                '<div class="font-weight-bold z-padding-cell"></div></div>'+
		'</div></div>'+
		$('#z-test-sublevels')[0].innerHTML);
		$('#z-test-sublevels').empty();
			/* for(count=0;count<DaysValue;count++){
			$('[Level1-Phase-Name="'+level1.phaseName+'"]').append('<div class="col-3 z-padding-cell"><input class="w-100" disabled="true" type="text" value=""></div>');
		} */
		$('#z-realtime-wellCost-table').append('<div class="col-12 z-level1-rows z-tableData-row"><div class="row z-borderBottom"><div class="col-4 d-flex">'+
		'<div class="col-2"></div>'+
		'<div class="col-11 font-weight-bold z-total-colorBlue">'+'Total '+level1.phaseName+'</div></div>'+
		'<div class="col-6 d-flex z-days-overflow-realtime-costComponent" totalPhaseName="'+level1.phaseName+'"></div>'+
		'<div class="col-2">'+
                '<div class="font-weight-bold z-padding-cell"><input class="w-100 totalCostComponent" disabled="true" type="text" level1-totalCost="'+level1.phaseName+'" value=""></div></div>'+
		'</div></div>');
		for(count=0;count<DaysValue;count++){
			$('[totalPhaseName="'+level1.phaseName+'"]').append('<div class="col-3 z-padding-cell"><input class="w-100" disabled="true" type="text" value=""></div>');
		}
	});
	footerData.forEach(function(val){
		if(val == "Taxes (%)" || val == "Government Levy (%)" || val == "Adhoc Costs (%)"){
			$('#z-realtime-wellCost-table').append('<div class="col-12 z-level1-rows z-tableData-row"><div class="row z-borderBottom"><div class="col-4 d-flex">'+
		'<div class="col-2"></div>'+
		'<div class="col-11 font-weight-bold d-flex"><div class="col-6">'+val+'</div><div class="col-5"><input class="w-100 z-calCost" value=""></div></div></div>'+
		'<div class="col-6 d-flex z-days-overflow-realtime-costComponent tax-Contigency-Total"></div>'+
		'<div class="col-2">'+
                '<div class="font-weight-bold z-padding-cell"><input class="w-100" disabled="true" type="text" value=""></div></div>'+
		'</div></div>');
		}
		else{
			$('#z-realtime-wellCost-table').append('<div class="col-12 z-level1-rows z-tableData-row"><div class="row z-borderBottom"><div class="col-4 d-flex">'+
		'<div class="col-2"></div>'+
		'<div class="col-11 font-weight-bold d-flex">'+val+'</div></div>'+
		'<div class="col-6 d-flex z-days-overflow-realtime-costComponent tax-Contigency-Total"></div>'+
		'<div class="col-2">'+
                '<div class="font-weight-bold z-padding-cell"><input class="w-100" disabled="true" type="text" value=""></div></div>'+
		'</div></div>');
		}
		
	});
	for(count=0;count<DaysValue;count++){
			$('.tax-Contigency-Total').append('<div class="col-3 z-padding-cell"><input class="w-100" disabled="true" type="text" value=""></div>');
		}
	
	$(".z-days-overflow-realtime-costComponent").scroll(function () {
		$(".z-days-overflow-realtime").scrollLeft($(".z-days-overflow-realtime-costComponent").scrollLeft());
	});
	$(".z-days-overflow-realtime").scroll(function () {
		$(".z-days-overflow-realtime-costComponent").scrollLeft($(".z-days-overflow-realtime").scrollLeft());
	});
}

	var realTimeCostModalArray = [];
var welltotalCostData = [];
function z_costModel_realTime(el){
	  		 var selectedDay;
			 var check_for_totalCost_Exist = -1;
			 if(el == "edit"){
											 selectedDay = $('#z-level1-selectDay').val();

								}
								else{
									selectedDay = $(el).attr('active-day-index');
								}
								$('#costModalRealTime').attr('active-day-index',selectedDay);
	  $.ajax({
			        url: "/api/getCostModal",
			        type: "GET",
			        data: {wellId: x_wellId,daysValue: selectedDay},
			        async: false,
			        dataType: 'text',
			        //contentType: 'application/json;charset=UTF-8',
			        success: function (result) {
			        	realTimeCostModalArray = JSON.parse(result);
						
			        }
				});
				if(realTimeCostModalArray.length > 0){
						z_sel_config = JSON.parse(realTimeCostModalArray[0].realTimeTotalCostArray);
						z_selected_leveldata = z_sel_config;
					}
						else{
							clearCostComponentData();
							/* if(welltotalCostData.length > 0){
								
								 $('#costModalRealTime').attr('active-day-index',selectedDay);

								check_for_totalCost_Exist = welltotalCostData.findIndex(function(val){
									return val.daysValue == selectedDay;
								});
								if(check_for_totalCost_Exist != -1){
									z_sel_config = JSON.parse(JSON.stringify(welltotalCostData[check_for_totalCost_Exist].realTimeTotalCostArray));
								}
								else{
									clearCostComponentData();
								}
							}
							else{
								clearCostComponentData();
							} */
													
						}
						z_selected_leveldata = z_sel_config;
	 var costElement;
	 if(el == "edit"){
		 var level1 = $('#z-level1-selectValue').val();
		 var level2 = $('#z-level2-selectValue').val();
		 selectedDay = $('#z-level1-selectDay').val();
		 var level1Index = z_sel_config.findIndex(function(obj){
			return obj.phaseName == level1; 
		 });
		 var level2Index = z_sel_config[level1Index].subLevels.findIndex(function(obj2){
			return obj2.phaseName == level2; 
		 });
		  costElement = document.createElement('div');
		  $(costElement).attr('current-phase','2');
			$(costElement).attr('current-level',level2Index.toString());
						$(costElement).attr('base-level',level1Index.toString());
													$(costElement).attr('active-day-index',selectedDay);
													costElement.innerText = level2;
	 }
	 else{
		 costElement = el;
	 }
							try{
								z_costModel(costElement);
							}
							catch(err){
								
							}
							finally{
								 /* var level1Index = $(costElement).attr('base-level');
								var level2Index = $(costElement).attr('current-level');
								z_sel_config[level1Index].subLevels[level2Index].totalCost = $('#grant-value-cost').text();
								
								var activeDays = $(costElement).attr('active-day-index');
								var welltotalCostDataObj = {};
								var activeDaysIndex = welltotalCostData.findIndex(function(val){
									return val.daysValue == activeDays;
								});	
								if(activeDaysIndex != -1){
										welltotalCostData[activeDaysIndex].daysValue = activeDays;
								welltotalCostData[activeDaysIndex].realTimeTotalCostArray = JSON.parse(JSON.stringify(z_sel_config.slice()));
								
								}
								else{
									welltotalCostDataObj.daysValue = activeDays;
								welltotalCostDataObj.realTimeTotalCostArray = JSON.parse(JSON.stringify(z_sel_config.slice()));
								welltotalCostData.push(welltotalCostDataObj);
								welltotalCostDataObj = {};
								}	 */
							}
	
}
function clearCostComponentData(){
	 z_sel_config.forEach(function(val1,index1){
													if(val1.isSelected){
									val1.subLevels.forEach(function(val2,index2){
										if(val2.isSelected){
											val2.totalCostItem.forEach(function(level1,i1){
												if(level1.subPhase != null){
													level1.subPhase.forEach(function(level2,i2){
														if(level2.subPhase != null){
															level2.subPhase.forEach(function(level3,i3){
																if(level3.subPhase != null){
																level3.subPhase.forEach(function(level4,i4){
																	if(level4.hasOwnProperty('rateValue')){
																		level4.rateValue = [];
																	}
																});	
																}
																if(level3.hasOwnProperty('rateValue')){
																		level3.rateValue = [];
																	}
															});
														}
														if(level2.hasOwnProperty('rateValue')){
																		level2.rateValue = [];
																	}
													});
												}
												if(level1.hasOwnProperty('rateValue')){
																		level1.rateValue = [];
																	}
											});
										}
									});
								}
							});
							z_selected_leveldata = z_sel_config;
}
function copy_from_previous_column(){
    $('#z-wellCostPhase-copy-modal').remove();
    $('body').append('<div id="z-wellCostPhase-copy-modal" class="modal" tabindex="-1" role="dialog">' +
    '<div class="modal-dialog" role="document">' +
    '<div class="modal-content">' +
    '<div class="modal-header">' +
    '<h5 class="modal-title">Please Select the Days Column to Copy</h5>' +
    '<button type="button" class="close z-close-date-copy" data-dismiss="modal" aria-label="Close">' +
    '<span aria-hidden="true">&times;</span>' +
    '</button>' +
    '</div>' +
  '<div class="modal-body"><div class="z-m-input-field">'+
'<select class="z-m-input valid" id="z-level1-selectDay" name="currency" aria-invalid="false">'+
'<option selected="selected" value="select">Select</option>'+
                                        '<option value="Day 1">Day 1</option><option value="Day 2">Day 2</option><option value="Day 3">Day 3</option><option value="Day 4">Day 4</option><option value="Day 5">Day 5</option><option value="Day 6">Day 6</option><option value="Day 7">Day 7</option><option value="Day 8">Day 8</option><option value="Day 9">Day 9</option><option value="Day 10">Day 10</option>'+
                                    '</select>'+                                   
                                  '<div class="z-m-input-label-createwell" for="z-level1-selectDay">Select Days to Copy</div>'+
                                    '<div class="z-m-input-after"></div>'+
                                '</div>'+

'<div style="margin-bottom: 10px;">'+
  '<div style="font-weight: bold;">Select Cost Components to Copy(Level 1)</div><label>'+
    '<input type="checkbox" class="radio" value="1" name="fooby" style="margin-right: 6px;">Select All</label><label>'+
    '<input type="checkbox" class="radio" value="1" name="ssss" style="margin-right: 6px;">Select Particular Components</label></div>'+
   '<div class="z-m-input-field">'+
'<select class="z-m-input valid" id="z-level1-selectValue" name="currency" aria-invalid="false">'+
'<option selected="selected" value="select">Select</option>'+
                                        '<option value="Time Dependent Costs - Drilling Services">Time Dependent Costs - Drilling Services</option>'+
                                        '<option value="Time Dependent Costs - Logistics">Time Dependent Costs - Logistics</option>'+
                                    '</select><div class="z-m-input-label-createwell" for="z-level1-selectValue">Select Level 1</div>'+
                                    '<div class="z-m-input-after"></div></div>'+
    '<div style="margin-bottom: 10px;">'+
  '<div style="font-weight: bold;">Select Cost Components to Copy(Level 2)</div>'+
  '<label><input type="checkbox" class="radio" value="1" name="fooby" style="margin-right: 6px;">Select All</label>'+
  '<label><input type="checkbox" class="radio" value="1" name="ssss" style="margin-right: 6px;">Select Particular Components</label>'+
'</div>'+
								'<div id="notSelectedPhase_list-realtime" class="z-notSelectedPhase_list">'+
'</div></div>'+
    '<div class="modal-footer">' +
    '<button id="z-wellPhase-copy-btn" type="button" class="btn btn-primary">Submit</button>' +
    '<button type="button" class="btn btn-secondary z-close-date-copy" data-dismiss="modal">Cancel</button>' +
    '</div>' +
    '</div>' +
    '</div>' +
    '</div>');
	z_sel_config[0].subLevels.forEach(function(val){
			$('#notSelectedPhase_list-realtime').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;"><div class="z-phaseName-select">'+val.phaseName+'</div></div>');

	});
    $('#z-wellPhase-copy-btn').on('click', function (el) {
       
		
    });
	$('.z-close-date-copy').on('click', function (el) {
		
	});
	$('#z-wellCostPhase-copy-modal').modal('show');
	
}
function z_wellPanel_bar(el){
$('<div class="z-loadingWrap" id="z-loadingWrap-id">' +
            '<img class="z-loadingImg" src="./image/loading.gif" alt="Loading">' +
            '</div>').appendTo('body');	 
z_wellPanel(el);
	 remove_gif();
	
}
function loading_gif(){
	 $('<div class="z-loadingWrap" id="z-loadingWrap-id">' +
            '<img class="z-loadingImg" src="./image/loading.gif" alt="Loading">' +
            '</div>').appendTo('body');
}
function analysis(){
					$('.z-rightSection-active').removeClass('z-rightSection-active');
	$('#tester').addClass('z-rightSection-active');
	sideNavbar_toggle_afe();
	var tester = document.getElementById('tester');
	var trace1 = {
  x: [.75, 1.75, 2.75, 3.75,4.75],
  y: [772353, 1058680, 1660265, 2036897,2315654],
  type: 'scatter',
  name:'<b>Daily Cost</b>'
};
var trace2 = {
  x: [45],
  y: [26189658],
  type: 'scatter',
  name:'<b>AFE Cost</b>',
  marker: {
    color: 'rgb(219, 64, 82)',
    size: 8
  }
};
var layout = {
  title:'<b>Well A1- Daily Cost Report</b>',
 xaxis: {
    dtick: 5,
    title: {
        text:'<b>Days</b>',
    }
  },
   yaxis: {
    dtick: 5000000,
    title:{
          text:'<b>Cost($)</b>',
          
          
    }
},
    showlegend: true,
	 legend: {
    x: .5,
    y: -0.2,
    orientation: "h",
    yanchor:'top',
    xanchor:'center'
  },
  annotations: [
    {
      x: 45,
      y: 26189658,
      xref: 'x',
      yref: 'y',
      text: '<b>AFE: 45 Days, $26,189,658</b>',
      showarrow: true,
      font: {
        family: 'Arial',
        size: 14,
        color: 'red'
      },
      align: 'center',
      arrowhead: 1,
      arrowsize: 1,
      arrowwidth: 1,
      arrowcolor: '#636363',
      ax: 40,
      ay: 40,
      bordercolor: '#fffff',
      borderwidth: 2,
      borderpad: 4,
      opacity: 0.8
    },
	{
      x: 4.75,
      y: 2315654,
      xref: 'x',
      yref: 'y',
      text: '<b>4.75 Days, $2,315,654</b>',
      showarrow: true,
      font: {
        family: 'Arial',
        size: 14,
        color: 'blue'
      },
      align: 'center',
      arrowhead: 1,
      arrowsize: 1,
      arrowwidth: 1,
      arrowcolor: '#636363',
      ax: 170,
      ay: 5,
      bordercolor: '#fffff',
      borderwidth: 2,
      borderpad: 4,
      opacity: 0.8
    }
  ]
};
var data = [trace1, trace2];
Plotly.newPlot(tester, data,layout);
}
var reference_number;
var reference_type;
function z_reference_number(el){
	$('.manual').removeClass('d-none');
	$('.automatic').removeClass('d-none');
	var well_name_val = $('#z-cw-wellName').val();
	var shore_name = $('#z-cw-shoreSelection').val();
	reference_type = el.value;
	if(el.value == "Automatic" || el == "Automatic"){
		if(shore_name == "Platform"){
			operator_name = $('#z-cw-platform-rigOperator').val();
		}
		else if(shore_name == "Subsea"){
			operator_name = $('#z-cw-subsea-rigOperator').val();
		}
		else if(shore_name == "Standalone"){
			operator_name = $('#z-cw-standalone-rigOperator').val();
		}
		else if(shore_name == "Onshore"){
			operator_name = $('#z-cw-onshore-rigOperator').val();
		}
		 $.ajax({
        url: "/api/getProject?clientId=" + clientId+"&projectId="+$('#z-cw-projectList').val(),
        type: "GET",
        contentType: "application/json",
        success: function (result) {
            console.log(result);
            var z_project = JSON.parse(result);
			block_name = z_project.block;
			field_name = z_project.field;
}
});
		reference_number = operator_name + '-AFE'+'-'+block_name+'-'+field_name+'-'+well_name_val;
		$('#z-referenceNumber-auto').text(reference_number);
		$('.manual').addClass('d-none');
	}
	else if(el.value == "Custom" || el == "Custom"){
		reference_number = "";
		$('.automatic').addClass('d-none');
	}
	else if(el.value == "choose" || el == "choose"){
		reference_number = "";
		$('.automatic').addClass('d-none');
		$('.manual').addClass('d-none');
	}
}
function z_reference_custom_input(el){
	reference_number = $('#z-cw-referenceNumber-Custom').val();
}
function z_component_selection(){
	z_wellPanel_bar($('#z-afe-estimateComponent-panel')[0]);
}
function component_selection_fn(el){
	clear_afeLevelSelection_Popup();
	z_wellPanel_bar($('#z-afe-estimateComponent-panel')[0]);
}
function goTowellTimeline(el){
$('#z-afe-timeline-panel').click();
}
function edit_cost_column(el){
	     $('#z-wellCostPhase-edit-modal').remove();
		 var totalDay = $(el).attr('day');
    $('body').append('<div id="z-wellCostPhase-edit-modal" class="modal" tabindex="-1" role="dialog">' +
    '<div class="modal-dialog" role="document">' +
    '<div class="modal-content">' +
    '<div class="modal-header">' +
    '<h5 class="modal-title">Please Select the Days Column to edit</h5>' +
    '<button type="button" class="close z-close-date-edit" data-dismiss="modal" aria-label="Close">' +
    '<span aria-hidden="true">&times;</span>' +
    '</button>' +
    '</div>' +
 '<div class="modal-body"><div id="notSelectedPhase_list"><input id="z-level1-selectDay" value="'+totalDay+'" type="hidden"></div>'+
   '<div class="z-m-input-field">' +
'<select class="z-m-input valid" id="z-level1-selectValue" name="currency" aria-invalid="false">' +
'<option selected="selected" value="select">Select</option>' +
                                    '</select>' +                      
                                  '<div class="z-m-input-label-createwell" for="z-level1-selectValue">Select Level 1</div>' +
                                    '<div class="z-m-input-after"></div>' +
                                '</div>' +
    '<div class="z-m-input-field">' +
'<select class="z-m-input valid" id="z-level2-selectValue" name="currency" aria-invalid="false">' +
'<option selected="selected" value="select">Select</option>' +
                                    '</select>    ' +                               
                                  '<div class="z-m-input-label-createwell" for="z-level2-selectValue">Select Level 2</div>' +
                                    '<div class="z-m-input-after"></div>' +
                                '</div>' +
'</div>' +
    '<div class="modal-footer">' +
    '<button id="z-wellPhase-edit-btn" type="button" data-dismiss="modal" class="btn btn-primary">Submit</button>' +
    '<button type="button" class="btn btn-secondary z-close-date-edit" data-dismiss="modal">Cancel</button>' +
    '</div>' +
    '</div>' +
    '</div>' +
    '</div>');
	/* for(var k = 0;k<totalDay;k++){
			$('#z-level1-selectDay').append('<option value="Day'+(k+1)+'">Day'+(k+1)+'</option>');

	} */
	z_sel_config.forEach(function(obj){
					$('#z-level1-selectValue').append('<option value="'+obj.phaseName+'">'+obj.phaseName+'</option>');
					if(obj.subLevels != null){
						obj.subLevels.forEach(function(obj2){
					$('#z-level2-selectValue').append('<option value="'+obj2.phaseName+'">'+obj2.phaseName+'</option>');
						});
					}

	});
	
    $('#z-wellPhase-edit-btn').on('click', function (el) {
       z_costModel_realTime("edit");

    });
	$('.z-close-date-edit').on('click', function (el) {
		
	});
	$('#z-wellCostPhase-edit-modal').modal('show');
}
function upload_image(el){
var file = el.files[0];
if(file){
var reader = new FileReader();
$('.image-preview-text').addClass('d-none');
$('.image-preview-main').addClass('d-block');
reader.addEventListener("load",function(){
$('.image-preview-main').attr('src',this.result);
});
reader.readAsDataURL(file);
}
else{
$('.image-preview-text').removeClass('d-none');
$('.image-preview-main').removeClass('d-block');
$('.image-preview-main').attr('src','');
}
}
function z_generareAfe_Estimate(el){
	$('.z-rightSection-active').removeClass('z-rightSection-active');
	$('#z-afe-Estimationsection-Generate').addClass('z-rightSection-active');
	$('#company-image-report').attr('src',company_image_url);
	$('.z-reportBlock').removeClass('z-reportBlock');
	$('.z-estimationBlock').removeClass('z-estimationBlock');
	$('.z-report').addClass('z-reportBlock');
	z_savewellConfig();
	var z_total = 0;
	var z_class_total;
					if(z_level == "Level1"){
							var phaseDayArray = ['Preparation to Drill','Drilling Days','Testing Days','Completion Days','Suspension Days','P and A Days','Rig Demobilization','Total Days'];
							var phaseDayArrayLength = phaseDayArray.length;
							$('#output-template-afe').empty();
						$('#output-template-afe').html($('#z-costTable').html());
						z_selected_leveldata.forEach(function(val1,index1){
							if(!(val1.phaseName == "Time Dependent Costs - Logistics") && !(val1.phaseName == "Time Dependent Costs - Personnel")){
								if(val1.lineItems != null){
								val1.lineItems.forEach(function(val2,index2){
									if($('[select-input="0"][lineitems="'+val2.phase+'"]')[0] != null){
										$('[select-input="0"][lineitems="'+val2.phase+'"]')[1].value = $('[select-input="0"][lineitems="'+val2.phase+'"]')[0].value;
									$('[select-input="1"][lineitems="'+val2.phase+'"]')[1].value = $('[select-input="1"][lineitems="'+val2.phase+'"]')[0].value;

									}
									
								});
							}
							}
							
						});
						for(var limit=0;limit < phaseDayArrayLength;limit++){
						$('[phaseValue="'+phaseDayArray[limit]+'"]')[1].value = $('[phaseValue="'+phaseDayArray[limit]+'"]')[0].value;

						}
						$('.z-levy')[1].value = $('.z-levy')[0].value;
						$('.z-contigency')[1].value = $('.z-contigency')[0].value;
						$('#z-costTable').empty();
					}
					else if(z_level == "Level2"){
							$('#output-template-afe').empty();
						$('#output-template-afe').html($('#z-costTable-level2').html());
							z_total = 1;
						z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[base-level="'+level1Index+'"][cost-index="'+(level2Index+1)+'"]')[1].value = $('[base-level="'+level1Index+'"][cost-index="'+(level2Index+1)+'"]')[0].value;
										
									}
								});
								
								$('.z-final-subcost'+z_total)[1].value = $('.z-final-subcost'+z_total)[0].value;
								z_total = z_total + 1;
							}
						});
						$('.z-calCost.z-levy')[1].value = $('.z-calCost.z-levy')[0].value;
						$('.z-calCost.z-contigency')[1].value = $('.z-calCost.z-contigency')[0].value;
						$('#z-costTable-level2').empty();
					}
					else if(z_level == "Level3"){
						$('#output-template-afe').empty();
						$('#output-template-afe').html($('#z-costTable-level3').html());
					z_total = 1;
						z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[1].value = $('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[0].value;
										if(level2Obj.subLevels != null){
											level2Obj.subLevels.forEach(function(level3Obj,level3Index){
												if(level3Obj.isSelected){
												$('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[1].value = $('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[0].value;

												}
											});
										}
									}
								});
								
								$('.z-final-subcost'+z_total)[1].value = $('.z-final-subcost'+z_total)[0].value;
								z_total = z_total + 1;
							}
						});
						$('.z-calCost.z-levy')[1].value = $('.z-calCost.z-levy')[0].value;
						$('.z-calCost.z-contigency')[1].value = $('.z-calCost.z-contigency')[0].value;
						$('#z-costTable-level3').empty();
					}
					else if(z_level == "Level4"){
										$('#output-template-afe').empty();
									$('#output-template-afe').html($('#z-costTable-level4').html());
									z_total = 1;
						z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[1].value = $('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[0].value;
										if(level2Obj.subLevels != null){
											level2Obj.subLevels.forEach(function(level3Obj,level3Index){
												if(level3Obj.isSelected){
												$('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[1].value = $('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[0].value;
													if(level3Obj.subLevels != null){
														level3Obj.subLevels.forEach(function(level4Obj,level4Index){
															if(level4Obj.isSelected){
													$('[base-level="'+level1Index+'"][baselevel="'+level2Obj.phaseName+'"][phase3="'+level3Obj.phaseName+'"][phasename="'+level4Obj.phaseName+'"]')[1].value = $('[base-level="'+level1Index+'"][baselevel="'+level2Obj.phaseName+'"][phase3="'+level3Obj.phaseName+'"][phasename="'+level4Obj.phaseName+'"]')[0].value;

															}
														});
													}
												}
											});
										}
									}
								});
								
								$('.z-final-subcost'+z_total)[1].value = $('.z-final-subcost'+z_total)[0].value;
								z_total = z_total + 1;
							}
						});
						$('.z-calCost.z-levy')[1].value = $('.z-calCost.z-levy')[0].value;
						$('.z-calCost.z-contigency')[1].value = $('.z-calCost.z-contigency')[0].value;
									$('#z-costTable-level4').empty();
					}
					else if(z_level == "Level5"){
										$('#output-template-afe').empty();
									$('#output-template-afe').html($('#z-costTable-level5').html());
									$('#z-costTable-level5').empty();
					}
		
		
}
function z_configActive_newTimeline(el){
	var z_level1_phase;
	var z_level1_phase_index;
	var z_level1_phase_index_timeline;
	
	if($(el).hasClass('z-level-selection')){
		 $(el).removeClass('z-level-selection');
		$(el).children()[1].classList.remove('d-block');
		if($(el).hasClass('z-level2-test')){
            $(el).removeClass('z-level2-test');
        }
		  z_level1_phase = $(el).text();
            if(z_level1_phase.includes("+")){
                z_level1_phase = z_level1_phase.substr(0,z_level1_phase.length-2);
            }
			z_level1_phase = z_level1_phase.replace('✓','');
			z_level1_phase = z_level1_phase.trim();
			var grant_index;
			grant_index = z_grant_totalKey.findIndex(function(val){
				return val.phase == z_level1_phase;
			});
			if(grant_index != -1){
				z_grant_totalKey.splice(grant_index,1);
			}
			if(z_level == "Level4"){
				z_level1_phase_index = wellDays_data_level4.findIndex(function(obj){
				return obj.phase == z_level1_phase;
			});
			}
			else if(z_level == "Level3"){
				z_level1_phase_index = wellDays_data_level3.findIndex(function(obj){
				return obj.phase == z_level1_phase;
			});
			}
			if(z_level == "Level2"){
				z_level1_phase_index = wellDays_data.findIndex(function(obj){
				return obj.phase == z_level1_phase;
			});
			}
			
			if(z_level1_phase_index != -1){
				if(z_level == "Level4"){
					wellDays_data_level4[z_level1_phase_index].isSubmitted = false;
				}
				else if(z_level == "Level3"){
					wellDays_data_level3[z_level1_phase_index].isSubmitted = false;
				}
				else if(z_level == "Level2"){
					wellDays_data[z_level1_phase_index].isSubmitted = false;
				}
				
			}
			
				z_level1_phase_index_timeline = z_selected_days_data.findIndex(function(obj){
				return obj == z_level1_phase;
			});
			if(z_level1_phase_index_timeline != -1){
				z_selected_days_data.splice(z_level1_phase_index_timeline,1);
			}
			if(z_level == "Level3"){
				z_showDaysTable_level2(z_level1_phase,"3","remove");
			}
			else if(z_level == "Level4"){
				z_showDaysTable_level3(z_level1_phase,"4","remove");
			}
			else{
				z_showDaysTable(z_level1_phase,"2","remove");
			}
			
	}
	else{
		el.classList.add("z-level-selection");
		el.classList.remove("z-l-grey-color");
		$(el).children()[1].classList.add('d-block');
		if($('#z-afe-timeline-panel').hasClass('z-estimate-panel')){
			el.classList.add("z-level2-test");
        }
		z_level1_phase = $(el).text();
            if(z_level1_phase.includes("+")){
                z_level1_phase = z_level1_phase.substr(0,z_level1_phase.length-2);
            }
			z_level1_phase = z_level1_phase.replace('✓','');
			z_level1_phase = z_level1_phase.trim();
			if(z_level == "Level2"){
				z_level1_phase_index = wellDays_data.findIndex(function(obj){
				return obj.phase == z_level1_phase;
			});
			}
			else if(z_level == "Level3"){
				z_level1_phase_index = wellDays_data_level3.findIndex(function(obj){
				return obj.phase == z_level1_phase;
			});
			}
			else if(z_level == "Level4"){
				z_level1_phase_index = wellDays_data_level4.findIndex(function(obj){
				return obj.phase == z_level1_phase;
			});
			}
			
			if(z_level1_phase_index != -1){
				if(z_level == "Level2"){
					wellDays_data[z_level1_phase_index].isSubmitted = true;
				}
				else if(z_level == "Level3"){
					wellDays_data_level3[z_level1_phase_index].isSubmitted = true;
				}
				else if(z_level == "Level4"){
					wellDays_data_level4[z_level1_phase_index].isSubmitted = true;
				}
				
			}
			
			
			z_level1_phase_index_timeline = z_selected_days_data.findIndex(function(obj){
				return obj == z_level1_phase;
			});
			if(z_level1_phase_index_timeline != -1){
				z_selected_days_data.splice(z_level1_phase_index_timeline,0,z_level1_phase);
			}
			else{
				z_selected_days_data.push(z_level1_phase);
			}
			if(z_level == "Level2"){
				z_showDaysTable(z_level1_phase,"2","add");
			}
			else if(z_level == "Level3"){
				z_showDaysTable_level2(z_level1_phase,"3","add");
			}
			else if(z_level == "Level4"){
				z_showDaysTable_level3(z_level1_phase,"4","add");
			}
			
	}
	
}
function z_levels_hover_newTimeline(el){
	
}

function z_activities_fn(el){
	$('.z-estimateBlock').removeClass('z-estimateBlock');
	if(el.innerText == "Go to Activities"){
		if(z_level == "Level3"){
	$('#z-estimateDay31').addClass('z-estimateBlock');
	cumulativeAdjustment();
	}
	else if(z_level == "Level4"){
		$('#z-estimateDay41').addClass('z-estimateBlock');
	cumulativeAdjustment();
	}
	else if(z_level == "Level2"){
		$('#z-estimateDay21').addClass('z-estimateBlock');
	cumulativeAdjustment();
	}
	}
	else{
		if(z_level == "Level3"){
		$('#z-EstimateTitle-level3day').addClass('z-estimateBlock');
	}
	else if(z_level == "Level4"){
		$('#z-EstimateTitle-level4day').addClass('z-estimateBlock');
	}
	else if(z_level == "Level2"){
		$('#z-EstimateTitle-level2day').addClass('z-estimateBlock');
	}
	}
	
	
}
function z_timelinefn(el){
	z_selected_days_data = [];
	if(z_level == "Level3"){
		$('#z-EstimateTitle-level3day').empty();
		$('#z-EstimateTitle-level3day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color font-weight-bold">S.no</div>' +
				            '<div class="col-5 z-l-configbottom font-weight-bold z-tableData-row d-flex" level="1"><div class="font-weight-bold">Phases</div>'+
	                       '</div></div></div>');
						   
						   	$('#z-EstimateTitle-level3day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content"></div>' +
				            '<div class="col-5 z-l-configbottom font-weight-bold z-tableData-row d-flex" level="1"><div class="font-weight-bold">Select Phases</div>'+
	                       '</div></div></div>');

		wellDays_data_level3.forEach(function(obj,index1){
		if(index1 == 0){
			if(obj.isSubmitted){
				z_selected_days_data.push(obj.phase);
				$('#z-EstimateTitle-level3day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content">' + (index1+1) + '</div>' +
				            '<div class="col-5 z-l-configbottom z-well-content z-tableData-row d-flex z-level-selection" level="1" onclick="z_configActive_newTimeline(this)" onmouseover="z_levels_hover_new(this)"><div class="z-well-content">' + obj.phase +
						   '</div><div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
						   '	<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deleteLineItems_phase(this)" levels="1" level="1" phase-name = "'+obj.phase+'" title="Delete Phase">x</div>'+
	                       '<div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addcustomItems_phase(this)" title="Add Phase" phase-name = "'+obj.phase+'" levels="1" level="1">+</div></div></div></div>');
		
			}
			else{
				$('#z-EstimateTitle-level3day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content">' + (index1+1) + '</div>' +
				            '<div class="col-5 z-l-configbottom z-well-content z-tableData-row d-flex" level="1" onclick="z_configActive_newTimeline(this)" onmouseover="z_levels_hover_new(this)"><div class="z-well-content">' + obj.phase +
						   '</div><div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
						   '	<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deleteLineItems_phase(this)" levels="1" level="1" phase-name = "'+obj.phase+'" title="Delete Phase">x</div>'+
	                       '<div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addcustomItems_phase(this)" title="Add Phase" levels="1" phase-name = "'+obj.phase+'" level="1">+</div></div></div></div>');
		
			}
							   

		}
		else{
			if(obj.isSubmitted){
				z_selected_days_data.push(obj.phase);
				$('#z-EstimateTitle-level3day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content">' + (index1+1) + '</div>' +
				            '<div class="col-5 z-l-configbottom z-well-content z-tableData-row d-flex z-level-selection" level="1" onclick="z_configActive_newTimeline(this)" onmouseover="z_levels_hover_new(this)"><div class="z-well-content">' + obj.phase +
						   '</div><div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
						   '	<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deleteLineItems_phase(this)" levels="1" level="1" phase-name = "'+obj.phase+'" title="Delete Phase">x</div>'+
	                       '<div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addcustomItems_phase(this)" title="Add Phase" levels="1" phase-name = "'+obj.phase+'" level="1">+</div></div></div></div>');

			}
			else{
				$('#z-EstimateTitle-level3day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content">' + (index1+1) + '</div>' +
				            '<div class="col-5 z-l-configbottom z-well-content z-tableData-row d-flex" level="1" onclick="z_configActive_newTimeline(this)" onmouseover="z_levels_hover_new(this)"><div class="z-well-content">' + obj.phase +
						   '</div><div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
						   '	<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deleteLineItems_phase(this)" levels="1" phase-name = "'+obj.phase+'" level="1" title="Delete Phase">x</div>'+
	                       '<div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addcustomItems_phase(this)" title="Add Phase" phase-name = "'+obj.phase+'" levels="1" level="1">+</div></div></div></div>');

			}
			
		}
		
	});
	$('#z-EstimateTitle-level3day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color font-weight-bold"></div>' +
				            '<div class="col-5 z-l-configbottom font-weight-bold z-tableData-row d-flex" level="1"><div class="btn btn-link" onclick="z_activities_fn(this)">Go to Activities</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_addcustomItems(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_deleteLineItems(this)">Delete Line Items</div>'+
	                       '</div></div></div>');
	}
	else if(z_level == "Level4"){
		$('#z-EstimateTitle-level4day').empty();
		$('#z-EstimateTitle-level4day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color font-weight-bold">S.no</div>' +
				            '<div class="col-5 z-l-configbottom font-weight-bold z-tableData-row d-flex" level="1"><div class="font-weight-bold">Phases</div>'+
	                       '</div></div></div>');
						   
						   	$('#z-EstimateTitle-level3day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content"></div>' +
				            '<div class="col-5 z-l-configbottom font-weight-bold z-tableData-row d-flex" level="1"><div class="font-weight-bold">Select Phases</div>'+
	                       '</div></div></div>');
		wellDays_data_level4.forEach(function(obj,index1){
		
		if(obj.isSubmitted){
			z_selected_days_data.push(obj.phase);
			$('#z-EstimateTitle-level4day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content">' + (index1+1) + '</div>' +
				            '<div class="col-5 z-l-configbottom z-well-content z-tableData-row d-flex z-level-selection" level="1" onclick="z_configActive_newTimeline(this)" onmouseover="z_levels_hover_new(this)"><div class="z-well-content">' + obj.phase +
						   '</div><div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
						   '	<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deleteLineItems_phase(this)" levels="1" level="1" phase-name = "'+obj.phase+'" title="Delete Phase">x</div>'+
	                       '<div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addcustomItems_phase(this)" title="Add Phase" levels="1" phase-name = "'+obj.phase+'" level="1">+</div></div></div></div>');

		}
		else{
			$('#z-EstimateTitle-level4day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content">' + (index1+1) + '</div>' +
				            '<div class="col-5 z-l-configbottom z-well-content z-tableData-row d-flex" level="1" onclick="z_configActive_newTimeline(this)" onmouseover="z_levels_hover_new(this)"><div class="z-well-content">' + obj.phase +
						   '</div><div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
						   '	<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deleteLineItems_phase(this)" phase-name = "'+obj.phase+'" levels="1" level="1" title="Delete Phase">x</div>'+
	                       '<div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addcustomItems_phase(this)" title="Add Phase" levels="1" phase-name = "'+obj.phase+'" level="1">+</div></div></div></div>');

		}
		
	});
	$('#z-EstimateTitle-level4day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color font-weight-bold"></div>' +
				            '<div class="col-5 z-l-configbottom font-weight-bold z-tableData-row d-flex" level="1"><div class="btn btn-link" onclick="z_activities_fn(this)">Go to Activities</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_addcustomItems_phase(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_deleteLineItems_phase(this)">Delete Line Items</div>'+
	                       '</div></div></div>');
	}
	else if(z_level == "Level2"){
		$('#z-EstimateTitle-level2day').empty();
		$('#z-EstimateTitle-level2day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color font-weight-bold">S.no</div>' +
				            '<div class="col-5 z-l-configbottom font-weight-bold z-tableData-row d-flex" level="1"><div class="font-weight-bold">Phases</div>'+
	                       '</div></div></div>');
						   
						   	$('#z-EstimateTitle-level2day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content"></div>' +
				            '<div class="col-5 z-l-configbottom font-weight-bold z-tableData-row d-flex" level="1"><div class="font-weight-bold">Select Phases</div>'+
	                       '</div></div></div>');
		wellDays_data.forEach(function(obj,index1){
		if(obj.isSubmitted){
			$('#z-EstimateTitle-level2day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content">' + (index1+1) + '</div>' +
				            '<div class="col-5 z-l-configbottom z-well-content z-tableData-row d-flex z-level-selection" level="1" onclick="z_configActive_newTimeline(this)" onmouseover="z_levels_hover_new(this)"><div class="z-well-content">' + obj.phase +
						   '</div><div class="z-select-phase-checkmark d-none d-block"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
						   '	<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deleteLineItems_phase(this)" levels="1" level="1" phase-name = "'+obj.phase+'" title="Delete Phase">x</div>'+
	                       '<div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addcustomItems_phase(this)" title="Add Phase" phase-name = "'+obj.phase+'" levels="1" level="1">+</div></div></div></div>');

		}
		else{
			$('#z-EstimateTitle-level2day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow z-borderBottom">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color z-well-content">' + (index1+1) + '</div>' +
				            '<div class="col-5 z-l-configbottom z-well-content z-tableData-row d-flex" level="1" onclick="z_configActive_newTimeline(this)" onmouseover="z_levels_hover_new(this)"><div class="z-well-content">' + obj.phase +
						   '</div><div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div>'+
						   '	<div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip"'+ 'onclick="z_deleteLineItems_phase(this)" levels="1" level="1" title="Delete Phase">x</div>'+
	                       '<div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" '+ 'onclick="z_addcustomItems_phase(this)" title="Add Phase" phase-name = "'+obj.phase+'" levels="1" level="1">+</div></div></div></div>');

		}
		
	});
	$('#z-EstimateTitle-level2day').append('<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12">' +
				            '<div class="row z-l-phaserow">' +
				            '<div class="col-1 z-l-configbottom z-l-grey-color font-weight-bold"></div>' +
				            '<div class="col-5 z-l-configbottom font-weight-bold z-tableData-row d-flex" level="1"><div class="btn btn-link" onclick="z_activities_fn(this)">Go to Activities</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_addcustomItems_phase(this)">Add Line Items</div><div id="ws-level22-addphase" class="btn z-m-addPhasebtn" level="1" onclick="z_deleteLineItems_phase(this)">Delete Line Items</div>'+
	                       '</div></div></div>');
	}
	
}
function z_addcustomItems_phase(el){
	/* var phaseName = $(el).attr('phase-name');
	el.offsetParent.insertAdjacentHTML('afterend','<div class="col-12  col-sm-12 col-md-12 col-lg-12 col-xl-12"><div class="row z-l-phaserow z-borderBottom"><div class="col-1 z-l-configbottom z-l-grey-color z-well-content"></div><div class="col-5 z-l-configbottom z-well-content z-tableData-row d-flex" level="1" onclick="z_configActive_newTimeline(this)" onmouseover="z_levels_hover_new(this)"><div class="z-well-content" contenteditable="true" before-phase = "'+phaseName+'" onclick="savePhase(this)" onfocusout="savePhase(this)">Enter the phase here</div><div class="z-select-phase-checkmark d-none"><div class="z-select-phase-checkmark  d-block">✓</div></div><div class="z-l-closeBtn z-l-phasebtn z-addconfig d-none" data-toggle="tooltip" onclick="z_deleteLineItems_phase(this)" before-phase = "'+phaseName+'" levels="1" level="1" title="Delete Phase">x</div><div class="z-l-phasebtn z-addconfig z-addconfig-left d-none" data-toggle="tooltip" onclick="z_addcustomItems_phase(this)" title="Add Phase" before-phase = "'+phaseName+'" levels="1" level="1">+</div></div></div></div>');
 */
 z_phase_selected_Element = el;
 $('#z-addcustomItem-modal').remove();
 $('body').append('<div id="z-addcustomItem-modal" class="modal" tabindex="-1" role="dialog">' +
	        '<div class="modal-dialog" role="document">' +
	        '<div class="modal-content">' +
	        '<div class="modal-header">' +
	        '<h5 class="modal-title">Add Phases</h5>' +
	        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
	        '<span aria-hidden="true">&times;</span>' +
	        '</button>' +
	        '</div>' +
	        '<div class="modal-body">' +
	        '<div class="">Select  Lineitems to add after</div>'+
	        '<div id="notSelectedlinePhase_listitem" class="z-viewheight-lineitem"></div>' +
	        '<div id="customlinePhase-insertWrap">' +
	        '<input id="customlinePhaseitem-input" class="z-m-inputS1" placeholder="phase Name">' +
	        '<button id="customlinePhaseitem-addBtn" type="button" class="btn btn-primary" style="margin-left: 15px;">Add</button>' +
	        '</div>' +
	        '<p class="d-none">Select a Line Items to insert</p>' +
	        '</div>' +
	        '<div class="modal-footer">' +
	        '<button id="z-addlinePhaseitem-btn" type="button" class="btn btn-primary">Submit</button>' +
	        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
	        '</div>' +
	        '</div>' +
	        '</div>' +
	        '</div>');
	    //$('#z-addlinePhase-btn').attr('selected-level',z_l_levels);
	    $('#z-addcustomItem-modal').modal('show');
		$('#customlinePhaseitem-addBtn').on('click', function () {
	phase_name = $('#customlinePhaseitem-input').val();
	
	$('#notSelectedlinePhase_listitem').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
			'<div class="z-phaseName-select-level1 z-phaseDay">'+phase_name+'</div></div>');
	$('#customlinePhaseitem-input').val("");
       });
	   $('#z-addlinePhaseitem-btn').on('click', function (ele) {
		   var before_phase = $(z_phase_selected_Element).parent().children()[0].innerText;
		   var z_selected_phase =  document.getElementsByClassName('z-phaseDay');
		   var z_selected_phase_length = z_selected_phase.length;
		   var phaseName;
		   var objectVal = {};
		   var totalobjectVal = {};
		   	if(z_level == "Level2"){
				 	for(var i=0;i<z_selected_phase_length;i++){
    		if(z_selected_phase[i].previousElementSibling.checked){
    			phaseName = z_selected_phase[i].innerText;
				 wellDays_data.forEach(function(obj,index1){
				if(obj.phase == before_phase){
					objectVal.phase = phaseName;
					objectVal.lineInput = ["",""];
					objectVal.isSubmitted = false;
					objectVal.subPhase = [];
					objectVal.totalPhase = [];
					totalobjectVal.phase = "Total "+phaseName;
					totalobjectVal.lineInput = ["",""];
					objectVal.totalPhase.push(totalobjectVal);
					wellDays_data.splice(index1+1,0,objectVal);
					objectVal = {};
					totalobjectVal = {};
				
				}
			});
			}
			}
			z_timelinefn();
			$('.z-estimateBlock').removeClass('z-estimateBlock');
			$('#z-EstimateTitle-level2day').addClass('z-estimateBlock');	
			}
			else if(z_level == "Level3"){
				 	for(var i=0;i<z_selected_phase_length;i++){
    		if(z_selected_phase[i].previousElementSibling.checked){
    			phaseName = z_selected_phase[i].innerText;
				 wellDays_data_level3.forEach(function(obj,index1){
				if(obj.phase == before_phase){
					objectVal.phase = phaseName;
					objectVal.lineInput = ["",""];
					objectVal.isSubmitted = false;
					objectVal.subPhase = [];
					objectVal.totalPhase = [];
					totalobjectVal.phase = "Total "+phaseName;
					totalobjectVal.lineInput = ["",""];
					objectVal.totalPhase.push(totalobjectVal);
					wellDays_data_level3.splice(index1+1,0,objectVal);
					objectVal = {};
					totalobjectVal = {};
				
				}
			});
			}
			}
			z_timelinefn();
			$('.z-estimateBlock').removeClass('z-estimateBlock');
			$('#z-EstimateTitle-level3day').addClass('z-estimateBlock');
			}
			else if(z_level == "Level4"){
					for(var i=0;i<z_selected_phase_length;i++){
    		if(z_selected_phase[i].previousElementSibling.checked){
    			phaseName = z_selected_phase[i].innerText;
				 wellDays_data_level4.forEach(function(obj,index1){
				if(obj.phase == before_phase){
					objectVal.phase = phaseName;
					objectVal.lineInput = ["",""];
					objectVal.isSubmitted = false;
					objectVal.subPhase = [];
					objectVal.totalPhase = [];
					totalobjectVal.phase = "Total "+phaseName;
					totalobjectVal.lineInput = ["",""];
					objectVal.totalPhase.push(totalobjectVal);
					wellDays_data_level4.splice(index1+1,0,objectVal);
					objectVal = {};
					totalobjectVal = {};
				
				}
			});
			}
			}
			z_timelinefn();
			$('.z-estimateBlock').removeClass('z-estimateBlock');
			$('#z-EstimateTitle-level4day').addClass('z-estimateBlock');
			}
			  $('#z-addcustomItem-modal').modal('hide');
	   });
 }
function z_deleteLineItems_phase(el){
	confirmation_Popup("Are  you sure want to delete this row?", function () {
		var phaseName = $(el).offsetParent().children()[0].innerText;
		var delete_index;
		var z_level1_phase_index_timeline = z_selected_days_data.findIndex(function(obj){
				return obj == phaseName;
			});
			if(z_level1_phase_index_timeline != -1){
				z_selected_days_data.splice(z_level1_phase_index_timeline,1);
			}
		if(z_level == "Level2"){
			delete_index = wellDays_data.findIndex(function(val){
			return val.phase == phaseName;
		});
		if(delete_index != -1){
			wellDays_data[delete_index].isSubmitted = false;
			z_showDaysTable(phaseName,"2","remove");
		}
		}
		else if(z_level == "Level3"){
			delete_index = wellDays_data_level3.findIndex(function(val){
			return val.phase == phaseName;
		});
		if(delete_index != -1){
			wellDays_data_level3[delete_index].isSubmitted = false;
			z_showDaysTable_level2(phaseName,"3","remove");
		}
		}
		else if(z_level == "Level4"){
			delete_index = wellDays_data_level4.findIndex(function(val){
			return val.phase == phaseName;
		});
		if(delete_index != -1){
			wellDays_data_level4[delete_index].isSubmitted = false;
			z_showDaysTable_level3(phaseName,"4","remove");
			
		}
		}
		$(el).offsetParent().offsetParent().remove();
		alertPopup('success','selected phase has been deleted');
		 clearConfirmationPopup();
	});
	
}
function z_EstimateReportBack(el){
	$('.z-rightSection-active').removeClass('z-rightSection-active');
	$('#z-afe-Estimationsection').addClass('z-rightSection-active');
	$('.z-reportBlock').removeClass('z-reportBlock');
	$('.z-estimationBlock').removeClass('z-estimationBlock');
	$('.z-estimation').addClass('z-estimationBlock');
	
	var z_total;
					if(z_level == "Level1"){
						var phaseDayArray = ['Preparation to Drill','Drilling Days','Testing Days','Completion Days','Suspension Days','P and A Days','Rig Demobilization','Total Days'];
							var phaseDayArrayLength = phaseDayArray.length;
							$('#z-Afe-EstimationDataTable').html($('#output-template-afe').html());
								z_selected_leveldata.forEach(function(val1,index1){
							if(!(val1.phaseName == "Time Dependent Costs - Logistics") && !(val1.phaseName == "Time Dependent Costs - Personnel")){
								if(val1.lineItems != null){
								val1.lineItems.forEach(function(val2,index2){
									if($('[select-input="0"][lineitems="'+val2.phase+'"]')[0] != null){
										$('[select-input="0"][lineitems="'+val2.phase+'"]')[0].value = $('[select-input="0"][lineitems="'+val2.phase+'"]')[1].value;
									$('[select-input="1"][lineitems="'+val2.phase+'"]')[0].value = $('[select-input="1"][lineitems="'+val2.phase+'"]')[1].value;

									}
									
								});
							}
							}
							
						});
						for(var limit=0;limit < phaseDayArrayLength;limit++){
						$('[phaseValue="'+phaseDayArray[limit]+'"]')[0].value = $('[phaseValue="'+phaseDayArray[limit]+'"]')[1].value;

						}
						$('.z-levy')[0].value = $('.z-levy')[1].value;
						$('.z-contigency')[0].value = $('.z-contigency')[1].value;
							$('#output-template-afe').empty();
						$('#z-costTable').html($('#z-Afe-EstimationDataTable').html());
							z_selected_leveldata.forEach(function(val1,index1){
														if(!(val1.phaseName == "Time Dependent Costs - Logistics") && !(val1.phaseName == "Time Dependent Costs - Personnel")){
															if(val1.lineItems != null){
								val1.lineItems.forEach(function(val2,index2){
									if($('[select-input="0"][lineitems="'+val2.phase+'"]')[0] != null){
										$('[select-input="0"][lineitems="'+val2.phase+'"]')[1].value = $('[select-input="0"][lineitems="'+val2.phase+'"]')[0].value;
									$('[select-input="1"][lineitems="'+val2.phase+'"]')[1].value = $('[select-input="1"][lineitems="'+val2.phase+'"]')[0].value;

									}
									
								});
							}
														}
							
						});
						
						for(var limit=0;limit < phaseDayArrayLength;limit++){
						$('[phaseValue="'+phaseDayArray[limit]+'"]')[1].value = $('[phaseValue="'+phaseDayArray[limit]+'"]')[0].value;

						}
						$('.z-levy')[1].value = $('.z-levy')[0].value;
						$('.z-contigency')[1].value = $('.z-contigency')[0].value;
						$('#z-Afe-EstimationDataTable').empty();
					}
					else if(z_level == "Level2"){
							$('#z-Afe-EstimationDataTable').html($('#output-template-afe').html());
							z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[base-level="'+level1Index+'"][cost-index="'+(level2Index+1)+'"]')[0].value = $('[base-level="'+level1Index+'"][cost-index="'+(level2Index+1)+'"]')[1].value;
									}
								});
							}
						});
							$('#output-template-afe').empty();
						$('#z-costTable-level2').html($('#z-Afe-EstimationDataTable').html());
						z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[base-level="'+level1Index+'"][cost-index="'+(level2Index+1)+'"]')[1].value = $('[base-level="'+level1Index+'"][cost-index="'+(level2Index+1)+'"]')[0].value;
									}
								});
							}
						});
						$('#z-Afe-EstimationDataTable').empty();
							
					}
					else if(z_level == "Level3"){
					$('#z-Afe-EstimationDataTable').html($('#output-template-afe').html());
					z_total = 1;
					z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[0].value = $('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[1].value;
										if(level2Obj.subLevels != null){
											level2Obj.subLevels.forEach(function(level3Obj,level3Index){
												if(level3Obj.isSelected){
												$('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[0].value = $('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[1].value;

												}
											});
										}
									}
								});
								
                                $('.z-final-subcost'+z_total)[0].value = $('.z-final-subcost'+z_total)[1].value;
								z_total = z_total + 1;
							}
						});
						$('.z-calCost.z-levy')[0].value = $('.z-calCost.z-levy')[1].value;
                        $('.z-calCost.z-contigency')[0].value = $('.z-calCost.z-contigency')[1].value;
							$('#output-template-afe').empty();
						$('#z-costTable-level3').html($('#z-Afe-EstimationDataTable').html());
						z_total = 1;
						z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[1].value = $('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[0].value;
										if(level2Obj.subLevels != null){
											level2Obj.subLevels.forEach(function(level3Obj,level3Index){
												if(level3Obj.isSelected){
												$('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[1].value = $('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[0].value;

												}
											});
										}
									}
								});
								
                                $('.z-final-subcost'+z_total)[1].value = $('.z-final-subcost'+z_total)[0].value;
								z_total = z_total + 1;
							}
						});
						$('.z-calCost.z-levy')[1].value = $('.z-calCost.z-levy')[0].value;
                        $('.z-calCost.z-contigency')[1].value = $('.z-calCost.z-contigency')[0].value;
						$('#z-Afe-EstimationDataTable').empty();
					}
					else if(z_level == "Level4"){
										$('#z-Afe-EstimationDataTable').html($('#output-template-afe').html());
										z_total = 1;
										z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[0].value = $('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[1].value;
										if(level2Obj.subLevels != null){
											level2Obj.subLevels.forEach(function(level3Obj,level3Index){
												if(level3Obj.isSelected){
											$('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[0].value = $('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[1].value;
											if(level3Obj.subLevels != null){
												level3Obj.subLevels.forEach(function(level4Obj,level4Index){
													if(level4Obj.isSelected){
										$('[base-level="'+level1Index+'"][baselevel="'+level2Obj.phaseName+'"][phase3="'+level3Obj.phaseName+'"][phasename="'+level4Obj.phaseName+'"]')[0].value = $('[base-level="'+level1Index+'"][baselevel="'+level2Obj.phaseName+'"][phase3="'+level3Obj.phaseName+'"][phasename="'+level4Obj.phaseName+'"]')[1].value;

													}
												});
											}
												}
											});
										}
									}
								});
								 $('.z-final-subcost'+z_total)[0].value = $('.z-final-subcost'+z_total)[1].value;
								z_total = z_total + 1;
							}
						});
						$('.z-calCost.z-levy')[0].value = $('.z-calCost.z-levy')[1].value;
                        $('.z-calCost.z-contigency')[0].value = $('.z-calCost.z-contigency')[1].value;
							$('#output-template-afe').empty();
						$('#z-costTable-level4').html($('#z-Afe-EstimationDataTable').html());
						z_total = 1;
						z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[1].value = $('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[0].value;
										if(level2Obj.subLevels != null){
											level2Obj.subLevels.forEach(function(level3Obj,level3Index){
												if(level3Obj.isSelected){
											$('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[1].value = $('[base-level="'+level1Index+'"][phase2="'+level2Obj.phaseName+'"][level3name="'+level3Obj.phaseName+'"]')[0].value;
											if(level3Obj.subLevels != null){
												level3Obj.subLevels.forEach(function(level4Obj,level4Index){
													if(level4Obj.isSelected){
										$('[base-level="'+level1Index+'"][baselevel="'+level2Obj.phaseName+'"][phase3="'+level3Obj.phaseName+'"][phasename="'+level4Obj.phaseName+'"]')[1].value = $('[base-level="'+level1Index+'"][baselevel="'+level2Obj.phaseName+'"][phase3="'+level3Obj.phaseName+'"][phasename="'+level4Obj.phaseName+'"]')[0].value;

													}
												});
											}
												}
											});
										}
									}
								});
								 $('.z-final-subcost'+z_total)[1].value = $('.z-final-subcost'+z_total)[0].value;
								z_total = z_total + 1;
							}
						});
						$('.z-calCost.z-levy')[1].value = $('.z-calCost.z-levy')[0].value;
                        $('.z-calCost.z-contigency')[1].value = $('.z-calCost.z-contigency')[0].value;
						$('#z-Afe-EstimationDataTable').empty();
					}
					else if(z_level == "Level5"){
										$('#z-Afe-EstimationDataTable').html($('#output-template-afe').html());
										z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[0].value = $('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[1].value;
									}
								});
							}
						});
							$('#output-template-afe').empty();
						$('#z-costTable-level5').html($('#z-Afe-EstimationDataTable').html());
						z_selected_leveldata.forEach(function(level1Obj,level1Index){
							if(level1Obj.isSelected){
								level1Obj.subLevels.forEach(function(level2Obj,level2Index){
									if(level2Obj.isSelected){
										$('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[1].value = $('[level1-phasename="'+level1Obj.phaseName+'"][level2-phasename="'+level2Obj.phaseName+'"]')[0].value;
									}
								});
							}
						});
						$('#z-Afe-EstimationDataTable').empty();
					}
					
	//$('#z-estimation-panel').click();
	$('#z-estimate-header').addClass('z-rightSection-active');
}
function z_generatePdf_fn(el){
	/* $('#z-level-report').val(z_level);
	$('#z-config-report').val(z_config);
	$('#z-wellId-report').val(x_wellId);
	$('#z-pdfreport').submit(); */
	z_savewellConfig();
	var level_val = z_level.split("Level")[1];
	level_val = level_val.trim();
	var config_val = z_config.split("Configuration")[1];
	config_val = config_val.trim();
	$(el).attr('href','pdfreport'+'/'+level_val+'/'+config_val+'/'+x_wellId);
}

function sharePdf(el){
	 $('#z-sharePdf-modal').remove();
	var phase_name;
	    $('body').append('<div id="z-sharePdf-modal" class="modal" tabindex="-1" role="dialog">' +
	        '<div class="modal-dialog" role="document">' +
	        '<div class="modal-content">' +
	        '<div class="modal-header">' +
	        '<h5 class="modal-title">Enter the mail recipient to share Document</h5>' +
	        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +
	        '<span aria-hidden="true">&times;</span>' +
	        '</button>' +
	        '</div>' +
	        '<div class="modal-body">' +
	        '<div id="notSelectedPhase_list"></div>' +
	        '<div id="customPhase-insertWrap">' +
			'<form id="z-wi-uploadInputFormPdf" method="post" enctype="multipart/form-data" class="d-inline-block">'+
	        '<input id="customPhase-input" name="mailId" class="z-m-inputS1">' +
	        '<button id="customPhase-addBtn" type="button" class="btn btn-primary">Add</button>' +
	        '</div>' +
	        '<p>Choose PDF File to upload</p>' +
			'<input id="customPhase-inputPdf" class="w-100" type="file" name="upload" onchange="savePdfFile(this)" accept="application/pdf,application/vnd.ms-excel"></form>'+
	        '</div>' +
	        '<div class="modal-footer">' +
	        '<button id="z-sharePdf-Submit-btn" type="button" class="btn btn-primary">Send</button>' +
	        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>' +
	        '</div>' +
	        '</div>' +
	        '</div>' +
	        '</div>');
	    $('#z-sharePdf-modal').modal('show');
		$('#customPhase-addBtn').on('click', function () {
	phase_name = $('#customPhase-input').val();
	
	$('#notSelectedPhase_list').append('<div class="d-flex"><input type="checkbox" style="margin-top: 5px;">'+
			'<div class="z-phaseName-select">'+phase_name+'</div></div>');
	$('#customPhase-input').val("");
        });
		
		$('#z-sharePdf-Submit-btn').on('click', function () {
			 var dataForm = new FormData();
     dataForm.append('upload', $('#customPhase-inputPdf').prop('files')[0]);
	      dataForm.append('mailId', $('#customPhase-input').val());

     $.ajax({
		url: '/api/sendPdf',
        data: dataForm,
        async: false,
        contentType: false,
        processData: false,
        cache: false,
        type: 'POST',
        success: function(jsonData){
           
        }
       
    });
		});
}
function savePdfFile(el){
}
function z_rtwellOperate_back(el){
	z_LevelSelectionSummary();
$('#z-rt-wellOperation-heading').addClass('d-none');
}
